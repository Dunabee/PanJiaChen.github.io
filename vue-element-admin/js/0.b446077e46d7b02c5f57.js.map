{"version":3,"sources":["webpack:///js/0.b446077e46d7b02c5f57.js","webpack:///./src/views/dashboard/index.vue","webpack:///./~/zrender/lib/core/util.js","webpack:///./~/echarts/lib/echarts.js","webpack:///./~/echarts/lib/util/graphic.js","webpack:///./~/echarts/lib/util/number.js","webpack:///./~/zrender/lib/core/vector.js","webpack:///./~/zrender/lib/graphic/Path.js","webpack:///./~/zrender/lib/core/env.js","webpack:///./~/echarts/lib/util/format.js","webpack:///./~/echarts/lib/util/model.js","webpack:///./~/zrender/lib/core/BoundingRect.js","webpack:///./~/echarts/lib/model/Model.js","webpack:///./~/echarts/lib/util/clazz.js","webpack:///./~/echarts/lib/model/Component.js","webpack:///./~/echarts/lib/util/layout.js","webpack:///./~/zrender/lib/core/curve.js","webpack:///./~/zrender/lib/tool/color.js","webpack:///./~/zrender/lib/mixin/Eventful.js","webpack:///./~/zrender/lib/contain/text.js","webpack:///./~/zrender/lib/core/matrix.js","webpack:///./~/zrender/lib/core/event.js","webpack:///./~/echarts/lib/scale/Scale.js","webpack:///./~/zrender/lib/config.js","webpack:///./~/zrender/lib/container/Group.js","webpack:///./~/zrender/lib/core/PathProxy.js","webpack:///./~/echarts/lib/model/mixin/makeStyleMapper.js","webpack:///./~/echarts/lib/CoordinateSystem.js","webpack:///./~/echarts/lib/coord/axisHelper.js","webpack:///./~/echarts/lib/scale/Interval.js","webpack:///./~/echarts/lib/util/component.js","webpack:///./~/zrender/lib/core/timsort.js","webpack:///./~/zrender/lib/graphic/Displayable.js","webpack:///./~/zrender/lib/graphic/Gradient.js","webpack:///./~/echarts/lib/model/Series.js","webpack:///./~/echarts/lib/data/List.js","webpack:///./src/utils/fetch.js","webpack:///./~/echarts/lib/chart/helper/Symbol.js","webpack:///./~/echarts/lib/coord/cartesian/AxisModel.js","webpack:///./~/echarts/lib/model/mixin/colorPalette.js","webpack:///./~/echarts/lib/util/symbol.js","webpack:///./~/echarts/lib/view/Chart.js","webpack:///./~/zrender/lib/Element.js","webpack:///./~/zrender/lib/animation/Animator.js","webpack:///./~/zrender/lib/animation/requestAnimationFrame.js","webpack:///./~/zrender/lib/contain/util.js","webpack:///./~/zrender/lib/core/guid.js","webpack:///./~/zrender/lib/core/log.js","webpack:///./~/zrender/lib/graphic/Image.js","webpack:///./~/zrender/lib/graphic/Pattern.js","webpack:///./~/zrender/lib/graphic/Style.js","webpack:///./~/zrender/lib/graphic/helper/poly.js","webpack:///./~/echarts/lib/chart/helper/createListFromArray.js","webpack:///./~/echarts/lib/component/grid.js","webpack:///./~/echarts/lib/coord/cartesian/Grid.js","webpack:///./~/echarts/lib/util/throttle.js","webpack:///./~/zrender/lib/graphic/LinearGradient.js","webpack:///./~/echarts/lib/chart/helper/SymbolDraw.js","webpack:///./~/echarts/lib/component/tooltip.js","webpack:///./~/echarts/lib/view/Component.js","webpack:///./~/echarts/lib/ExtensionAPI.js","webpack:///./~/echarts/lib/chart/line.js","webpack:///./~/echarts/lib/chart/line/LineSeries.js","webpack:///./~/echarts/lib/chart/line/LineView.js","webpack:///./~/echarts/lib/chart/line/lineAnimationDiff.js","webpack:///./~/echarts/lib/chart/line/poly.js","webpack:///./~/echarts/lib/component/axis.js","webpack:///./~/echarts/lib/component/axis/AxisBuilder.js","webpack:///./~/echarts/lib/component/axis/AxisView.js","webpack:///./~/echarts/lib/component/tooltip/TooltipContent.js","webpack:///./~/echarts/lib/component/tooltip/TooltipModel.js","webpack:///./~/echarts/lib/component/tooltip/TooltipView.js","webpack:///./~/echarts/lib/coord/Axis.js","webpack:///./~/echarts/lib/coord/axisDefault.js","webpack:///./~/echarts/lib/coord/axisModelCommonMixin.js","webpack:///./~/echarts/lib/coord/axisModelCreator.js","webpack:///./~/echarts/lib/coord/cartesian/Axis2D.js","webpack:///./~/echarts/lib/coord/cartesian/Cartesian.js","webpack:///./~/echarts/lib/coord/cartesian/Cartesian2D.js","webpack:///./~/echarts/lib/coord/cartesian/GridModel.js","webpack:///./~/echarts/lib/coord/cartesian/axisLabelInterval.js","webpack:///./~/echarts/lib/data/DataDiffer.js","webpack:///./~/echarts/lib/data/helper/completeDimensions.js","webpack:///./~/echarts/lib/layout/points.js","webpack:///./~/echarts/lib/loading/default.js","webpack:///./~/echarts/lib/model/Global.js","webpack:///./~/echarts/lib/model/OptionManager.js","webpack:///./~/echarts/lib/model/globalDefault.js","webpack:///./~/echarts/lib/model/mixin/areaStyle.js","webpack:///./~/echarts/lib/model/mixin/boxLayout.js","webpack:///./~/echarts/lib/model/mixin/itemStyle.js","webpack:///./~/echarts/lib/model/mixin/lineStyle.js","webpack:///./~/echarts/lib/model/mixin/textStyle.js","webpack:///./~/echarts/lib/preprocessor/backwardCompat.js","webpack:///./~/echarts/lib/preprocessor/helper/compatStyle.js","webpack:///./~/echarts/lib/processor/dataSample.js","webpack:///./~/echarts/lib/scale/Log.js","webpack:///./~/echarts/lib/scale/Ordinal.js","webpack:///./~/echarts/lib/scale/Time.js","webpack:///./~/echarts/lib/visual/seriesColor.js","webpack:///./~/echarts/lib/visual/symbol.js","webpack:///./~/zrender/lib/Handler.js","webpack:///./~/zrender/lib/Layer.js","webpack:///./~/zrender/lib/Painter.js","webpack:///./~/zrender/lib/Storage.js","webpack:///./~/zrender/lib/animation/Animation.js","webpack:///./~/zrender/lib/animation/Clip.js","webpack:///./~/zrender/lib/animation/easing.js","webpack:///./~/zrender/lib/contain/arc.js","webpack:///./~/zrender/lib/contain/cubic.js","webpack:///./~/zrender/lib/contain/line.js","webpack:///./~/zrender/lib/contain/path.js","webpack:///./~/zrender/lib/contain/quadratic.js","webpack:///./~/zrender/lib/contain/windingLine.js","webpack:///./~/zrender/lib/core/GestureMgr.js","webpack:///./~/zrender/lib/core/LRU.js","webpack:///./~/zrender/lib/core/bbox.js","webpack:///./~/zrender/lib/dom/HandlerProxy.js","webpack:///./~/zrender/lib/graphic/CompoundPath.js","webpack:///./~/zrender/lib/graphic/RadialGradient.js","webpack:///./~/zrender/lib/graphic/Text.js","webpack:///./~/zrender/lib/graphic/helper/roundRect.js","webpack:///./~/zrender/lib/graphic/helper/smoothBezier.js","webpack:///./~/zrender/lib/graphic/helper/smoothSpline.js","webpack:///./~/zrender/lib/graphic/mixin/RectText.js","webpack:///./~/zrender/lib/graphic/shape/Arc.js","webpack:///./~/zrender/lib/graphic/shape/BezierCurve.js","webpack:///./~/zrender/lib/graphic/shape/Circle.js","webpack:///./~/zrender/lib/graphic/shape/Line.js","webpack:///./~/zrender/lib/graphic/shape/Polygon.js","webpack:///./~/zrender/lib/graphic/shape/Polyline.js","webpack:///./~/zrender/lib/graphic/shape/Rect.js","webpack:///./~/zrender/lib/graphic/shape/Ring.js","webpack:///./~/zrender/lib/graphic/shape/Sector.js","webpack:///./~/zrender/lib/mixin/Animatable.js","webpack:///./~/zrender/lib/mixin/Draggable.js","webpack:///./~/zrender/lib/mixin/Transformable.js","webpack:///./~/zrender/lib/tool/path.js","webpack:///./~/zrender/lib/tool/transformPath.js","webpack:///./~/zrender/lib/zrender.js","webpack:///./src/api/article.js","webpack:///./~/echarts/lib/chart/bar.js","webpack:///./~/echarts/lib/chart/bar/BarSeries.js","webpack:///./~/echarts/lib/chart/bar/BarView.js","webpack:///./~/echarts/lib/chart/bar/BaseBarSeries.js","webpack:///./~/echarts/lib/chart/bar/barItemStyle.js","webpack:///./~/echarts/lib/chart/bar/helper.js","webpack:///./~/echarts/lib/layout/barGrid.js","webpack:///./src/components/PanThumb/index.vue","webpack:///index.vue?fca3","webpack:///./src/components/PanThumb/index.vue?b127","webpack:///./src/components/PanThumb/index.vue?2bca","webpack:///./src/components/PanThumb/index.vue?dd0e","webpack:///./~/vue-count-to/dist/vue-count-to.min.js","webpack:///./~/echarts/lib/component/marker/MarkerModel.js","webpack:///./~/echarts/lib/component/marker/MarkerView.js","webpack:///./~/echarts/lib/component/marker/markerHelper.js","webpack:///barPercent.vue","webpack:///line.vue","webpack:///index.vue?c02e","webpack:///articlesChart.vue","webpack:///index.vue?1cad","webpack:///monthKpi.vue","webpack:///index.vue?7702","webpack:///./src/views/dashboard/default/index.vue?5a6f","webpack:///./src/views/dashboard/editor/index.vue?6976","webpack:///./src/views/dashboard/editor/monthKpi.vue?b1ed","webpack:///./src/views/dashboard/editor/articlesChart.vue?cde1","webpack:///./~/echarts/lib/chart/helper/Line.js","webpack:///./~/echarts/lib/chart/helper/LineDraw.js","webpack:///./~/echarts/lib/chart/helper/LinePath.js","webpack:///./~/echarts/lib/component/markLine.js","webpack:///./~/echarts/lib/component/markPoint.js","webpack:///./~/echarts/lib/component/marker/MarkLineModel.js","webpack:///./~/echarts/lib/component/marker/MarkLineView.js","webpack:///./~/echarts/lib/component/marker/MarkPointModel.js","webpack:///./~/echarts/lib/component/marker/MarkPointView.js","webpack:///./src/views/dashboard/default/index.vue?ee7b","webpack:///./src/views/dashboard/editor/index.vue?be45","webpack:///./src/views/dashboard/editor/monthKpi.vue?140b","webpack:///./src/views/dashboard/editor/articlesChart.vue?f5f5","webpack:///./src/assets/compbig.gif","webpack:///./src/components/Charts/barPercent.vue","webpack:///./src/components/Charts/line.vue","webpack:///./src/views/dashboard/default/index.vue","webpack:///./src/views/dashboard/editor/articlesChart.vue","webpack:///./src/views/dashboard/editor/index.vue","webpack:///./src/views/dashboard/editor/monthKpi.vue","webpack:///./src/views/dashboard/default/index.vue?fbaa","webpack:///./src/views/dashboard/editor/index.vue?a9c6","webpack:///./src/views/dashboard/editor/monthKpi.vue?d094","webpack:///./src/views/dashboard/index.vue?f098","webpack:///./src/views/dashboard/editor/articlesChart.vue?304c","webpack:///./src/components/Charts/line.vue?a550","webpack:///./src/components/Charts/barPercent.vue?1a94"],"names":["webpackJsonp","Array","concat","module","exports","__webpack_require__","Component","clone","source","result","typeStr","objToString","call","i","len","length","TYPED_ARRAY","constructor","from","BUILTIN_OBJECT","isDom","key","hasOwnProperty","merge","target","overwrite","isObject","targetProp","sourceProp","isArray","isBuildInObject","mergeAll","targetAndSources","extend","defaults","overlay","createCanvas","document","createElement","getContext","_ctx","util","indexOf","array","value","inherits","clazz","baseClazz","F","clazzPrototype","prototype","prop","superClass","mixin","isArrayLike","data","each","obj","cb","context","forEach","nativeForEach","map","nativeMap","push","reduce","memo","nativeReduce","filter","nativeFilter","find","bind","func","args","nativeSlice","arguments","apply","curry","this","isFunction","isString","type","nodeType","ownerDocument","eqNaN","retrieve","values","slice","Function","assert","condition","message","Error","[object Function]","[object RegExp]","[object Date]","[object Error]","[object CanvasGradient]","[object CanvasPattern]","[object Image]","[object Canvas]","[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]","Object","toString","arrayProto","noop","global","createRegisterEventWithLowercaseName","method","eventName","handler","toLowerCase","Eventful","MessageCenter","ECharts","dom","theme","opts","prioritySortFunc","a","b","prio","themeStorage","id","group","_dom","zr","_zr","zrender","init","renderer","devicePixelRatio","width","height","_throttledZrFlush","throttle","zrUtil","flush","_theme","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_api","ExtensionAPI","_coordSysMgr","CoordinateSystemManager","_messageCenter","_initEvents","resize","_pendingActions","timsort","visualFuncs","dataProcessorFuncs","animation","on","_onframe","doConvertPixel","methodName","finder","ecModel","_model","coordSysList","getCoordinateSystems","modelUtil","parseFinder","coordSys","__DEV__","console","warn","updateDirectly","ecIns","payload","mainType","subType","query","eachComponent","model","index","view","__viewId","__alive","doDispatchAction","silent","payloadType","actionWrap","actions","actionInfo","cptType","update","split","updateMethod","pop","parseClassType","IN_MAIN_PROCESS","payloads","batched","batch","item","eventObj","eventObjBatch","isHighDown","batchItem","action","event","main","sub","OPTION_UPDATED","updateMethods","prepareAndUpdate","trigger","flushPendingActions","pendingActions","shift","triggerUpdatedEvent","invokeUpdateMethod","api","component","componentModel","__model","updateZ","eachSeries","seriesModel","idx","chart","updateProgressiveAndBlend","updateHoverLayerStatus","prepareView","isComponent","viewList","viewMap","componentType","viewId","classType","Clazz","ComponentView","getClass","ChartView","add","__id","remove","dispose","splice","processData","process","stackSeriesData","stackedDataMap","series","stack","get","getData","previousStack","stackedOn","doLayout","visual","isLayout","doVisualEncoding","excludesLayout","clearColorPalette","doRender","componentView","render","chartView","storage","elCount","traverse","el","isGroup","env","node","useHoverLayer","ignore","frameDrawNum","needProgressive","progressive","Math","floor","stopAnimation","blendMode","canvasSupported","setStyle","z","zlevel","enableConnect","updateConnectedChartsStatus","charts","status","STATUS_KEY","STATUS_PENDING","eventActionMap","actionType","eventType","connectedGroups","makeActionFromEvent","otherCharts","instances","otherChart","dispatchAction","window","GlobalModel","OptionManager","ComponentModel","SeriesModel","graphic","colorTool","PRIORITY_PROCESSOR_FILTER","PRIORITY_PROCESSOR_STATISTIC","PRIORITY_VISUAL_LAYOUT","PRIORITY_VISUAL_GLOBAL","PRIORITY_VISUAL_CHART","PRIORITY_VISUAL_COMPONENT","PRIORITY_VISUAL_BRUSH","HAS_GRADIENT_OR_PATTERN_BG","ACTION_REG","off","one","echartsProto","getDom","getZr","setOption","option","notMerge","lazyUpdate","optionManager","__lastOnlyGraphic","o","optionPreprocessorFuncs","setTheme","log","getModel","getOption","getWidth","getHeight","getRenderedCanvas","pixelRatio","backgroundColor","list","getDisplayList","painter","getDataURL","excludeComponents","excludesComponentViews","self","url","toDataURL","getConnectedDataURL","groupId","mathMin","min","mathMax","max","MAX_NUMBER","Infinity","left","top","right","bottom","canvasList","dpr","canvas","boundingRect","getBoundingClientRect","targetCanvas","img","Image","style","x","y","image","refreshImmediately","convertToPixel","convertFromPixel","containPixel","models","coordinateSystem","containPoint","getVisual","visualType","defaultMainType","dataIndexInside","indexOfRawIndex","dataIndex","getItemVisual","coordSysMgr","restoreData","create","isSingleCanvas","configLayer","clearColor","colorArr","parse","stringify","colorStops","background","updateView","clearAllVisual","updateVisual","updateLayout","resetOption","_loadingFX","showLoading","name","cfg","hideLoading","loadingEffects","opt","browser","weChat","MOUSE_EVENT_NAMES","eveName","e","params","dataModel","getSeriesByIndex","seriesIndex","getDataParams","dataType","eventData","isDisposed","_disposed","clear","idBase","Date","groupIdBase","DOM_ATTRIBUTE_KEY","echarts","version","dependencies","replace","nodeName","toUpperCase","clientWidth","clientHeight","setAttribute","connect","disConnect","getInstanceByDom","getAttribute","getInstanceById","registerTheme","registerPreprocessor","preprocessorFunc","registerProcessor","priority","processorFunc","isNaN","registerAction","test","registerCoordinateSystem","CoordinateSystem","register","registerLayout","layoutFunc","registerVisual","visualFunc","registerLoading","loadingFx","extendComponentModel","extendComponentView","extendSeriesModel","extendChartView","setCanvasCreator","creator","List","Model","number","format","matrix","vector","color","PRIORITY","PROCESSOR","FILTER","STATISTIC","VISUAL","LAYOUT","GLOBAL","CHART","COMPONENT","BRUSH","hasFillOrStroke","fillOrStroke","liftColor","lift","cacheElementStl","__hoverStlDirty","stroke","fill","hoverStyle","__hoverStl","normalStyle","__normalStl","doSingleEnterHover","__isHover","__zr","addHover","z2","doSingleLeaveHover","normalStl","removeHover","doEnterHover","child","doLeaveHover","setElementHoverStl","hoverStl","onElementMouseOver","__hoverSilentOnTouch","zrByTouch","__isEmphasis","onElementMouseOut","enterEmphasis","leaveEmphasis","animateOrSetProps","isUpdate","props","animatableModel","isAnimationEnabled","postfix","duration","getShallow","animationEasing","animationDelay","getAnimationDelayParams","animateTo","attr","pathTool","round","Path","Group","Text","Circle","Sector","Ring","Polygon","Polyline","Rect","Line","BezierCurve","Arc","CompoundPath","LinearGradient","RadialGradient","BoundingRect","extendShape","extendPath","pathData","extendFromString","makePath","rect","layout","path","createFromString","getBoundingRect","aspect","cx","cy","resizePath","mergePath","applyTransform","pathRect","m","calculateTransform","subPixelOptimizeLine","param","subPixelOptimize","shape","lineWidth","x1","x2","y1","y2","subPixelOptimizeRect","originX","originY","originWidth","originHeight","position","positiveOrNegative","doubledPosition","setHoverStyle","hoverSilentOnTouch","setText","textStyle","labelModel","labelPosition","labelOffset","labelColor","textStyleModel","textDistance","textFont","getFont","textPosition","textOffset","textFill","getTextColor","updateProps","initProps","getTransform","ancestor","mat","identity","mul","getLocalTransform","parent","vertex","transform","invert","transformDirection","direction","hBase","abs","vBase","groupTransition","g1","g2","getElMap","g","elMap","anid","getAnimatableProps","rotation","elMap1","oldEl","newProp","_trim","str","RADIAN_EPSILON","linearMap","val","domain","range","clamp","subDomain","subRange","parsePercent","percent","all","match","parseFloat","NaN","precision","toFixed","asc","arr","sort","getPrecision","count","getPrecisionSafe","dotIndex","getPixelPrecision","dataExtent","pixelExtent","LN10","dataQuantity","sizeQuantity","isFinite","MAX_SAFE_INTEGER","remRadian","radian","pi2","PI","isRadianAroundZero","parseDate","ret","quantity","pow","nice","exp10","f","reformIntervals","littleThan","lg","interval","close","curr","currClose","isNumeric","v","ArrayCtor","Float32Array","out","copy","set","v1","v2","scaleAndAdd","sqrt","lenSquare","div","dot","scale","s","normalize","d","distance","distanceSquare","negate","lerp","t","lengthSquare","dist","distSquare","Displayable","PathProxy","pathContain","Pattern","getCanvasPattern","__dirtyPath","strokeContainThreshold","brush","ctx","prevEl","hasStroke","hasFill","hasFillGradient","hasStrokeGradient","hasFillPattern","hasStrokePattern","setTransform","__dirty","_fillGradient","getGradient","_strokeGradient","fillStyle","strokeStyle","lineDash","lineDashOffset","ctxLineDash","setLineDash","getGlobalScale","setScale","beginPath","setLineDashOffset","buildPath","rebuildPath","restoreTransform","text","drawRectText","shapeCfg","inBundle","_rect","needsUpdateRect","rectWithStroke","_rectWithStroke","w","lineScale","strokeNoScale","getLineScale","contain","localPos","transformCoordToLocal","containStroke","dirty","dirtyPath","refresh","__clipTarget","animateShape","loop","animate","attrKV","setShape","Sub","extendFrom","defaultShape","thisShape","detect","ua","os","firefox","ie","edge","touchEventsSupported","pointerEventsSupported","navigator","userAgent","numberUtil","textContain","formatUtil","addCommas","toCamelCase","upperCaseFirst","group1","charAt","normalizeCssArray","encodeHTML","String","TPL_VAR_ALIAS","wrapVar","varName","seriesIdx","formatTpl","tpl","paramsList","encode","seriesLen","$vars","alias","k","s2d","formatTime","date","getFullYear","M","getMonth","getDate","h","getHours","getMinutes","getSeconds","capitalFirst","substr","truncateText","has","nubmerUtil","normalizeToArray","defaultEmphasis","subOpts","emphasisOpt","emphasis","normalOpt","normal","subOptName","LABEL_OPTIONS","getDataItemValue","dataItem","isDataItemOption","converDataValue","dimInfo","dimType","createDataFormatModel","dataFormatMixin","seriesName","rawValue","getRawValue","rawDataIndex","getRawIndex","getName","itemOpt","getRawDataItem","componentSubType","seriesType","getFormattedLabel","dimIndex","itemModel","getItemModel","formatter","formatTooltip","mappingToExists","exists","newCptOptions","exist","cptOption","isIdInner","makeIdAndName","mapResult","idMap","existCpt","keyInfo","idNum","compressBatches","batchA","batchB","makeMap","sourceBatch","otherMap","seriesId","dataIndices","otherDataIndices","j","lenj","mapToArray","isData","mapA","mapB","queryDataIndex","indexOfName","parsedKey","queryType","queryParam","queryComponents","vec2","v2ApplyTransform","union","other","lt","rb","lb","rt","maxX","maxY","sx","sy","translate","intersect","ax0","ax1","ay0","ay1","bx0","bx1","by0","by1","plain","parentModel","doGet","pathArr","getParent","getParentMethod","clazzUtil","mergeOption","ignoreParent","parsePath","thisParentModel","isEmpty","Ctor","setReadOnly","properties","customizeGetParent","enableClassExtend","checkClassType","superCall","superApply","TYPE_DELIMITER","IS_CONTAINER","MEMBER_PRIFIX","host","hasOwn","RootClass","mandatoryMethods","$constructor","proto","ExtendedClass","enableClassManagement","entity","options","makeContainer","container","registerClass","componentMainType","throwWhenNotFound","getClassesByMainType","hasClass","getAllClassMainTypes","types","hasSubTypes","registerWhenExtend","originalExtend","getDependencies","deps","arrayPush","componentUtil","componentIndex","defaultOption","dependentModels","uid","layoutMode","extraOpt","getUID","mergeDefaultAndTheme","inputPositionParams","getLayoutParams","themeModel","getTheme","getDefaultOption","mergeLayoutParam","optionUpdated","newCptOption","isInit","optList","Class","getReferringComponents","enableSubTypeDefaulter","enableTopologicalTravel","boxLayout","orient","gap","maxWidth","maxHeight","currentLineMaxSize","eachChild","nextX","nextY","nextChild","childAt","nextChildRect","moveX","newline","moveY","LOCATION_PARAMS","box","vbox","hbox","getAvailableSize","positionInfo","containerRect","margin","containerWidth","containerHeight","getLayoutRect","verticalMargin","horizontalMargin","positionElement","hv","boundingMode","needLocalTransform","elPos","dx","dy","targetOption","newOption","names","newParams","newValueCount","merged","mergedValueCount","enoughParamNumber","ignoreSize","hasProp","hasValue","hNames","vNames","hResult","vResult","copyLayoutParams","isAroundZero","EPSILON","isNotAroundZero","cubicAt","p0","p1","p2","p3","onet","cubicDerivativeAt","cubicRootAt","roots","c","A","B","C","n","t1","disc","K","t2","discSqrt","mathSqrt","Y1","Y2","mathPow","ONE_THIRD","T","theta","acos","ASqrt","tmp","cos","THREE_SQRT","sin","t3","cubicExtrema","extrema","cubicSubdivide","p01","p12","p23","p012","p123","p0123","cubicProjectPoint","x0","y0","x3","y3","prev","next","d1","d2","_v0","_t","_v1","v2DistSquare","EPSILON_NUMERIC","_v2","quadraticAt","quadraticDerivativeAt","quadraticRootAt","quadraticExtremum","divider","quadraticSubdivide","quadraticProjectPoint","v2Create","clampCssByte","clampCssAngle","clampCssFloat","parseCssInt","parseInt","parseCssFloat","cssHueToRgb","m1","m2","p","colorStr","kCSSColorTable","op","ep","fname","alpha","hsla2rgba","iv","hsla","l","rgba","rgba2hsla","H","S","R","G","vMin","vMax","delta","L","deltaR","deltaG","deltaB","level","toHex","fastMapToColor","normalizedValue","colors","leftIndex","rightIndex","ceil","leftColor","rightColor","dv","mapToColor","fullOutput","modifyHSL","modifyAlpha","arrColor","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","arrySlice","_$handlers","_h","isSilent","newList","argLen","triggerWithContext","getTextWidth","textWidthCache","textLines","measureText","textWidthCacheCounter","TEXT_CACHE_MAX","getTextRect","textAlign","textBaseline","textLineLen","lineHeight","adjustTextPositionOnRect","textRect","textHeight","halfHeight","ellipsis","maxIterations","minChar","cnCharWidth","ascCharWidth","placeholder","contentWidth","ellipsisWidth","textLine","subLength","estimateLength","join","charCode","charCodeAt","font","out0","out1","out2","out3","out4","out5","rotate","rad","aa","ac","atx","ab","ad","aty","st","ct","vx","vy","det","clientToLocal","calculate","defaultGetZrXY","layerX","offsetX","zrX","zrY","layerY","offsetY","clientX","clientY","normalizeEvent","touch","targetTouches","changedTouches","zrDelta","wheelDelta","detail","addEventListener","isDomLevel2","attachEvent","removeEventListener","detachEvent","stop","preventDefault","stopPropagation","cancelBubble","returnValue","Dispatcher","Scale","_extent","_interval","scaleProto","extent","unionExtent","unionExtentFromData","dim","getDataExtent","getExtent","setExtent","start","end","thisExtent","getTicksLabels","labels","ticks","getTicks","getLabel","config","debugMode","Element","_children","__storage","children","childOfName","childCount","_doAdd","addBefore","nextSibling","addToMap","addChildrenToStorage","delFromMap","delChildrenFromStorage","removeAll","includeChildren","tmpRect","tmpMat","invisible","childRect","curve","bbox","CMD","Q","Z","min2","max2","mathCos","mathSin","mathAbs","hasTypedArray","_len","_xi","_yi","_x0","_y0","_ux","_uy","_lineDash","_dashOffset","_dashIdx","_dashSum","moveTo","addData","lineTo","exceedUnit","_needsDash","_dashedLineTo","bezierCurveTo","_dashedBezierTo","quadraticCurveTo","_dashedQuadraticTo","arc","r","startAngle","endAngle","anticlockwise","arcTo","radius","closePath","toStatic","lineDashSum","offset","setData","appendPath","appendSize","appendPathData","cmd","_expandData","_prevCmd","newData","dash","dashSum","nDash","bezierLen","tmpLen","Number","MAX_VALUE","xi","yi","fromLine","fromCubic","fromQuadratic","rx","ry","fromArc","ux","uy","dTheta","psi","fs","scaleX","scaleY","isEllipse","excludes","propName","_coordinateSystems","coordinateSystemCreators","coordinateSystems","creater","coordinateSystemCreator","OrdinalScale","IntervalScale","axisHelper","getScaleExtent","axis","axisDataLen","boundaryGap","span","scaleType","getMin","getMax","fixMin","fixMax","originalExtent","setBlank","getNeedCrossZero","niceScaleExtent","splitNumber","base","niceExtent","minInterval","getInterval","intervalScale","origin","setInterval","createScaleByModel","axisType","getCategories","ifAxisCrossZero","getAxisLabelInterval","tickCoords","isAxisHorizontal","textSpaceTakenRect","autoLabelInterval","accumulatedLabelInterval","step","tickCoord","getFormattedLabels","labelFormatter","tick","mathFloor","mathCeil","roundingErrorFix","niceTicks","_niceExtent","reverse","expandSize","random","subTypeDefaulters","registerSubTypeDefaulter","defaulter","determineSubType","componentTypeMain","dependencyGetter","makeDepndencyGraph","fullNameList","graph","noEntryList","thisItem","createDependencyGraphItem","originalDeps","availableDeps","getAvailableDependencies","entryCount","dependentName","predecessor","thatItem","successor","dep","topologicalTravel","targetNameList","callback","removeEdge","succComponentType","removeEdgeAndAdd","targetNameSet","currComponentType","currVertex","isInTargetNameSet","minRunLength","DEFAULT_MIN_MERGE","makeAscendingRun","lo","hi","compare","runHi","reverseRun","binaryInsertionSort","mid","pivot","gallopLeft","hint","lastOffset","maxOffset","gallopRight","TimSort","pushRun","_runStart","_runLength","runStart","stackSize","runLength","mergeRuns","mergeAt","forceMergeRuns","start1","length1","start2","length2","mergeLow","mergeHigh","cursor1","cursor2","dest","count1","count2","exit","_minGallop","minGallop","DEFAULT_MIN_GALLOPING","customCursor","customDest","remaining","ts","minRun","force","Style","__clipPaths","RectText","draggable","dragging","culling","cursor","rectHover","beforeBrush","afterBrush","rectContain","coord","animateStyle","useStyle","Gradient","addColorStop","classUtil","colorPaletteMixin","legendDataProvider","visualColorAccessPath","getInitialData","label","fillDataTextStyle","newSeriesOption","cloneShallow","getLinkedData","getRawData","coordDimToDataDim","coordDim","dataDimToCoordDim","dataDim","getBaseAxis","multipleSeries","formatArrayValue","valStr","getDimensionInfo","formattedValue","colorEl","animationEnabled","getColorFromPalette","scope","getAxisTooltipDataIndex","getTooltipPosition","normalizeDimensions","dimensions","cloneListForMapAndSample","original","excludeDimensions","allDimensions","hostModel","transferProperties","_storage","originalStorage","dimStore","UNDEFINED","globalObj","Float64Array","Int32Array","dataCtors","float","int","ordinal","time","DataDiffer","TRANSFERABLE_PROPERTIES","__wrappedMethods","dimensionInfos","dimensionNames","dimensionName","dimensionInfo","stackable","_dimensionInfos","indices","_nameList","_idList","_optionModels","_visual","_layout","_itemVisuals","_itemLayouts","_graphicEls","_rawData","listProto","hasItemOption","getDimension","initData","nameList","dimValueGetter","size","dimensionInfoMap","idList","nameRepeatCount","DataCtor","dimName","stackedValue","getValues","dimData","dimExtent","getSum","sum","rawIndex","indexOfNearest","maxDistance","nearestIdx","minDist","diff","rawIdx","getId","dims","dimSize","filterSelf","newIndices","keep","mapArray","tmpRetValue","retValue","downSample","dimension","rate","sampleValue","sampleIndex","targetStorage","originalIndices","frameValues","frameIndices","frameSize","otherList","otherIdList","prefix","setVisual","setLayout","getLayout","getItemLayout","setItemLayout","clearItemLayouts","itemVisual","setItemVisual","setItemDataAndSeriesIndex","setItemGraphicEl","getItemGraphicEl","eachItemGraphicEl","dimensionInfoList","wrapMethod","injectFunction","originalMethod","res","TRANSFERABLE_METHODS","CHANGABLE_METHODS","_interopRequireDefault","__esModule","default","_fetch","_promise2","resolve","reject","_axios2","baseURL","headers","X-Ivanka-Token","_store2","getters","token","then","response","code","_elementUi","Message","dispatch","_router2","catch","error","fetch","timeout","defineProperty","_promise","_axios","_store","_router","getSymbolSize","symbolSize","getScale","Symbol","seriesScope","updateData","driftSymbol","drift","symbolUtil","symbolProto","_createSymbol","symbolType","symbolPath","createSymbol","_symbolType","stopSymbolAnimation","toLastFrame","getSymbolPath","highlight","downplay","setZ","setDraggable","_updateCommon","_seriesModel","normalStyleAccessPath","emphasisStyleAccessPath","normalLabelAccessPath","emphasisLabelAccessPath","itemStyle","hoverItemStyle","symbolRotate","symbolOffset","hoverLabelModel","hoverAnimation","getItemStyle","elStyle","setColor","opacity","valueDim","onEmphasis","ratio","onNormal","fadeOut","getAxisType","axisDim","axisModelCreator","AxisModel","resetRange","getCoordSysModel","gridIndex","gridId","extraOption","colorIdx","colorNameMap","colorPalette","Triangle","Diamond","Pin","angle","asin","tanX","tanY","cpLen","cpLen2","Arrow","symbolCtors","line","roundRect","square","circle","diamond","pin","arrow","triangle","symbolShapeMakers","symbolBuildProxies","textVerticalAlign","proxySymbol","symbolPathSetColor","symbolStyle","symbolShape","__isEmptyBrush","Chart","elSetState","state","toggleHighlight","dataIdx","chartProto","guid","Transformable","Animatable","clipPath","decomposeTransform","beforeUpdate","afterUpdate","updateTransform","hide","show","setClipPath","addSelfToZr","removeClipPath","removeSelfFromZr","animators","addAnimator","removeAnimator","defaultGetter","defaultSetter","interpolateNumber","interpolateString","interpolateArray","arrDim","len2","fillArr","arr0","arr1","arr0Len","arr1Len","arraySlice","isArraySame","catmullRomInterpolateArray","catmullRomInterpolate","v0","cloneValue","rgba2String","createTrackClip","animator","easing","oneTrackDone","keyframes","getter","_getter","setter","_setter","useSpline","trackLen","trackMaxTime","firstVal","isValueArray","isValueColor","isValueString","kfPercents","kfValues","prevValue","isAllValueEqual","colorArray","lastValue","_target","lastFrame","lastFramePercent","onframe","frame","clip","Clip","life","_loop","delay","_delay","ondestroy","Animator","_tracks","_clipCount","_doneList","_onframeList","_clipList","when","tracks","during","_doneCallback","doneList","lastClip","clipCount","addClip","oldOnFrame","forwardToLast","clipList","removeClip","done","getClips","requestAnimationFrame","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","setTimeout","PI2","normalizeRadian","idStart","ZImage","LRU","globalImageCache","src","_image","cachedImgObj","onload","pending","put","sWidth","sHeight","drawImage","repeat","_canvasPattern","createPattern","createLinearGradient","createRadialGradient","STYLE_COMMON_PROPS","shadowBlur","shadowOffsetX","shadowOffsetY","textStroke","textShadowBlur","textShadowOffsetX","textShadowOffsetY","textTransform","textRotation","blend","prevStyle","firstDraw","styleName","globalAlpha","globalCompositeOperation","otherStyle","newStyle","canvasGradient","styleProto","smoothSpline","smoothBezier","points","smooth","controlPoints","smoothConstraint","cp1","cp2","firstDataNotNull","ifNeedCompleteOrdinalData","sampleItem","createListFromArray","coordSysName","creators","registeredCoordSys","axesInfo","completeDimensions","categoryIndex","createNameList","categories","categoryAxesModels","isStackable","getDimTypeByAxis","categoryAxisModel","categoryDim","dataLen","cartesian2d","axesModels","xAxisModel","yAxisModel","xAxisType","yAxisType","isXAxisCateogry","isYAxisCategory","singleAxis","singleAxisModel","singleAxisType","isCategory","single","polar","polarModel","angleAxisModel","findAxisModel","radiusAxisModel","radiusAxisType","angleAxisType","isAngleAxisCateogry","isRadiusAxisCateogry","geo","gridModel","getRect","xAxis","yAxis","grid","isAxisUsedInTheGrid","axisModel","getLabelUnionRect","labelCount","isLabelIgnored","singleRect","Grid","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","updateAxisTransfrom","coordBase","axisExtent","axisExtentSum","toGlobalCoord","toLocalCoord","findAxesModels","axesTypes","isCartesian2D","Cartesian2D","Axis2D","gridProto","ifAxisCanNotOnZero","otherAxisDim","axes","axesMap","_updateScale","onZero","adjustAxes","axesList","isHorizontal","gridRect","inverse","getBoxLayoutParams","labelUnionRect","getAxis","axisIndex","axesMapOnDim","getCartesian","xAxisIndex","yAxisIndex","coordList","_findConvertTarget","cartesian","dataToPoint","dataToCoord","pointToData","coordToData","coordsList","point","createAxisCreator","axisPosition","axisPositionUsed","onBand","axesCount","addAxis","grids","lib","ORIGIN_METHOD","RATE","THROTTLE_TYPE","fn","debounce","exec","lastExec","getTime","timer","currCall","lastCall","clearTimeout","createOrUpdate","fnAttr","throttleType","originFn","lastThrottleType","globalCoord","SymbolDraw","symbolCtor","_symbolCtor","symbolNeedsDraw","isIgnore","symbolDrawProto","oldData","_data","SymbolCtor","newIdx","symbolEl","oldIdx","execute","enableAnimation","componentProto","chartInstance","echartsAPIList","legendHoverLink","clipOverflow","lineStyle","smoothMonotone","symbol","showSymbol","showAllSymbol","connectNulls","sampling","hoverLayerThreshold","isPointsSame","points1","points2","getSmooth","getAxisExtentWithGap","getGlobalExtent","halfBandWidth","getBandWidth","dir","sign","getStackedOnPoints","baseAxis","valueAxis","getOtherAxis","valueStart","baseDataOffset","stackedOnSameSign","stackedData","createGridClipShape","hasAnimation","xExtent","yExtent","createPolarClipShape","angleAxis","getAngleAxis","radiusAxis","getRadiusAxis","radiusExtent","angleExtent","RADIAN","r0","clockwise","createClipShape","turnPointsIntoStep","stepTurnAt","baseIndex","stepPoints","nextPt","pt","stepPt","middle","stepPt2","getVisualGradient","visualMetaList","visualMeta","stops","stopLen","outerColors","tinyExtent","minCoord","maxCoord","coordSpan","unshift","gradient","lineAnimationDiff","polyHelper","lineGroup","symbolDraw","_symbolDraw","_lineGroup","lineStyleModel","areaStyleModel","isCoordSysPolar","prevCoordSys","_coordSys","polyline","_polyline","polygon","_polygon","isAreaChart","stackedOnPoints","isSymbolIgnore","_getSymbolIgnoreFunc","__temp","_step","_newPolygon","_stackedOnPoints","_points","_updateAnimation","_newPolyline","visualColor","getLineStyle","lineJoin","stackedOnSmooth","getAreaStyle","categoryAxis","getAxesByScale","current","stackedOnCurrent","stackedOnNext","__points","updatedDataInfo","diffStatus","idx1","ptIdx","getStackedOnPoint","diffData","diffResult","oldStackedOnPoints","newStackedOnPoints","oldCoordSys","newCoordSys","currPoints","nextPoints","currStackedPoints","nextStackedPoints","sortedIndices","rawIndices","diffItem","pointAdded","currentPt","sortedCurrPoints","sortedNextPoints","sortedCurrStackedPoints","sortedNextStackedPoints","sortedStatus","isPointNull","drawSegment","segLen","allLen","smoothMin","smoothMax","prevIdx","v2Copy","cp0","nextIdx","nextP","ratioNextSeg","prevP","lenPrevSeg","lenNextSeg","vec2Min","vec2Max","getBoundingBox","ptMin","ptMax","stackedOnBBox","makeAxisEventDataBase","innerTextLayout","verticalAlign","rotationDiff","endTextLayout","textRotate","onLeft","tooltipOpt","AxisBuilder","nameDirection","tickDirection","labelDirection","dumbGroup","_transform","_dumbGroup","hasBuilder","builders","getGroup","axisLine","pt1","pt2","lineCap","axisTick","isBlank","tickModel","tickLen","tickInterval","labelInterval","ticksCoords","getTicksCoords","ifIgnoreOnTick","axisLabel","isTwoLabelOverlapped","firstRect","nextRect","axisLabelShow","labelMargin","labelRotation","labelLayout","categoryData","textEls","triggerEvent","tickVal","itemTextStyleModel","textColor","pos","labelBeforeFormat","textEl","targetType","firstLabel","lastLabel","axisName","nameLocation","gapSignal","nameRotation","axisNameAvailableWidth","truncateOpt","truncatedText","formatterParams","__fullText","__truncatedText","tooltip","content","rawTick","layoutAxis","getZero","theAxis","rawAxisPosition","rectBound","axisOffset","posMap","dirMap","getLabelInterval","axisBuilderAttrs","selfBuilderAttrs","AxisView","oldAxisGroup","_axisGroup","axisBuilder","_splitLine","splitLineModel","lineColors","lineInterval","lineCount","colorIndex","_splitArea","splitAreaModel","areaColors","prevX","prevY","areaInterval","areaStyle","assembleTransition","transitionCurve","transitionText","vendors","vendorPrefix","assembleFont","cssText","fontSize","assembleCssText","tooltipModel","transitionDuration","padding","zrColor","borderName","camelCase","TooltipContent","_x","_y","appendChild","_container","_show","_hideTimeout","onmouseenter","enterable","_inContent","onmousemove","eventUtil","onmouseleave","hideLater","_hideDelay","stl","currentStyle","defaultView","getComputedStyle","domStyle","display","innerHTML","setContent","isShow","showContent","triggerOn","alwaysShowContent","confine","showDelay","hideDelay","borderColor","borderRadius","borderWidth","extraCssText","axisPointer","animationDurationUpdate","animationEasingUpdate","crossStyle","shadowStyle","dataEqual","makeLineShape","makeRectShape","makeSectorShape","refixTooltipPosition","viewWidth","viewHeight","confineTooltipPosition","calcTooltipPosition","domWidth","domHeight","rectWidth","rectHeight","updatePosition","positionExpr","ifSeriesSupportAxisTrigger","_axisPointers","tooltipContent","_tooltipContent","_tooltipModel","_ecModel","_lastHover","_alwaysShowContent","_seriesGroupByAxis","_prepareAxisTriggerData","crossText","_crossText","_lastX","_lastY","_refreshUpdateTimeout","manuallyShowTip","_tryShow","_mousemove","_hide","_showTimeout","seriesHaveDataOnIndex","_series","isTriggerAxis","findHover","manuallyHideTip","seriesGroupByAxis","globalTrigger","_showAxisTooltip","_ticket","_hideAxisPointer","_resetLastHover","_showItemTooltipContent","subTooltipModel","defaultHtml","asyncTicket","_showTooltipContent","axisPointerModel","axisPointerType","_showAxisPointer","allNotShow","seriesCoordSysSameAxis","allCoordSys","contentNotChange","lastHover","valIndex","_showSinglePointer","_showPolarPointer","_showCartesianPointer","_dispatchAndShowSeriesTooltipContent","moveGridLine","otherExtent","targetShape","pointerEl","_getPointerElement","moveAnimation","moveGridShadow","bandWidth","_updateCrossText","otherAxis","moveSingleLine","movePolarLine","mouseCoord","pointToCoord","coordToPoint","movePolarShadow","crossStyleModel","pointerModel","initShape","axisPointers","pointerType","styleModel","isShadow","elementType","seriesList","rootTooltipModel","baseDimIndex","sampleSeriesIndex","payloadBatch","firstDataIndex","firstLine","seriesTooltipModel","html","ticket","cbTicket","fixExtentWithBands","nTick","normalizedExtent","Axis","containData","alignWithLabel","bands","getBands","coords","getLabelsCoords","_isBlank","nameRotate","nameTruncate","nameTextStyle","nameGap","inside","splitLine","splitArea","timeAxis","logAxis","logBase","rangeStart","rangeEnd","setRange","axisDefault","AXIS_TYPES","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","axisLabelInterval","coordExtent","_labelInterval","dimAxisMapper","_axes","Cartesian","_dimList","getAxes","_dataCoordConvert","input","dimList","output","axisX","axisY","dataToPoints","containLabel","defaultKeyGetter","oldArr","newArr","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","keyArr","keyGetter","existence","_add","_update","_remove","oldDataIndexMap","newDataIndexMap","oldDataKeyArr","newDataKeyArr","defaultNames","extraPrefix","value0","retrieveValue","guessOrdinal","eachSeriesByType","maskColor","mask","labelRect","mergeTheme","themeItem","initBase","baseOption","OPTION_INNER_KEY","_seriesIndices","globalDefault","getComponentsByTypes","componentsMap","existComponent","createSeriesIndices","seriesModels","filterBySubType","components","cpt","assertSeriesInitialized","_optionManager","optionChanged","mountOption","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","visitComponent","newCptOptionList","resultItem","ComponentModelClass","newCptTypes","componentOption","getComponent","cpts","isIdArray","isNameArray","findComponents","getQueryCond","q","indexAttr","idAttr","nameAttr","doFilter","queryCond","queryResult","getSeriesByName","oneSeries","getSeriesByType","getSeries","rawSeriesIndex","eachRawSeries","eachRawSeriesByType","isSeriesFiltered","filterSeries","filteredSeries","componentTypes","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","parseRawOption","rawOption","isNew","mediaDefault","timelineOptions","mediaList","timelineOpt","timeline","media","singleMedia","preProcess","applyMediaQuery","ecWidth","ecHeight","realMap","aspectratio","applicatable","matched","QUERY_REG","operator","real","expect","indicesEquals","indices1","indices2","oldOption","newCptOpt","oldCptOpt","oldOptionBackup","newParsedOption","isRecreate","optionBackup","timelineModel","getCurrentIndex","platform","fontFamily","fontStyle","fontWeight","animationDuration","animationThreshold","progressiveThreshold","getBorderLineDash","lineType","getLineDash","dotSize","dashSize","gTextStyleModel","compatLayoutProperties","LAYOUT_PROPERTIES","compatStyle","COMPATITABLE_COMPONENTS","COMPATITABLE_SERIES","seriesOpt","clockWise","pointerColor","dataRange","visualMap","componentName","compatItemStyle","itemStyleOpt","POSSIBLE_STYLES","normalItemStyleOpt","emphasisItemStyleOpt","markPoint","markLine","mpData","mlData","samplers","average","nearest","indexSampler","sampler","fixRoundingError","originalVal","intervalScaleProto","mathLog","LogScale","_originalScale","originalScale","powVal","__fixMin","__fixMax","approxTickNum","err","rank","ONE_SECOND","ONE_MINUTE","ONE_HOUR","ONE_DAY","bisect","TimeScale","stepLvl","_stepLvl","approxInterval","scaleLevelsLen","scaleLevels","yearSpan","encodeColor","colorAccessPath","defaultSymbolType","legendSymbol","itemSymbolType","itemSymbolSize","makeEventPacket","eveType","gestureEvent","pinchX","pinchY","pinchScale","EmptyProxy","isHover","displayable","Draggable","handlerNames","Handler","proxy","painterRoot","_hovered","_lastTouchMoment","mousemove","hovered","lastHovered","setCursor","dispatchToElement","mouseout","innerDom","element","toElement","relatedTarget","parentNode","eventArgs","setCursorStyle","cursorStyle","targetEl","eventHandler","eventPacket","eachOtherLayer","layer","exclude","_downel","_upel","returnFalse","createDom","newDom","newDomStyle","Layer","onselectstart","domBack","ctxBack","motionBlur","lastFrameAlpha","initContext","createBackBuffer","clearAll","haveMotionBLur","clearRect","clearColorGradientOrPattern","__canvasGradient","save","fillRect","restore","parseInt10","isLayerValid","isBuildin","preProcessLayer","__unusedCount","postProcessLayer","isDisplayableCulled","viewRect","isClipPathChanged","clipPaths","prevClipPaths","doClip","createRoot","domRoot","MAX_PROGRESSIVE_LAYER_NUMBER","Painter","root","singleCanvas","_opts","_singleCanvas","rootStyle","zlevelList","_zlevelList","layers","_layers","_layerConfig","_width","_height","mainLayer","_domRoot","_getSize","pathToImage","_createPathToImage","_progressiveLayers","_hoverlayer","_hoverElements","getViewportRoot","paintAll","_paintList","refreshHover","_startProgessive","__hoverMir","elMirror","__from","hoverElements","clearHover","hoverLayer","displayableSortFunc","getLayer","originalEl","invTransform","_doPaintEl","_progressiveToken","_doPaintList","_furtherProgressive","_progress","_clearProgressive","_updateLayerStatus","eachBuildinLayer","flushProgressiveLayer","currentLayer","currentZLevel","currentProgressiveLayer","layerProgress","progressiveLayerIdx","elZLevel","elFrame","__frame","renderScope","__progress","__maxProgress","__nextIdxNotProg","forcePaint","prevClipLayer","prevElClipPaths","insertLayer","layersMap","prevLayer","prevDom","insertBefore","firstChild","eachLayer","getLayers","progressiveLayers","elCountsLastFrame","progressiveElCountsLastFrame","lastProgressiveKey","progressiveLayerCount","frameCount","elProgress","_clearLayer","layerConfig","delLayer","removeChild","clearLayer","imageLayer","displayList","whIdx","wh","cwh","plt","prb","_pathToImage","pathTransform","ImageShape","imgShape","me","shapeCompareFunc","Storage","_elements","_roots","_displayList","_displayListLen","includeIgnore","updateDisplayList","_updateAndAddDisplayable","userSetClipPath","currentClipPath","parentClipPath","addRoot","delRoot","elId","elements","_renderList","Animation","stage","_clips","_running","_time","_pausedTime","_pauseStart","_paused","clips","deferredEvents","deferredClips","_needsRemove","fire","_startLoop","pause","resume","_life","_initialized","onrestart","easingFuncs","globalTime","_startTime","easingFunc","schedule","restart","remainder","arg","linear","quadraticIn","quadraticOut","quadraticInOut","cubicIn","cubicOut","cubicInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","sinusoidalOut","sinusoidalInOut","exponentialIn","exponentialOut","exponentialInOut","circularIn","circularOut","circularInOut","elasticIn","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","_l","atan2","_a","_b","isAroundEqual","swapExtrema","windingCubic","nRoots","y0_","y1_","nExtrema","unit","windingQuadratic","y_","x_","windingArc","containPath","isStroke","windingLine","cubic","quadratic","pointPair","center","GestureMgr","_track","recognize","_doTrack","_recognize","touches","trackItem","recognizers","gestureInfo","pinch","track","pinchEnd","pinchPre","pinchCenter","LinkedList","head","tail","linkedListProto","insert","entry","Entry","insertEntry","maxSize","_list","_map","_maxSize","LRUProto","leastUsedEntry","extremity","fromPoints","xDim","yDim","tx","ty","eventNameFix","processGesture","gestureMgr","_gestureMgr","setTouchTimer","instance","_touching","_touchTimer","isPointerFromTouch","initDomHandler","makeMouseHandler","touchHandlerNames","_handlers","domHandlers","pointerHandlerNames","mouseHandlerNames","HandlerDomProxy","mountHandlers","eventTool","TOUCH_CLICK_DELAY","pointerEventNames","pointerdown","pointerup","pointermove","pointerout","nm","touchstart","mousedown","touchmove","touchend","mouseup","click","handlerDomProxyProto","paths","_updatePathDirty","fillText","strokeText","r1","r2","r3","r4","total","v2Min","v2Max","v2Scale","v2Distance","v2Add","isLoop","constraint","prevPoint","nextPoint","cps","d0","interpolate","segs","w2","w3","maxValue","lastIndexOf","align","baseline","shadowColor","textShadowColor","unitX","unitY","someVectorAt","isTangent","cpx2","cpy2","cpx1","cpy1","curveTool","pointAt","tangentAt","roundRectHelper","shadowTemp","modified","animatingShape","pathSplitted","_animateToShallow","objShallow","propertyCount","_dragStart","_drag","_dragEnd","draggingTarget","_draggingTarget","dropTarget","lastDropTarget","_dropTarget","mIdentity","transformableProto","parentHasTransform","tmpTransform","transformCoordToGlobal","processArc","fa","psiDeg","xp","yp","lambda","cxp","cyp","vAngle","u","vRatio","createPathProxyFromString","cs","cc","RegExp","prevCmd","cpx","cpy","ctlPtx","ctlPty","createPathOptions","pathProxy","transformPath","vMag","pathEls","pathList","pathEl","pathBundle","nPoint","mathAtan2","delInstance","HandlerProxy","useVML","painterCtors","ZRender","getInstance","registerPainter","rendererType","vml","handerProxy","_needsRefresh","oldDelFromMap","oldAddToMap","zLevel","_needsRefreshHover","refreshHoverImmediately","clearAnimation","getList","getArticle","barLayoutGrid","brushSelector","createRect","animationModel","rectShape","animateProperty","animateTarget","removeRect","getRectItemLayout","fixedLineWidth","getLineWidth","signX","signY","updateStyle","itemStyleModel","getBarItemStyle","labelPositionOutside","helper","setLabel","rawLayout","BAR_BORDER_WIDTH_QUERY","BarView","_renderOnCartesian","newIndex","oldIndex","getMarkerPosition","barMinHeight","labelText","getSeriesStackId","getAxisKey","calBarWidthAndOffset","barSeries","columnsMap","columnsOnAxis","remainedWidth","autoWidthCount","categoryGap","stacks","stackId","barWidth","barMaxWidth","barGap","barCategoryGap","barGapPercent","autoWidth","column","lastColumn","widthSum","barWidthAndOffset","lastStackCoords","lastStackCoordsOrigin","columnLayoutInfo","columnOffset","columnWidth","valueAxisStart","lastCoord","lastCoordOrigin","required","zIndex","sources","mappings","file","sourcesContent","sourceRoot","locals","_vm","$createElement","_c","_self","staticClass","_v","attrs","staticRenderFns","configurable","enumerable","startVal","endVal","autoplay","Boolean","decimals","validator","decimal","separator","suffix","useEasing","easingFn","localStartVal","displayValue","formatNumber","printVal","paused","localDuration","startTime","timestamp","rAF","computed","countDown","mounted","$emit","methods","pauseResume","cancelAnimationFrame","reset","isNumber","destroyed","_scopeId","keys","esModule","_s","Vue","fillLabel","MarkerModel","createdBySelf","hostSeries","__hostSeries","newOpt","modelPropName","markerOpt","markerModel","markerGroupMap","__keep","markerModelKey","renderSeries","hasXOrY","hasXAndY","valueAxisDim","markerTypeCalculatorWithExtent","mlType","otherDataDim","targetDataDim","otherCoordIndex","targetCoordIndex","coordArr","numCalculate","markerTypeCalculator","dataTransform","axisInfo","getAxisInfo","baseDataDim","valueDataDim","valueIndex","dataFilter","className","dataNum","watch","setOptions","initBar","getElementById","listData","require","dataList","setLine","xAxisData","week","substring","markLineData","_i","title","effect","_extends2","_extends3","_vuex","_PanThumb","_PanThumb2","PanThumb","emptyGif","mapGetters","_line","_line2","LineChart","_monthKpi","_monthKpi2","_articlesChart","_articlesChart2","_article","_compbig","_compbig2","_vueCountTo","_vueCountTo2","MonthKpi","ArticlesChart","countTo","statisticsData","article_count","comment_count","latest_article","month_article_count","pageviews_count","week_article","created","fetchData","recentArticles","_this","listQuery","filters","statusFilter","published","draft","deleted","_barPercent","_barPercent2","BarPercent","articlesComplete","month","_index","_index2","_index3","_index4","EditorDashboard","DefaultDashboard","currentRole","roles","some","makeSymbolTypeKey","symbolCategory","lineData","createLine","LinePath","setLinePoints","updateSymbolAndLabelBeforeLineUpdate","symbolFrom","symbolTo","invScale","fromPos","toPos","tangent","__position","halfPercent","cp","__verticalAlign","__textAlign","_createLine","SYMBOL_CATEGORIES","lineProto","linePoints","_updateCommonStl","hoverLineStyle","visualOpacity","defaultLabelColor","defaultText","showLabel","hoverShowLabel","rawVal","textStyleHoverModel","linePath","isPointNaN","lineNeedsDraw","pts","LineDraw","ctor","_ctor","LineGroup","lineDrawProto","oldLineData","_lineData","LineCtor","isLine","straightLineProto","bezierCurveProto","isInifinity","ifMarkLineHasOnlyDim","fromCoord","toCoord","otherDimIndex","markLineFilter","markerHelper","updateSingleMarkerEndLayout","isFrom","xPx","yPx","createList","mlModel","coordDimsInfos","info","fromData","toData","optData","markLineTransform","to","mlFrom","mlTo","markLineModel","__to","updateDataVisualAndLayout","seriesData","lineDrawMap","lineDraw","lineColor","fromSymbolSize","fromSymbol","toSymbolSize","toSymbol","updateMarkerLayout","mpModel","dataOpt","markPointModel","symbolDrawMap","staticStyle","avatar","font-size","padding-top","icon-class","ref","border-bottom","_f","author","tag","class"],"mappings":"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/BlG,M7Jmh/BQu/D,MACE1rD,K6Jhh/BV,E7Jih/BUE,M6Jhh/BV,E7Jih/BUC,O6Jhh/BV,E7Jih/BUF,I6Jhh/BV,E7Jih/BU6sE,c6J/g/BV,G7Jih/BQthB,QACEh9D,K6Jhh/BV,W7Jih/BU1B,M6J/g/BV,Y7Jih/BQ2+D,QACEj9D,K6Jhh/BV,Q7Jih/BU1B,QACAyzD,M6J/g/BV,I7Jih/BQ/1C,e6Jhh/BR,I7Jih/BQlR,SACE9K,K6Jhh/BV,M7Jih/BUwU,K6Jhh/BV,K7Jih/BUk5C,WACE/+B,QACE/V,M6J9g/Bd,Y7Jih/BU9R,Q6Jhh/BV,E7Jih/BU2hG,O6Jhh/BV,Q7Jih/BUnqG,M6Jhh/BV,O7Jkh/BU0B,K6Jhh/BV,M7Jih/BUwU,K6Jhh/BV,M7Jih/BUk5C,WACE/+B,QACE/V,M6J9g/Bd,Y7Jih/BU5L,E6Jhh/BV,G7Jih/BU1O,MAAOuB,K6J9g/BjBkvG,iB7Jsh/BS,CACA,CAEH,SAAU7zG,EAAQC,EAASC,GAEjC,YAGAyG,QAAO4pD,eAAetwD,EAAS,cAC7BwC,OAAO,GAGT,IAAIqY,GAAU5a,E8J/n/Bd,I9Jio/BAA,G8J/n/BA,K9Jio/BAA,E8Jho/BA,K9Jio/BAA,E8Jho/BA,K9Jio/BAA,E8Jho/BA,K9Jio/BAD,EAAQ+uD,SACN11C,K8Jho/BF,Y9Jio/BEiH,OACEqzF,WACE9uG,K8Jho/BNwsB,O9Jio/BM09B,Q8J/n/BN,c9Jio/BIhnD,IACElD,K8Jho/BNwsB,O9Jio/BM09B,Q8J/n/BN,c9Jio/BIvmD,OACE3D,K8Jho/BNwsB,O9Jio/BM09B,Q8J/n/BN,Q9Jio/BItmD,QACE5D,K8Jho/BNwsB,O9Jio/BM09B,Q8J/n/BN,S9Jio/BIklD,UACEpvG,K8Jho/BNhF,M9Jio/BMq0G,S8J9n/BN,I9Jio/BE/wG,KAAM,WACJ,OACEiL,M8J/n/BN,O9Jmo/BEylG,OACEI,SAAU,SAAkBE,GAC1BzvG,KAAK0vG,Q8Jjo/BXD,K9Joo/BErD,QAAS,WACPpsG,KAAK0J,MAAQyM,EAAQxS,KAAKpG,SAAS+xG,eAAetvG,K8Jjo/BtDqD,K9Jko/BIrD,KAAK0vG,Q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","file":"js/0.b446077e46d7b02c5f57.js","sourcesContent":["webpackJsonp([0,29],Array(307).concat([\n/* 307 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(1)(\n  /* script */\n  __webpack_require__(574),\n  /* template */\n  __webpack_require__(746),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 308 */,\n/* 309 */,\n/* 310 */,\n/* 311 */,\n/* 312 */,\n/* 313 */,\n/* 314 */,\n/* 315 */,\n/* 316 */,\n/* 317 */\n/***/ (function(module, exports) {\n\n/**\n * @module zrender/core/util\n */\n\n\n    // 用于处理merge时无法遍历Date等对象的问题\n    var BUILTIN_OBJECT = {\n        '[object Function]': 1,\n        '[object RegExp]': 1,\n        '[object Date]': 1,\n        '[object Error]': 1,\n        '[object CanvasGradient]': 1,\n        '[object CanvasPattern]': 1,\n        // For node-canvas\n        '[object Image]': 1,\n        '[object Canvas]': 1\n    };\n\n    var TYPED_ARRAY = {\n        '[object Int8Array]': 1,\n        '[object Uint8Array]': 1,\n        '[object Uint8ClampedArray]': 1,\n        '[object Int16Array]': 1,\n        '[object Uint16Array]': 1,\n        '[object Int32Array]': 1,\n        '[object Uint32Array]': 1,\n        '[object Float32Array]': 1,\n        '[object Float64Array]': 1\n    };\n\n    var objToString = Object.prototype.toString;\n\n    var arrayProto = Array.prototype;\n    var nativeForEach = arrayProto.forEach;\n    var nativeFilter = arrayProto.filter;\n    var nativeSlice = arrayProto.slice;\n    var nativeMap = arrayProto.map;\n    var nativeReduce = arrayProto.reduce;\n\n    /**\n     * Those data types can be cloned:\n     *     Plain object, Array, TypedArray, number, string, null, undefined.\n     * Those data types will be assgined using the orginal data:\n     *     BUILTIN_OBJECT\n     * Instance of user defined class will be cloned to a plain object, without\n     * properties in prototype.\n     * Other data types is not supported (not sure what will happen).\n     *\n     * Caution: do not support clone Date, for performance consideration.\n     * (There might be a large number of date in `series.data`).\n     * So date should not be modified in and out of echarts.\n     *\n     * @param {*} source\n     * @return {*} new\n     */\n    function clone(source) {\n        if (source == null || typeof source != 'object') {\n            return source;\n        }\n\n        var result = source;\n        var typeStr = objToString.call(source);\n\n        if (typeStr === '[object Array]') {\n            result = [];\n            for (var i = 0, len = source.length; i < len; i++) {\n                result[i] = clone(source[i]);\n            }\n        }\n        else if (TYPED_ARRAY[typeStr]) {\n            result = source.constructor.from(source);\n        }\n        else if (!BUILTIN_OBJECT[typeStr] && !isDom(source)) {\n            result = {};\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    result[key] = clone(source[key]);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overwrite=false]\n     */\n    function merge(target, source, overwrite) {\n        // We should escapse that source is string\n        // and enter for ... in ...\n        if (!isObject(source) || !isObject(target)) {\n            return overwrite ? clone(source) : target;\n        }\n\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                var targetProp = target[key];\n                var sourceProp = source[key];\n\n                if (isObject(sourceProp)\n                    && isObject(targetProp)\n                    && !isArray(sourceProp)\n                    && !isArray(targetProp)\n                    && !isDom(sourceProp)\n                    && !isDom(targetProp)\n                    && !isBuildInObject(sourceProp)\n                    && !isBuildInObject(targetProp)\n                ) {\n                    // 如果需要递归覆盖，就递归调用merge\n                    merge(targetProp, sourceProp, overwrite);\n                }\n                else if (overwrite || !(key in target)) {\n                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n                    // NOTE，在 target[key] 不存在的时候也是直接覆盖\n                    target[key] = clone(source[key], true);\n                }\n            }\n        }\n\n        return target;\n    }\n\n    /**\n     * @param {Array} targetAndSources The first item is target, and the rests are source.\n     * @param {boolean} [overwrite=false]\n     * @return {*} target\n     */\n    function mergeAll(targetAndSources, overwrite) {\n        var result = targetAndSources[0];\n        for (var i = 1, len = targetAndSources.length; i < len; i++) {\n            result = merge(result, targetAndSources[i], overwrite);\n        }\n        return result;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @memberOf module:zrender/core/util\n     */\n    function extend(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @param {boolen} [overlay=false]\n     * @memberOf module:zrender/core/util\n     */\n    function defaults(target, source, overlay) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)\n                && (overlay ? source[key] != null : target[key] == null)\n            ) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    function createCanvas() {\n        return document.createElement('canvas');\n    }\n    // FIXME\n    var _ctx;\n    function getContext() {\n        if (!_ctx) {\n            // Use util.createCanvas instead of createCanvas\n            // because createCanvas may be overwritten in different environment\n            _ctx = util.createCanvas().getContext('2d');\n        }\n        return _ctx;\n    }\n\n    /**\n     * 查询数组中元素的index\n     * @memberOf module:zrender/core/util\n     */\n    function indexOf(array, value) {\n        if (array) {\n            if (array.indexOf) {\n                return array.indexOf(value);\n            }\n            for (var i = 0, len = array.length; i < len; i++) {\n                if (array[i] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * 构造类继承关系\n     *\n     * @memberOf module:zrender/core/util\n     * @param {Function} clazz 源类\n     * @param {Function} baseClazz 基类\n     */\n    function inherits(clazz, baseClazz) {\n        var clazzPrototype = clazz.prototype;\n        function F() {}\n        F.prototype = baseClazz.prototype;\n        clazz.prototype = new F();\n\n        for (var prop in clazzPrototype) {\n            clazz.prototype[prop] = clazzPrototype[prop];\n        }\n        clazz.prototype.constructor = clazz;\n        clazz.superClass = baseClazz;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Object|Function} target\n     * @param {Object|Function} sorce\n     * @param {boolean} overlay\n     */\n    function mixin(target, source, overlay) {\n        target = 'prototype' in target ? target.prototype : target;\n        source = 'prototype' in source ? source.prototype : source;\n\n        defaults(target, source, overlay);\n    }\n\n    /**\n     * @param {Array|TypedArray} data\n     */\n    function isArrayLike(data) {\n        if (! data) {\n            return;\n        }\n        if (typeof data == 'string') {\n            return false;\n        }\n        return typeof data.length == 'number';\n    }\n\n    /**\n     * 数组或对象遍历\n     * @memberOf module:zrender/core/util\n     * @param {Object|Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     */\n    function each(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.forEach && obj.forEach === nativeForEach) {\n            obj.forEach(cb, context);\n        }\n        else if (obj.length === +obj.length) {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                cb.call(context, obj[i], i, obj);\n            }\n        }\n        else {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    cb.call(context, obj[key], key, obj);\n                }\n            }\n        }\n    }\n\n    /**\n     * 数组映射\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function map(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.map && obj.map === nativeMap) {\n            return obj.map(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                result.push(cb.call(context, obj[i], i, obj));\n            }\n            return result;\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {Object} [memo]\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function reduce(obj, cb, memo, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.reduce && obj.reduce === nativeReduce) {\n            return obj.reduce(cb, memo, context);\n        }\n        else {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                memo = cb.call(context, memo, obj[i], i, obj);\n            }\n            return memo;\n        }\n    }\n\n    /**\n     * 数组过滤\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function filter(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.filter && obj.filter === nativeFilter) {\n            return obj.filter(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                if (cb.call(context, obj[i], i, obj)) {\n                    result.push(obj[i]);\n                }\n            }\n            return result;\n        }\n    }\n\n    /**\n     * 数组项查找\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function find(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        for (var i = 0, len = obj.length; i < len; i++) {\n            if (cb.call(context, obj[i], i, obj)) {\n                return obj[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @param {*} context\n     * @return {Function}\n     */\n    function bind(func, context) {\n        var args = nativeSlice.call(arguments, 2);\n        return function () {\n            return func.apply(context, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @return {Function}\n     */\n    function curry(func) {\n        var args = nativeSlice.call(arguments, 1);\n        return function () {\n            return func.apply(this, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isArray(value) {\n        return objToString.call(value) === '[object Array]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isString(value) {\n        return objToString.call(value) === '[object String]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isObject(value) {\n        // Avoid a V8 JIT bug in Chrome 19-20.\n        // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n        var type = typeof value;\n        return type === 'function' || (!!value && type == 'object');\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isBuildInObject(value) {\n        return !!BUILTIN_OBJECT[objToString.call(value)];\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isDom(value) {\n        return typeof value === 'object'\n            && typeof value.nodeType === 'number'\n            && typeof value.ownerDocument === 'object';\n    }\n\n    /**\n     * Whether is exactly NaN. Notice isNaN('a') returns true.\n     * @param {*} value\n     * @return {boolean}\n     */\n    function eqNaN(value) {\n        return value !== value;\n    }\n\n    /**\n     * If value1 is not null, then return value1, otherwise judget rest of values.\n     * @memberOf module:zrender/core/util\n     * @return {*} Final value\n     */\n    function retrieve(values) {\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            if (arguments[i] != null) {\n                return arguments[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} arr\n     * @param {number} startIndex\n     * @param {number} endIndex\n     * @return {Array}\n     */\n    function slice() {\n        return Function.call.apply(nativeSlice, arguments);\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {boolean} condition\n     * @param {string} message\n     */\n    function assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n\n    var util = {\n        inherits: inherits,\n        mixin: mixin,\n        clone: clone,\n        merge: merge,\n        mergeAll: mergeAll,\n        extend: extend,\n        defaults: defaults,\n        getContext: getContext,\n        createCanvas: createCanvas,\n        indexOf: indexOf,\n        slice: slice,\n        find: find,\n        isArrayLike: isArrayLike,\n        each: each,\n        map: map,\n        reduce: reduce,\n        filter: filter,\n        bind: bind,\n        curry: curry,\n        isArray: isArray,\n        isString: isString,\n        isObject: isObject,\n        isFunction: isFunction,\n        isBuildInObject: isBuildInObject,\n        isDom: isDom,\n        eqNaN: eqNaN,\n        retrieve: retrieve,\n        assert: assert,\n        noop: function () {}\n    };\n    module.exports = util;\n\n\n\n/***/ }),\n/* 318 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {// Enable DEV mode when using source code without build. which has no __DEV__ variable\n// In build process 'typeof __DEV__' will be replace with 'boolean'\n// So this code will be removed or disabled anyway after built.\nif (typeof __DEV__ === 'undefined') {\n    // In browser\n    if (typeof window !== 'undefined') {\n        window.__DEV__ = true;\n    }\n    // In node\n    else if (typeof global !== 'undefined') {\n        global.__DEV__ = true;\n    }\n}\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\n\n/**\n * @module echarts\n */\n\n\n    var env = __webpack_require__(323);\n\n    var GlobalModel = __webpack_require__(403);\n    var ExtensionAPI = __webpack_require__(378);\n    var CoordinateSystemManager = __webpack_require__(342);\n    var OptionManager = __webpack_require__(404);\n\n    var ComponentModel = __webpack_require__(329);\n    var SeriesModel = __webpack_require__(349);\n\n    var ComponentView = __webpack_require__(377);\n    var ChartView = __webpack_require__(358);\n    var graphic = __webpack_require__(319);\n    var modelUtil = __webpack_require__(325);\n    var throttle = __webpack_require__(372);\n\n    var zrender = __webpack_require__(457);\n    var zrUtil = __webpack_require__(317);\n    var colorTool = __webpack_require__(332);\n    var Eventful = __webpack_require__(333);\n    var timsort = __webpack_require__(346);\n\n    var each = zrUtil.each;\n    var parseClassType = ComponentModel.parseClassType;\n\n    var PRIORITY_PROCESSOR_FILTER = 1000;\n    var PRIORITY_PROCESSOR_STATISTIC = 5000;\n\n\n    var PRIORITY_VISUAL_LAYOUT = 1000;\n    var PRIORITY_VISUAL_GLOBAL = 2000;\n    var PRIORITY_VISUAL_CHART = 3000;\n    var PRIORITY_VISUAL_COMPONENT = 4000;\n    // FIXME\n    // necessary?\n    var PRIORITY_VISUAL_BRUSH = 5000;\n\n    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n    // where they must not be invoked nestedly, except the only case: invoke\n    // dispatchAction with updateMethod \"none\" in main process.\n    // This flag is used to carry out this rule.\n    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n    var IN_MAIN_PROCESS = '__flagInMainProcess';\n    var HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\n    var OPTION_UPDATED = '__optionUpdated';\n    var ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\n    function createRegisterEventWithLowercaseName(method) {\n        return function (eventName, handler, context) {\n            // Event name is all lowercase\n            eventName = eventName && eventName.toLowerCase();\n            Eventful.prototype[method].call(this, eventName, handler, context);\n        };\n    }\n\n    /**\n     * @module echarts~MessageCenter\n     */\n    function MessageCenter() {\n        Eventful.call(this);\n    }\n    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\n    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\n    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\n    zrUtil.mixin(MessageCenter, Eventful);\n\n    /**\n     * @module echarts~ECharts\n     */\n    function ECharts (dom, theme, opts) {\n        opts = opts || {};\n\n        // Get theme by name\n        if (typeof theme === 'string') {\n            theme = themeStorage[theme];\n        }\n\n        /**\n         * @type {string}\n         */\n        this.id;\n        /**\n         * Group id\n         * @type {string}\n         */\n        this.group;\n        /**\n         * @type {HTMLDomElement}\n         * @private\n         */\n        this._dom = dom;\n        /**\n         * @type {module:zrender/ZRender}\n         * @private\n         */\n        var zr = this._zr = zrender.init(dom, {\n            renderer: opts.renderer || 'canvas',\n            devicePixelRatio: opts.devicePixelRatio,\n            width: opts.width,\n            height: opts.height\n        });\n\n        /**\n         * Expect 60 pfs.\n         * @type {Function}\n         * @private\n         */\n        this._throttledZrFlush = throttle.throttle(zrUtil.bind(zr.flush, zr), 17);\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._theme = zrUtil.clone(theme);\n\n        /**\n         * @type {Array.<module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * @type {module:echarts/ExtensionAPI}\n         * @private\n         */\n        this._api = new ExtensionAPI(this);\n\n        /**\n         * @type {module:echarts/CoordinateSystem}\n         * @private\n         */\n        this._coordSysMgr = new CoordinateSystemManager();\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:echarts~MessageCenter}\n         * @private\n         */\n        this._messageCenter = new MessageCenter();\n\n        // Init mouse events\n        this._initEvents();\n\n        // In case some people write `window.onresize = chart.resize`\n        this.resize = zrUtil.bind(this.resize, this);\n\n        // Can't dispatch action during rendering procedure\n        this._pendingActions = [];\n        // Sort on demand\n        function prioritySortFunc(a, b) {\n            return a.prio - b.prio;\n        }\n        timsort(visualFuncs, prioritySortFunc);\n        timsort(dataProcessorFuncs, prioritySortFunc);\n\n        zr.animation.on('frame', this._onframe, this);\n    }\n\n    var echartsProto = ECharts.prototype;\n\n    echartsProto._onframe = function () {\n        // Lazy update\n        if (this[OPTION_UPDATED]) {\n            var silent = this[OPTION_UPDATED].silent;\n\n            this[IN_MAIN_PROCESS] = true;\n\n            updateMethods.prepareAndUpdate.call(this);\n\n            this[IN_MAIN_PROCESS] = false;\n\n            this[OPTION_UPDATED] = false;\n\n            flushPendingActions.call(this, silent);\n\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n    /**\n     * @return {HTMLDomElement}\n     */\n    echartsProto.getDom = function () {\n        return this._dom;\n    };\n\n    /**\n     * @return {module:zrender~ZRender}\n     */\n    echartsProto.getZr = function () {\n        return this._zr;\n    };\n\n    /**\n     * Usage:\n     * chart.setOption(option, notMerge, lazyUpdate);\n     * chart.setOption(option, {\n     *     notMerge: ...,\n     *     lazyUpdate: ...,\n     *     silent: ...\n     * });\n     *\n     * @param {Object} option\n     * @param {Object|boolean} [opts] opts or notMerge.\n     * @param {boolean} [opts.notMerge=false]\n     * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n     */\n    echartsProto.setOption = function (option, notMerge, lazyUpdate) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');\n        }\n\n        var silent;\n        if (zrUtil.isObject(notMerge)) {\n            lazyUpdate = notMerge.lazyUpdate;\n            silent = notMerge.silent;\n            notMerge = notMerge.notMerge;\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        if (!this._model || notMerge) {\n            var optionManager = new OptionManager(this._api);\n            var theme = this._theme;\n            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n            ecModel.init(null, null, theme, optionManager);\n        }\n\n        // FIXME\n        // ugly\n        this.__lastOnlyGraphic = !!(option && option.graphic);\n        zrUtil.each(option, function (o, mainType) {\n            mainType !== 'graphic' && (this.__lastOnlyGraphic = false);\n        }, this);\n\n        this._model.setOption(option, optionPreprocessorFuncs);\n\n        if (lazyUpdate) {\n            this[OPTION_UPDATED] = {silent: silent};\n            this[IN_MAIN_PROCESS] = false;\n        }\n        else {\n            updateMethods.prepareAndUpdate.call(this);\n            // Ensure zr refresh sychronously, and then pixel in canvas can be\n            // fetched after `setOption`.\n            this._zr.flush();\n\n            this[OPTION_UPDATED] = false;\n            this[IN_MAIN_PROCESS] = false;\n\n            flushPendingActions.call(this, silent);\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n\n    /**\n     * @DEPRECATED\n     */\n    echartsProto.setTheme = function () {\n        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n    };\n\n    /**\n     * @return {module:echarts/model/Global}\n     */\n    echartsProto.getModel = function () {\n        return this._model;\n    };\n\n    /**\n     * @return {Object}\n     */\n    echartsProto.getOption = function () {\n        return this._model && this._model.getOption();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getWidth = function () {\n        return this._zr.getWidth();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getHeight = function () {\n        return this._zr.getHeight();\n    };\n\n    /**\n     * Get canvas which has all thing rendered\n     * @param {Object} opts\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getRenderedCanvas = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        opts = opts || {};\n        opts.pixelRatio = opts.pixelRatio || 1;\n        opts.backgroundColor = opts.backgroundColor\n            || this._model.get('backgroundColor');\n        var zr = this._zr;\n        var list = zr.storage.getDisplayList();\n        // Stop animations\n        zrUtil.each(list, function (el) {\n            el.stopAnimation(true);\n        });\n        return zr.painter.getRenderedCanvas(opts);\n    };\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     * @param {string} [opts.excludeComponents]\n     */\n    echartsProto.getDataURL = function (opts) {\n        opts = opts || {};\n        var excludeComponents = opts.excludeComponents;\n        var ecModel = this._model;\n        var excludesComponentViews = [];\n        var self = this;\n\n        each(excludeComponents, function (componentType) {\n            ecModel.eachComponent({\n                mainType: componentType\n            }, function (component) {\n                var view = self._componentsMap[component.__viewId];\n                if (!view.group.ignore) {\n                    excludesComponentViews.push(view);\n                    view.group.ignore = true;\n                }\n            });\n        });\n\n        var url = this.getRenderedCanvas(opts).toDataURL(\n            'image/' + (opts && opts.type || 'png')\n        );\n\n        each(excludesComponentViews, function (view) {\n            view.group.ignore = false;\n        });\n        return url;\n    };\n\n\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getConnectedDataURL = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        var groupId = this.group;\n        var mathMin = Math.min;\n        var mathMax = Math.max;\n        var MAX_NUMBER = Infinity;\n        if (connectedGroups[groupId]) {\n            var left = MAX_NUMBER;\n            var top = MAX_NUMBER;\n            var right = -MAX_NUMBER;\n            var bottom = -MAX_NUMBER;\n            var canvasList = [];\n            var dpr = (opts && opts.pixelRatio) || 1;\n\n            zrUtil.each(instances, function (chart, id) {\n                if (chart.group === groupId) {\n                    var canvas = chart.getRenderedCanvas(\n                        zrUtil.clone(opts)\n                    );\n                    var boundingRect = chart.getDom().getBoundingClientRect();\n                    left = mathMin(boundingRect.left, left);\n                    top = mathMin(boundingRect.top, top);\n                    right = mathMax(boundingRect.right, right);\n                    bottom = mathMax(boundingRect.bottom, bottom);\n                    canvasList.push({\n                        dom: canvas,\n                        left: boundingRect.left,\n                        top: boundingRect.top\n                    });\n                }\n            });\n\n            left *= dpr;\n            top *= dpr;\n            right *= dpr;\n            bottom *= dpr;\n            var width = right - left;\n            var height = bottom - top;\n            var targetCanvas = zrUtil.createCanvas();\n            targetCanvas.width = width;\n            targetCanvas.height = height;\n            var zr = zrender.init(targetCanvas);\n\n            each(canvasList, function (item) {\n                var img = new graphic.Image({\n                    style: {\n                        x: item.left * dpr - left,\n                        y: item.top * dpr - top,\n                        image: item.dom\n                    }\n                });\n                zr.add(img);\n            });\n            zr.refreshImmediately();\n\n            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n        }\n        else {\n            return this.getDataURL(opts);\n        }\n    };\n\n    /**\n     * Convert from logical coordinate system to pixel coordinate system.\n     * See CoordinateSystem#convertToPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId, geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n\n    /**\n     * Convert from pixel coordinate system to logical coordinate system.\n     * See CoordinateSystem#convertFromPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\n    function doConvertPixel(methodName, finder, value) {\n        var ecModel = this._model;\n        var coordSysList = this._coordSysMgr.getCoordinateSystems();\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        for (var i = 0; i < coordSysList.length; i++) {\n            var coordSys = coordSysList[i];\n            if (coordSys[methodName]\n                && (result = coordSys[methodName](ecModel, finder, value)) != null\n            ) {\n                return result;\n            }\n        }\n\n        if (__DEV__) {\n            console.warn(\n                'No coordinate system that supports ' + methodName + ' found by the given finder.'\n            );\n        }\n    }\n\n    /**\n     * Is the specified coordinate systems or components contain the given pixel point.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {boolean} result\n     */\n    echartsProto.containPixel = function (finder, value) {\n        var ecModel = this._model;\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        zrUtil.each(finder, function (models, key) {\n            key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n                var coordSys = model.coordinateSystem;\n                if (coordSys && coordSys.containPoint) {\n                    result |= !!coordSys.containPoint(value);\n                }\n                else if (key === 'seriesModels') {\n                    var view = this._chartsMap[model.__viewId];\n                    if (view && view.containPoint) {\n                        result |= view.containPoint(value, model);\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.warn(key + ': ' + (view\n                                ? 'The found component do not support containPoint.'\n                                : 'No view mapping to the found component.'\n                            ));\n                        }\n                    }\n                }\n                else {\n                    if (__DEV__) {\n                        console.warn(key + ': containPoint is not supported');\n                    }\n                }\n            }, this);\n        }, this);\n\n        return !!result;\n    };\n\n    /**\n     * Get visual from series or data.\n     * @param {string|Object} finder\n     *        If string, e.g., 'series', means {seriesIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            dataIndex / dataIndexInside\n     *        }\n     *        If dataIndex is not specified, series visual will be fetched,\n     *        but not data item visual.\n     *        If all of seriesIndex, seriesId, seriesName are not specified,\n     *        visual will be fetched from first series.\n     * @param {string} visualType 'color', 'symbol', 'symbolSize'\n     */\n    echartsProto.getVisual = function (finder, visualType) {\n        var ecModel = this._model;\n\n        finder = modelUtil.parseFinder(ecModel, finder, {defaultMainType: 'series'});\n\n        var seriesModel = finder.seriesModel;\n\n        if (__DEV__) {\n            if (!seriesModel) {\n                console.warn('There is no specified seires model');\n            }\n        }\n\n        var data = seriesModel.getData();\n\n        var dataIndexInside = finder.hasOwnProperty('dataIndexInside')\n            ? finder.dataIndexInside\n            : finder.hasOwnProperty('dataIndex')\n            ? data.indexOfRawIndex(finder.dataIndex)\n            : null;\n\n        return dataIndexInside != null\n            ? data.getItemVisual(dataIndexInside, visualType)\n            : data.getVisual(visualType);\n    };\n\n\n    var updateMethods = {\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        update: function (payload) {\n            // console.time && console.time('update');\n\n            var ecModel = this._model;\n            var api = this._api;\n            var coordSysMgr = this._coordSysMgr;\n            var zr = this._zr;\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            // Fixme First time update ?\n            ecModel.restoreData();\n\n            // TODO\n            // Save total ecModel here for undo/redo (after restoring data and before processing data).\n            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n\n            // Create new coordinate system each update\n            // In LineView may save the old coordinate system and use it to get the orignal point\n            coordSysMgr.create(this._model, this._api);\n\n            processData.call(this, ecModel, api);\n\n            stackSeriesData.call(this, ecModel);\n\n            coordSysMgr.update(ecModel, api);\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            doRender.call(this, ecModel, payload);\n\n            // Set background\n            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n\n            var painter = zr.painter;\n            // TODO all use clearColor ?\n            if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n                zr.configLayer(0, {\n                    clearColor: backgroundColor\n                });\n            }\n            else {\n                // In IE8\n                if (!env.canvasSupported) {\n                    var colorArr = colorTool.parse(backgroundColor);\n                    backgroundColor = colorTool.stringify(colorArr, 'rgb');\n                    if (colorArr[3] === 0) {\n                        backgroundColor = 'transparent';\n                    }\n                }\n                if (backgroundColor.colorStops || backgroundColor.image) {\n                    // Gradient background\n                    // FIXME Fixed layer？\n                    zr.configLayer(0, {\n                        clearColor: backgroundColor\n                    });\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n\n                    this._dom.style.background = 'transparent';\n                }\n                else {\n                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n                        zr.configLayer(0, {\n                            clearColor: null\n                        });\n                    }\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n\n                    this._dom.style.background = backgroundColor;\n                }\n            }\n\n            // console.time && console.timeEnd('update');\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateView: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateVisual: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload, true);\n\n            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateLayout: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            doLayout.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        prepareAndUpdate: function (payload) {\n            var ecModel = this._model;\n\n            prepareView.call(this, 'component', ecModel);\n\n            prepareView.call(this, 'chart', ecModel);\n\n            // FIXME\n            // ugly\n            if (this.__lastOnlyGraphic) {\n                each(this._componentsViews, function (componentView) {\n                    var componentModel = componentView.__model;\n                    if (componentModel && componentModel.mainType === 'graphic') {\n                        componentView.render(componentModel, ecModel, this._api, payload);\n                        updateZ(componentModel, componentView);\n                    }\n                }, this);\n                this.__lastOnlyGraphic = false;\n            }\n            else {\n                updateMethods.update.call(this, payload);\n            }\n        }\n    };\n\n    /**\n     * @private\n     */\n    function updateDirectly(ecIns, method, payload, mainType, subType) {\n        var ecModel = ecIns._model;\n        var query = {};\n        query[mainType + 'Id'] = payload[mainType + 'Id'];\n        query[mainType + 'Index'] = payload[mainType + 'Index'];\n        query[mainType + 'Name'] = payload[mainType + 'Name'];\n\n        var condition = {mainType: mainType, query: query};\n        subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n        // If dispatchAction before setOption, do nothing.\n        ecModel && ecModel.eachComponent(condition, function (model, index) {\n            var view = ecIns[\n                mainType === 'series' ? '_chartsMap' : '_componentsMap'\n            ][model.__viewId];\n            if (view && view.__alive) {\n                view[method](model, ecModel, ecIns._api, payload);\n            }\n        }, ecIns);\n    }\n\n    /**\n     * Resize the chart\n     * @param {Object} opts\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @param {boolean} [opts.silent=false]\n     */\n    echartsProto.resize = function (opts) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        this._zr.resize(opts);\n\n        var optionChanged = this._model && this._model.resetOption('media');\n        var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n\n        updateMethods[updateMethod].call(this);\n\n        // Resize loading effect\n        this._loadingFX && this._loadingFX.resize();\n\n        this[IN_MAIN_PROCESS] = false;\n\n        var silent = opts && opts.silent;\n\n        flushPendingActions.call(this, silent);\n\n        triggerUpdatedEvent.call(this, silent);\n    };\n\n    /**\n     * Show loading effect\n     * @param  {string} [name='default']\n     * @param  {Object} [cfg]\n     */\n    echartsProto.showLoading = function (name, cfg) {\n        if (zrUtil.isObject(name)) {\n            cfg = name;\n            name = '';\n        }\n        name = name || 'default';\n\n        this.hideLoading();\n        if (!loadingEffects[name]) {\n            if (__DEV__) {\n                console.warn('Loading effects ' + name + ' not exists.');\n            }\n            return;\n        }\n        var el = loadingEffects[name](this._api, cfg);\n        var zr = this._zr;\n        this._loadingFX = el;\n\n        zr.add(el);\n    };\n\n    /**\n     * Hide loading effect\n     */\n    echartsProto.hideLoading = function () {\n        this._loadingFX && this._zr.remove(this._loadingFX);\n        this._loadingFX = null;\n    };\n\n    /**\n     * @param {Object} eventObj\n     * @return {Object}\n     */\n    echartsProto.makeActionFromEvent = function (eventObj) {\n        var payload = zrUtil.extend({}, eventObj);\n        payload.type = eventActionMap[eventObj.type];\n        return payload;\n    };\n\n    /**\n     * @pubilc\n     * @param {Object} payload\n     * @param {string} [payload.type] Action type\n     * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n     * @param {boolean} [opt.silent=false] Whether trigger events.\n     * @param {boolean} [opt.flush=undefined]\n     *                  true: Flush immediately, and then pixel in canvas can be fetched\n     *                      immediately. Caution: it might affect performance.\n     *                  false: Not not flush.\n     *                  undefined: Auto decide whether perform flush.\n     */\n    echartsProto.dispatchAction = function (payload, opt) {\n        if (!zrUtil.isObject(opt)) {\n            opt = {silent: !!opt};\n        }\n\n        if (!actions[payload.type]) {\n            return;\n        }\n\n        // if (__DEV__) {\n        //     zrUtil.assert(\n        //         !this[IN_MAIN_PROCESS],\n        //         '`dispatchAction` should not be called during main process.'\n        //         + 'unless updateMathod is \"none\".'\n        //     );\n        // }\n\n        // May dispatchAction in rendering procedure\n        if (this[IN_MAIN_PROCESS]) {\n            this._pendingActions.push(payload);\n            return;\n        }\n\n        doDispatchAction.call(this, payload, opt.silent);\n\n        if (opt.flush) {\n            this._zr.flush(true);\n        }\n        else if (opt.flush !== false && env.browser.weChat) {\n            // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n            // hang when sliding page (on touch event), which cause that zr does not\n            // refresh util user interaction finished, which is not expected.\n            // But `dispatchAction` may be called too frequently when pan on touch\n            // screen, which impacts performance if do not throttle them.\n            this._throttledZrFlush();\n        }\n\n        flushPendingActions.call(this, opt.silent);\n\n        triggerUpdatedEvent.call(this, opt.silent);\n    };\n\n    function doDispatchAction(payload, silent) {\n        var payloadType = payload.type;\n        var actionWrap = actions[payloadType];\n        var actionInfo = actionWrap.actionInfo;\n\n        var cptType = (actionInfo.update || 'update').split(':');\n        var updateMethod = cptType.pop();\n        cptType = cptType[0] && parseClassType(cptType[0]);\n\n        this[IN_MAIN_PROCESS] = true;\n\n        var payloads = [payload];\n        var batched = false;\n        // Batch action\n        if (payload.batch) {\n            batched = true;\n            payloads = zrUtil.map(payload.batch, function (item) {\n                item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n                item.batch = null;\n                return item;\n            });\n        }\n\n        var eventObjBatch = [];\n        var eventObj;\n        var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n\n        for (var i = 0; i < payloads.length; i++) {\n            var batchItem = payloads[i];\n            // Action can specify the event by return it.\n            eventObj = actionWrap.action(batchItem, this._model);\n            // Emit event outside\n            eventObj = eventObj || zrUtil.extend({}, batchItem);\n            // Convert type to eventType\n            eventObj.type = actionInfo.event || eventObj.type;\n            eventObjBatch.push(eventObj);\n\n            // light update does not perform data process, layout and visual.\n            if (isHighDown) {\n                // method, payload, mainType, subType\n                updateDirectly(this, updateMethod, batchItem, 'series');\n            }\n            else if (cptType) {\n                updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n            }\n        }\n\n        if (updateMethod !== 'none' && !isHighDown && !cptType) {\n            // Still dirty\n            if (this[OPTION_UPDATED]) {\n                // FIXME Pass payload ?\n                updateMethods.prepareAndUpdate.call(this, payload);\n                this[OPTION_UPDATED] = false;\n            }\n            else {\n                updateMethods[updateMethod].call(this, payload);\n            }\n        }\n\n        // Follow the rule of action batch\n        if (batched) {\n            eventObj = {\n                type: actionInfo.event || payloadType,\n                batch: eventObjBatch\n            };\n        }\n        else {\n            eventObj = eventObjBatch[0];\n        }\n\n        this[IN_MAIN_PROCESS] = false;\n\n        !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n    }\n\n    function flushPendingActions(silent) {\n        var pendingActions = this._pendingActions;\n        while (pendingActions.length) {\n            var payload = pendingActions.shift();\n            doDispatchAction.call(this, payload, silent);\n        }\n    }\n\n    function triggerUpdatedEvent(silent) {\n        !silent && this.trigger('updated');\n    }\n\n    /**\n     * Register event\n     * @method\n     */\n    echartsProto.on = createRegisterEventWithLowercaseName('on');\n    echartsProto.off = createRegisterEventWithLowercaseName('off');\n    echartsProto.one = createRegisterEventWithLowercaseName('one');\n\n    /**\n     * @param {string} methodName\n     * @private\n     */\n    function invokeUpdateMethod(methodName, ecModel, payload) {\n        var api = this._api;\n\n        // Update all components\n        each(this._componentsViews, function (component) {\n            var componentModel = component.__model;\n            component[methodName](componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, component);\n        }, this);\n\n        // Upate all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chart = this._chartsMap[seriesModel.__viewId];\n            chart[methodName](seriesModel, ecModel, api, payload);\n\n            updateZ(seriesModel, chart);\n\n            updateProgressiveAndBlend(seriesModel, chart);\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n    }\n\n    /**\n     * Prepare view instances of charts and components\n     * @param  {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function prepareView(type, ecModel) {\n        var isComponent = type === 'component';\n        var viewList = isComponent ? this._componentsViews : this._chartsViews;\n        var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n        var zr = this._zr;\n\n        for (var i = 0; i < viewList.length; i++) {\n            viewList[i].__alive = false;\n        }\n\n        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n            if (isComponent) {\n                if (componentType === 'series') {\n                    return;\n                }\n            }\n            else {\n                model = componentType;\n            }\n\n            // Consider: id same and type changed.\n            var viewId = model.id + '_' + model.type;\n            var view = viewMap[viewId];\n            if (!view) {\n                var classType = parseClassType(model.type);\n                var Clazz = isComponent\n                    ? ComponentView.getClass(classType.main, classType.sub)\n                    : ChartView.getClass(classType.sub);\n                if (Clazz) {\n                    view = new Clazz();\n                    view.init(ecModel, this._api);\n                    viewMap[viewId] = view;\n                    viewList.push(view);\n                    zr.add(view.group);\n                }\n                else {\n                    // Error\n                    return;\n                }\n            }\n\n            model.__viewId = viewId;\n            view.__alive = true;\n            view.__id = viewId;\n            view.__model = model;\n        }, this);\n\n        for (var i = 0; i < viewList.length;) {\n            var view = viewList[i];\n            if (!view.__alive) {\n                zr.remove(view.group);\n                view.dispose(ecModel, this._api);\n                viewList.splice(i, 1);\n                delete viewMap[view.__id];\n            }\n            else {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * Processor data in each series\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function processData(ecModel, api) {\n        each(dataProcessorFuncs, function (process) {\n            process.func(ecModel, api);\n        });\n    }\n\n    /**\n     * @private\n     */\n    function stackSeriesData(ecModel) {\n        var stackedDataMap = {};\n        ecModel.eachSeries(function (series) {\n            var stack = series.get('stack');\n            var data = series.getData();\n            if (stack && data.type === 'list') {\n                var previousStack = stackedDataMap[stack];\n                if (previousStack) {\n                    data.stackedOn = previousStack;\n                }\n                stackedDataMap[stack] = data;\n            }\n        });\n    }\n\n    /**\n     * Layout before each chart render there series, special visual encoding stage\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function doLayout(ecModel, payload) {\n        var api = this._api;\n        each(visualFuncs, function (visual) {\n            if (visual.isLayout) {\n                visual.func(ecModel, api, payload);\n            }\n        });\n    }\n\n    /**\n     * Encode visual infomation from data after data processing\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @param {object} layout\n     * @param {boolean} [excludesLayout]\n     * @private\n     */\n    function doVisualEncoding(ecModel, payload, excludesLayout) {\n        var api = this._api;\n        ecModel.clearColorPalette();\n        ecModel.eachSeries(function (seriesModel) {\n            seriesModel.clearColorPalette();\n        });\n        each(visualFuncs, function (visual) {\n            (!excludesLayout || !visual.isLayout)\n                && visual.func(ecModel, api, payload);\n        });\n    }\n\n    /**\n     * Render each chart and component\n     * @private\n     */\n    function doRender(ecModel, payload) {\n        var api = this._api;\n        // Render all components\n        each(this._componentsViews, function (componentView) {\n            var componentModel = componentView.__model;\n            componentView.render(componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, componentView);\n        }, this);\n\n        each(this._chartsViews, function (chart) {\n            chart.__alive = false;\n        }, this);\n\n        // Render all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chartView = this._chartsMap[seriesModel.__viewId];\n            chartView.__alive = true;\n            chartView.render(seriesModel, ecModel, api, payload);\n\n            chartView.group.silent = !!seriesModel.get('silent');\n\n            updateZ(seriesModel, chartView);\n\n            updateProgressiveAndBlend(seriesModel, chartView);\n\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Remove groups of unrendered charts\n        each(this._chartsViews, function (chart) {\n            if (!chart.__alive) {\n                chart.remove(ecModel, api);\n            }\n        }, this);\n    }\n\n    var MOUSE_EVENT_NAMES = [\n        'click', 'dblclick', 'mouseover', 'mouseout', 'mousemove',\n        'mousedown', 'mouseup', 'globalout', 'contextmenu'\n    ];\n    /**\n     * @private\n     */\n    echartsProto._initEvents = function () {\n        each(MOUSE_EVENT_NAMES, function (eveName) {\n            this._zr.on(eveName, function (e) {\n                var ecModel = this.getModel();\n                var el = e.target;\n                var params;\n\n                // no e.target when 'globalout'.\n                if (eveName === 'globalout') {\n                    params = {};\n                }\n                else if (el && el.dataIndex != null) {\n                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                    params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n                }\n                // If element has custom eventData of components\n                else if (el && el.eventData) {\n                    params = zrUtil.extend({}, el.eventData);\n                }\n\n                if (params) {\n                    params.event = e;\n                    params.type = eveName;\n                    this.trigger(eveName, params);\n                }\n\n            }, this);\n        }, this);\n\n        each(eventActionMap, function (actionType, eventType) {\n            this._messageCenter.on(eventType, function (event) {\n                this.trigger(eventType, event);\n            }, this);\n        }, this);\n    };\n\n    /**\n     * @return {boolean}\n     */\n    echartsProto.isDisposed = function () {\n        return this._disposed;\n    };\n\n    /**\n     * Clear\n     */\n    echartsProto.clear = function () {\n        this.setOption({ series: [] }, true);\n    };\n    /**\n     * Dispose instance\n     */\n    echartsProto.dispose = function () {\n        if (this._disposed) {\n            if (__DEV__) {\n                console.warn('Instance ' + this.id + ' has been disposed');\n            }\n            return;\n        }\n        this._disposed = true;\n\n        var api = this._api;\n        var ecModel = this._model;\n\n        each(this._componentsViews, function (component) {\n            component.dispose(ecModel, api);\n        });\n        each(this._chartsViews, function (chart) {\n            chart.dispose(ecModel, api);\n        });\n\n        // Dispose after all views disposed\n        this._zr.dispose();\n\n        delete instances[this.id];\n    };\n\n    zrUtil.mixin(ECharts, Eventful);\n\n    function updateHoverLayerStatus(zr, ecModel) {\n        var storage = zr.storage;\n        var elCount = 0;\n        storage.traverse(function (el) {\n            if (!el.isGroup) {\n                elCount++;\n            }\n        });\n        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n            storage.traverse(function (el) {\n                if (!el.isGroup) {\n                    el.useHoverLayer = true;\n                }\n            });\n        }\n    }\n    /**\n     * Update chart progressive and blend.\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateProgressiveAndBlend(seriesModel, chartView) {\n        // Progressive configuration\n        var elCount = 0;\n        chartView.group.traverse(function (el) {\n            if (el.type !== 'group' && !el.ignore) {\n                elCount++;\n            }\n        });\n        var frameDrawNum = +seriesModel.get('progressive');\n        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n        if (needProgressive) {\n            chartView.group.traverse(function (el) {\n                // FIXME marker and other components\n                if (!el.isGroup) {\n                    el.progressive = needProgressive ?\n                        Math.floor(elCount++ / frameDrawNum) : -1;\n                    if (needProgressive) {\n                        el.stopAnimation(true);\n                    }\n                }\n            });\n        }\n\n        // Blend configration\n        var blendMode = seriesModel.get('blendMode') || null;\n        if (__DEV__) {\n            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n                console.warn('Only canvas support blendMode');\n            }\n        }\n        chartView.group.traverse(function (el) {\n            // FIXME marker and other components\n            if (!el.isGroup) {\n                el.setStyle('blend', blendMode);\n            }\n        });\n    }\n    /**\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateZ(model, view) {\n        var z = model.get('z');\n        var zlevel = model.get('zlevel');\n        // Set z and zlevel\n        view.group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n            }\n        });\n    }\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var actions = [];\n\n    /**\n     * Map eventType to actionType\n     * @type {Object}\n     */\n    var eventActionMap = {};\n\n    /**\n     * Data processor functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var dataProcessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var optionPreprocessorFuncs = [];\n\n    /**\n     * Visual encoding functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var visualFuncs = [];\n    /**\n     * Theme storage\n     * @type {Object.<key, Object>}\n     */\n    var themeStorage = {};\n    /**\n     * Loading effects\n     */\n    var loadingEffects = {};\n\n\n    var instances = {};\n    var connectedGroups = {};\n\n    var idBase = new Date() - 0;\n    var groupIdBase = new Date() - 0;\n    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n    /**\n     * @alias module:echarts\n     */\n    var echarts = {\n        /**\n         * @type {number}\n         */\n        version: '3.4.0',\n        dependencies: {\n            zrender: '3.3.0'\n        }\n    };\n\n    function enableConnect(chart) {\n\n        var STATUS_PENDING = 0;\n        var STATUS_UPDATING = 1;\n        var STATUS_UPDATED = 2;\n        var STATUS_KEY = '__connectUpdateStatus';\n        function updateConnectedChartsStatus(charts, status) {\n            for (var i = 0; i < charts.length; i++) {\n                var otherChart = charts[i];\n                otherChart[STATUS_KEY] = status;\n            }\n        }\n        zrUtil.each(eventActionMap, function (actionType, eventType) {\n            chart._messageCenter.on(eventType, function (event) {\n                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n                    var action = chart.makeActionFromEvent(event);\n                    var otherCharts = [];\n\n                    zrUtil.each(instances, function (otherChart) {\n                        if (otherChart !== chart && otherChart.group === chart.group) {\n                            otherCharts.push(otherChart);\n                        }\n                    });\n\n                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n                    each(otherCharts, function (otherChart) {\n                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n                            otherChart.dispatchAction(action);\n                        }\n                    });\n                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n                }\n            });\n        });\n\n    }\n    /**\n     * @param {HTMLDomElement} dom\n     * @param {Object} [theme]\n     * @param {Object} opts\n     * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n     * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n     * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n     *                              Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n     *                               Can be 'auto' (the same as null/undefined)\n     */\n    echarts.init = function (dom, theme, opts) {\n        if (__DEV__) {\n            // Check version\n            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {\n                throw new Error(\n                    'ZRender ' + zrender.version\n                    + ' is too old for ECharts ' + echarts.version\n                    + '. Current version need ZRender '\n                    + echarts.dependencies.zrender + '+'\n                );\n            }\n            if (!dom) {\n                throw new Error('Initialize failed: invalid dom.');\n            }\n            if (zrUtil.isDom(dom) && dom.nodeName.toUpperCase() !== 'CANVAS' && (!dom.clientWidth || !dom.clientHeight)) {\n                console.warn('Can\\'t get dom width or height');\n            }\n        }\n\n        var chart = new ECharts(dom, theme, opts);\n        chart.id = 'ec_' + idBase++;\n        instances[chart.id] = chart;\n\n        dom.setAttribute &&\n            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n\n        enableConnect(chart);\n\n        return chart;\n    };\n\n    /**\n     * @return {string|Array.<module:echarts~ECharts>} groupId\n     */\n    echarts.connect = function (groupId) {\n        // Is array of charts\n        if (zrUtil.isArray(groupId)) {\n            var charts = groupId;\n            groupId = null;\n            // If any chart has group\n            zrUtil.each(charts, function (chart) {\n                if (chart.group != null) {\n                    groupId = chart.group;\n                }\n            });\n            groupId = groupId || ('g_' + groupIdBase++);\n            zrUtil.each(charts, function (chart) {\n                chart.group = groupId;\n            });\n        }\n        connectedGroups[groupId] = true;\n        return groupId;\n    };\n\n    /**\n     * @return {string} groupId\n     */\n    echarts.disConnect = function (groupId) {\n        connectedGroups[groupId] = false;\n    };\n\n    /**\n     * Dispose a chart instance\n     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n     */\n    echarts.dispose = function (chart) {\n        if (zrUtil.isDom(chart)) {\n            chart = echarts.getInstanceByDom(chart);\n        }\n        else if (typeof chart === 'string') {\n            chart = instances[chart];\n        }\n        if ((chart instanceof ECharts) && !chart.isDisposed()) {\n            chart.dispose();\n        }\n    };\n\n    /**\n     * @param  {HTMLDomElement} dom\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceByDom = function (dom) {\n        var key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n        return instances[key];\n    };\n    /**\n     * @param {string} key\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceById = function (key) {\n        return instances[key];\n    };\n\n    /**\n     * Register theme\n     */\n    echarts.registerTheme = function (name, theme) {\n        themeStorage[name] = theme;\n    };\n\n    /**\n     * Register option preprocessor\n     * @param {Function} preprocessorFunc\n     */\n    echarts.registerPreprocessor = function (preprocessorFunc) {\n        optionPreprocessorFuncs.push(preprocessorFunc);\n    };\n\n    /**\n     * @param {number} [priority=1000]\n     * @param {Function} processorFunc\n     */\n    echarts.registerProcessor = function (priority, processorFunc) {\n        if (typeof priority === 'function') {\n            processorFunc = priority;\n            priority = PRIORITY_PROCESSOR_FILTER;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown processor priority');\n            }\n        }\n        dataProcessorFuncs.push({\n            prio: priority,\n            func: processorFunc\n        });\n    };\n\n    /**\n     * Usage:\n     * registerAction('someAction', 'someEvent', function () { ... });\n     * registerAction('someAction', function () { ... });\n     * registerAction(\n     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n     *     function () { ... }\n     * );\n     *\n     * @param {(string|Object)} actionInfo\n     * @param {string} actionInfo.type\n     * @param {string} [actionInfo.event]\n     * @param {string} [actionInfo.update]\n     * @param {string} [eventName]\n     * @param {Function} action\n     */\n    echarts.registerAction = function (actionInfo, eventName, action) {\n        if (typeof eventName === 'function') {\n            action = eventName;\n            eventName = '';\n        }\n        var actionType = zrUtil.isObject(actionInfo)\n            ? actionInfo.type\n            : ([actionInfo, actionInfo = {\n                event: eventName\n            }][0]);\n\n        // Event name is all lowercase\n        actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n        eventName = actionInfo.event;\n\n        // Validate action type and event name.\n        zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n        if (!actions[actionType]) {\n            actions[actionType] = {action: action, actionInfo: actionInfo};\n        }\n        eventActionMap[eventName] = actionType;\n    };\n\n    /**\n     * @param {string} type\n     * @param {*} CoordinateSystem\n     */\n    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {\n        CoordinateSystemManager.register(type, CoordinateSystem);\n    };\n\n    /**\n     * Layout is a special stage of visual encoding\n     * Most visual encoding like color are common for different chart\n     * But each chart has it's own layout algorithm\n     *\n     * @param {number} [priority=1000]\n     * @param {Function} layoutFunc\n     */\n    echarts.registerLayout = function (priority, layoutFunc) {\n        if (typeof priority === 'function') {\n            layoutFunc = priority;\n            priority = PRIORITY_VISUAL_LAYOUT;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown layout priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: layoutFunc,\n            isLayout: true\n        });\n    };\n\n    /**\n     * @param {number} [priority=3000]\n     * @param {Function} visualFunc\n     */\n    echarts.registerVisual = function (priority, visualFunc) {\n        if (typeof priority === 'function') {\n            visualFunc = priority;\n            priority = PRIORITY_VISUAL_CHART;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown visual priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: visualFunc\n        });\n    };\n\n    /**\n     * @param {string} name\n     */\n    echarts.registerLoading = function (name, loadingFx) {\n        loadingEffects[name] = loadingFx;\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentModel = function (opts/*, superClass*/) {\n        // var Clazz = ComponentModel;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentView = function (opts/*, superClass*/) {\n        // var Clazz = ComponentView;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentView.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendSeriesModel = function (opts/*, superClass*/) {\n        // var Clazz = SeriesModel;\n        // if (superClass) {\n        //     superClass = 'series.' + superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return SeriesModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendChartView = function (opts/*, superClass*/) {\n        // var Clazz = ChartView;\n        // if (superClass) {\n        //     superClass = superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ChartView.getClass(classType.main, true);\n        // }\n        return ChartView.extend(opts);\n    };\n\n    /**\n     * ZRender need a canvas context to do measureText.\n     * But in node environment canvas may be created by node-canvas.\n     * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n     *\n     * Be careful of using it in the browser.\n     *\n     * @param {Function} creator\n     * @example\n     *     var Canvas = require('canvas');\n     *     var echarts = require('echarts');\n     *     echarts.setCanvasCreator(function () {\n     *         // Small size is enough.\n     *         return new Canvas(32, 32);\n     *     });\n     */\n    echarts.setCanvasCreator = function (creator) {\n        zrUtil.createCanvas = creator;\n    };\n\n    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, __webpack_require__(417));\n    echarts.registerPreprocessor(__webpack_require__(411));\n    echarts.registerLoading('default', __webpack_require__(402));\n\n    // Default action\n    echarts.registerAction({\n        type: 'highlight',\n        event: 'highlight',\n        update: 'highlight'\n    }, zrUtil.noop);\n    echarts.registerAction({\n        type: 'downplay',\n        event: 'downplay',\n        update: 'downplay'\n    }, zrUtil.noop);\n\n\n    // --------\n    // Exports\n    // --------\n    //\n    echarts.List = __webpack_require__(351);\n    echarts.Model = __webpack_require__(327);\n\n    echarts.graphic = __webpack_require__(319);\n    echarts.number = __webpack_require__(320);\n    echarts.format = __webpack_require__(324);\n    echarts.throttle = throttle.throttle;\n    echarts.matrix = __webpack_require__(335);\n    echarts.vector = __webpack_require__(321);\n    echarts.color = __webpack_require__(332);\n\n    echarts.util = {};\n    each([\n            'map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter',\n            'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction',\n            'extend', 'defaults', 'clone'\n        ],\n        function (name) {\n            echarts.util[name] = zrUtil[name];\n        }\n    );\n\n    // PRIORITY\n    echarts.PRIORITY = {\n        PROCESSOR: {\n            FILTER: PRIORITY_PROCESSOR_FILTER,\n            STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n        },\n        VISUAL: {\n            LAYOUT: PRIORITY_VISUAL_LAYOUT,\n            GLOBAL: PRIORITY_VISUAL_GLOBAL,\n            CHART: PRIORITY_VISUAL_CHART,\n            COMPONENT: PRIORITY_VISUAL_COMPONENT,\n            BRUSH: PRIORITY_VISUAL_BRUSH\n        }\n    };\n\n    module.exports = echarts;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(108)))\n\n/***/ }),\n/* 319 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(317);\n\n    var pathTool = __webpack_require__(455);\n    var round = Math.round;\n    var Path = __webpack_require__(322);\n    var colorTool = __webpack_require__(332);\n    var matrix = __webpack_require__(335);\n    var vector = __webpack_require__(321);\n\n    var graphic = {};\n\n    graphic.Group = __webpack_require__(339);\n\n    graphic.Image = __webpack_require__(365);\n\n    graphic.Text = __webpack_require__(438);\n\n    graphic.Circle = __webpack_require__(445);\n\n    graphic.Sector = __webpack_require__(451);\n\n    graphic.Ring = __webpack_require__(450);\n\n    graphic.Polygon = __webpack_require__(447);\n\n    graphic.Polyline = __webpack_require__(448);\n\n    graphic.Rect = __webpack_require__(449);\n\n    graphic.Line = __webpack_require__(446);\n\n    graphic.BezierCurve = __webpack_require__(444);\n\n    graphic.Arc = __webpack_require__(443);\n\n    graphic.CompoundPath = __webpack_require__(436);\n\n    graphic.LinearGradient = __webpack_require__(374);\n\n    graphic.RadialGradient = __webpack_require__(437);\n\n    graphic.BoundingRect = __webpack_require__(326);\n\n    /**\n     * Extend shape with parameters\n     */\n    graphic.extendShape = function (opts) {\n        return Path.extend(opts);\n    };\n\n    /**\n     * Extend path\n     */\n    graphic.extendPath = function (pathData, opts) {\n        return pathTool.extendFromString(pathData, opts);\n    };\n\n    /**\n     * Create a path element from path data string\n     * @param {string} pathData\n     * @param {Object} opts\n     * @param {module:zrender/core/BoundingRect} rect\n     * @param {string} [layout=cover] 'center' or 'cover'\n     */\n    graphic.makePath = function (pathData, opts, rect, layout) {\n        var path = pathTool.createFromString(pathData, opts);\n        var boundingRect = path.getBoundingRect();\n        if (rect) {\n            var aspect = boundingRect.width / boundingRect.height;\n\n            if (layout === 'center') {\n                // Set rect to center, keep width / height ratio.\n                var width = rect.height * aspect;\n                var height;\n                if (width <= rect.width) {\n                    height = rect.height;\n                }\n                else {\n                    width = rect.width;\n                    height = width / aspect;\n                }\n                var cx = rect.x + rect.width / 2;\n                var cy = rect.y + rect.height / 2;\n\n                rect.x = cx - width / 2;\n                rect.y = cy - height / 2;\n                rect.width = width;\n                rect.height = height;\n            }\n\n            graphic.resizePath(path, rect);\n        }\n        return path;\n    };\n\n    graphic.mergePath = pathTool.mergePath,\n\n    /**\n     * Resize a path to fit the rect\n     * @param {module:zrender/graphic/Path} path\n     * @param {Object} rect\n     */\n    graphic.resizePath = function (path, rect) {\n        if (!path.applyTransform) {\n            return;\n        }\n\n        var pathRect = path.getBoundingRect();\n\n        var m = pathRect.calculateTransform(rect);\n\n        path.applyTransform(m);\n    };\n\n    /**\n     * Sub pixel optimize line for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x1]\n     * @param {number} [param.shape.y1]\n     * @param {number} [param.shape.x2]\n     * @param {number} [param.shape.y2]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeLine = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n\n        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n        }\n        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n        }\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize rect for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x]\n     * @param {number} [param.shape.y]\n     * @param {number} [param.shape.width]\n     * @param {number} [param.shape.height]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeRect = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n        var originX = shape.x;\n        var originY = shape.y;\n        var originWidth = shape.width;\n        var originHeight = shape.height;\n        shape.x = subPixelOptimize(shape.x, lineWidth, true);\n        shape.y = subPixelOptimize(shape.y, lineWidth, true);\n        shape.width = Math.max(\n            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\n            originWidth === 0 ? 0 : 1\n        );\n        shape.height = Math.max(\n            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\n            originHeight === 0 ? 0 : 1\n        );\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize for canvas\n     *\n     * @param {number} position Coordinate, such as x, y\n     * @param {number} lineWidth Should be nonnegative integer.\n     * @param {boolean=} positiveOrNegative Default false (negative).\n     * @return {number} Optimized position.\n     */\n    graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\n        // Assure that (position + lineWidth / 2) is near integer edge,\n        // otherwise line will be fuzzy in canvas.\n        var doubledPosition = round(position * 2);\n        return (doubledPosition + round(lineWidth)) % 2 === 0\n            ? doubledPosition / 2\n            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n    };\n\n    function hasFillOrStroke(fillOrStroke) {\n        return fillOrStroke != null && fillOrStroke != 'none';\n    }\n\n    function liftColor(color) {\n        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n    }\n\n    /**\n     * @private\n     */\n    function cacheElementStl(el) {\n        if (el.__hoverStlDirty) {\n            var stroke = el.style.stroke;\n            var fill = el.style.fill;\n\n            // Create hoverStyle on mouseover\n            var hoverStyle = el.__hoverStl;\n            hoverStyle.fill = hoverStyle.fill\n                || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n            hoverStyle.stroke = hoverStyle.stroke\n                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n\n            var normalStyle = {};\n            for (var name in hoverStyle) {\n                if (hoverStyle.hasOwnProperty(name)) {\n                    normalStyle[name] = el.style[name];\n                }\n            }\n\n            el.__normalStl = normalStyle;\n\n            el.__hoverStlDirty = false;\n        }\n    }\n\n    /**\n     * @private\n     */\n    function doSingleEnterHover(el) {\n        if (el.__isHover) {\n            return;\n        }\n\n        cacheElementStl(el);\n\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.addHover(el, el.__hoverStl);\n        }\n        else {\n            el.setStyle(el.__hoverStl);\n            el.z2 += 1;\n        }\n\n        el.__isHover = true;\n    }\n\n    /**\n     * @inner\n     */\n    function doSingleLeaveHover(el) {\n        if (!el.__isHover) {\n            return;\n        }\n\n        var normalStl = el.__normalStl;\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.removeHover(el);\n        }\n        else {\n            normalStl && el.setStyle(normalStl);\n            el.z2 -= 1;\n        }\n\n        el.__isHover = false;\n    }\n\n    /**\n     * @inner\n     */\n    function doEnterHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleEnterHover(child);\n                }\n            })\n            : doSingleEnterHover(el);\n    }\n\n    function doLeaveHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleLeaveHover(child);\n                }\n            })\n            : doSingleLeaveHover(el);\n    }\n\n    /**\n     * @inner\n     */\n    function setElementHoverStl(el, hoverStl) {\n        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n        // Often used when item group has a label element and it's hoverStyle is different\n        el.__hoverStl = el.hoverStyle || hoverStl || {};\n        el.__hoverStlDirty = true;\n\n        if (el.__isHover) {\n            cacheElementStl(el);\n        }\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOver(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOut(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doLeaveHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function enterEmphasis() {\n        this.__isEmphasis = true;\n        doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function leaveEmphasis() {\n        this.__isEmphasis = false;\n        doLeaveHover(this);\n    }\n\n    /**\n     * Set hover style of element\n     * @param {module:zrender/Element} el\n     * @param {Object} [hoverStyle]\n     * @param {Object} [opt]\n     * @param {boolean} [opt.hoverSilentOnTouch=false]\n     *        In touch device, mouseover event will be trigger on touchstart event\n     *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n     *        conviniently use hoverStyle when tap on touch screen without additional\n     *        code for compatibility.\n     *        But if the chart/component has select feature, which usually also use\n     *        hoverStyle, there might be conflict between 'select-highlight' and\n     *        'hover-highlight' especially when roam is enabled (see geo for example).\n     *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n     *        on touch device.\n     */\n    graphic.setHoverStyle = function (el, hoverStyle, opt) {\n        el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    setElementHoverStl(child, hoverStyle);\n                }\n            })\n            : setElementHoverStl(el, hoverStyle);\n\n        // Duplicated function will be auto-ignored, see Eventful.js.\n        el.on('mouseover', onElementMouseOver)\n          .on('mouseout', onElementMouseOut);\n\n        // Emphasis, normal can be triggered manually\n        el.on('emphasis', enterEmphasis)\n          .on('normal', leaveEmphasis);\n    };\n\n    /**\n     * Set text option in the style\n     * @param {Object} textStyle\n     * @param {module:echarts/model/Model} labelModel\n     * @param {string} color\n     */\n    graphic.setText = function (textStyle, labelModel, color) {\n        var labelPosition = labelModel.getShallow('position') || 'inside';\n        var labelOffset = labelModel.getShallow('offset');\n        var labelColor = labelPosition.indexOf('inside') >= 0 ? 'white' : color;\n        var textStyleModel = labelModel.getModel('textStyle');\n        zrUtil.extend(textStyle, {\n            textDistance: labelModel.getShallow('distance') || 5,\n            textFont: textStyleModel.getFont(),\n            textPosition: labelPosition,\n            textOffset: labelOffset,\n            textFill: textStyleModel.getTextColor() || labelColor\n        });\n    };\n\n    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n        if (typeof dataIndex === 'function') {\n            cb = dataIndex;\n            dataIndex = null;\n        }\n        // Do not check 'animation' property directly here. Consider this case:\n        // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n        // but its parent model (`seriesModel`) does.\n        var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n        if (animationEnabled) {\n            var postfix = isUpdate ? 'Update' : '';\n            var duration = animatableModel.getShallow('animationDuration' + postfix);\n            var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n            var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n            if (typeof animationDelay === 'function') {\n                animationDelay = animationDelay(\n                    dataIndex,\n                    animatableModel.getAnimationDelayParams\n                        ? animatableModel.getAnimationDelayParams(el, dataIndex)\n                        : null\n                );\n            }\n            if (typeof duration === 'function') {\n                duration = duration(dataIndex);\n            }\n\n            duration > 0\n                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb)\n                : (el.attr(props), cb && cb());\n        }\n        else {\n            el.attr(props);\n            cb && cb();\n        }\n    }\n\n    /**\n     * Update graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} [cb]\n     * @example\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n     *     // Or\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, function () { console.log('Animation done!'); });\n     */\n    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Init graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} cb\n     */\n    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Get transform matrix of target (param target),\n     * in coordinate of its ancestor (param ancestor)\n     *\n     * @param {module:zrender/mixin/Transformable} target\n     * @param {module:zrender/mixin/Transformable} [ancestor]\n     */\n    graphic.getTransform = function (target, ancestor) {\n        var mat = matrix.identity([]);\n\n        while (target && target !== ancestor) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }\n\n        return mat;\n    };\n\n    /**\n     * Apply transform to an vertex.\n     * @param {Array.<number>} vertex [x, y]\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {Array.<number>} [x, y]\n     */\n    graphic.applyTransform = function (vertex, transform, invert) {\n        if (invert) {\n            transform = matrix.invert([], transform);\n        }\n        return vector.applyTransform([], vertex, transform);\n    };\n\n    /**\n     * @param {string} direction 'left' 'right' 'top' 'bottom'\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n     */\n    graphic.transformDirection = function (direction, transform, invert) {\n\n        // Pick a base, ensure that transform result will not be (0, 0).\n        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[0]);\n        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[2]);\n\n        var vertex = [\n            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\n            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\n        ];\n\n        vertex = graphic.applyTransform(vertex, transform, invert);\n\n        return Math.abs(vertex[0]) > Math.abs(vertex[1])\n            ? (vertex[0] > 0 ? 'right' : 'left')\n            : (vertex[1] > 0 ? 'bottom' : 'top');\n    };\n\n    /**\n     * Apply group transition animation from g1 to g2\n     */\n    graphic.groupTransition = function (g1, g2, animatableModel, cb) {\n        if (!g1 || !g2) {\n            return;\n        }\n\n        function getElMap(g) {\n            var elMap = {};\n            g.traverse(function (el) {\n                if (!el.isGroup && el.anid) {\n                    elMap[el.anid] = el;\n                }\n            });\n            return elMap;\n        }\n        function getAnimatableProps(el) {\n            var obj = {\n                position: vector.clone(el.position),\n                rotation: el.rotation\n            };\n            if (el.shape) {\n                obj.shape = zrUtil.extend({}, el.shape);\n            }\n            return obj;\n        }\n        var elMap1 = getElMap(g1);\n\n        g2.traverse(function (el) {\n            if (!el.isGroup && el.anid) {\n                var oldEl = elMap1[el.anid];\n                if (oldEl) {\n                    var newProp = getAnimatableProps(el);\n                    el.attr(getAnimatableProps(oldEl));\n                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);\n                }\n                // else {\n                //     if (el.previousProps) {\n                //         graphic.updateProps\n                //     }\n                // }\n            }\n        });\n    };\n\n    module.exports = graphic;\n\n\n\n/***/ }),\n/* 320 */\n/***/ (function(module, exports) {\n\n/**\n * 数值处理模块\n * @module echarts/util/number\n */\n\n\n\n    var number = {};\n\n    var RADIAN_EPSILON = 1e-4;\n\n    function _trim(str) {\n        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n\n    /**\n     * Linear mapping a value from domain to range\n     * @memberOf module:echarts/util/number\n     * @param  {(number|Array.<number>)} val\n     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n     * @param  {boolean} clamp\n     * @return {(number|Array.<number>}\n     */\n    number.linearMap = function (val, domain, range, clamp) {\n        var subDomain = domain[1] - domain[0];\n        var subRange = range[1] - range[0];\n\n        if (subDomain === 0) {\n            return subRange === 0\n                ? range[0]\n                : (range[0] + range[1]) / 2;\n        }\n\n        // Avoid accuracy problem in edge, such as\n        // 146.39 - 62.83 === 83.55999999999999.\n        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n        // It is a little verbose for efficiency considering this method\n        // is a hotspot.\n        if (clamp) {\n            if (subDomain > 0) {\n                if (val <= domain[0]) {\n                    return range[0];\n                }\n                else if (val >= domain[1]) {\n                    return range[1];\n                }\n            }\n            else {\n                if (val >= domain[0]) {\n                    return range[0];\n                }\n                else if (val <= domain[1]) {\n                    return range[1];\n                }\n            }\n        }\n        else {\n            if (val === domain[0]) {\n                return range[0];\n            }\n            if (val === domain[1]) {\n                return range[1];\n            }\n        }\n\n        return (val - domain[0]) / subDomain * subRange + range[0];\n    };\n\n    /**\n     * Convert a percent string to absolute number.\n     * Returns NaN if percent is not a valid string or number\n     * @memberOf module:echarts/util/number\n     * @param {string|number} percent\n     * @param {number} all\n     * @return {number}\n     */\n    number.parsePercent = function(percent, all) {\n        switch (percent) {\n            case 'center':\n            case 'middle':\n                percent = '50%';\n                break;\n            case 'left':\n            case 'top':\n                percent = '0%';\n                break;\n            case 'right':\n            case 'bottom':\n                percent = '100%';\n                break;\n        }\n        if (typeof percent === 'string') {\n            if (_trim(percent).match(/%$/)) {\n                return parseFloat(percent) / 100 * all;\n            }\n\n            return parseFloat(percent);\n        }\n\n        return percent == null ? NaN : +percent;\n    };\n\n    /**\n     * Fix rounding error of float numbers\n     * @param {number} x\n     * @return {number}\n     */\n    number.round = function (x, precision) {\n        if (precision == null) {\n            precision = 10;\n        }\n        // Avoid range error\n        precision = Math.min(Math.max(0, precision), 20);\n        return +(+x).toFixed(precision);\n    };\n\n    number.asc = function (arr) {\n        arr.sort(function (a, b) {\n            return a - b;\n        });\n        return arr;\n    };\n\n    /**\n     * Get precision\n     * @param {number} val\n     */\n    number.getPrecision = function (val) {\n        val = +val;\n        if (isNaN(val)) {\n            return 0;\n        }\n        // It is much faster than methods converting number to string as follows\n        //      var tmp = val.toString();\n        //      return tmp.length - 1 - tmp.indexOf('.');\n        // especially when precision is low\n        var e = 1;\n        var count = 0;\n        while (Math.round(val * e) / e !== val) {\n            e *= 10;\n            count++;\n        }\n        return count;\n    };\n\n    number.getPrecisionSafe = function (val) {\n        var str = val.toString();\n        var dotIndex = str.indexOf('.');\n        if (dotIndex < 0) {\n            return 0;\n        }\n        return str.length - 1 - dotIndex;\n    };\n\n    /**\n     * Minimal dicernible data precisioin according to a single pixel.\n     * @param {Array.<number>} dataExtent\n     * @param {Array.<number>} pixelExtent\n     * @return {number} precision\n     */\n    number.getPixelPrecision = function (dataExtent, pixelExtent) {\n        var log = Math.log;\n        var LN10 = Math.LN10;\n        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\n        // toFixed() digits argument must be between 0 and 20.\n        var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n        return !isFinite(precision) ? 20 : precision;\n    };\n\n    // Number.MAX_SAFE_INTEGER, ie do not support.\n    number.MAX_SAFE_INTEGER = 9007199254740991;\n\n    /**\n     * To 0 - 2 * PI, considering negative radian.\n     * @param {number} radian\n     * @return {number}\n     */\n    number.remRadian = function (radian) {\n        var pi2 = Math.PI * 2;\n        return (radian % pi2 + pi2) % pi2;\n    };\n\n    /**\n     * @param {type} radian\n     * @return {boolean}\n     */\n    number.isRadianAroundZero = function (val) {\n        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n    };\n\n    /**\n     * @param {string|Date|number} value\n     * @return {Date} date\n     */\n    number.parseDate = function (value) {\n        if (value instanceof Date) {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            // Treat as ISO format. See issue #3623\n            var ret = new Date(value);\n            if (isNaN(+ret)) {\n                // FIXME new Date('1970-01-01') is UTC, new Date('1970/01/01') is local\n                ret = new Date(new Date(value.replace(/-/g, '/')) - new Date('1970/01/01'));\n            }\n            return ret;\n        }\n\n        return new Date(Math.round(value));\n    };\n\n    /**\n     * Quantity of a number. e.g. 0.1, 1, 10, 100\n     * @param  {number} val\n     * @return {number}\n     */\n    number.quantity = function (val) {\n        return Math.pow(10, Math.floor(Math.log(val) / Math.LN10));\n    };\n\n    // \"Nice Numbers for Graph Labels\" of Graphic Gems\n    /**\n     * find a “nice” number approximately equal to x. Round the number if round = true, take ceiling if round = false\n     * The primary observation is that the “nicest” numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n     * @param  {number} val\n     * @param  {boolean} round\n     * @return {number}\n     */\n    number.nice = function (val, round) {\n        var exp10 = number.quantity(val);\n        var f = val / exp10; // between 1 and 10\n        var nf;\n        if (round) {\n            if (f < 1.5) { nf = 1; }\n            else if (f < 2.5) { nf = 2; }\n            else if (f < 4) { nf = 3; }\n            else if (f < 7) { nf = 5; }\n            else { nf = 10; }\n        }\n        else {\n            if (f < 1) { nf = 1; }\n            else if (f < 2) { nf = 2; }\n            else if (f < 3) { nf = 3; }\n            else if (f < 5) { nf = 5; }\n            else { nf = 10; }\n        }\n        return nf * exp10;\n    };\n\n    /**\n     * Order intervals asc, and split them when overlap.\n     * expect(numberUtil.reformIntervals([\n     *     {interval: [18, 62], close: [1, 1]},\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [1, 1]},\n     *     {interval: [62, 150], close: [1, 1]},\n     *     {interval: [106, 150], close: [1, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ])).toEqual([\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [0, 1]},\n     *     {interval: [18, 62], close: [0, 1]},\n     *     {interval: [62, 150], close: [0, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ]);\n     * @param {Array.<Object>} list, where `close` mean open or close\n     *        of the interval, and Infinity can be used.\n     * @return {Array.<Object>} The origin list, which has been reformed.\n     */\n    number.reformIntervals = function (list) {\n        list.sort(function (a, b) {\n            return littleThan(a, b, 0) ? -1 : 1;\n        });\n\n        var curr = -Infinity;\n        var currClose = 1;\n        for (var i = 0; i < list.length;) {\n            var interval = list[i].interval;\n            var close = list[i].close;\n\n            for (var lg = 0; lg < 2; lg++) {\n                if (interval[lg] <= curr) {\n                    interval[lg] = curr;\n                    close[lg] = !lg ? 1 - currClose : 1;\n                }\n                curr = interval[lg];\n                currClose = close[lg];\n            }\n\n            if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n                list.splice(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n\n        return list;\n\n        function littleThan(a, b, lg) {\n            return a.interval[lg] < b.interval[lg]\n                || (\n                    a.interval[lg] === b.interval[lg]\n                    && (\n                        (a.close[lg] - b.close[lg] === (!lg ? 1 : -1))\n                        || (!lg && littleThan(a, b, 1))\n                    )\n                );\n        }\n    };\n\n    /**\n     * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n     * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n     * subtraction forces infinities to NaN\n     * @param {*} v\n     * @return {boolean}\n     */\n    number.isNumeric = function (v) {\n        return v - parseFloat(v) >= 0;\n    };\n\n    module.exports = number;\n\n\n/***/ }),\n/* 321 */\n/***/ (function(module, exports) {\n\n\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n\n    /**\n     * @typedef {Float32Array|Array.<number>} Vector2\n     */\n    /**\n     * 二维向量类\n     * @exports zrender/tool/vector\n     */\n    var vector = {\n        /**\n         * 创建一个向量\n         * @param {number} [x=0]\n         * @param {number} [y=0]\n         * @return {Vector2}\n         */\n        create: function (x, y) {\n            var out = new ArrayCtor(2);\n            if (x == null) {\n                x = 0;\n            }\n            if (y == null) {\n                y = 0;\n            }\n            out[0] = x;\n            out[1] = y;\n            return out;\n        },\n\n        /**\n         * 复制向量数据\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        copy: function (out, v) {\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 克隆一个向量\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        clone: function (v) {\n            var out = new ArrayCtor(2);\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 设置向量的两个项\n         * @param {Vector2} out\n         * @param {number} a\n         * @param {number} b\n         * @return {Vector2} 结果\n         */\n        set: function (out, a, b) {\n            out[0] = a;\n            out[1] = b;\n            return out;\n        },\n\n        /**\n         * 向量相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        add: function (out, v1, v2) {\n            out[0] = v1[0] + v2[0];\n            out[1] = v1[1] + v2[1];\n            return out;\n        },\n\n        /**\n         * 向量缩放后相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} a\n         */\n        scaleAndAdd: function (out, v1, v2, a) {\n            out[0] = v1[0] + v2[0] * a;\n            out[1] = v1[1] + v2[1] * a;\n            return out;\n        },\n\n        /**\n         * 向量相减\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        sub: function (out, v1, v2) {\n            out[0] = v1[0] - v2[0];\n            out[1] = v1[1] - v2[1];\n            return out;\n        },\n\n        /**\n         * 向量长度\n         * @param {Vector2} v\n         * @return {number}\n         */\n        len: function (v) {\n            return Math.sqrt(this.lenSquare(v));\n        },\n\n        /**\n         * 向量长度平方\n         * @param {Vector2} v\n         * @return {number}\n         */\n        lenSquare: function (v) {\n            return v[0] * v[0] + v[1] * v[1];\n        },\n\n        /**\n         * 向量乘法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        mul: function (out, v1, v2) {\n            out[0] = v1[0] * v2[0];\n            out[1] = v1[1] * v2[1];\n            return out;\n        },\n\n        /**\n         * 向量除法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        div: function (out, v1, v2) {\n            out[0] = v1[0] / v2[0];\n            out[1] = v1[1] / v2[1];\n            return out;\n        },\n\n        /**\n         * 向量点乘\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        dot: function (v1, v2) {\n            return v1[0] * v2[0] + v1[1] * v2[1];\n        },\n\n        /**\n         * 向量缩放\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {number} s\n         */\n        scale: function (out, v, s) {\n            out[0] = v[0] * s;\n            out[1] = v[1] * s;\n            return out;\n        },\n\n        /**\n         * 向量归一化\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        normalize: function (out, v) {\n            var d = vector.len(v);\n            if (d === 0) {\n                out[0] = 0;\n                out[1] = 0;\n            }\n            else {\n                out[0] = v[0] / d;\n                out[1] = v[1] / d;\n            }\n            return out;\n        },\n\n        /**\n         * 计算向量间距离\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distance: function (v1, v2) {\n            return Math.sqrt(\n                (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1])\n            );\n        },\n\n        /**\n         * 向量距离平方\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distanceSquare: function (v1, v2) {\n            return (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n        },\n\n        /**\n         * 求负向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        negate: function (out, v) {\n            out[0] = -v[0];\n            out[1] = -v[1];\n            return out;\n        },\n\n        /**\n         * 插值两个点\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} t\n         */\n        lerp: function (out, v1, v2, t) {\n            out[0] = v1[0] + t * (v2[0] - v1[0]);\n            out[1] = v1[1] + t * (v2[1] - v1[1]);\n            return out;\n        },\n\n        /**\n         * 矩阵左乘向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {Vector2} m\n         */\n        applyTransform: function (out, v, m) {\n            var x = v[0];\n            var y = v[1];\n            out[0] = m[0] * x + m[2] * y + m[4];\n            out[1] = m[1] * x + m[3] * y + m[5];\n            return out;\n        },\n        /**\n         * 求两个向量最小值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        min: function (out, v1, v2) {\n            out[0] = Math.min(v1[0], v2[0]);\n            out[1] = Math.min(v1[1], v2[1]);\n            return out;\n        },\n        /**\n         * 求两个向量最大值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        max: function (out, v1, v2) {\n            out[0] = Math.max(v1[0], v2[0]);\n            out[1] = Math.max(v1[1], v2[1]);\n            return out;\n        }\n    };\n\n    vector.length = vector.len;\n    vector.lengthSquare = vector.lenSquare;\n    vector.dist = vector.distance;\n    vector.distSquare = vector.distanceSquare;\n\n    module.exports = vector;\n\n\n\n/***/ }),\n/* 322 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Path element\n * @module zrender/graphic/Path\n */\n\n\n\n    var Displayable = __webpack_require__(347);\n    var zrUtil = __webpack_require__(317);\n    var PathProxy = __webpack_require__(340);\n    var pathContain = __webpack_require__(429);\n\n    var Pattern = __webpack_require__(366);\n    var getCanvasPattern = Pattern.prototype.getCanvasPattern;\n\n    var abs = Math.abs;\n\n    /**\n     * @alias module:zrender/graphic/Path\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function Path(opts) {\n        Displayable.call(this, opts);\n\n        /**\n         * @type {module:zrender/core/PathProxy}\n         * @readOnly\n         */\n        this.path = new PathProxy();\n    }\n\n    Path.prototype = {\n\n        constructor: Path,\n\n        type: 'path',\n\n        __dirtyPath: true,\n\n        strokeContainThreshold: 5,\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var path = this.path;\n            var hasStroke = style.hasStroke();\n            var hasFill = style.hasFill();\n            var fill = style.fill;\n            var stroke = style.stroke;\n            var hasFillGradient = hasFill && !!(fill.colorStops);\n            var hasStrokeGradient = hasStroke && !!(stroke.colorStops);\n            var hasFillPattern = hasFill && !!(fill.image);\n            var hasStrokePattern = hasStroke && !!(stroke.image);\n\n            style.bind(ctx, this, prevEl);\n            this.setTransform(ctx);\n\n            if (this.__dirty) {\n                var rect = this.getBoundingRect();\n                // Update gradient because bounding rect may changed\n                if (hasFillGradient) {\n                    this._fillGradient = style.getGradient(ctx, fill, rect);\n                }\n                if (hasStrokeGradient) {\n                    this._strokeGradient = style.getGradient(ctx, stroke, rect);\n                }\n            }\n            // Use the gradient or pattern\n            if (hasFillGradient) {\n                // PENDING If may have affect the state\n                ctx.fillStyle = this._fillGradient;\n            }\n            else if (hasFillPattern) {\n                ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n            }\n            if (hasStrokeGradient) {\n                ctx.strokeStyle = this._strokeGradient;\n            }\n            else if (hasStrokePattern) {\n                ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n            }\n\n            var lineDash = style.lineDash;\n            var lineDashOffset = style.lineDashOffset;\n\n            var ctxLineDash = !!ctx.setLineDash;\n\n            // Update path sx, sy\n            var scale = this.getGlobalScale();\n            path.setScale(scale[0], scale[1]);\n\n            // Proxy context\n            // Rebuild path in following 2 cases\n            // 1. Path is dirty\n            // 2. Path needs javascript implemented lineDash stroking.\n            //    In this case, lineDash information will not be saved in PathProxy\n            if (this.__dirtyPath || (\n                lineDash && !ctxLineDash && hasStroke\n            )) {\n                path = this.path.beginPath(ctx);\n\n                // Setting line dash before build path\n                if (lineDash && !ctxLineDash) {\n                    path.setLineDash(lineDash);\n                    path.setLineDashOffset(lineDashOffset);\n                }\n\n                this.buildPath(path, this.shape, false);\n\n                // Clear path dirty flag\n                this.__dirtyPath = false;\n            }\n            else {\n                // Replay path building\n                ctx.beginPath();\n                this.path.rebuildPath(ctx);\n            }\n\n            hasFill && path.fill(ctx);\n\n            if (lineDash && ctxLineDash) {\n                ctx.setLineDash(lineDash);\n                ctx.lineDashOffset = lineDashOffset;\n            }\n\n            hasStroke && path.stroke(ctx);\n\n            if (lineDash && ctxLineDash) {\n                // PENDING\n                // Remove lineDash\n                ctx.setLineDash([]);\n            }\n\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                // var rect = this.getBoundingRect();\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n        // Like in circle\n        buildPath: function (ctx, shapeCfg, inBundle) {},\n\n        getBoundingRect: function () {\n            var rect = this._rect;\n            var style = this.style;\n            var needsUpdateRect = !rect;\n            if (needsUpdateRect) {\n                var path = this.path;\n                if (this.__dirtyPath) {\n                    path.beginPath();\n                    this.buildPath(path, this.shape, false);\n                }\n                rect = path.getBoundingRect();\n            }\n            this._rect = rect;\n\n            if (style.hasStroke()) {\n                // Needs update rect with stroke lineWidth when\n                // 1. Element changes scale or lineWidth\n                // 2. Shape is changed\n                var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n                if (this.__dirty || needsUpdateRect) {\n                    rectWithStroke.copy(rect);\n                    // FIXME Must after updateTransform\n                    var w = style.lineWidth;\n                    // PENDING, Min line width is needed when line is horizontal or vertical\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n\n                    // Only add extra hover lineWidth when there are no fill\n                    if (!style.hasFill()) {\n                        w = Math.max(w, this.strokeContainThreshold || 4);\n                    }\n                    // Consider line width\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        rectWithStroke.width += w / lineScale;\n                        rectWithStroke.height += w / lineScale;\n                        rectWithStroke.x -= w / lineScale / 2;\n                        rectWithStroke.y -= w / lineScale / 2;\n                    }\n                }\n\n                // Return rect with stroke\n                return rectWithStroke;\n            }\n\n            return rect;\n        },\n\n        contain: function (x, y) {\n            var localPos = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            var style = this.style;\n            x = localPos[0];\n            y = localPos[1];\n\n            if (rect.contain(x, y)) {\n                var pathData = this.path.data;\n                if (style.hasStroke()) {\n                    var lineWidth = style.lineWidth;\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        // Only add extra hover lineWidth when there are no fill\n                        if (!style.hasFill()) {\n                            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n                        }\n                        if (pathContain.containStroke(\n                            pathData, lineWidth / lineScale, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                }\n                if (style.hasFill()) {\n                    return pathContain.contain(pathData, x, y);\n                }\n            }\n            return false;\n        },\n\n        /**\n         * @param  {boolean} dirtyPath\n         */\n        dirty: function (dirtyPath) {\n            if (dirtyPath == null) {\n                dirtyPath = true;\n            }\n            // Only mark dirty, not mark clean\n            if (dirtyPath) {\n                this.__dirtyPath = dirtyPath;\n                this._rect = null;\n            }\n\n            this.__dirty = true;\n\n            this.__zr && this.__zr.refresh();\n\n            // Used as a clipping path\n            if (this.__clipTarget) {\n                this.__clipTarget.dirty();\n            }\n        },\n\n        /**\n         * Alias for animate('shape')\n         * @param {boolean} loop\n         */\n        animateShape: function (loop) {\n            return this.animate('shape', loop);\n        },\n\n        // Overwrite attrKV\n        attrKV: function (key, value) {\n            // FIXME\n            if (key === 'shape') {\n                this.setShape(value);\n                this.__dirtyPath = true;\n                this._rect = null;\n            }\n            else {\n                Displayable.prototype.attrKV.call(this, key, value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setShape: function (key, value) {\n            var shape = this.shape;\n            // Path from string may not have shape\n            if (shape) {\n                if (zrUtil.isObject(key)) {\n                    for (var name in key) {\n                        if (key.hasOwnProperty(name)) {\n                            shape[name] = key[name];\n                        }\n                    }\n                }\n                else {\n                    shape[key] = value;\n                }\n                this.dirty(true);\n            }\n            return this;\n        },\n\n        getLineScale: function () {\n            var m = this.transform;\n            // Get the line scale.\n            // Determinant of `m` means how much the area is enlarged by the\n            // transformation. So its square root can be used as a scale factor\n            // for width.\n            return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10\n                ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))\n                : 1;\n        }\n    };\n\n    /**\n     * 扩展一个 Path element, 比如星形，圆等。\n     * Extend a path element\n     * @param {Object} props\n     * @param {string} props.type Path type\n     * @param {Function} props.init Initialize\n     * @param {Function} props.buildPath Overwrite buildPath method\n     * @param {Object} [props.style] Extended default style config\n     * @param {Object} [props.shape] Extended default shape config\n     */\n    Path.extend = function (defaults) {\n        var Sub = function (opts) {\n            Path.call(this, opts);\n\n            if (defaults.style) {\n                // Extend default style\n                this.style.extendFrom(defaults.style, false);\n            }\n\n            // Extend default shape\n            var defaultShape = defaults.shape;\n            if (defaultShape) {\n                this.shape = this.shape || {};\n                var thisShape = this.shape;\n                for (var name in defaultShape) {\n                    if (\n                        ! thisShape.hasOwnProperty(name)\n                        && defaultShape.hasOwnProperty(name)\n                    ) {\n                        thisShape[name] = defaultShape[name];\n                    }\n                }\n            }\n\n            defaults.init && defaults.init.call(this, opts);\n        };\n\n        zrUtil.inherits(Sub, Path);\n\n        // FIXME 不能 extend position, rotation 等引用对象\n        for (var name in defaults) {\n            // Extending prototype values and methods\n            if (name !== 'style' && name !== 'shape') {\n                Sub.prototype[name] = defaults[name];\n            }\n        }\n\n        return Sub;\n    };\n\n    zrUtil.inherits(Path, Displayable);\n\n    module.exports = Path;\n\n\n/***/ }),\n/* 323 */\n/***/ (function(module, exports) {\n\n/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\n\n    var env = {};\n    if (typeof navigator === 'undefined') {\n        // In node\n        env = {\n            browser: {},\n            os: {},\n            node: true,\n            // Assume canvas is supported\n            canvasSupported: true\n        };\n    }\n    else {\n        env = detect(navigator.userAgent);\n    }\n\n    module.exports = env;\n\n    // Zepto.js\n    // (c) 2010-2013 Thomas Fuchs\n    // Zepto.js may be freely distributed under the MIT license.\n\n    function detect(ua) {\n        var os = {};\n        var browser = {};\n        // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n        // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n        // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n        // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n        // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n        // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n        // var touchpad = webos && ua.match(/TouchPad/);\n        // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n        // var silk = ua.match(/Silk\\/([\\d._]+)/);\n        // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n        // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n        // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n        // var playbook = ua.match(/PlayBook/);\n        // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n        var firefox = ua.match(/Firefox\\/([\\d.]+)/);\n        // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n        // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n        var ie = ua.match(/MSIE\\s([\\d.]+)/)\n            // IE 11 Trident/7.0; rv:11.0\n            || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n        var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n        var weChat = (/micromessenger/i).test(ua);\n\n        // Todo: clean this up with a better OS/browser seperation:\n        // - discern (more) between multiple browsers on android\n        // - decide if kindle fire in silk mode is android or not\n        // - Firefox on Android doesn't specify the Android version\n        // - possibly devide in os, device and browser hashes\n\n        // if (browser.webkit = !!webkit) browser.version = webkit[1];\n\n        // if (android) os.android = true, os.version = android[2];\n        // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n        // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n        // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n        // if (webos) os.webos = true, os.version = webos[2];\n        // if (touchpad) os.touchpad = true;\n        // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n        // if (bb10) os.bb10 = true, os.version = bb10[2];\n        // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n        // if (playbook) browser.playbook = true;\n        // if (kindle) os.kindle = true, os.version = kindle[1];\n        // if (silk) browser.silk = true, browser.version = silk[1];\n        // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n        // if (chrome) browser.chrome = true, browser.version = chrome[1];\n        if (firefox) {\n            browser.firefox = true;\n            browser.version = firefox[1];\n        }\n        // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n        // if (webview) browser.webview = true;\n\n        if (ie) {\n            browser.ie = true;\n            browser.version = ie[1];\n        }\n\n        if (edge) {\n            browser.edge = true;\n            browser.version = edge[1];\n        }\n\n        // It is difficult to detect WeChat in Win Phone precisely, because ua can\n        // not be set on win phone. So we do not consider Win Phone.\n        if (weChat) {\n            browser.weChat = true;\n        }\n\n        // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n        //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n        // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n        //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n        //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n        return {\n            browser: browser,\n            os: os,\n            node: false,\n            // 原生canvas支持，改极端点了\n            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n            canvasSupported : document.createElement('canvas').getContext ? true : false,\n            // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n            // works on most browsers\n            // IE10/11 does not support touch event, and MS Edge supports them but not by\n            // default, so we dont check navigator.maxTouchPoints for them here.\n            touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n            // <http://caniuse.com/#search=pointer%20event>.\n            pointerEventsSupported: 'onpointerdown' in window\n                // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n                // events currently. So we dont use that on other browsers unless tested sufficiently.\n                // Although IE 10 supports pointer event, it use old style and is different from the\n                // standard. So we exclude that. (IE 10 is hardly used on touch device)\n                && (browser.edge || (browser.ie && browser.version >= 11))\n        };\n    }\n\n\n/***/ }),\n/* 324 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(317);\n    var numberUtil = __webpack_require__(320);\n    var textContain = __webpack_require__(334);\n\n    var formatUtil = {};\n    /**\n     * 每三位默认加,格式化\n     * @type {string|number} x\n     */\n    formatUtil.addCommas = function (x) {\n        if (isNaN(x)) {\n            return '-';\n        }\n        x = (x + '').split('.');\n        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,')\n               + (x.length > 1 ? ('.' + x[1]) : '');\n    };\n\n    /**\n     * @param {string} str\n     * @param {boolean} [upperCaseFirst=false]\n     * @return {string} str\n     */\n    formatUtil.toCamelCase = function (str, upperCaseFirst) {\n        str = (str || '').toLowerCase().replace(/-(.)/g, function(match, group1) {\n            return group1.toUpperCase();\n        });\n\n        if (upperCaseFirst && str) {\n            str = str.charAt(0).toUpperCase() + str.slice(1);\n        }\n\n        return str;\n    };\n\n    /**\n     * Normalize css liked array configuration\n     * e.g.\n     *  3 => [3, 3, 3, 3]\n     *  [4, 2] => [4, 2, 4, 2]\n     *  [4, 3, 2] => [4, 3, 2, 3]\n     * @param {number|Array.<number>} val\n     */\n    formatUtil.normalizeCssArray = function (val) {\n        var len = val.length;\n        if (typeof (val) === 'number') {\n            return [val, val, val, val];\n        }\n        else if (len === 2) {\n            // vertical | horizontal\n            return [val[0], val[1], val[0], val[1]];\n        }\n        else if (len === 3) {\n            // top | horizontal | bottom\n            return [val[0], val[1], val[2], val[1]];\n        }\n        return val;\n    };\n\n    var encodeHTML = formatUtil.encodeHTML = function (source) {\n        return String(source)\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;');\n    };\n\n    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\n    var wrapVar = function (varName, seriesIdx) {\n        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n    };\n\n    /**\n     * Template formatter\n     * @param {string} tpl\n     * @param {Array.<Object>|Object} paramsList\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTpl = function (tpl, paramsList, encode) {\n        if (!zrUtil.isArray(paramsList)) {\n            paramsList = [paramsList];\n        }\n        var seriesLen = paramsList.length;\n        if (!seriesLen) {\n            return '';\n        }\n\n        var $vars = paramsList[0].$vars || [];\n        for (var i = 0; i < $vars.length; i++) {\n            var alias = TPL_VAR_ALIAS[i];\n            var val = wrapVar(alias, 0);\n            tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n        }\n        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n            for (var k = 0; k < $vars.length; k++) {\n                var val = paramsList[seriesIdx][$vars[k]];\n                tpl = tpl.replace(\n                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),\n                    encode ? encodeHTML(val) : val\n                );\n            }\n        }\n\n        return tpl;\n    };\n\n\n    /**\n     * @param {string} str\n     * @return {string}\n     * @inner\n     */\n    var s2d = function (str) {\n        return str < 10 ? ('0' + str) : str;\n    };\n\n    /**\n     * ISO Date format\n     * @param {string} tpl\n     * @param {number} value\n     * @inner\n     */\n    formatUtil.formatTime = function (tpl, value) {\n        if (tpl === 'week'\n            || tpl === 'month'\n            || tpl === 'quarter'\n            || tpl === 'half-year'\n            || tpl === 'year'\n        ) {\n            tpl = 'MM-dd\\nyyyy';\n        }\n\n        var date = numberUtil.parseDate(value);\n        var y = date.getFullYear();\n        var M = date.getMonth() + 1;\n        var d = date.getDate();\n        var h = date.getHours();\n        var m = date.getMinutes();\n        var s = date.getSeconds();\n\n        tpl = tpl.replace('MM', s2d(M))\n            .toLowerCase()\n            .replace('yyyy', y)\n            .replace('yy', y % 100)\n            .replace('dd', s2d(d))\n            .replace('d', d)\n            .replace('hh', s2d(h))\n            .replace('h', h)\n            .replace('mm', s2d(m))\n            .replace('m', m)\n            .replace('ss', s2d(s))\n            .replace('s', s);\n\n        return tpl;\n    };\n\n    /**\n     * Capital first\n     * @param {string} str\n     * @return {string}\n     */\n    formatUtil.capitalFirst = function (str) {\n        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n    };\n\n    formatUtil.truncateText = textContain.truncateText;\n\n    module.exports = formatUtil;\n\n\n/***/ }),\n/* 325 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var formatUtil = __webpack_require__(324);\n    var nubmerUtil = __webpack_require__(320);\n    var Model = __webpack_require__(327);\n    var zrUtil = __webpack_require__(317);\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var modelUtil = {};\n\n    /**\n     * If value is not array, then translate it to array.\n     * @param  {*} value\n     * @return {Array} [value] or value\n     */\n    modelUtil.normalizeToArray = function (value) {\n        return value instanceof Array\n            ? value\n            : value == null\n            ? []\n            : [value];\n    };\n\n    /**\n     * Sync default option between normal and emphasis like `position` and `show`\n     * In case some one will write code like\n     *     label: {\n     *         normal: {\n     *             show: false,\n     *             position: 'outside',\n     *             textStyle: {\n     *                 fontSize: 18\n     *             }\n     *         },\n     *         emphasis: {\n     *             show: true\n     *         }\n     *     }\n     * @param {Object} opt\n     * @param {Array.<string>} subOpts\n     */\n     modelUtil.defaultEmphasis = function (opt, subOpts) {\n        if (opt) {\n            var emphasisOpt = opt.emphasis = opt.emphasis || {};\n            var normalOpt = opt.normal = opt.normal || {};\n\n            // Default emphasis option from normal\n            each(subOpts, function (subOptName) {\n                var val = zrUtil.retrieve(emphasisOpt[subOptName], normalOpt[subOptName]);\n                if (val != null) {\n                    emphasisOpt[subOptName] = val;\n                }\n            });\n        }\n    };\n\n    modelUtil.LABEL_OPTIONS = ['position', 'offset', 'show', 'textStyle', 'distance', 'formatter'];\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method retieves value from data.\n     * @param {string|number|Date|Array|Object} dataItem\n     * @return {number|string|Date|Array.<number|string|Date>}\n     */\n    modelUtil.getDataItemValue = function (dataItem) {\n        // Performance sensitive.\n        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n    };\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method determine if dataItem has extra option besides value\n     * @param {string|number|Date|Array|Object} dataItem\n     */\n    modelUtil.isDataItemOption = function (dataItem) {\n        return isObject(dataItem)\n            && !(dataItem instanceof Array);\n            // // markLine data can be array\n            // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n    };\n\n    /**\n     * This helper method convert value in data.\n     * @param {string|number|Date} value\n     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n     */\n    modelUtil.converDataValue = function (value, dimInfo) {\n        // Performance sensitive.\n        var dimType = dimInfo && dimInfo.type;\n        if (dimType === 'ordinal') {\n            return value;\n        }\n\n        if (dimType === 'time' && !isFinite(value) && value != null && value !== '-') {\n            value = +nubmerUtil.parseDate(value);\n        }\n\n        // dimType defaults 'number'.\n        // If dimType is not ordinal and value is null or undefined or NaN or '-',\n        // parse to NaN.\n        return (value == null || value === '')\n            ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n    };\n\n    /**\n     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n     * @param {module:echarts/data/List} data\n     * @param {Object} opt\n     * @param {string} [opt.seriesIndex]\n     * @param {Object} [opt.name]\n     * @param {Object} [opt.mainType]\n     * @param {Object} [opt.subType]\n     */\n    modelUtil.createDataFormatModel = function (data, opt) {\n        var model = new Model();\n        zrUtil.mixin(model, modelUtil.dataFormatMixin);\n        model.seriesIndex = opt.seriesIndex;\n        model.name = opt.name || '';\n        model.mainType = opt.mainType;\n        model.subType = opt.subType;\n\n        model.getData = function () {\n            return data;\n        };\n        return model;\n    };\n\n    // PENDING A little ugly\n    modelUtil.dataFormatMixin = {\n        /**\n         * Get params for formatter\n         * @param {number} dataIndex\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getDataParams: function (dataIndex, dataType) {\n            var data = this.getData(dataType);\n\n            var seriesIndex = this.seriesIndex;\n            var seriesName = this.name;\n\n            var rawValue = this.getRawValue(dataIndex, dataType);\n            var rawDataIndex = data.getRawIndex(dataIndex);\n            var name = data.getName(dataIndex, true);\n            var itemOpt = data.getRawDataItem(dataIndex);\n\n            return {\n                componentType: this.mainType,\n                componentSubType: this.subType,\n                seriesType: this.mainType === 'series' ? this.subType : null,\n                seriesIndex: seriesIndex,\n                seriesName: seriesName,\n                name: name,\n                dataIndex: rawDataIndex,\n                data: itemOpt,\n                dataType: dataType,\n                value: rawValue,\n                color: data.getItemVisual(dataIndex, 'color'),\n\n                // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n                $vars: ['seriesName', 'name', 'value']\n            };\n        },\n\n        /**\n         * Format label\n         * @param {number} dataIndex\n         * @param {string} [status='normal'] 'normal' or 'emphasis'\n         * @param {string} [dataType]\n         * @param {number} [dimIndex]\n         * @return {string}\n         */\n        getFormattedLabel: function (dataIndex, status, dataType, dimIndex) {\n            status = status || 'normal';\n            var data = this.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var params = this.getDataParams(dataIndex, dataType);\n            if (dimIndex != null && (params.value instanceof Array)) {\n                params.value = params.value[dimIndex];\n            }\n\n            var formatter = itemModel.get(['label', status, 'formatter']);\n\n            if (typeof formatter === 'function') {\n                params.status = status;\n                return formatter(params);\n            }\n            else if (typeof formatter === 'string') {\n                return formatUtil.formatTpl(formatter, params);\n            }\n        },\n\n        /**\n         * Get raw value in option\n         * @param {number} idx\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getRawValue: function (idx, dataType) {\n            var data = this.getData(dataType);\n            var dataItem = data.getRawDataItem(idx);\n            if (dataItem != null) {\n                return (isObject(dataItem) && !(dataItem instanceof Array))\n                    ? dataItem.value : dataItem;\n            }\n        },\n\n        /**\n         * Should be implemented.\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         * @return {string} tooltip string\n         */\n        formatTooltip: zrUtil.noop\n    };\n\n    /**\n     * Mapping to exists for merge.\n     *\n     * @public\n     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n     * @param {Object|Array.<Object>} newCptOptions\n     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          index of which is the same as exists.\n     */\n    modelUtil.mappingToExists = function (exists, newCptOptions) {\n        // Mapping by the order by original option (but not order of\n        // new option) in merge mode. Because we should ensure\n        // some specified index (like xAxisIndex) is consistent with\n        // original option, which is easy to understand, espatially in\n        // media query. And in most case, merge option is used to\n        // update partial option but not be expected to change order.\n        newCptOptions = (newCptOptions || []).slice();\n\n        var result = zrUtil.map(exists || [], function (obj, index) {\n            return {exist: obj};\n        });\n\n        // Mapping by id or name if specified.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            // id has highest priority.\n            for (var i = 0; i < result.length; i++) {\n                if (!result[i].option // Consider name: two map to one.\n                    && cptOption.id != null\n                    && result[i].exist.id === cptOption.id + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n\n            for (var i = 0; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option // Consider name: two map to one.\n                    // Can not match when both ids exist but different.\n                    && (exist.id == null || cptOption.id == null)\n                    && cptOption.name != null\n                    && !modelUtil.isIdInner(cptOption)\n                    && !modelUtil.isIdInner(exist)\n                    && exist.name === cptOption.name + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n        });\n\n        // Otherwise mapping by index.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            var i = 0;\n            for (; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option\n                    // Existing model that already has id should be able to\n                    // mapped to (because after mapping performed model may\n                    // be assigned with a id, whish should not affect next\n                    // mapping), except those has inner id.\n                    && !modelUtil.isIdInner(exist)\n                    // Caution:\n                    // Do not overwrite id. But name can be overwritten,\n                    // because axis use name as 'show label text'.\n                    // 'exist' always has id and name and we dont\n                    // need to check it.\n                    && cptOption.id == null\n                ) {\n                    result[i].option = cptOption;\n                    break;\n                }\n            }\n\n            if (i >= result.length) {\n                result.push({option: cptOption});\n            }\n        });\n\n        return result;\n    };\n\n    /**\n     * Make id and name for mapping result (result of mappingToExists)\n     * into `keyInfo` field.\n     *\n     * @public\n     * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          which order is the same as exists.\n     * @return {Array.<Object>} The input.\n     */\n    modelUtil.makeIdAndName = function (mapResult) {\n        // We use this id to hash component models and view instances\n        // in echarts. id can be specified by user, or auto generated.\n\n        // The id generation rule ensures new view instance are able\n        // to mapped to old instance when setOption are called in\n        // no-merge mode. So we generate model id by name and plus\n        // type in view id.\n\n        // name can be duplicated among components, which is convenient\n        // to specify multi components (like series) by one name.\n\n        // Ensure that each id is distinct.\n        var idMap = {};\n\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            existCpt && (idMap[existCpt.id] = item);\n        });\n\n        each(mapResult, function (item, index) {\n            var opt = item.option;\n\n            zrUtil.assert(\n                !opt || opt.id == null || !idMap[opt.id] || idMap[opt.id] === item,\n                'id duplicates: ' + (opt && opt.id)\n            );\n\n            opt && opt.id != null && (idMap[opt.id] = item);\n            !item.keyInfo && (item.keyInfo = {});\n        });\n\n        // Make name and id.\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            var opt = item.option;\n            var keyInfo = item.keyInfo;\n\n            if (!isObject(opt)) {\n                return;\n            }\n\n            // name can be overwitten. Consider case: axis.name = '20km'.\n            // But id generated by name will not be changed, which affect\n            // only in that case: setOption with 'not merge mode' and view\n            // instance will be recreated, which can be accepted.\n            keyInfo.name = opt.name != null\n                ? opt.name + ''\n                : existCpt\n                ? existCpt.name\n                : '\\0-';\n\n            if (existCpt) {\n                keyInfo.id = existCpt.id;\n            }\n            else if (opt.id != null) {\n                keyInfo.id = opt.id + '';\n            }\n            else {\n                // Consider this situatoin:\n                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n                //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n                // Series with the same name between optionA and optionB\n                // should be mapped.\n                var idNum = 0;\n                do {\n                    keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n                }\n                while (idMap[keyInfo.id]);\n            }\n\n            idMap[keyInfo.id] = item;\n        });\n    };\n\n    /**\n     * @public\n     * @param {Object} cptOption\n     * @return {boolean}\n     */\n    modelUtil.isIdInner = function (cptOption) {\n        return isObject(cptOption)\n            && cptOption.id\n            && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n    };\n\n    /**\n     * A helper for removing duplicate items between batchA and batchB,\n     * and in themselves, and categorize by series.\n     *\n     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n     */\n    modelUtil.compressBatches = function (batchA, batchB) {\n        var mapA = {};\n        var mapB = {};\n\n        makeMap(batchA || [], mapA);\n        makeMap(batchB || [], mapB, mapA);\n\n        return [mapToArray(mapA), mapToArray(mapB)];\n\n        function makeMap(sourceBatch, map, otherMap) {\n            for (var i = 0, len = sourceBatch.length; i < len; i++) {\n                var seriesId = sourceBatch[i].seriesId;\n                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);\n                var otherDataIndices = otherMap && otherMap[seriesId];\n\n                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n                    var dataIndex = dataIndices[j];\n\n                    if (otherDataIndices && otherDataIndices[dataIndex]) {\n                        otherDataIndices[dataIndex] = null;\n                    }\n                    else {\n                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n                    }\n                }\n            }\n        }\n\n        function mapToArray(map, isData) {\n            var result = [];\n            for (var i in map) {\n                if (map.hasOwnProperty(i) && map[i] != null) {\n                    if (isData) {\n                        result.push(+i);\n                    }\n                    else {\n                        var dataIndices = mapToArray(map[i], true);\n                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});\n                    }\n                }\n            }\n            return result;\n        }\n    };\n\n    /**\n     * @param {module:echarts/data/List} data\n     * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n     *                         each of which can be Array or primary type.\n     * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n     */\n    modelUtil.queryDataIndex = function (data, payload) {\n        if (payload.dataIndexInside != null) {\n            return payload.dataIndexInside;\n        }\n        else if (payload.dataIndex != null) {\n            return zrUtil.isArray(payload.dataIndex)\n                ? zrUtil.map(payload.dataIndex, function (value) {\n                    return data.indexOfRawIndex(value);\n                })\n                : data.indexOfRawIndex(payload.dataIndex);\n        }\n        else if (payload.name != null) {\n            return zrUtil.isArray(payload.name)\n                ? zrUtil.map(payload.name, function (value) {\n                    return data.indexOfName(value);\n                })\n                : data.indexOfName(payload.name);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Global} ecModel\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex, seriesId, seriesName,\n     *            geoIndex, geoId, goeName,\n     *            bmapIndex, bmapId, bmapName,\n     *            xAxisIndex, xAxisId, xAxisName,\n     *            yAxisIndex, yAxisId, yAxisName,\n     *            gridIndex, gridId, gridName,\n     *            ... (can be extended)\n     *        }\n     *        Each properties can be number|string|Array.<number>|Array.<string>\n     *        For example, a finder could be\n     *        {\n     *            seriesIndex: 3,\n     *            geoId: ['aa', 'cc'],\n     *            gridName: ['xx', 'rr']\n     *        }\n     * @param {Object} [opt]\n     * @param {string} [opt.defaultMainType]\n     * @return {Object} result like:\n     *        {\n     *            seriesModels: [seriesModel1, seriesModel2],\n     *            seriesModel: seriesModel1, // The first model\n     *            geoModels: [geoModel1, geoModel2],\n     *            geoModel: geoModel1, // The first model\n     *            ...\n     *        }\n     */\n    modelUtil.parseFinder = function (ecModel, finder, opt) {\n        if (zrUtil.isString(finder)) {\n            var obj = {};\n            obj[finder + 'Index'] = 0;\n            finder = obj;\n        }\n\n        var defaultMainType = opt && opt.defaultMainType;\n        if (defaultMainType\n            && !has(finder, defaultMainType + 'Index')\n            && !has(finder, defaultMainType + 'Id')\n            && !has(finder, defaultMainType + 'Name')\n        ) {\n            finder[defaultMainType + 'Index'] = 0;\n        }\n\n        var result = {};\n\n        each(finder, function (value, key) {\n            var value = finder[key];\n\n            // Exclude 'dataIndex' and other illgal keys.\n            if (key === 'dataIndex' || key === 'dataIndexInside') {\n                result[key] = value;\n                return;\n            }\n\n            var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n            var mainType = parsedKey[1];\n            var queryType = parsedKey[2];\n\n            if (!mainType || !queryType) {\n                return;\n            }\n\n            var queryParam = {mainType: mainType};\n            queryParam[queryType.toLowerCase()] = value;\n            var models = ecModel.queryComponents(queryParam);\n            result[mainType + 'Models'] = models;\n            result[mainType + 'Model'] = models[0];\n        });\n\n        return result;\n    };\n\n    function has(obj, prop) {\n        return obj && obj.hasOwnProperty(prop);\n    }\n\n    module.exports = modelUtil;\n\n\n/***/ }),\n/* 326 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module echarts/core/BoundingRect\n */\n\n\n    var vec2 = __webpack_require__(321);\n    var matrix = __webpack_require__(335);\n\n    var v2ApplyTransform = vec2.applyTransform;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    /**\n     * @alias module:echarts/core/BoundingRect\n     */\n    function BoundingRect(x, y, width, height) {\n\n        if (width < 0) {\n            x = x + width;\n            width = -width;\n        }\n        if (height < 0) {\n            y = y + height;\n            height = -height;\n        }\n\n        /**\n         * @type {number}\n         */\n        this.x = x;\n        /**\n         * @type {number}\n         */\n        this.y = y;\n        /**\n         * @type {number}\n         */\n        this.width = width;\n        /**\n         * @type {number}\n         */\n        this.height = height;\n    }\n\n    BoundingRect.prototype = {\n\n        constructor: BoundingRect,\n\n        /**\n         * @param {module:echarts/core/BoundingRect} other\n         */\n        union: function (other) {\n            var x = mathMin(other.x, this.x);\n            var y = mathMin(other.y, this.y);\n\n            this.width = mathMax(\n                    other.x + other.width,\n                    this.x + this.width\n                ) - x;\n            this.height = mathMax(\n                    other.y + other.height,\n                    this.y + this.height\n                ) - y;\n            this.x = x;\n            this.y = y;\n        },\n\n        /**\n         * @param {Array.<number>} m\n         * @methods\n         */\n        applyTransform: (function () {\n            var lt = [];\n            var rb = [];\n            var lb = [];\n            var rt = [];\n            return function (m) {\n                // In case usage like this\n                // el.getBoundingRect().applyTransform(el.transform)\n                // And element has no transform\n                if (!m) {\n                    return;\n                }\n                lt[0] = lb[0] = this.x;\n                lt[1] = rt[1] = this.y;\n                rb[0] = rt[0] = this.x + this.width;\n                rb[1] = lb[1] = this.y + this.height;\n\n                v2ApplyTransform(lt, lt, m);\n                v2ApplyTransform(rb, rb, m);\n                v2ApplyTransform(lb, lb, m);\n                v2ApplyTransform(rt, rt, m);\n\n                this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n                this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n                var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n                var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n                this.width = maxX - this.x;\n                this.height = maxY - this.y;\n            };\n        })(),\n\n        /**\n         * Calculate matrix of transforming from self to target rect\n         * @param  {module:zrender/core/BoundingRect} b\n         * @return {Array.<number>}\n         */\n        calculateTransform: function (b) {\n            var a = this;\n            var sx = b.width / a.width;\n            var sy = b.height / a.height;\n\n            var m = matrix.create();\n\n            // 矩阵右乘\n            matrix.translate(m, m, [-a.x, -a.y]);\n            matrix.scale(m, m, [sx, sy]);\n            matrix.translate(m, m, [b.x, b.y]);\n\n            return m;\n        },\n\n        /**\n         * @param {(module:echarts/core/BoundingRect|Object)} b\n         * @return {boolean}\n         */\n        intersect: function (b) {\n            if (!b) {\n                return false;\n            }\n\n            if (!(b instanceof BoundingRect)) {\n                // Normalize negative width/height.\n                b = BoundingRect.create(b);\n            }\n\n            var a = this;\n            var ax0 = a.x;\n            var ax1 = a.x + a.width;\n            var ay0 = a.y;\n            var ay1 = a.y + a.height;\n\n            var bx0 = b.x;\n            var bx1 = b.x + b.width;\n            var by0 = b.y;\n            var by1 = b.y + b.height;\n\n            return ! (ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n        },\n\n        contain: function (x, y) {\n            var rect = this;\n            return x >= rect.x\n                && x <= (rect.x + rect.width)\n                && y >= rect.y\n                && y <= (rect.y + rect.height);\n        },\n\n        /**\n         * @return {module:echarts/core/BoundingRect}\n         */\n        clone: function () {\n            return new BoundingRect(this.x, this.y, this.width, this.height);\n        },\n\n        /**\n         * Copy from another rect\n         */\n        copy: function (other) {\n            this.x = other.x;\n            this.y = other.y;\n            this.width = other.width;\n            this.height = other.height;\n        },\n\n        plain: function () {\n            return {\n                x: this.x,\n                y: this.y,\n                width: this.width,\n                height: this.height\n            };\n        }\n    };\n\n    /**\n     * @param {Object|module:zrender/core/BoundingRect} rect\n     * @param {number} rect.x\n     * @param {number} rect.y\n     * @param {number} rect.width\n     * @param {number} rect.height\n     * @return {module:zrender/core/BoundingRect}\n     */\n    BoundingRect.create = function (rect) {\n        return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n    };\n\n    module.exports = BoundingRect;\n\n\n/***/ }),\n/* 327 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/model/Model\n */\n\n\n    var zrUtil = __webpack_require__(317);\n    var clazzUtil = __webpack_require__(328);\n    var env = __webpack_require__(323);\n\n    /**\n     * @alias module:echarts/model/Model\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} [parentModel]\n     * @param {module:echarts/model/Global} [ecModel]\n     */\n    function Model(option, parentModel, ecModel) {\n        /**\n         * @type {module:echarts/model/Model}\n         * @readOnly\n         */\n        this.parentModel = parentModel;\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        this.option = option;\n\n        // Simple optimization\n        // if (this.init) {\n        //     if (arguments.length <= 4) {\n        //         this.init(option, parentModel, ecModel, extraOpt);\n        //     }\n        //     else {\n        //         this.init.apply(this, arguments);\n        //     }\n        // }\n    }\n\n    Model.prototype = {\n\n        constructor: Model,\n\n        /**\n         * Model 的初始化函数\n         * @param {Object} option\n         */\n        init: null,\n\n        /**\n         * 从新的 Option merge\n         */\n        mergeOption: function (option) {\n            zrUtil.merge(this.option, option, true);\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        get: function (path, ignoreParent) {\n            if (path == null) {\n                return this.option;\n            }\n\n            return doGet(\n                this.option,\n                this.parsePath(path),\n                !ignoreParent && getParent(this, path)\n            );\n        },\n\n        /**\n         * @param {string} key\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        getShallow: function (key, ignoreParent) {\n            var option = this.option;\n\n            var val = option == null ? option : option[key];\n            var parentModel = !ignoreParent && getParent(this, key);\n            if (val == null && parentModel) {\n                val = parentModel.getShallow(key);\n            }\n            return val;\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {module:echarts/model/Model} [parentModel]\n         * @return {module:echarts/model/Model}\n         */\n        getModel: function (path, parentModel) {\n            var obj = path == null\n                ? this.option\n                : doGet(this.option, path = this.parsePath(path));\n\n            var thisParentModel;\n            parentModel = parentModel || (\n                (thisParentModel = getParent(this, path))\n                    && thisParentModel.getModel(path)\n            );\n\n            return new Model(obj, parentModel, this.ecModel);\n        },\n\n        /**\n         * If model has option\n         */\n        isEmpty: function () {\n            return this.option == null;\n        },\n\n        restoreData: function () {},\n\n        // Pending\n        clone: function () {\n            var Ctor = this.constructor;\n            return new Ctor(zrUtil.clone(this.option));\n        },\n\n        setReadOnly: function (properties) {\n            clazzUtil.setReadOnly(this, properties);\n        },\n\n        // If path is null/undefined, return null/undefined.\n        parsePath: function(path) {\n            if (typeof path === 'string') {\n                path = path.split('.');\n            }\n            return path;\n        },\n\n        /**\n         * @param {Function} getParentMethod\n         *        param {Array.<string>|string} path\n         *        return {module:echarts/model/Model}\n         */\n        customizeGetParent: function (getParentMethod) {\n            clazzUtil.set(this, 'getParent', getParentMethod);\n        },\n\n        isAnimationEnabled: function () {\n            if (!env.node) {\n                if (this.option.animation != null) {\n                    return !!this.option.animation;\n                }\n                else if (this.parentModel) {\n                    return this.parentModel.isAnimationEnabled();\n                }\n            }\n        }\n    };\n\n    function doGet(obj, pathArr, parentModel) {\n        for (var i = 0; i < pathArr.length; i++) {\n            // Ignore empty\n            if (!pathArr[i]) {\n                continue;\n            }\n            // obj could be number/string/... (like 0)\n            obj = (obj && typeof obj === 'object') ? obj[pathArr[i]] : null;\n            if (obj == null) {\n                break;\n            }\n        }\n        if (obj == null && parentModel) {\n            obj = parentModel.get(pathArr);\n        }\n        return obj;\n    }\n\n    function getParent(model, path) {\n        var getParentMethod = clazzUtil.get(model, 'getParent');\n        return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n    }\n\n    // Enable Model.extend.\n    clazzUtil.enableClassExtend(Model);\n\n    var mixin = zrUtil.mixin;\n    mixin(Model, __webpack_require__(409));\n    mixin(Model, __webpack_require__(406));\n    mixin(Model, __webpack_require__(410));\n    mixin(Model, __webpack_require__(408));\n\n    module.exports = Model;\n\n\n/***/ }),\n/* 328 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(317);\n\n    var clazz = {};\n\n    var TYPE_DELIMITER = '.';\n    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n    var MEMBER_PRIFIX = '\\0ec_\\0';\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name] = value;` (can be right-value)\n     * @public\n     */\n    clazz.set = function (host, name, value) {\n        return (host[MEMBER_PRIFIX + name] = value);\n    };\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name];`\n     * @public\n     */\n    clazz.get = function (host, name) {\n        return host[MEMBER_PRIFIX + name];\n    };\n\n    /**\n     * For hidden private class member.\n     * The same behavior as `host.hasOwnProperty(name);`\n     * @public\n     */\n    clazz.hasOwn = function (host, name) {\n        return host.hasOwnProperty(MEMBER_PRIFIX + name);\n    };\n\n    /**\n     * @public\n     */\n    var parseClassType = clazz.parseClassType = function (componentType) {\n        var ret = {main: '', sub: ''};\n        if (componentType) {\n            componentType = componentType.split(TYPE_DELIMITER);\n            ret.main = componentType[0] || '';\n            ret.sub = componentType[1] || '';\n        }\n        return ret;\n    };\n\n    /**\n     * @public\n     */\n    function checkClassType(componentType) {\n        zrUtil.assert(\n            /^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType),\n            'componentType \"' + componentType + '\" illegal'\n        );\n    }\n\n    /**\n     * @public\n     */\n    clazz.enableClassExtend = function (RootClass, mandatoryMethods) {\n\n        RootClass.$constructor = RootClass;\n        RootClass.extend = function (proto) {\n\n            if (__DEV__) {\n                zrUtil.each(mandatoryMethods, function (method) {\n                    if (!proto[method]) {\n                        console.warn(\n                            'Method `' + method + '` should be implemented'\n                            + (proto.type ? ' in ' + proto.type : '') + '.'\n                        );\n                    }\n                });\n            }\n\n            var superClass = this;\n            var ExtendedClass = function () {\n                if (!proto.$constructor) {\n                    superClass.apply(this, arguments);\n                }\n                else {\n                    proto.$constructor.apply(this, arguments);\n                }\n            };\n\n            zrUtil.extend(ExtendedClass.prototype, proto);\n\n            ExtendedClass.extend = this.extend;\n            ExtendedClass.superCall = superCall;\n            ExtendedClass.superApply = superApply;\n            zrUtil.inherits(ExtendedClass, this);\n            ExtendedClass.superClass = superClass;\n\n            return ExtendedClass;\n        };\n    };\n\n    // superCall should have class info, which can not be fetch from 'this'.\n    // Consider this case:\n    // class A has method f,\n    // class B inherits class A, overrides method f, f call superApply('f'),\n    // class C inherits class B, do not overrides method f,\n    // then when method of class C is called, dead loop occured.\n    function superCall(context, methodName) {\n        var args = zrUtil.slice(arguments, 2);\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    function superApply(context, methodName, args) {\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    /**\n     * @param {Object} entity\n     * @param {Object} options\n     * @param {boolean} [options.registerWhenExtend]\n     * @public\n     */\n    clazz.enableClassManagement = function (entity, options) {\n        options = options || {};\n\n        /**\n         * Component model classes\n         * key: componentType,\n         * value:\n         *     componentClass, when componentType is 'xxx'\n         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n         * @type {Object}\n         */\n        var storage = {};\n\n        entity.registerClass = function (Clazz, componentType) {\n            if (componentType) {\n                checkClassType(componentType);\n                componentType = parseClassType(componentType);\n\n                if (!componentType.sub) {\n                    if (__DEV__) {\n                        if (storage[componentType.main]) {\n                            console.warn(componentType.main + ' exists.');\n                        }\n                    }\n                    storage[componentType.main] = Clazz;\n                }\n                else if (componentType.sub !== IS_CONTAINER) {\n                    var container = makeContainer(componentType);\n                    container[componentType.sub] = Clazz;\n                }\n            }\n            return Clazz;\n        };\n\n        entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n            var Clazz = storage[componentMainType];\n\n            if (Clazz && Clazz[IS_CONTAINER]) {\n                Clazz = subType ? Clazz[subType] : null;\n            }\n\n            if (throwWhenNotFound && !Clazz) {\n                throw new Error(\n                    !subType\n                        ? componentMainType + '.' + 'type should be specified.'\n                        : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.'\n                );\n            }\n\n            return Clazz;\n        };\n\n        entity.getClassesByMainType = function (componentType) {\n            componentType = parseClassType(componentType);\n\n            var result = [];\n            var obj = storage[componentType.main];\n\n            if (obj && obj[IS_CONTAINER]) {\n                zrUtil.each(obj, function (o, type) {\n                    type !== IS_CONTAINER && result.push(o);\n                });\n            }\n            else {\n                result.push(obj);\n            }\n\n            return result;\n        };\n\n        entity.hasClass = function (componentType) {\n            // Just consider componentType.main.\n            componentType = parseClassType(componentType);\n            return !!storage[componentType.main];\n        };\n\n        /**\n         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n         */\n        entity.getAllClassMainTypes = function () {\n            var types = [];\n            zrUtil.each(storage, function (obj, type) {\n                types.push(type);\n            });\n            return types;\n        };\n\n        /**\n         * If a main type is container and has sub types\n         * @param  {string}  mainType\n         * @return {boolean}\n         */\n        entity.hasSubTypes = function (componentType) {\n            componentType = parseClassType(componentType);\n            var obj = storage[componentType.main];\n            return obj && obj[IS_CONTAINER];\n        };\n\n        entity.parseClassType = parseClassType;\n\n        function makeContainer(componentType) {\n            var container = storage[componentType.main];\n            if (!container || !container[IS_CONTAINER]) {\n                container = storage[componentType.main] = {};\n                container[IS_CONTAINER] = true;\n            }\n            return container;\n        }\n\n        if (options.registerWhenExtend) {\n            var originalExtend = entity.extend;\n            if (originalExtend) {\n                entity.extend = function (proto) {\n                    var ExtendedClass = originalExtend.call(this, proto);\n                    return entity.registerClass(ExtendedClass, proto.type);\n                };\n            }\n        }\n\n        return entity;\n    };\n\n    /**\n     * @param {string|Array.<string>} properties\n     */\n    clazz.setReadOnly = function (obj, properties) {\n        // FIXME It seems broken in IE8 simulation of IE11\n        // if (!zrUtil.isArray(properties)) {\n        //     properties = properties != null ? [properties] : [];\n        // }\n        // zrUtil.each(properties, function (prop) {\n        //     var value = obj[prop];\n\n        //     Object.defineProperty\n        //         && Object.defineProperty(obj, prop, {\n        //             value: value, writable: false\n        //         });\n        //     zrUtil.isArray(obj[prop])\n        //         && Object.freeze\n        //         && Object.freeze(obj[prop]);\n        // });\n    };\n\n    module.exports = clazz;\n\n\n/***/ }),\n/* 329 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\n\n\n    var Model = __webpack_require__(327);\n    var zrUtil = __webpack_require__(317);\n    var arrayPush = Array.prototype.push;\n    var componentUtil = __webpack_require__(345);\n    var clazzUtil = __webpack_require__(328);\n    var layout = __webpack_require__(330);\n\n    /**\n     * @alias module:echarts/model/Component\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {module:echarts/model/Model} ecModel\n     */\n    var ComponentModel = Model.extend({\n\n        type: 'component',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        id: '',\n\n        /**\n         * @readOnly\n         */\n        name: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        mainType: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        subType: '',\n\n        /**\n         * @readOnly\n         * @type {number}\n         */\n        componentIndex: 0,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        ecModel: null,\n\n        /**\n         * key: componentType\n         * value:  Component model list, can not be null.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @readOnly\n         */\n        dependentModels: [],\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        uid: null,\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        $constructor: function (option, parentModel, ecModel, extraOpt) {\n            Model.call(this, option, parentModel, ecModel, extraOpt);\n\n            this.uid = componentUtil.getUID('componentModel');\n        },\n\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n            this.mergeDefaultAndTheme(option, ecModel);\n        },\n\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            var themeModel = ecModel.getTheme();\n            zrUtil.merge(option, themeModel.get(this.mainType));\n            zrUtil.merge(option, this.getDefaultOption());\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (option, extraOpt) {\n            zrUtil.merge(this.option, option, true);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, option, layoutMode);\n            }\n        },\n\n        // Hooker after init or mergeOption\n        optionUpdated: function (newCptOption, isInit) {},\n\n        getDefaultOption: function () {\n            if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n                var optList = [];\n                var Class = this.constructor;\n                while (Class) {\n                    var opt = Class.prototype.defaultOption;\n                    opt && optList.push(opt);\n                    Class = Class.superClass;\n                }\n\n                var defaultOption = {};\n                for (var i = optList.length - 1; i >= 0; i--) {\n                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n                }\n                clazzUtil.set(this, '__defaultOption', defaultOption);\n            }\n            return clazzUtil.get(this, '__defaultOption');\n        },\n\n        getReferringComponents: function (mainType) {\n            return this.ecModel.queryComponents({\n                mainType: mainType,\n                index: this.get(mainType + 'Index', true),\n                id: this.get(mainType + 'Id', true)\n            });\n        }\n\n    });\n\n    // Reset ComponentModel.extend, add preConstruct.\n    // clazzUtil.enableClassExtend(\n    //     ComponentModel,\n    //     function (option, parentModel, ecModel, extraOpt) {\n    //         // Set dependentModels, componentIndex, name, id, mainType, subType.\n    //         zrUtil.extend(this, extraOpt);\n\n    //         this.uid = componentUtil.getUID('componentModel');\n\n    //         // this.setReadOnly([\n    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n    //         //     'dependentModels', 'componentIndex'\n    //         // ]);\n    //     }\n    // );\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(\n        ComponentModel, {registerWhenExtend: true}\n    );\n    componentUtil.enableSubTypeDefaulter(ComponentModel);\n\n    // Add capability of ComponentModel.topologicalTravel.\n    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\n    function getDependencies(componentType) {\n        var deps = [];\n        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n            arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n        });\n        // Ensure main type\n        return zrUtil.map(deps, function (type) {\n            return clazzUtil.parseClassType(type).main;\n        });\n    }\n\n    zrUtil.mixin(ComponentModel, __webpack_require__(407));\n\n    module.exports = ComponentModel;\n\n\n/***/ }),\n/* 330 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Layout helpers for each component positioning\n\n\n    var zrUtil = __webpack_require__(317);\n    var BoundingRect = __webpack_require__(326);\n    var numberUtil = __webpack_require__(320);\n    var formatUtil = __webpack_require__(324);\n    var parsePercent = numberUtil.parsePercent;\n    var each = zrUtil.each;\n\n    var layout = {};\n\n    var LOCATION_PARAMS = layout.LOCATION_PARAMS = [\n        'left', 'right', 'top', 'bottom', 'width', 'height'\n    ];\n\n    function boxLayout(orient, group, gap, maxWidth, maxHeight) {\n        var x = 0;\n        var y = 0;\n        if (maxWidth == null) {\n            maxWidth = Infinity;\n        }\n        if (maxHeight == null) {\n            maxHeight = Infinity;\n        }\n        var currentLineMaxSize = 0;\n        group.eachChild(function (child, idx) {\n            var position = child.position;\n            var rect = child.getBoundingRect();\n            var nextChild = group.childAt(idx + 1);\n            var nextChildRect = nextChild && nextChild.getBoundingRect();\n            var nextX;\n            var nextY;\n            if (orient === 'horizontal') {\n                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);\n                nextX = x + moveX;\n                // Wrap when width exceeds maxWidth or meet a `newline` group\n                if (nextX > maxWidth || child.newline) {\n                    x = 0;\n                    nextX = moveX;\n                    y += currentLineMaxSize + gap;\n                    currentLineMaxSize = rect.height;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n                }\n            }\n            else {\n                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);\n                nextY = y + moveY;\n                // Wrap when width exceeds maxHeight or meet a `newline` group\n                if (nextY > maxHeight || child.newline) {\n                    x += currentLineMaxSize + gap;\n                    y = 0;\n                    nextY = moveY;\n                    currentLineMaxSize = rect.width;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n                }\n            }\n\n            if (child.newline) {\n                return;\n            }\n\n            position[0] = x;\n            position[1] = y;\n\n            orient === 'horizontal'\n                ? (x = nextX + gap)\n                : (y = nextY + gap);\n        });\n    }\n\n    /**\n     * VBox or HBox layouting\n     * @param {string} orient\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.box = boxLayout;\n\n    /**\n     * VBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.vbox = zrUtil.curry(boxLayout, 'vertical');\n\n    /**\n     * HBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');\n\n    /**\n     * If x or x2 is not specified or 'center' 'left' 'right',\n     * the width would be as long as possible.\n     * If y or y2 is not specified or 'middle' 'top' 'bottom',\n     * the height would be as long as possible.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.x]\n     * @param {number|string} [positionInfo.y]\n     * @param {number|string} [positionInfo.x2]\n     * @param {number|string} [positionInfo.y2]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @return {Object} {width, height}\n     */\n    layout.getAvailableSize = function (positionInfo, containerRect, margin) {\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var x = parsePercent(positionInfo.x, containerWidth);\n        var y = parsePercent(positionInfo.y, containerHeight);\n        var x2 = parsePercent(positionInfo.x2, containerWidth);\n        var y2 = parsePercent(positionInfo.y2, containerHeight);\n\n        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        return {\n            width: Math.max(x2 - x - margin[1] - margin[3], 0),\n            height: Math.max(y2 - y - margin[0] - margin[2], 0)\n        };\n    };\n\n    /**\n     * Parse position info.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width]\n     * @param {number|string} [positionInfo.height]\n     * @param {number|string} [positionInfo.aspect] Aspect is width / height\n     * @param {Object} containerRect\n     * @param {string|number} [margin]\n     *\n     * @return {module:zrender/core/BoundingRect}\n     */\n    layout.getLayoutRect = function (\n        positionInfo, containerRect, margin\n    ) {\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var left = parsePercent(positionInfo.left, containerWidth);\n        var top = parsePercent(positionInfo.top, containerHeight);\n        var right = parsePercent(positionInfo.right, containerWidth);\n        var bottom = parsePercent(positionInfo.bottom, containerHeight);\n        var width = parsePercent(positionInfo.width, containerWidth);\n        var height = parsePercent(positionInfo.height, containerHeight);\n\n        var verticalMargin = margin[2] + margin[0];\n        var horizontalMargin = margin[1] + margin[3];\n        var aspect = positionInfo.aspect;\n\n        // If width is not specified, calculate width from left and right\n        if (isNaN(width)) {\n            width = containerWidth - right - horizontalMargin - left;\n        }\n        if (isNaN(height)) {\n            height = containerHeight - bottom - verticalMargin - top;\n        }\n\n        // If width and height are not given\n        // 1. Graph should not exceeds the container\n        // 2. Aspect must be keeped\n        // 3. Graph should take the space as more as possible\n        if (isNaN(width) && isNaN(height)) {\n            if (aspect > containerWidth / containerHeight) {\n                width = containerWidth * 0.8;\n            }\n            else {\n                height = containerHeight * 0.8;\n            }\n        }\n\n        if (aspect != null) {\n            // Calculate width or height with given aspect\n            if (isNaN(width)) {\n                width = aspect * height;\n            }\n            if (isNaN(height)) {\n                height = width / aspect;\n            }\n        }\n\n        // If left is not specified, calculate left from right and width\n        if (isNaN(left)) {\n            left = containerWidth - right - width - horizontalMargin;\n        }\n        if (isNaN(top)) {\n            top = containerHeight - bottom - height - verticalMargin;\n        }\n\n        // Align left and top\n        switch (positionInfo.left || positionInfo.right) {\n            case 'center':\n                left = containerWidth / 2 - width / 2 - margin[3];\n                break;\n            case 'right':\n                left = containerWidth - width - horizontalMargin;\n                break;\n        }\n        switch (positionInfo.top || positionInfo.bottom) {\n            case 'middle':\n            case 'center':\n                top = containerHeight / 2 - height / 2 - margin[0];\n                break;\n            case 'bottom':\n                top = containerHeight - height - verticalMargin;\n                break;\n        }\n        // If something is wrong and left, top, width, height are calculated as NaN\n        left = left || 0;\n        top = top || 0;\n        if (isNaN(width)) {\n            // Width may be NaN if only one value is given except width\n            width = containerWidth - left - (right || 0);\n        }\n        if (isNaN(height)) {\n            // Height may be NaN if only one value is given except height\n            height = containerHeight - top - (bottom || 0);\n        }\n\n        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n        rect.margin = margin;\n        return rect;\n    };\n\n\n    /**\n     * Position a zr element in viewport\n     *  Group position is specified by either\n     *  {left, top}, {right, bottom}\n     *  If all properties exists, right and bottom will be igonred.\n     *\n     * Logic:\n     *     1. Scale (against origin point in parent coord)\n     *     2. Rotate (against origin point in parent coord)\n     *     3. Traslate (with el.position by this method)\n     * So this method only fixes the last step 'Traslate', which does not affect\n     * scaling and rotating.\n     *\n     * If be called repeatly with the same input el, the same result will be gotten.\n     *\n     * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @param {Object} [opt]\n     * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n     * @param {Array.<number>} [opt.boundingMode='all']\n     *        Specify how to calculate boundingRect when locating.\n     *        'all': Position the boundingRect that is transformed and uioned\n     *               both itself and its descendants.\n     *               This mode simplies confine the elements in the bounding\n     *               of their container (e.g., using 'right: 0').\n     *        'raw': Position the boundingRect that is not transformed and only itself.\n     *               This mode is useful when you want a element can overflow its\n     *               container. (Consider a rotated circle needs to be located in a corner.)\n     *               In this mode positionInfo.width/height can only be number.\n     */\n    layout.positionElement = function (el, positionInfo, containerRect, margin, opt) {\n        var h = !opt || !opt.hv || opt.hv[0];\n        var v = !opt || !opt.hv || opt.hv[1];\n        var boundingMode = opt && opt.boundingMode || 'all';\n\n        if (!h && !v) {\n            return;\n        }\n\n        var rect;\n        if (boundingMode === 'raw') {\n            rect = el.type === 'group'\n                ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0)\n                : el.getBoundingRect();\n        }\n        else {\n            rect = el.getBoundingRect();\n            if (el.needLocalTransform()) {\n                var transform = el.getLocalTransform();\n                // Notice: raw rect may be inner object of el,\n                // which should not be modified.\n                rect = rect.clone();\n                rect.applyTransform(transform);\n            }\n        }\n\n        positionInfo = layout.getLayoutRect(\n            zrUtil.defaults(\n                {width: rect.width, height: rect.height},\n                positionInfo\n            ),\n            containerRect,\n            margin\n        );\n\n        // Because 'tranlate' is the last step in transform\n        // (see zrender/core/Transformable#getLocalTransfrom),\n        // we can just only modify el.position to get final result.\n        var elPos = el.position;\n        var dx = h ? positionInfo.x - rect.x : 0;\n        var dy = v ? positionInfo.y - rect.y : 0;\n\n        el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n    };\n\n    /**\n     * Consider Case:\n     * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n     * through setOption or media query, using normal zrUtil.merge will cause\n     * {right: 0} does not take effect.\n     *\n     * @example\n     * ComponentModel.extend({\n     *     init: function () {\n     *         ...\n     *         var inputPositionParams = layout.getLayoutParams(option);\n     *         this.mergeOption(inputPositionParams);\n     *     },\n     *     mergeOption: function (newOption) {\n     *         newOption && zrUtil.merge(thisOption, newOption, true);\n     *         layout.mergeLayoutParam(thisOption, newOption);\n     *     }\n     * });\n     *\n     * @param {Object} targetOption\n     * @param {Object} newOption\n     * @param {Object|string} [opt]\n     * @param {boolean} [opt.ignoreSize=false] Some component must has width and height.\n     */\n    layout.mergeLayoutParam = function (targetOption, newOption, opt) {\n        !zrUtil.isObject(opt) && (opt = {});\n        var hNames = ['width', 'left', 'right']; // Order by priority.\n        var vNames = ['height', 'top', 'bottom']; // Order by priority.\n        var hResult = merge(hNames);\n        var vResult = merge(vNames);\n\n        copy(hNames, targetOption, hResult);\n        copy(vNames, targetOption, vResult);\n\n        function merge(names) {\n            var newParams = {};\n            var newValueCount = 0;\n            var merged = {};\n            var mergedValueCount = 0;\n            var enoughParamNumber = opt.ignoreSize ? 1 : 2;\n\n            each(names, function (name) {\n                merged[name] = targetOption[name];\n            });\n            each(names, function (name) {\n                // Consider case: newOption.width is null, which is\n                // set by user for removing width setting.\n                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n                hasValue(newParams, name) && newValueCount++;\n                hasValue(merged, name) && mergedValueCount++;\n            });\n\n            // Case: newOption: {width: ..., right: ...},\n            // or targetOption: {right: ...} and newOption: {width: ...},\n            // There is no conflict when merged only has params count\n            // little than enoughParamNumber.\n            if (mergedValueCount === enoughParamNumber || !newValueCount) {\n                return merged;\n            }\n            // Case: newOption: {width: ..., right: ...},\n            // Than we can make sure user only want those two, and ignore\n            // all origin params in targetOption.\n            else if (newValueCount >= enoughParamNumber) {\n                return newParams;\n            }\n            else {\n                // Chose another param from targetOption by priority.\n                // When 'ignoreSize', enoughParamNumber is 1 and those will not happen.\n                for (var i = 0; i < names.length; i++) {\n                    var name = names[i];\n                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n                        newParams[name] = targetOption[name];\n                        break;\n                    }\n                }\n                return newParams;\n            }\n        }\n\n        function hasProp(obj, name) {\n            return obj.hasOwnProperty(name);\n        }\n\n        function hasValue(obj, name) {\n            return obj[name] != null && obj[name] !== 'auto';\n        }\n\n        function copy(names, target, source) {\n            each(names, function (name) {\n                target[name] = source[name];\n            });\n        }\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.getLayoutParams = function (source) {\n        return layout.copyLayoutParams({}, source);\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.copyLayoutParams = function (target, source) {\n        source && target && each(LOCATION_PARAMS, function (name) {\n            source.hasOwnProperty(name) && (target[name] = source[name]);\n        });\n        return target;\n    };\n\n    module.exports = layout;\n\n\n/***/ }),\n/* 331 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var vec2 = __webpack_require__(321);\n    var v2Create = vec2.create;\n    var v2DistSquare = vec2.distSquare;\n    var mathPow = Math.pow;\n    var mathSqrt = Math.sqrt;\n\n    var EPSILON = 1e-8;\n    var EPSILON_NUMERIC = 1e-4;\n\n    var THREE_SQRT = mathSqrt(3);\n    var ONE_THIRD = 1 / 3;\n\n    // 临时变量\n    var _v0 = v2Create();\n    var _v1 = v2Create();\n    var _v2 = v2Create();\n    // var _v3 = vec2.create();\n\n    function isAroundZero(val) {\n        return val > -EPSILON && val < EPSILON;\n    }\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n    /**\n     * 计算三次贝塞尔值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return onet * onet * (onet * p0 + 3 * t * p1)\n             + t * t * (t * p3 + 3 * onet * p2);\n    }\n\n    /**\n     * 计算三次贝塞尔导数值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicDerivativeAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return 3 * (\n            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet\n            + (p3 - p2) * t * t\n        );\n    }\n\n    /**\n     * 计算三次贝塞尔方程根，使用盛金公式\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} val\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function cubicRootAt(p0, p1, p2, p3, val, roots) {\n        // Evaluate roots of cubic functions\n        var a = p3 + 3 * (p1 - p2) - p0;\n        var b = 3 * (p2 - p1 * 2 + p0);\n        var c = 3 * (p1  - p0);\n        var d = p0 - val;\n\n        var A = b * b - 3 * a * c;\n        var B = b * c - 9 * a * d;\n        var C = c * c - 3 * b * d;\n\n        var n = 0;\n\n        if (isAroundZero(A) && isAroundZero(B)) {\n            if (isAroundZero(b)) {\n                roots[0] = 0;\n            }\n            else {\n                var t1 = -c / b;  //t1, t2, t3, b is not zero\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = B * B - 4 * A * C;\n\n            if (isAroundZero(disc)) {\n                var K = B / A;\n                var t1 = -b / a + K;  // t1, a is not zero\n                var t2 = -K / 2;  // t2, t3\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n                var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n                if (Y1 < 0) {\n                    Y1 = -mathPow(-Y1, ONE_THIRD);\n                }\n                else {\n                    Y1 = mathPow(Y1, ONE_THIRD);\n                }\n                if (Y2 < 0) {\n                    Y2 = -mathPow(-Y2, ONE_THIRD);\n                }\n                else {\n                    Y2 = mathPow(Y2, ONE_THIRD);\n                }\n                var t1 = (-b - (Y1 + Y2)) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else {\n                var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n                var theta = Math.acos(T) / 3;\n                var ASqrt = mathSqrt(A);\n                var tmp = Math.cos(theta);\n\n                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n                if (t3 >= 0 && t3 <= 1) {\n                    roots[n++] = t3;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算三次贝塞尔方程极限值的位置\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {Array.<number>} extrema\n     * @return {number} 有效数目\n     */\n    function cubicExtrema(p0, p1, p2, p3, extrema) {\n        var b = 6 * p2 - 12 * p1 + 6 * p0;\n        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n        var c = 3 * p1 - 3 * p0;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <=1) {\n                    extrema[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                extrema[0] = -b / (2 * a);\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    extrema[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    extrema[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 细分三次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function cubicSubdivide(p0, p1, p2, p3, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p23 = (p3 - p2) * t + p2;\n\n        var p012 = (p12 - p01) * t + p01;\n        var p123 = (p23 - p12) * t + p12;\n\n        var p0123 = (p123 - p012) * t + p012;\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n        out[3] = p0123;\n        // Seg1\n        out[4] = p0123;\n        out[5] = p123;\n        out[6] = p23;\n        out[7] = p3;\n    }\n\n    /**\n     * 投射点到三次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} [out] 投射点\n     * @return {number}\n     */\n    function cubicProjectPoint(\n        x0, y0, x1, y1, x2, y2, x3, y3,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n        var prev;\n        var next;\n        var d1;\n        var d2;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n            _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n            d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            prev = t - interval;\n            next = t + interval;\n            // t - interval\n            _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n            _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n\n            d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = cubicAt(x0, x1, x2, x3, next);\n                _v2[1] = cubicAt(y0, y1, y2, y3, next);\n                d2 = v2DistSquare(_v2, _v0);\n\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = cubicAt(x0, x1, x2, x3, t);\n            out[1] = cubicAt(y0, y1, y2, y3, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    /**\n     * 计算二次方贝塞尔值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticAt(p0, p1, p2, t) {\n        var onet = 1 - t;\n        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n    }\n\n    /**\n     * 计算二次方贝塞尔导数值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticDerivativeAt(p0, p1, p2, t) {\n        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n    }\n\n    /**\n     * 计算二次方贝塞尔方程根\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function quadraticRootAt(p0, p1, p2, val, roots) {\n        var a = p0 - 2 * p1 + p2;\n        var b = 2 * (p1 - p0);\n        var c = p0 - val;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                var t1 = -b / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算二次贝塞尔方程极限值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @return {number}\n     */\n    function quadraticExtremum(p0, p1, p2) {\n        var divider = p0 + p2 - 2 * p1;\n        if (divider === 0) {\n            // p1 is center of p0 and p2\n            return 0.5;\n        }\n        else {\n            return (p0 - p1) / divider;\n        }\n    }\n\n    /**\n     * 细分二次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function quadraticSubdivide(p0, p1, p2, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p012 = (p12 - p01) * t + p01;\n\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n\n        // Seg1\n        out[3] = p012;\n        out[4] = p12;\n        out[5] = p2;\n    }\n\n    /**\n     * 投射点到二次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} out 投射点\n     * @return {number}\n     */\n    function quadraticProjectPoint(\n        x0, y0, x1, y1, x2, y2,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = quadraticAt(x0, x1, x2, _t);\n            _v1[1] = quadraticAt(y0, y1, y2, _t);\n            var d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            var prev = t - interval;\n            var next = t + interval;\n            // t - interval\n            _v1[0] = quadraticAt(x0, x1, x2, prev);\n            _v1[1] = quadraticAt(y0, y1, y2, prev);\n\n            var d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = quadraticAt(x0, x1, x2, next);\n                _v2[1] = quadraticAt(y0, y1, y2, next);\n                var d2 = v2DistSquare(_v2, _v0);\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = quadraticAt(x0, x1, x2, t);\n            out[1] = quadraticAt(y0, y1, y2, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    module.exports = {\n\n        cubicAt: cubicAt,\n\n        cubicDerivativeAt: cubicDerivativeAt,\n\n        cubicRootAt: cubicRootAt,\n\n        cubicExtrema: cubicExtrema,\n\n        cubicSubdivide: cubicSubdivide,\n\n        cubicProjectPoint: cubicProjectPoint,\n\n        quadraticAt: quadraticAt,\n\n        quadraticDerivativeAt: quadraticDerivativeAt,\n\n        quadraticRootAt: quadraticRootAt,\n\n        quadraticExtremum: quadraticExtremum,\n\n        quadraticSubdivide: quadraticSubdivide,\n\n        quadraticProjectPoint: quadraticProjectPoint\n    };\n\n\n/***/ }),\n/* 332 */\n/***/ (function(module, exports) {\n\n/**\n * @module zrender/tool/color\n */\n\n\n    var kCSSColorTable = {\n        'transparent': [0,0,0,0], 'aliceblue': [240,248,255,1],\n        'antiquewhite': [250,235,215,1], 'aqua': [0,255,255,1],\n        'aquamarine': [127,255,212,1], 'azure': [240,255,255,1],\n        'beige': [245,245,220,1], 'bisque': [255,228,196,1],\n        'black': [0,0,0,1], 'blanchedalmond': [255,235,205,1],\n        'blue': [0,0,255,1], 'blueviolet': [138,43,226,1],\n        'brown': [165,42,42,1], 'burlywood': [222,184,135,1],\n        'cadetblue': [95,158,160,1], 'chartreuse': [127,255,0,1],\n        'chocolate': [210,105,30,1], 'coral': [255,127,80,1],\n        'cornflowerblue': [100,149,237,1], 'cornsilk': [255,248,220,1],\n        'crimson': [220,20,60,1], 'cyan': [0,255,255,1],\n        'darkblue': [0,0,139,1], 'darkcyan': [0,139,139,1],\n        'darkgoldenrod': [184,134,11,1], 'darkgray': [169,169,169,1],\n        'darkgreen': [0,100,0,1], 'darkgrey': [169,169,169,1],\n        'darkkhaki': [189,183,107,1], 'darkmagenta': [139,0,139,1],\n        'darkolivegreen': [85,107,47,1], 'darkorange': [255,140,0,1],\n        'darkorchid': [153,50,204,1], 'darkred': [139,0,0,1],\n        'darksalmon': [233,150,122,1], 'darkseagreen': [143,188,143,1],\n        'darkslateblue': [72,61,139,1], 'darkslategray': [47,79,79,1],\n        'darkslategrey': [47,79,79,1], 'darkturquoise': [0,206,209,1],\n        'darkviolet': [148,0,211,1], 'deeppink': [255,20,147,1],\n        'deepskyblue': [0,191,255,1], 'dimgray': [105,105,105,1],\n        'dimgrey': [105,105,105,1], 'dodgerblue': [30,144,255,1],\n        'firebrick': [178,34,34,1], 'floralwhite': [255,250,240,1],\n        'forestgreen': [34,139,34,1], 'fuchsia': [255,0,255,1],\n        'gainsboro': [220,220,220,1], 'ghostwhite': [248,248,255,1],\n        'gold': [255,215,0,1], 'goldenrod': [218,165,32,1],\n        'gray': [128,128,128,1], 'green': [0,128,0,1],\n        'greenyellow': [173,255,47,1], 'grey': [128,128,128,1],\n        'honeydew': [240,255,240,1], 'hotpink': [255,105,180,1],\n        'indianred': [205,92,92,1], 'indigo': [75,0,130,1],\n        'ivory': [255,255,240,1], 'khaki': [240,230,140,1],\n        'lavender': [230,230,250,1], 'lavenderblush': [255,240,245,1],\n        'lawngreen': [124,252,0,1], 'lemonchiffon': [255,250,205,1],\n        'lightblue': [173,216,230,1], 'lightcoral': [240,128,128,1],\n        'lightcyan': [224,255,255,1], 'lightgoldenrodyellow': [250,250,210,1],\n        'lightgray': [211,211,211,1], 'lightgreen': [144,238,144,1],\n        'lightgrey': [211,211,211,1], 'lightpink': [255,182,193,1],\n        'lightsalmon': [255,160,122,1], 'lightseagreen': [32,178,170,1],\n        'lightskyblue': [135,206,250,1], 'lightslategray': [119,136,153,1],\n        'lightslategrey': [119,136,153,1], 'lightsteelblue': [176,196,222,1],\n        'lightyellow': [255,255,224,1], 'lime': [0,255,0,1],\n        'limegreen': [50,205,50,1], 'linen': [250,240,230,1],\n        'magenta': [255,0,255,1], 'maroon': [128,0,0,1],\n        'mediumaquamarine': [102,205,170,1], 'mediumblue': [0,0,205,1],\n        'mediumorchid': [186,85,211,1], 'mediumpurple': [147,112,219,1],\n        'mediumseagreen': [60,179,113,1], 'mediumslateblue': [123,104,238,1],\n        'mediumspringgreen': [0,250,154,1], 'mediumturquoise': [72,209,204,1],\n        'mediumvioletred': [199,21,133,1], 'midnightblue': [25,25,112,1],\n        'mintcream': [245,255,250,1], 'mistyrose': [255,228,225,1],\n        'moccasin': [255,228,181,1], 'navajowhite': [255,222,173,1],\n        'navy': [0,0,128,1], 'oldlace': [253,245,230,1],\n        'olive': [128,128,0,1], 'olivedrab': [107,142,35,1],\n        'orange': [255,165,0,1], 'orangered': [255,69,0,1],\n        'orchid': [218,112,214,1], 'palegoldenrod': [238,232,170,1],\n        'palegreen': [152,251,152,1], 'paleturquoise': [175,238,238,1],\n        'palevioletred': [219,112,147,1], 'papayawhip': [255,239,213,1],\n        'peachpuff': [255,218,185,1], 'peru': [205,133,63,1],\n        'pink': [255,192,203,1], 'plum': [221,160,221,1],\n        'powderblue': [176,224,230,1], 'purple': [128,0,128,1],\n        'red': [255,0,0,1], 'rosybrown': [188,143,143,1],\n        'royalblue': [65,105,225,1], 'saddlebrown': [139,69,19,1],\n        'salmon': [250,128,114,1], 'sandybrown': [244,164,96,1],\n        'seagreen': [46,139,87,1], 'seashell': [255,245,238,1],\n        'sienna': [160,82,45,1], 'silver': [192,192,192,1],\n        'skyblue': [135,206,235,1], 'slateblue': [106,90,205,1],\n        'slategray': [112,128,144,1], 'slategrey': [112,128,144,1],\n        'snow': [255,250,250,1], 'springgreen': [0,255,127,1],\n        'steelblue': [70,130,180,1], 'tan': [210,180,140,1],\n        'teal': [0,128,128,1], 'thistle': [216,191,216,1],\n        'tomato': [255,99,71,1], 'turquoise': [64,224,208,1],\n        'violet': [238,130,238,1], 'wheat': [245,222,179,1],\n        'white': [255,255,255,1], 'whitesmoke': [245,245,245,1],\n        'yellow': [255,255,0,1], 'yellowgreen': [154,205,50,1]\n    };\n\n    function clampCssByte(i) {  // Clamp to integer 0 .. 255.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 255 ? 255 : i;\n    }\n\n    function clampCssAngle(i) {  // Clamp to integer 0 .. 360.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 360 ? 360 : i;\n    }\n\n    function clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.\n        return f < 0 ? 0 : f > 1 ? 1 : f;\n    }\n\n    function parseCssInt(str) {  // int or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssByte(parseFloat(str) / 100 * 255);\n        }\n        return clampCssByte(parseInt(str, 10));\n    }\n\n    function parseCssFloat(str) {  // float or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssFloat(parseFloat(str) / 100);\n        }\n        return clampCssFloat(parseFloat(str));\n    }\n\n    function cssHueToRgb(m1, m2, h) {\n        if (h < 0) {\n            h += 1;\n        }\n        else if (h > 1) {\n            h -= 1;\n        }\n\n        if (h * 6 < 1) {\n            return m1 + (m2 - m1) * h * 6;\n        }\n        if (h * 2 < 1) {\n            return m2;\n        }\n        if (h * 3 < 2) {\n            return m1 + (m2 - m1) * (2/3 - h) * 6;\n        }\n        return m1;\n    }\n\n    function lerp(a, b, p) {\n        return a + (b - a) * p;\n    }\n\n    /**\n     * @param {string} colorStr\n     * @return {Array.<number>}\n     * @memberOf module:zrender/util/color\n     */\n    function parse(colorStr) {\n        if (!colorStr) {\n            return;\n        }\n        // colorStr may be not string\n        colorStr = colorStr + '';\n        // Remove all whitespace, not compliant, but should just be more accepting.\n        var str = colorStr.replace(/ /g, '').toLowerCase();\n\n        // Color keywords (and transparent) lookup.\n        if (str in kCSSColorTable) {\n            return kCSSColorTable[str].slice();  // dup.\n        }\n\n        // #abc and #abc123 syntax.\n        if (str.charAt(0) === '#') {\n            if (str.length === 4) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xfff)) {\n                    return;  // Covers NaN.\n                }\n                return [\n                    ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n                    (iv & 0xf0) | ((iv & 0xf0) >> 4),\n                    (iv & 0xf) | ((iv & 0xf) << 4),\n                    1\n                ];\n            }\n            else if (str.length === 7) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xffffff)) {\n                    return;  // Covers NaN.\n                }\n                return [\n                    (iv & 0xff0000) >> 16,\n                    (iv & 0xff00) >> 8,\n                    iv & 0xff,\n                    1\n                ];\n            }\n\n            return;\n        }\n        var op = str.indexOf('('), ep = str.indexOf(')');\n        if (op !== -1 && ep + 1 === str.length) {\n            var fname = str.substr(0, op);\n            var params = str.substr(op + 1, ep - (op + 1)).split(',');\n            var alpha = 1;  // To allow case fallthrough.\n            switch (fname) {\n                case 'rgba':\n                    if (params.length !== 4) {\n                        return;\n                    }\n                    alpha = parseCssFloat(params.pop()); // jshint ignore:line\n                // Fall through.\n                case 'rgb':\n                    if (params.length !== 3) {\n                        return;\n                    }\n                    return [\n                        parseCssInt(params[0]),\n                        parseCssInt(params[1]),\n                        parseCssInt(params[2]),\n                        alpha\n                    ];\n                case 'hsla':\n                    if (params.length !== 4) {\n                        return;\n                    }\n                    params[3] = parseCssFloat(params[3]);\n                    return hsla2rgba(params);\n                case 'hsl':\n                    if (params.length !== 3) {\n                        return;\n                    }\n                    return hsla2rgba(params);\n                default:\n                    return;\n            }\n        }\n\n        return;\n    }\n\n    /**\n     * @param {Array.<number>} hsla\n     * @return {Array.<number>} rgba\n     */\n    function hsla2rgba(hsla) {\n        var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parseCssFloat(hsla[1]);\n        var l = parseCssFloat(hsla[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n\n        var rgba = [\n            clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255)\n        ];\n\n        if (hsla.length === 4) {\n            rgba[3] = hsla[3];\n        }\n\n        return rgba;\n    }\n\n    /**\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} hsla\n     */\n    function rgba2hsla(rgba) {\n        if (!rgba) {\n            return;\n        }\n\n        // RGB from 0 to 255\n        var R = rgba[0] / 255;\n        var G = rgba[1] / 255;\n        var B = rgba[2] / 255;\n\n        var vMin = Math.min(R, G, B); // Min. value of RGB\n        var vMax = Math.max(R, G, B); // Max. value of RGB\n        var delta = vMax - vMin; // Delta RGB value\n\n        var L = (vMax + vMin) / 2;\n        var H;\n        var S;\n        // HSL results from 0 to 1\n        if (delta === 0) {\n            H = 0;\n            S = 0;\n        }\n        else {\n            if (L < 0.5) {\n                S = delta / (vMax + vMin);\n            }\n            else {\n                S = delta / (2 - vMax - vMin);\n            }\n\n            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\n            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\n            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\n\n            if (R === vMax) {\n                H = deltaB - deltaG;\n            }\n            else if (G === vMax) {\n                H = (1 / 3) + deltaR - deltaB;\n            }\n            else if (B === vMax) {\n                H = (2 / 3) + deltaG - deltaR;\n            }\n\n            if (H < 0) {\n                H += 1;\n            }\n\n            if (H > 1) {\n                H -= 1;\n            }\n        }\n\n        var hsla = [H * 360, S, L];\n\n        if (rgba[3] != null) {\n            hsla.push(rgba[3]);\n        }\n\n        return hsla;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number} level\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function lift(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            for (var i = 0; i < 3; i++) {\n                if (level < 0) {\n                    colorArr[i] = colorArr[i] * (1 - level) | 0;\n                }\n                else {\n                    colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;\n                }\n            }\n            return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function toHex(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);\n        }\n    }\n\n    /**\n     * Map value to color. Faster than mapToColor methods because color is represented by rgba array\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<Array.<number>>} colors List of rgba color array\n     * @param {Array.<number>} [out] Mapped gba color array\n     * @return {Array.<number>}\n     */\n    function fastMapToColor(normalizedValue, colors, out) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n        out = out || [0, 0, 0, 0];\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = colors[leftIndex];\n        var rightColor = colors[rightIndex];\n        var dv = value - leftIndex;\n        out[0] = clampCssByte(lerp(leftColor[0], rightColor[0], dv));\n        out[1] = clampCssByte(lerp(leftColor[1], rightColor[1], dv));\n        out[2] = clampCssByte(lerp(leftColor[2], rightColor[2], dv));\n        out[3] = clampCssByte(lerp(leftColor[3], rightColor[3], dv));\n        return out;\n    }\n    /**\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<string>} colors Color list.\n     * @param {boolean=} fullOutput Default false.\n     * @return {(string|Object)} Result color. If fullOutput,\n     *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n     * @memberOf module:zrender/util/color\n     */\n    function mapToColor(normalizedValue, colors, fullOutput) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = parse(colors[leftIndex]);\n        var rightColor = parse(colors[rightIndex]);\n        var dv = value - leftIndex;\n\n        var color = stringify(\n            [\n                clampCssByte(lerp(leftColor[0], rightColor[0], dv)),\n                clampCssByte(lerp(leftColor[1], rightColor[1], dv)),\n                clampCssByte(lerp(leftColor[2], rightColor[2], dv)),\n                clampCssFloat(lerp(leftColor[3], rightColor[3], dv))\n            ],\n            'rgba'\n        );\n\n        return fullOutput\n            ? {\n                color: color,\n                leftIndex: leftIndex,\n                rightIndex: rightIndex,\n                value: value\n            }\n            : color;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} h 0 ~ 360, ignore when null.\n     * @param {number=} s 0 ~ 1, ignore when null.\n     * @param {number=} l 0 ~ 1, ignore when null.\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyHSL(color, h, s, l) {\n        color = parse(color);\n\n        if (color) {\n            color = rgba2hsla(color);\n            h != null && (color[0] = clampCssAngle(h));\n            s != null && (color[1] = parseCssFloat(s));\n            l != null && (color[2] = parseCssFloat(l));\n\n            return stringify(hsla2rgba(color), 'rgba');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} alpha 0 ~ 1\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyAlpha(color, alpha) {\n        color = parse(color);\n\n        if (color && alpha != null) {\n            color[3] = clampCssFloat(alpha);\n            return stringify(color, 'rgba');\n        }\n    }\n\n    /**\n     * @param {Array.<string>} colors Color list.\n     * @param {string} type 'rgba', 'hsva', ...\n     * @return {string} Result color.\n     */\n    function stringify(arrColor, type) {\n        var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n        if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n            colorStr += ',' + arrColor[3];\n        }\n        return type + '(' + colorStr + ')';\n    }\n\n    module.exports = {\n        parse: parse,\n        lift: lift,\n        toHex: toHex,\n        fastMapToColor: fastMapToColor,\n        mapToColor: mapToColor,\n        modifyHSL: modifyHSL,\n        modifyAlpha: modifyAlpha,\n        stringify: stringify\n    };\n\n\n\n\n/***/ }),\n/* 333 */\n/***/ (function(module, exports) {\n\n/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n\n\n    var arrySlice = Array.prototype.slice;\n\n    /**\n     * 事件分发器\n     * @alias module:zrender/mixin/Eventful\n     * @constructor\n     */\n    var Eventful = function () {\n        this._$handlers = {};\n    };\n\n    Eventful.prototype = {\n\n        constructor: Eventful,\n\n        /**\n         * 单次触发绑定，trigger后销毁\n         *\n         * @param {string} event 事件名\n         * @param {Function} handler 响应函数\n         * @param {Object} context\n         */\n        one: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: true,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 绑定事件\n         * @param {string} event 事件名\n         * @param {Function} handler 事件处理函数\n         * @param {Object} [context]\n         */\n        on: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: false,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 是否绑定了事件\n         * @param  {string}  event\n         * @return {boolean}\n         */\n        isSilent: function (event) {\n            var _h = this._$handlers;\n            return _h[event] && _h[event].length;\n        },\n\n        /**\n         * 解绑事件\n         * @param {string} event 事件名\n         * @param {Function} [handler] 事件处理函数\n         */\n        off: function (event, handler) {\n            var _h = this._$handlers;\n\n            if (!event) {\n                this._$handlers = {};\n                return this;\n            }\n\n            if (handler) {\n                if (_h[event]) {\n                    var newList = [];\n                    for (var i = 0, l = _h[event].length; i < l; i++) {\n                        if (_h[event][i]['h'] != handler) {\n                            newList.push(_h[event][i]);\n                        }\n                    }\n                    _h[event] = newList;\n                }\n\n                if (_h[event] && _h[event].length === 0) {\n                    delete _h[event];\n                }\n            }\n            else {\n                delete _h[event];\n            }\n\n            return this;\n        },\n\n        /**\n         * 事件分发\n         *\n         * @param {string} type 事件类型\n         */\n        trigger: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 3) {\n                    args = arrySlice.call(args, 1);\n                }\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(_h[i]['ctx']);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(_h[i]['ctx'], args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * 带有context的事件分发, 最后一个参数是事件回调的context\n         * @param {string} type 事件类型\n         */\n        triggerWithContext: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 4) {\n                    args = arrySlice.call(args, 1, args.length - 1);\n                }\n                var ctx = args[args.length - 1];\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(ctx);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(ctx, args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(ctx, args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(ctx, args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        }\n    };\n\n    // 对象可以通过 onxxxx 绑定事件\n    /**\n     * @event module:zrender/mixin/Eventful#onclick\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseout\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousemove\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousewheel\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousedown\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseup\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrag\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragstart\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragend\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragenter\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragleave\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrop\n     * @type {Function}\n     * @default null\n     */\n\n    module.exports = Eventful;\n\n\n\n/***/ }),\n/* 334 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var textWidthCache = {};\n    var textWidthCacheCounter = 0;\n    var TEXT_CACHE_MAX = 5000;\n\n    var util = __webpack_require__(317);\n    var BoundingRect = __webpack_require__(326);\n    var retrieve = util.retrieve;\n\n    function getTextWidth(text, textFont) {\n        var key = text + ':' + textFont;\n        if (textWidthCache[key]) {\n            return textWidthCache[key];\n        }\n\n        var textLines = (text + '').split('\\n');\n        var width = 0;\n\n        for (var i = 0, l = textLines.length; i < l; i++) {\n            // measureText 可以被覆盖以兼容不支持 Canvas 的环境\n            width = Math.max(textContain.measureText(textLines[i], textFont).width, width);\n        }\n\n        if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n            textWidthCacheCounter = 0;\n            textWidthCache = {};\n        }\n        textWidthCacheCounter++;\n        textWidthCache[key] = width;\n\n        return width;\n    }\n\n    function getTextRect(text, textFont, textAlign, textBaseline) {\n        var textLineLen = ((text || '') + '').split('\\n').length;\n\n        var width = getTextWidth(text, textFont);\n        // FIXME 高度计算比较粗暴\n        var lineHeight = getTextWidth('国', textFont);\n        var height = textLineLen * lineHeight;\n\n        var rect = new BoundingRect(0, 0, width, height);\n        // Text has a special line height property\n        rect.lineHeight = lineHeight;\n\n        switch (textBaseline) {\n            case 'bottom':\n            case 'alphabetic':\n                rect.y -= lineHeight;\n                break;\n            case 'middle':\n                rect.y -= lineHeight / 2;\n                break;\n            // case 'hanging':\n            // case 'top':\n        }\n\n        // FIXME Right to left language\n        switch (textAlign) {\n            case 'end':\n            case 'right':\n                rect.x -= rect.width;\n                break;\n            case 'center':\n                rect.x -= rect.width / 2;\n                break;\n            // case 'start':\n            // case 'left':\n        }\n\n        return rect;\n    }\n\n    function adjustTextPositionOnRect(textPosition, rect, textRect, distance) {\n\n        var x = rect.x;\n        var y = rect.y;\n\n        var height = rect.height;\n        var width = rect.width;\n\n        var textHeight = textRect.height;\n\n        var halfHeight = height / 2 - textHeight / 2;\n\n        var textAlign = 'left';\n\n        switch (textPosition) {\n            case 'left':\n                x -= distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'right':\n                x += distance + width;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'top':\n                x += width / 2;\n                y -= distance + textHeight;\n                textAlign = 'center';\n                break;\n            case 'bottom':\n                x += width / 2;\n                y += height + distance;\n                textAlign = 'center';\n                break;\n            case 'inside':\n                x += width / 2;\n                y += halfHeight;\n                textAlign = 'center';\n                break;\n            case 'insideLeft':\n                x += distance;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'insideRight':\n                x += width - distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'insideTop':\n                x += width / 2;\n                y += distance;\n                textAlign = 'center';\n                break;\n            case 'insideBottom':\n                x += width / 2;\n                y += height - textHeight - distance;\n                textAlign = 'center';\n                break;\n            case 'insideTopLeft':\n                x += distance;\n                y += distance;\n                textAlign = 'left';\n                break;\n            case 'insideTopRight':\n                x += width - distance;\n                y += distance;\n                textAlign = 'right';\n                break;\n            case 'insideBottomLeft':\n                x += distance;\n                y += height - textHeight - distance;\n                break;\n            case 'insideBottomRight':\n                x += width - distance;\n                y += height - textHeight - distance;\n                textAlign = 'right';\n                break;\n        }\n\n        return {\n            x: x,\n            y: y,\n            textAlign: textAlign,\n            textBaseline: 'top'\n        };\n    }\n\n    /**\n     * Show ellipsis if overflow.\n     *\n     * @param  {string} text\n     * @param  {string} containerWidth\n     * @param  {string} textFont\n     * @param  {number} [ellipsis='...']\n     * @param  {Object} [options]\n     * @param  {number} [options.maxIterations=3]\n     * @param  {number} [options.minChar=0] If truncate result are less\n     *                  then minChar, ellipsis will not show, which is\n     *                  better for user hint in some cases.\n     * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n     * @return {string}\n     */\n    function truncateText(text, containerWidth, textFont, ellipsis, options) {\n        if (!containerWidth) {\n            return '';\n        }\n\n        options = options || {};\n\n        ellipsis = retrieve(ellipsis, '...');\n        var maxIterations = retrieve(options.maxIterations, 2);\n        var minChar = retrieve(options.minChar, 0);\n        // FIXME\n        // Other languages?\n        var cnCharWidth = getTextWidth('国', textFont);\n        // FIXME\n        // Consider proportional font?\n        var ascCharWidth = getTextWidth('a', textFont);\n        var placeholder = retrieve(options.placeholder, '');\n\n        // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n        // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n        var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n        for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n            contentWidth -= ascCharWidth;\n        }\n\n        var ellipsisWidth = getTextWidth(ellipsis);\n        if (ellipsisWidth > contentWidth) {\n            ellipsis = '';\n            ellipsisWidth = 0;\n        }\n\n        contentWidth = containerWidth - ellipsisWidth;\n\n        var textLines = (text + '').split('\\n');\n\n        for (var i = 0, len = textLines.length; i < len; i++) {\n            var textLine = textLines[i];\n            var lineWidth = getTextWidth(textLine, textFont);\n\n            if (lineWidth <= containerWidth) {\n                continue;\n            }\n\n            for (var j = 0;; j++) {\n                if (lineWidth <= contentWidth || j >= maxIterations) {\n                    textLine += ellipsis;\n                    break;\n                }\n\n                var subLength = j === 0\n                    ? estimateLength(textLine, contentWidth, ascCharWidth, cnCharWidth)\n                    : lineWidth > 0\n                    ? Math.floor(textLine.length * contentWidth / lineWidth)\n                    : 0;\n\n                textLine = textLine.substr(0, subLength);\n                lineWidth = getTextWidth(textLine, textFont);\n            }\n\n            if (textLine === '') {\n                textLine = placeholder;\n            }\n\n            textLines[i] = textLine;\n        }\n\n        return textLines.join('\\n');\n    }\n\n    function estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n        var width = 0;\n        var i = 0;\n        for (var len = text.length; i < len && width < contentWidth; i++) {\n            var charCode = text.charCodeAt(i);\n            width += (0 <= charCode && charCode <= 127) ? ascCharWidth : cnCharWidth;\n        }\n        return i;\n    }\n\n    var textContain = {\n\n        getWidth: getTextWidth,\n\n        getBoundingRect: getTextRect,\n\n        adjustTextPositionOnRect: adjustTextPositionOnRect,\n\n        truncateText: truncateText,\n\n        measureText: function (text, textFont) {\n            var ctx = util.getContext();\n            ctx.font = textFont || '12px sans-serif';\n            return ctx.measureText(text);\n        }\n    };\n\n    module.exports = textContain;\n\n\n/***/ }),\n/* 335 */\n/***/ (function(module, exports) {\n\n\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n    /**\n     * 3x2矩阵操作类\n     * @exports zrender/tool/matrix\n     */\n    var matrix = {\n        /**\n         * 创建一个单位矩阵\n         * @return {Float32Array|Array.<number>}\n         */\n        create : function() {\n            var out = new ArrayCtor(6);\n            matrix.identity(out);\n\n            return out;\n        },\n        /**\n         * 设置矩阵为单位矩阵\n         * @param {Float32Array|Array.<number>} out\n         */\n        identity : function(out) {\n            out[0] = 1;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            out[4] = 0;\n            out[5] = 0;\n            return out;\n        },\n        /**\n         * 复制矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m\n         */\n        copy: function(out, m) {\n            out[0] = m[0];\n            out[1] = m[1];\n            out[2] = m[2];\n            out[3] = m[3];\n            out[4] = m[4];\n            out[5] = m[5];\n            return out;\n        },\n        /**\n         * 矩阵相乘\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m1\n         * @param {Float32Array|Array.<number>} m2\n         */\n        mul : function (out, m1, m2) {\n            // Consider matrix.mul(m, m2, m);\n            // where out is the same as m2.\n            // So use temp variable to escape error.\n            var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n            var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n            var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n            var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n            var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n            var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n            out[0] = out0;\n            out[1] = out1;\n            out[2] = out2;\n            out[3] = out3;\n            out[4] = out4;\n            out[5] = out5;\n            return out;\n        },\n        /**\n         * 平移变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        translate : function(out, a, v) {\n            out[0] = a[0];\n            out[1] = a[1];\n            out[2] = a[2];\n            out[3] = a[3];\n            out[4] = a[4] + v[0];\n            out[5] = a[5] + v[1];\n            return out;\n        },\n        /**\n         * 旋转变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {number} rad\n         */\n        rotate : function(out, a, rad) {\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n            var st = Math.sin(rad);\n            var ct = Math.cos(rad);\n\n            out[0] = aa * ct + ab * st;\n            out[1] = -aa * st + ab * ct;\n            out[2] = ac * ct + ad * st;\n            out[3] = -ac * st + ct * ad;\n            out[4] = ct * atx + st * aty;\n            out[5] = ct * aty - st * atx;\n            return out;\n        },\n        /**\n         * 缩放变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        scale : function(out, a, v) {\n            var vx = v[0];\n            var vy = v[1];\n            out[0] = a[0] * vx;\n            out[1] = a[1] * vy;\n            out[2] = a[2] * vx;\n            out[3] = a[3] * vy;\n            out[4] = a[4] * vx;\n            out[5] = a[5] * vy;\n            return out;\n        },\n        /**\n         * 求逆矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         */\n        invert : function(out, a) {\n\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n\n            var det = aa * ad - ab * ac;\n            if (!det) {\n                return null;\n            }\n            det = 1.0 / det;\n\n            out[0] = ad * det;\n            out[1] = -ab * det;\n            out[2] = -ac * det;\n            out[3] = aa * det;\n            out[4] = (ac * aty - ad * atx) * det;\n            out[5] = (ab * atx - aa * aty) * det;\n            return out;\n        }\n    };\n\n    module.exports = matrix;\n\n\n\n/***/ }),\n/* 336 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n\n    var Eventful = __webpack_require__(333);\n    var env = __webpack_require__(323);\n\n    var isDomLevel2 = (typeof window !== 'undefined') && !!window.addEventListener;\n\n    function getBoundingClientRect(el) {\n        // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n        return el.getBoundingClientRect ? el.getBoundingClientRect() : {left: 0, top: 0};\n    }\n\n    // `calculate` is optional, default false\n    function clientToLocal(el, e, out, calculate) {\n        out = out || {};\n\n        // According to the W3C Working Draft, offsetX and offsetY should be relative\n        // to the padding edge of the target element. The only browser using this convention\n        // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n        // not support the properties.\n        // (see http://www.jacklmoore.com/notes/mouse-position/)\n        // In zr painter.dom, padding edge equals to border edge.\n\n        // FIXME\n        // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n        // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n        // is too complex. So css-transfrom dont support in this case temporarily.\n        if (calculate || !env.canvasSupported) {\n            defaultGetZrXY(el, e, out);\n        }\n        // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n        // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n        // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n        // zoom-factor, overflow / opacity layers, transforms ...)\n        // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n        // <https://bugs.jquery.com/ticket/8523#comment:14>\n        // BTW3, In ff, offsetX/offsetY is always 0.\n        else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n            out.zrX = e.layerX;\n            out.zrY = e.layerY;\n        }\n        // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n        else if (e.offsetX != null) {\n            out.zrX = e.offsetX;\n            out.zrY = e.offsetY;\n        }\n        // For some other device, e.g., IOS safari.\n        else {\n            defaultGetZrXY(el, e, out);\n        }\n\n        return out;\n    }\n\n    function defaultGetZrXY(el, e, out) {\n        // This well-known method below does not support css transform.\n        var box = getBoundingClientRect(el);\n        out.zrX = e.clientX - box.left;\n        out.zrY = e.clientY - box.top;\n    }\n\n    /**\n     * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n     * `calculate` is optional, default false.\n     */\n    function normalizeEvent(el, e, calculate) {\n\n        e = e || window.event;\n\n        if (e.zrX != null) {\n            return e;\n        }\n\n        var eventType = e.type;\n        var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n        if (!isTouch) {\n            clientToLocal(el, e, e, calculate);\n            e.zrDelta = (e.wheelDelta) ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n        }\n        else {\n            var touch = eventType != 'touchend'\n                ? e.targetTouches[0]\n                : e.changedTouches[0];\n            touch && clientToLocal(el, touch, e, calculate);\n        }\n\n        return e;\n    }\n\n    function addEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.addEventListener(name, handler);\n        }\n        else {\n            el.attachEvent('on' + name, handler);\n        }\n    }\n\n    function removeEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.removeEventListener(name, handler);\n        }\n        else {\n            el.detachEvent('on' + name, handler);\n        }\n    }\n\n    /**\n     * preventDefault and stopPropagation.\n     * Notice: do not do that in zrender. Upper application\n     * do that if necessary.\n     *\n     * @memberOf module:zrender/core/event\n     * @method\n     * @param {Event} e : event对象\n     */\n    var stop = isDomLevel2\n        ? function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.cancelBubble = true;\n        }\n        : function (e) {\n            e.returnValue = false;\n            e.cancelBubble = true;\n        };\n\n    module.exports = {\n        clientToLocal: clientToLocal,\n        normalizeEvent: normalizeEvent,\n        addEventListener: addEventListener,\n        removeEventListener: removeEventListener,\n\n        stop: stop,\n        // 做向上兼容\n        Dispatcher: Eventful\n    };\n\n\n\n/***/ }),\n/* 337 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n\n    var clazzUtil = __webpack_require__(328);\n\n    function Scale() {\n        /**\n         * Extent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._extent = [Infinity, -Infinity];\n\n        /**\n         * Step is calculated in adjustExtent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._interval = 0;\n\n        this.init && this.init.apply(this, arguments);\n    }\n\n    var scaleProto = Scale.prototype;\n\n    /**\n     * Parse input val to valid inner number.\n     * @param {*} val\n     * @return {number}\n     */\n    scaleProto.parse = function (val) {\n        // Notice: This would be a trap here, If the implementation\n        // of this method depends on extent, and this method is used\n        // before extent set (like in dataZoom), it would be wrong.\n        // Nevertheless, parse does not depend on extent generally.\n        return val;\n    };\n\n    scaleProto.contain = function (val) {\n        var extent = this._extent;\n        return val >= extent[0] && val <= extent[1];\n    };\n\n    /**\n     * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.normalize = function (val) {\n        var extent = this._extent;\n        if (extent[1] === extent[0]) {\n            return 0.5;\n        }\n        return (val - extent[0]) / (extent[1] - extent[0]);\n    };\n\n    /**\n     * Scale normalized value\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.scale = function (val) {\n        var extent = this._extent;\n        return val * (extent[1] - extent[0]) + extent[0];\n    };\n\n    /**\n     * Set extent from data\n     * @param {Array.<number>} other\n     */\n    scaleProto.unionExtent = function (other) {\n        var extent = this._extent;\n        other[0] < extent[0] && (extent[0] = other[0]);\n        other[1] > extent[1] && (extent[1] = other[1]);\n        // not setExtent because in log axis it may transformed to power\n        // this.setExtent(extent[0], extent[1]);\n    };\n\n    /**\n     * Set extent from data\n     * @param {module:echarts/data/List} data\n     * @param {string} dim\n     */\n    scaleProto.unionExtentFromData = function (data, dim) {\n        this.unionExtent(data.getDataExtent(dim, true));\n    };\n\n    /**\n     * Get extent\n     * @return {Array.<number>}\n     */\n    scaleProto.getExtent = function () {\n        return this._extent.slice();\n    };\n\n    /**\n     * Set extent\n     * @param {number} start\n     * @param {number} end\n     */\n    scaleProto.setExtent = function (start, end) {\n        var thisExtent = this._extent;\n        if (!isNaN(start)) {\n            thisExtent[0] = start;\n        }\n        if (!isNaN(end)) {\n            thisExtent[1] = end;\n        }\n    };\n\n    /**\n     * @return {Array.<string>}\n     */\n    scaleProto.getTicksLabels = function () {\n        var labels = [];\n        var ticks = this.getTicks();\n        for (var i = 0; i < ticks.length; i++) {\n            labels.push(this.getLabel(ticks[i]));\n        }\n        return labels;\n    };\n\n    clazzUtil.enableClassExtend(Scale);\n    clazzUtil.enableClassManagement(Scale, {\n        registerWhenExtend: true\n    });\n\n    module.exports = Scale;\n\n\n/***/ }),\n/* 338 */\n/***/ (function(module, exports) {\n\n\n    var dpr = 1;\n    // If in browser environment\n    if (typeof window !== 'undefined') {\n        dpr = Math.max(window.devicePixelRatio || 1, 1);\n    }\n    /**\n     * config默认配置项\n     * @exports zrender/config\n     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n     */\n    var config = {\n        /**\n         * debug日志选项：catchBrushException为true下有效\n         * 0 : 不生成debug数据，发布用\n         * 1 : 异常抛出，调试用\n         * 2 : 控制台输出，调试用\n         */\n        debugMode: 0,\n\n        // retina 屏幕优化\n        devicePixelRatio: dpr\n    };\n    module.exports = config;\n\n\n\n\n/***/ }),\n/* 339 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/lib/container/Group');\n *     var Circle = require('zrender/lib/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n\n    var zrUtil = __webpack_require__(317);\n    var Element = __webpack_require__(359);\n    var BoundingRect = __webpack_require__(326);\n\n    /**\n     * @alias module:zrender/graphic/Group\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @extends module:zrender/mixin/Eventful\n     */\n    var Group = function (opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        for (var key in opts) {\n            if (opts.hasOwnProperty(key)) {\n                this[key] = opts[key];\n            }\n        }\n\n        this._children = [];\n\n        this.__storage = null;\n\n        this.__dirty = true;\n    };\n\n    Group.prototype = {\n\n        constructor: Group,\n\n        isGroup: true,\n\n        /**\n         * @type {string}\n         */\n        type: 'group',\n\n        /**\n         * 所有子孙元素是否响应鼠标事件\n         * @name module:/zrender/container/Group#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * @return {Array.<module:zrender/Element>}\n         */\n        children: function () {\n            return this._children.slice();\n        },\n\n        /**\n         * 获取指定 index 的儿子节点\n         * @param  {number} idx\n         * @return {module:zrender/Element}\n         */\n        childAt: function (idx) {\n            return this._children[idx];\n        },\n\n        /**\n         * 获取指定名字的儿子节点\n         * @param  {string} name\n         * @return {module:zrender/Element}\n         */\n        childOfName: function (name) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i].name === name) {\n                    return children[i];\n                }\n             }\n        },\n\n        /**\n         * @return {number}\n         */\n        childCount: function () {\n            return this._children.length;\n        },\n\n        /**\n         * 添加子节点到最后\n         * @param {module:zrender/Element} child\n         */\n        add: function (child) {\n            if (child && child !== this && child.parent !== this) {\n\n                this._children.push(child);\n\n                this._doAdd(child);\n            }\n\n            return this;\n        },\n\n        /**\n         * 添加子节点在 nextSibling 之前\n         * @param {module:zrender/Element} child\n         * @param {module:zrender/Element} nextSibling\n         */\n        addBefore: function (child, nextSibling) {\n            if (child && child !== this && child.parent !== this\n                && nextSibling && nextSibling.parent === this) {\n\n                var children = this._children;\n                var idx = children.indexOf(nextSibling);\n\n                if (idx >= 0) {\n                    children.splice(idx, 0, child);\n                    this._doAdd(child);\n                }\n            }\n\n            return this;\n        },\n\n        _doAdd: function (child) {\n            if (child.parent) {\n                child.parent.remove(child);\n            }\n\n            child.parent = this;\n\n            var storage = this.__storage;\n            var zr = this.__zr;\n            if (storage && storage !== child.__storage) {\n\n                storage.addToMap(child);\n\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n        },\n\n        /**\n         * 移除子节点\n         * @param {module:zrender/Element} child\n         */\n        remove: function (child) {\n            var zr = this.__zr;\n            var storage = this.__storage;\n            var children = this._children;\n\n            var idx = zrUtil.indexOf(children, child);\n            if (idx < 0) {\n                return this;\n            }\n            children.splice(idx, 1);\n\n            child.parent = null;\n\n            if (storage) {\n\n                storage.delFromMap(child.id);\n\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n\n            return this;\n        },\n\n        /**\n         * 移除所有子节点\n         */\n        removeAll: function () {\n            var children = this._children;\n            var storage = this.__storage;\n            var child;\n            var i;\n            for (i = 0; i < children.length; i++) {\n                child = children[i];\n                if (storage) {\n                    storage.delFromMap(child.id);\n                    if (child instanceof Group) {\n                        child.delChildrenFromStorage(storage);\n                    }\n                }\n                child.parent = null;\n            }\n            children.length = 0;\n\n            return this;\n        },\n\n        /**\n         * 遍历所有子节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        eachChild: function (cb, context) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                cb.call(context, child, i);\n            }\n            return this;\n        },\n\n        /**\n         * 深度优先遍历所有子孙节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                cb.call(context, child);\n\n                if (child.type === 'group') {\n                    child.traverse(cb, context);\n                }\n            }\n            return this;\n        },\n\n        addChildrenToStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.addToMap(child);\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n        },\n\n        delChildrenFromStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.delFromMap(child.id);\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n        },\n\n        dirty: function () {\n            this.__dirty = true;\n            this.__zr && this.__zr.refresh();\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function (includeChildren) {\n            // TODO Caching\n            var rect = null;\n            var tmpRect = new BoundingRect(0, 0, 0, 0);\n            var children = includeChildren || this._children;\n            var tmpMat = [];\n\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                if (child.ignore || child.invisible) {\n                    continue;\n                }\n\n                var childRect = child.getBoundingRect();\n                var transform = child.getLocalTransform(tmpMat);\n                // TODO\n                // The boundingRect cacluated by transforming original\n                // rect may be bigger than the actual bundingRect when rotation\n                // is used. (Consider a circle rotated aginst its center, where\n                // the actual boundingRect should be the same as that not be\n                // rotated.) But we can not find better approach to calculate\n                // actual boundingRect yet, considering performance.\n                if (transform) {\n                    tmpRect.copy(childRect);\n                    tmpRect.applyTransform(transform);\n                    rect = rect || tmpRect.clone();\n                    rect.union(tmpRect);\n                }\n                else {\n                    rect = rect || childRect.clone();\n                    rect.union(childRect);\n                }\n            }\n            return rect || tmpRect;\n        }\n    };\n\n    zrUtil.inherits(Group, Element);\n\n    module.exports = Group;\n\n\n/***/ }),\n/* 340 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n\n // TODO getTotalLength, getPointAtLength\n\n\n    var curve = __webpack_require__(331);\n    var vec2 = __webpack_require__(321);\n    var bbox = __webpack_require__(434);\n    var BoundingRect = __webpack_require__(326);\n    var dpr = __webpack_require__(338).devicePixelRatio;\n\n    var CMD = {\n        M: 1,\n        L: 2,\n        C: 3,\n        Q: 4,\n        A: 5,\n        Z: 6,\n        // Rect\n        R: 7\n    };\n\n    var min = [];\n    var max = [];\n    var min2 = [];\n    var max2 = [];\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var mathSqrt = Math.sqrt;\n    var mathAbs = Math.abs;\n\n    var hasTypedArray = typeof Float32Array != 'undefined';\n\n    /**\n     * @alias module:zrender/core/PathProxy\n     * @constructor\n     */\n    var PathProxy = function () {\n\n        /**\n         * Path data. Stored as flat array\n         * @type {Array.<Object>}\n         */\n        this.data = [];\n\n        this._len = 0;\n\n        this._ctx = null;\n\n        this._xi = 0;\n        this._yi = 0;\n\n        this._x0 = 0;\n        this._y0 = 0;\n\n        // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n        this._ux = 0;\n        this._uy = 0;\n    };\n\n    /**\n     * 快速计算Path包围盒（并不是最小包围盒）\n     * @return {Object}\n     */\n    PathProxy.prototype = {\n\n        constructor: PathProxy,\n\n        _lineDash: null,\n\n        _dashOffset: 0,\n\n        _dashIdx: 0,\n\n        _dashSum: 0,\n\n        /**\n         * @readOnly\n         */\n        setScale: function (sx, sy) {\n            this._ux = mathAbs(1 / dpr / sx) || 0;\n            this._uy = mathAbs(1 / dpr / sy) || 0;\n        },\n\n        getContext: function () {\n            return this._ctx;\n        },\n\n        /**\n         * @param  {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        beginPath: function (ctx) {\n\n            this._ctx = ctx;\n\n            ctx && ctx.beginPath();\n\n            ctx && (this.dpr = ctx.dpr);\n\n            // Reset\n            this._len = 0;\n\n            if (this._lineDash) {\n                this._lineDash = null;\n\n                this._dashOffset = 0;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        moveTo: function (x, y) {\n            this.addData(CMD.M, x, y);\n            this._ctx && this._ctx.moveTo(x, y);\n\n            // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n            // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n            // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n            // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n            this._x0 = x;\n            this._y0 = y;\n\n            this._xi = x;\n            this._yi = y;\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        lineTo: function (x, y) {\n            var exceedUnit = mathAbs(x - this._xi) > this._ux\n                || mathAbs(y - this._yi) > this._uy\n                // Force draw the first segment\n                || this._len < 5;\n\n            this.addData(CMD.L, x, y);\n\n            if (this._ctx && exceedUnit) {\n                this._needsDash() ? this._dashedLineTo(x, y)\n                    : this._ctx.lineTo(x, y);\n            }\n            if (exceedUnit) {\n                this._xi = x;\n                this._yi = y;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @param  {number} x3\n         * @param  {number} y3\n         * @return {module:zrender/core/PathProxy}\n         */\n        bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n            this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3)\n                    : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n            }\n            this._xi = x3;\n            this._yi = y3;\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @return {module:zrender/core/PathProxy}\n         */\n        quadraticCurveTo: function (x1, y1, x2, y2) {\n            this.addData(CMD.Q, x1, y1, x2, y2);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2)\n                    : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n            }\n            this._xi = x2;\n            this._yi = y2;\n            return this;\n        },\n\n        /**\n         * @param  {number} cx\n         * @param  {number} cy\n         * @param  {number} r\n         * @param  {number} startAngle\n         * @param  {number} endAngle\n         * @param  {boolean} anticlockwise\n         * @return {module:zrender/core/PathProxy}\n         */\n        arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n            this.addData(\n                CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1\n            );\n            this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n\n            this._xi = mathCos(endAngle) * r + cx;\n            this._yi = mathSin(endAngle) * r + cx;\n            return this;\n        },\n\n        // TODO\n        arcTo: function (x1, y1, x2, y2, radius) {\n            if (this._ctx) {\n                this._ctx.arcTo(x1, y1, x2, y2, radius);\n            }\n            return this;\n        },\n\n        // TODO\n        rect: function (x, y, w, h) {\n            this._ctx && this._ctx.rect(x, y, w, h);\n            this.addData(CMD.R, x, y, w, h);\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/PathProxy}\n         */\n        closePath: function () {\n            this.addData(CMD.Z);\n\n            var ctx = this._ctx;\n            var x0 = this._x0;\n            var y0 = this._y0;\n            if (ctx) {\n                this._needsDash() && this._dashedLineTo(x0, y0);\n                ctx.closePath();\n            }\n\n            this._xi = x0;\n            this._yi = y0;\n            return this;\n        },\n\n        /**\n         * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n         * stroke 同样\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        fill: function (ctx) {\n            ctx && ctx.fill();\n            this.toStatic();\n        },\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        stroke: function (ctx) {\n            ctx && ctx.stroke();\n            this.toStatic();\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDash: function (lineDash) {\n            if (lineDash instanceof Array) {\n                this._lineDash = lineDash;\n\n                this._dashIdx = 0;\n\n                var lineDashSum = 0;\n                for (var i = 0; i < lineDash.length; i++) {\n                    lineDashSum += lineDash[i];\n                }\n                this._dashSum = lineDashSum;\n            }\n            return this;\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDashOffset: function (offset) {\n            this._dashOffset = offset;\n            return this;\n        },\n\n        /**\n         *\n         * @return {boolean}\n         */\n        len: function () {\n            return this._len;\n        },\n\n        /**\n         * 直接设置 Path 数据\n         */\n        setData: function (data) {\n\n            var len = data.length;\n\n            if (! (this.data && this.data.length == len) && hasTypedArray) {\n                this.data = new Float32Array(len);\n            }\n\n            for (var i = 0; i < len; i++) {\n                this.data[i] = data[i];\n            }\n\n            this._len = len;\n        },\n\n        /**\n         * 添加子路径\n         * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n         */\n        appendPath: function (path) {\n            if (!(path instanceof Array)) {\n                path = [path];\n            }\n            var len = path.length;\n            var appendSize = 0;\n            var offset = this._len;\n            for (var i = 0; i < len; i++) {\n                appendSize += path[i].len();\n            }\n            if (hasTypedArray && (this.data instanceof Float32Array)) {\n                this.data = new Float32Array(offset + appendSize);\n            }\n            for (var i = 0; i < len; i++) {\n                var appendPathData = path[i].data;\n                for (var k = 0; k < appendPathData.length; k++) {\n                    this.data[offset++] = appendPathData[k];\n                }\n            }\n            this._len = offset;\n        },\n\n        /**\n         * 填充 Path 数据。\n         * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n         */\n        addData: function (cmd) {\n            var data = this.data;\n            if (this._len + arguments.length > data.length) {\n                // 因为之前的数组已经转换成静态的 Float32Array\n                // 所以不够用时需要扩展一个新的动态数组\n                this._expandData();\n                data = this.data;\n            }\n            for (var i = 0; i < arguments.length; i++) {\n                data[this._len++] = arguments[i];\n            }\n\n            this._prevCmd = cmd;\n        },\n\n        _expandData: function () {\n            // Only if data is Float32Array\n            if (!(this.data instanceof Array)) {\n                var newData = [];\n                for (var i = 0; i < this._len; i++) {\n                    newData[i] = this.data[i];\n                }\n                this.data = newData;\n            }\n        },\n\n        /**\n         * If needs js implemented dashed line\n         * @return {boolean}\n         * @private\n         */\n        _needsDash: function () {\n            return this._lineDash;\n        },\n\n        _dashedLineTo: function (x1, y1) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var dx = x1 - x0;\n            var dy = y1 - y0;\n            var dist = mathSqrt(dx * dx + dy * dy);\n            var x = x0;\n            var y = y0;\n            var dash;\n            var nDash = lineDash.length;\n            var idx;\n            dx /= dist;\n            dy /= dist;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            x -= offset * dx;\n            y -= offset * dy;\n\n            while ((dx > 0 && x <= x1) || (dx < 0 && x >= x1)\n            || (dx == 0 && ((dy > 0 && y <= y1) || (dy < 0 && y >= y1)))) {\n                idx = this._dashIdx;\n                dash = lineDash[idx];\n                x += dx * dash;\n                y += dy * dash;\n                this._dashIdx = (idx + 1) % nDash;\n                // Skip positive offset\n                if ((dx > 0 && x < x0) || (dx < 0 && x > x0) || (dy > 0 && y < y0) || (dy < 0 && y > y0)) {\n                    continue;\n                }\n                ctx[idx % 2 ? 'moveTo' : 'lineTo'](\n                    dx >= 0 ? mathMin(x, x1) : mathMax(x, x1),\n                    dy >= 0 ? mathMin(y, y1) : mathMax(y, y1)\n                );\n            }\n            // Offset for next lineTo\n            dx = x - x1;\n            dy = y - y1;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        // Not accurate dashed line to\n        _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var t;\n            var dx;\n            var dy;\n            var cubicAt = curve.cubicAt;\n            var bezierLen = 0;\n            var idx = this._dashIdx;\n            var nDash = lineDash.length;\n\n            var x;\n            var y;\n\n            var tmpLen = 0;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            // Bezier approx length\n            for (t = 0; t < 1; t += 0.1) {\n                dx = cubicAt(x0, x1, x2, x3, t + 0.1)\n                    - cubicAt(x0, x1, x2, x3, t);\n                dy = cubicAt(y0, y1, y2, y3, t + 0.1)\n                    - cubicAt(y0, y1, y2, y3, t);\n                bezierLen += mathSqrt(dx * dx + dy * dy);\n            }\n\n            // Find idx after add offset\n            for (; idx < nDash; idx++) {\n                tmpLen += lineDash[idx];\n                if (tmpLen > offset) {\n                    break;\n                }\n            }\n            t = (tmpLen - offset) / bezierLen;\n\n            while (t <= 1) {\n\n                x = cubicAt(x0, x1, x2, x3, t);\n                y = cubicAt(y0, y1, y2, y3, t);\n\n                // Use line to approximate dashed bezier\n                // Bad result if dash is long\n                idx % 2 ? ctx.moveTo(x, y)\n                    : ctx.lineTo(x, y);\n\n                t += lineDash[idx] / bezierLen;\n\n                idx = (idx + 1) % nDash;\n            }\n\n            // Finish the last segment and calculate the new offset\n            (idx % 2 !== 0) && ctx.lineTo(x3, y3);\n            dx = x3 - x;\n            dy = y3 - y;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        _dashedQuadraticTo: function (x1, y1, x2, y2) {\n            // Convert quadratic to cubic using degree elevation\n            var x3 = x2;\n            var y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (this._xi + 2 * x1) / 3;\n            y1 = (this._yi + 2 * y1) / 3;\n\n            this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n        },\n\n        /**\n         * 转成静态的 Float32Array 减少堆内存占用\n         * Convert dynamic array to static Float32Array\n         */\n        toStatic: function () {\n            var data = this.data;\n            if (data instanceof Array) {\n                data.length = this._len;\n                if (hasTypedArray) {\n                    this.data = new Float32Array(data);\n                }\n            }\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function () {\n            min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n            max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n\n            var data = this.data;\n            var xi = 0;\n            var yi = 0;\n            var x0 = 0;\n            var y0 = 0;\n\n            for (var i = 0; i < data.length;) {\n                var cmd = data[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = data[i];\n                    yi = data[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n\n                switch (cmd) {\n                    case CMD.M:\n                        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                        // 在 closePath 的时候使用\n                        x0 = data[i++];\n                        y0 = data[i++];\n                        xi = x0;\n                        yi = y0;\n                        min2[0] = x0;\n                        min2[1] = y0;\n                        max2[0] = x0;\n                        max2[1] = y0;\n                        break;\n                    case CMD.L:\n                        bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.C:\n                        bbox.fromCubic(\n                            xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.Q:\n                        bbox.fromQuadratic(\n                            xi, yi, data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.A:\n                        // TODO Arc 判断的开销比较大\n                        var cx = data[i++];\n                        var cy = data[i++];\n                        var rx = data[i++];\n                        var ry = data[i++];\n                        var startAngle = data[i++];\n                        var endAngle = data[i++] + startAngle;\n                        // TODO Arc 旋转\n                        var psi = data[i++];\n                        var anticlockwise = 1 - data[i++];\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(startAngle) * rx + cx;\n                            y0 = mathSin(startAngle) * ry + cy;\n                        }\n\n                        bbox.fromArc(\n                            cx, cy, rx, ry, startAngle, endAngle,\n                            anticlockwise, min2, max2\n                        );\n\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = data[i++];\n                        y0 = yi = data[i++];\n                        var width = data[i++];\n                        var height = data[i++];\n                        // Use fromLine\n                        bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n                        break;\n                    case CMD.Z:\n                        xi = x0;\n                        yi = y0;\n                        break;\n                }\n\n                // Union\n                vec2.min(min, min, min2);\n                vec2.max(max, max, max2);\n            }\n\n            // No data\n            if (i === 0) {\n                min[0] = min[1] = max[0] = max[1] = 0;\n            }\n\n            return new BoundingRect(\n                min[0], min[1], max[0] - min[0], max[1] - min[1]\n            );\n        },\n\n        /**\n         * Rebuild path from current data\n         * Rebuild path will not consider javascript implemented line dash.\n         * @param {CanvasRenderingContext} ctx\n         */\n        rebuildPath: function (ctx) {\n            var d = this.data;\n            var x0, y0;\n            var xi, yi;\n            var x, y;\n            var ux = this._ux;\n            var uy = this._uy;\n            var len = this._len;\n            for (var i = 0; i < len;) {\n                var cmd = d[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = d[i];\n                    yi = d[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n                switch (cmd) {\n                    case CMD.M:\n                        x0 = xi = d[i++];\n                        y0 = yi = d[i++];\n                        ctx.moveTo(xi, yi);\n                        break;\n                    case CMD.L:\n                        x = d[i++];\n                        y = d[i++];\n                        // Not draw too small seg between\n                        if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n                            ctx.lineTo(x, y);\n                            xi = x;\n                            yi = y;\n                        }\n                        break;\n                    case CMD.C:\n                        ctx.bezierCurveTo(\n                            d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]\n                        );\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.Q:\n                        ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.A:\n                        var cx = d[i++];\n                        var cy = d[i++];\n                        var rx = d[i++];\n                        var ry = d[i++];\n                        var theta = d[i++];\n                        var dTheta = d[i++];\n                        var psi = d[i++];\n                        var fs = d[i++];\n                        var r = (rx > ry) ? rx : ry;\n                        var scaleX = (rx > ry) ? 1 : rx / ry;\n                        var scaleY = (rx > ry) ? ry / rx : 1;\n                        var isEllipse = Math.abs(rx - ry) > 1e-3;\n                        var endAngle = theta + dTheta;\n                        if (isEllipse) {\n                            ctx.translate(cx, cy);\n                            ctx.rotate(psi);\n                            ctx.scale(scaleX, scaleY);\n                            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n                            ctx.scale(1 / scaleX, 1 / scaleY);\n                            ctx.rotate(-psi);\n                            ctx.translate(-cx, -cy);\n                        }\n                        else {\n                            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n                        }\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(theta) * rx + cx;\n                            y0 = mathSin(theta) * ry + cy;\n                        }\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = d[i];\n                        y0 = yi = d[i + 1];\n                        ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n                        break;\n                    case CMD.Z:\n                        ctx.closePath();\n                        xi = x0;\n                        yi = y0;\n                }\n            }\n        }\n    };\n\n    PathProxy.CMD = CMD;\n\n    module.exports = PathProxy;\n\n\n/***/ }),\n/* 341 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// TODO Parse shadow style\n// TODO Only shallow path support\n\n    var zrUtil = __webpack_require__(317);\n\n    module.exports = function (properties) {\n        // Normalize\n        for (var i = 0; i < properties.length; i++) {\n            if (!properties[i][1]) {\n               properties[i][1] = properties[i][0];\n            }\n        }\n        return function (excludes) {\n            var style = {};\n            for (var i = 0; i < properties.length; i++) {\n                var propName = properties[i][1];\n                if (excludes && zrUtil.indexOf(excludes, propName) >= 0) {\n                    continue;\n                }\n                var val = this.getShallow(propName);\n                if (val != null) {\n                    style[properties[i][0]] = val;\n                }\n            }\n            return style;\n        };\n    };\n\n\n/***/ }),\n/* 342 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(317);\n\n    /**\n     * Interface of Coordinate System Class\n     *\n     * create:\n     *     @param {module:echarts/model/Global} ecModel\n     *     @param {module:echarts/ExtensionAPI} api\n     *     @return {Object} coordinate system instance\n     *\n     * update:\n     *     @param {module:echarts/model/Global} ecModel\n     *     @param {module:echarts/ExtensionAPI} api\n     *\n     * convertToPixel:\n     * convertFromPixel:\n     *     These two methods is also responsible for determine whether this\n     *     coodinate system is applicable to the given `finder`.\n     *     Each coordinate system will be tried, util one returns none\n     *     null/undefined value.\n     *     @param {module:echarts/model/Global} ecModel\n     *     @param {Object} finder\n     *     @param {Array|number} value\n     *     @return {Array|number} convert result.\n     *\n     * containPoint:\n     *     @param {Array.<number>} point In pixel coordinate system.\n     *     @return {boolean}\n     */\n\n    var coordinateSystemCreators = {};\n\n    function CoordinateSystemManager() {\n\n        this._coordinateSystems = [];\n    }\n\n    CoordinateSystemManager.prototype = {\n\n        constructor: CoordinateSystemManager,\n\n        create: function (ecModel, api) {\n            var coordinateSystems = [];\n            zrUtil.each(coordinateSystemCreators, function (creater, type) {\n                var list = creater.create(ecModel, api);\n                coordinateSystems = coordinateSystems.concat(list || []);\n            });\n\n            this._coordinateSystems = coordinateSystems;\n        },\n\n        update: function (ecModel, api) {\n            zrUtil.each(this._coordinateSystems, function (coordSys) {\n                // FIXME MUST have\n                coordSys.update && coordSys.update(ecModel, api);\n            });\n        },\n\n        getCoordinateSystems: function () {\n            return this._coordinateSystems.slice();\n        }\n    };\n\n    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n        coordinateSystemCreators[type] = coordinateSystemCreator;\n    };\n\n    CoordinateSystemManager.get = function (type) {\n        return coordinateSystemCreators[type];\n    };\n\n    module.exports = CoordinateSystemManager;\n\n\n/***/ }),\n/* 343 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var OrdinalScale = __webpack_require__(415);\n    var IntervalScale = __webpack_require__(344);\n    __webpack_require__(416);\n    __webpack_require__(414);\n    var Scale = __webpack_require__(337);\n\n    var numberUtil = __webpack_require__(320);\n    var zrUtil = __webpack_require__(317);\n    var textContain = __webpack_require__(334);\n    var axisHelper = {};\n\n    /**\n     * Get axis scale extent before niced.\n     * Item of returned array can only be number (including Infinity and NaN).\n     */\n    axisHelper.getScaleExtent = function (axis, model) {\n        var scale = axis.scale;\n        var scaleType = scale.type;\n\n        var min = model.getMin();\n        var max = model.getMax();\n        var fixMin = min != null;\n        var fixMax = max != null;\n        var originalExtent = scale.getExtent();\n\n        var axisDataLen;\n        var boundaryGap;\n        var span;\n        if (scaleType === 'ordinal') {\n            axisDataLen = (model.get('data') || []).length;\n        }\n        else {\n            boundaryGap = model.get('boundaryGap');\n            if (!zrUtil.isArray(boundaryGap)) {\n                boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n            }\n            boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n            boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n            span = originalExtent[1] - originalExtent[0];\n        }\n\n        if (min == null) {\n            min = scaleType === 'ordinal'\n                ? (axisDataLen ? 0 : NaN)\n                : originalExtent[0] - boundaryGap[0] * span;\n        }\n        if (max == null) {\n            max = scaleType === 'ordinal'\n                ? (axisDataLen ? axisDataLen - 1 : NaN)\n                : originalExtent[1] + boundaryGap[1] * span;\n        }\n\n        if (min === 'dataMin') {\n            min = originalExtent[0];\n        }\n        if (max === 'dataMax') {\n            max = originalExtent[1];\n        }\n\n        (min == null || !isFinite(min)) && (min = NaN);\n        (max == null || !isFinite(max)) && (max = NaN);\n\n        axis.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max));\n\n        // Evaluate if axis needs cross zero\n        if (model.getNeedCrossZero()) {\n            // Axis is over zero and min is not set\n            if (min > 0 && max > 0 && !fixMin) {\n                min = 0;\n            }\n            // Axis is under zero and max is not set\n            if (min < 0 && max < 0 && !fixMax) {\n                max = 0;\n            }\n        }\n\n        return [min, max];\n    };\n\n    axisHelper.niceScaleExtent = function (axis, model) {\n        var scale = axis.scale;\n        var extent = axisHelper.getScaleExtent(axis, model);\n        var fixMin = model.getMin() != null;\n        var fixMax = model.getMax() != null;\n        var splitNumber = model.get('splitNumber');\n\n        if (scale.type === 'log') {\n            scale.base = model.get('logBase');\n        }\n\n        scale.setExtent(extent[0], extent[1]);\n        scale.niceExtent(splitNumber, fixMin, fixMax);\n\n        // Use minInterval to constraint the calculated interval.\n        // If calculated interval is less than minInterval. increase the interval quantity until\n        // it is larger than minInterval.\n        // For example:\n        //  minInterval is 1, calculated interval is 0.2, so increase it to be 1. In this way we can get\n        //  an integer axis.\n        var minInterval = model.get('minInterval');\n        if (isFinite(minInterval) && !fixMin && !fixMax && scale.type === 'interval') {\n            var interval = scale.getInterval();\n            var intervalScale = Math.max(Math.abs(interval), minInterval) / interval;\n            // while (interval < minInterval) {\n            //     var quantity = numberUtil.quantity(interval);\n            //     interval = quantity * 10;\n            //     scaleQuantity *= 10;\n            // }\n            extent = scale.getExtent();\n            var origin = (extent[1] + extent[0]) / 2;\n            scale.setExtent(\n                intervalScale * (extent[0] - origin) + origin,\n                intervalScale * (extent[1] - origin) + origin\n            );\n            scale.niceExtent(splitNumber);\n        }\n\n        // If some one specified the min, max. And the default calculated interval\n        // is not good enough. He can specify the interval. It is often appeared\n        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n        // to be 60.\n        // FIXME\n        var interval = model.get('interval');\n        if (interval != null) {\n            scale.setInterval && scale.setInterval(interval);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @param {string} [axisType] Default retrieve from model.type\n     * @return {module:echarts/scale/*}\n     */\n    axisHelper.createScaleByModel = function(model, axisType) {\n        axisType = axisType || model.get('type');\n        if (axisType) {\n            switch (axisType) {\n                // Buildin scale\n                case 'category':\n                    return new OrdinalScale(\n                        model.getCategories(), [Infinity, -Infinity]\n                    );\n                case 'value':\n                    return new IntervalScale();\n                // Extended scale, like time and log\n                default:\n                    return (Scale.getClass(axisType) || IntervalScale).create(model);\n            }\n        }\n    };\n\n    /**\n     * Check if the axis corss 0\n     */\n    axisHelper.ifAxisCrossZero = function (axis) {\n        var dataExtent = axis.scale.getExtent();\n        var min = dataExtent[0];\n        var max = dataExtent[1];\n        return !((min > 0 && max > 0) || (min < 0 && max < 0));\n    };\n\n    /**\n     * @param {Array.<number>} tickCoords In axis self coordinate.\n     * @param {Array.<string>} labels\n     * @param {string} font\n     * @param {boolean} isAxisHorizontal\n     * @return {number}\n     */\n    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {\n        // FIXME\n        // 不同角的axis和label，不只是horizontal和vertical.\n\n        var textSpaceTakenRect;\n        var autoLabelInterval = 0;\n        var accumulatedLabelInterval = 0;\n\n        var step = 1;\n        if (labels.length > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.floor(labels.length / 40);\n        }\n\n        for (var i = 0; i < tickCoords.length; i += step) {\n            var tickCoord = tickCoords[i];\n            var rect = textContain.getBoundingRect(\n                labels[i], font, 'center', 'top'\n            );\n            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;\n            // FIXME Magic number 1.5\n            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;\n            if (!textSpaceTakenRect) {\n                textSpaceTakenRect = rect.clone();\n            }\n            // There is no space for current label;\n            else if (textSpaceTakenRect.intersect(rect)) {\n                accumulatedLabelInterval++;\n                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n            }\n            else {\n                textSpaceTakenRect.union(rect);\n                // Reset\n                accumulatedLabelInterval = 0;\n            }\n        }\n        if (autoLabelInterval === 0 && step > 1) {\n            return step;\n        }\n        return (autoLabelInterval + 1) * step - 1;\n    };\n\n    /**\n     * @param {Object} axis\n     * @param {Function} labelFormatter\n     * @return {Array.<string>}\n     */\n    axisHelper.getFormattedLabels = function (axis, labelFormatter) {\n        var scale = axis.scale;\n        var labels = scale.getTicksLabels();\n        var ticks = scale.getTicks();\n        if (typeof labelFormatter === 'string') {\n            labelFormatter = (function (tpl) {\n                return function (val) {\n                    return tpl.replace('{value}', val != null ? val : '');\n                };\n            })(labelFormatter);\n            // Consider empty array\n            return zrUtil.map(labels, labelFormatter);\n        }\n        else if (typeof labelFormatter === 'function') {\n            return zrUtil.map(ticks, function (tick, idx) {\n                return labelFormatter(\n                    axis.type === 'category' ? scale.getLabel(tick) : tick,\n                    idx\n                );\n            }, this);\n        }\n        else {\n            return labels;\n        }\n    };\n\n    module.exports = axisHelper;\n\n\n/***/ }),\n/* 344 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\n\n\n\n    var numberUtil = __webpack_require__(320);\n    var formatUtil = __webpack_require__(324);\n    var Scale = __webpack_require__(337);\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n    /**\n     * @alias module:echarts/coord/scale/Interval\n     * @constructor\n     */\n    var IntervalScale = Scale.extend({\n\n        type: 'interval',\n\n        _interval: 0,\n\n        setExtent: function (start, end) {\n            var thisExtent = this._extent;\n            //start,end may be a Number like '25',so...\n            if (!isNaN(start)) {\n                thisExtent[0] = parseFloat(start);\n            }\n            if (!isNaN(end)) {\n                thisExtent[1] = parseFloat(end);\n            }\n        },\n\n        unionExtent: function (other) {\n            var extent = this._extent;\n            other[0] < extent[0] && (extent[0] = other[0]);\n            other[1] > extent[1] && (extent[1] = other[1]);\n\n            // unionExtent may called by it's sub classes\n            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n        },\n        /**\n         * Get interval\n         */\n        getInterval: function () {\n            if (!this._interval) {\n                this.niceTicks();\n            }\n            return this._interval;\n        },\n\n        /**\n         * Set interval\n         */\n        setInterval: function (interval) {\n            this._interval = interval;\n            // Dropped auto calculated niceExtent and use user setted extent\n            // We assume user wan't to set both interval, min, max to get a better result\n            this._niceExtent = this._extent.slice();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            if (!this._interval) {\n                this.niceTicks();\n            }\n            var interval = this._interval;\n            var extent = this._extent;\n            var ticks = [];\n\n            // Consider this case: using dataZoom toolbox, zoom and zoom.\n            var safeLimit = 10000;\n\n            if (interval) {\n                var niceExtent = this._niceExtent;\n                var precision = getPrecisionSafe(interval) + 2;\n\n                if (extent[0] < niceExtent[0]) {\n                    ticks.push(extent[0]);\n                }\n                var tick = niceExtent[0];\n\n                while (tick <= niceExtent[1]) {\n                    ticks.push(tick);\n                    // Avoid rounding error\n                    tick = roundingErrorFix(tick + interval, precision);\n                    if (ticks.length > safeLimit) {\n                        return [];\n                    }\n                }\n                // Consider this case: the last item of ticks is smaller\n                // than niceExtent[1] and niceExtent[1] === extent[1].\n                if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceExtent[1])) {\n                    ticks.push(extent[1]);\n                }\n            }\n\n            return ticks;\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getTicksLabels: function () {\n            var labels = [];\n            var ticks = this.getTicks();\n            for (var i = 0; i < ticks.length; i++) {\n                labels.push(this.getLabel(ticks[i]));\n            }\n            return labels;\n        },\n\n        /**\n         * @param {number} n\n         * @return {number}\n         */\n        getLabel: function (data) {\n            return formatUtil.addCommas(data);\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         *\n         * @param {number} [splitNumber = 5] Desired number of ticks\n         */\n        niceTicks: function (splitNumber) {\n            splitNumber = splitNumber || 5;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (!isFinite(span)) {\n                return;\n            }\n            // User may set axis min 0 and data are all negative\n            // FIXME If it needs to reverse ?\n            if (span < 0) {\n                span = -span;\n                extent.reverse();\n            }\n\n            // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n            // var niceSpan = numberUtil.nice(span, false);\n            var step = roundingErrorFix(\n                numberUtil.nice(span / splitNumber, true),\n                Math.max(\n                    getPrecisionSafe(extent[0]),\n                    getPrecisionSafe(extent[1])\n                // extent may be [0, 1], and step should have 1 more digits.\n                // To make it safe we add 2 more digits\n                ) + 2\n            );\n\n            var precision = getPrecisionSafe(step) + 2;\n            // Niced extent inside original extent\n            var niceExtent = [\n                roundingErrorFix(mathCeil(extent[0] / step) * step, precision),\n                roundingErrorFix(mathFloor(extent[1] / step) * step, precision)\n            ];\n\n            this._interval = step;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {number} [splitNumber = 5] Given approx tick number\n         * @param {boolean} [fixMin=false]\n         * @param {boolean} [fixMax=false]\n         */\n        niceExtent: function (splitNumber, fixMin, fixMax) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                if (extent[0] !== 0) {\n                    // Expand extent\n                    var expandSize = extent[0];\n                    // In the fowllowing case\n                    //      Axis has been fixed max 100\n                    //      Plus data are all 100 and axis extent are [100, 100].\n                    // Extend to the both side will cause expanded max is larger than fixed max.\n                    // So only expand to the smaller side.\n                    if (!fixMax) {\n                        extent[1] += expandSize / 2;\n                        extent[0] -= expandSize / 2;\n                    }\n                    else {\n                        extent[0] -= expandSize / 2;\n                    }\n                }\n                else {\n                    extent[1] = 1;\n                }\n            }\n            var span = extent[1] - extent[0];\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (!isFinite(span)) {\n                extent[0] = 0;\n                extent[1] = 1;\n            }\n\n            this.niceTicks(splitNumber);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!fixMin) {\n                extent[0] = roundingErrorFix(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!fixMax) {\n                extent[1] = roundingErrorFix(mathCeil(extent[1] / interval) * interval);\n            }\n        }\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    IntervalScale.create = function () {\n        return new IntervalScale();\n    };\n\n    module.exports = IntervalScale;\n\n\n\n/***/ }),\n/* 345 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(317);\n    var clazz = __webpack_require__(328);\n\n    var parseClassType = clazz.parseClassType;\n\n    var base = 0;\n\n    var componentUtil = {};\n\n    var DELIMITER = '_';\n\n    /**\n     * @public\n     * @param {string} type\n     * @return {string}\n     */\n    componentUtil.getUID = function (type) {\n        // Considering the case of crossing js context,\n        // use Math.random to make id as unique as possible.\n        return [(type || ''), base++, Math.random()].join(DELIMITER);\n    };\n\n    /**\n     * @inner\n     */\n    componentUtil.enableSubTypeDefaulter = function (entity) {\n\n        var subTypeDefaulters = {};\n\n        entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n            componentType = parseClassType(componentType);\n            subTypeDefaulters[componentType.main] = defaulter;\n        };\n\n        entity.determineSubType = function (componentType, option) {\n            var type = option.type;\n            if (!type) {\n                var componentTypeMain = parseClassType(componentType).main;\n                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n                    type = subTypeDefaulters[componentTypeMain](option);\n                }\n            }\n            return type;\n        };\n\n        return entity;\n    };\n\n    /**\n     * Topological travel on Activity Network (Activity On Vertices).\n     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n     *\n     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n     *\n     * If there is circle dependencey, Error will be thrown.\n     *\n     */\n    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {\n\n        /**\n         * @public\n         * @param {Array.<string>} targetNameList Target Component type list.\n         *                                           Can be ['aa', 'bb', 'aa.xx']\n         * @param {Array.<string>} fullNameList By which we can build dependency graph.\n         * @param {Function} callback Params: componentType, dependencies.\n         * @param {Object} context Scope of callback.\n         */\n        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n            if (!targetNameList.length) {\n                return;\n            }\n\n            var result = makeDepndencyGraph(fullNameList);\n            var graph = result.graph;\n            var stack = result.noEntryList;\n\n            var targetNameSet = {};\n            zrUtil.each(targetNameList, function (name) {\n                targetNameSet[name] = true;\n            });\n\n            while (stack.length) {\n                var currComponentType = stack.pop();\n                var currVertex = graph[currComponentType];\n                var isInTargetNameSet = !!targetNameSet[currComponentType];\n                if (isInTargetNameSet) {\n                    callback.call(context, currComponentType, currVertex.originalDeps.slice());\n                    delete targetNameSet[currComponentType];\n                }\n                zrUtil.each(\n                    currVertex.successor,\n                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge\n                );\n            }\n\n            zrUtil.each(targetNameSet, function () {\n                throw new Error('Circle dependency may exists');\n            });\n\n            function removeEdge(succComponentType) {\n                graph[succComponentType].entryCount--;\n                if (graph[succComponentType].entryCount === 0) {\n                    stack.push(succComponentType);\n                }\n            }\n\n            // Consider this case: legend depends on series, and we call\n            // chart.setOption({series: [...]}), where only series is in option.\n            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n            // not be called, but only sereis.mergeOption is called. Thus legend\n            // have no chance to update its local record about series (like which\n            // name of series is available in legend).\n            function removeEdgeAndAdd(succComponentType) {\n                targetNameSet[succComponentType] = true;\n                removeEdge(succComponentType);\n            }\n        };\n\n        /**\n         * DepndencyGraph: {Object}\n         * key: conponentType,\n         * value: {\n         *     successor: [conponentTypes...],\n         *     originalDeps: [conponentTypes...],\n         *     entryCount: {number}\n         * }\n         */\n        function makeDepndencyGraph(fullNameList) {\n            var graph = {};\n            var noEntryList = [];\n\n            zrUtil.each(fullNameList, function (name) {\n\n                var thisItem = createDependencyGraphItem(graph, name);\n                var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n\n                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n                thisItem.entryCount = availableDeps.length;\n                if (thisItem.entryCount === 0) {\n                    noEntryList.push(name);\n                }\n\n                zrUtil.each(availableDeps, function (dependentName) {\n                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n                        thisItem.predecessor.push(dependentName);\n                    }\n                    var thatItem = createDependencyGraphItem(graph, dependentName);\n                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n                        thatItem.successor.push(name);\n                    }\n                });\n            });\n\n            return {graph: graph, noEntryList: noEntryList};\n        }\n\n        function createDependencyGraphItem(graph, name) {\n            if (!graph[name]) {\n                graph[name] = {predecessor: [], successor: []};\n            }\n            return graph[name];\n        }\n\n        function getAvailableDependencies(originalDeps, fullNameList) {\n            var availableDeps = [];\n            zrUtil.each(originalDeps, function (dep) {\n                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n            });\n            return availableDeps;\n        }\n    };\n\n    module.exports = componentUtil;\n\n\n/***/ }),\n/* 346 */\n/***/ (function(module, exports) {\n\n// https://github.com/mziccard/node-timsort\n\n    var DEFAULT_MIN_MERGE = 32;\n\n    var DEFAULT_MIN_GALLOPING = 7;\n\n    var DEFAULT_TMP_STORAGE_LENGTH = 256;\n\n    function minRunLength(n) {\n        var r = 0;\n\n        while (n >= DEFAULT_MIN_MERGE) {\n            r |= n & 1;\n            n >>= 1;\n        }\n\n        return n + r;\n    }\n\n    function makeAscendingRun(array, lo, hi, compare) {\n        var runHi = lo + 1;\n\n        if (runHi === hi) {\n            return 1;\n        }\n\n        if (compare(array[runHi++], array[lo]) < 0) {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n                runHi++;\n            }\n\n            reverseRun(array, lo, runHi);\n        }\n        else {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n                runHi++;\n            }\n        }\n\n        return runHi - lo;\n    }\n\n    function reverseRun(array, lo, hi) {\n        hi--;\n\n        while (lo < hi) {\n            var t = array[lo];\n            array[lo++] = array[hi];\n            array[hi--] = t;\n        }\n    }\n\n    function binaryInsertionSort(array, lo, hi, start, compare) {\n        if (start === lo) {\n            start++;\n        }\n\n        for (; start < hi; start++) {\n            var pivot = array[start];\n\n            var left = lo;\n            var right = start;\n            var mid;\n\n            while (left < right) {\n                mid = left + right >>> 1;\n\n                if (compare(pivot, array[mid]) < 0) {\n                    right = mid;\n                }\n                else {\n                    left = mid + 1;\n                }\n            }\n\n            var n = start - left;\n\n            switch (n) {\n                case 3:\n                    array[left + 3] = array[left + 2];\n\n                case 2:\n                    array[left + 2] = array[left + 1];\n\n                case 1:\n                    array[left + 1] = array[left];\n                    break;\n                default:\n                    while (n > 0) {\n                        array[left + n] = array[left + n - 1];\n                        n--;\n                    }\n            }\n\n            array[left] = pivot;\n        }\n    }\n\n    function gallopLeft(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) > 0) {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n        else {\n            maxOffset = hint + 1;\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n\n        lastOffset++;\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) > 0) {\n                lastOffset = m + 1;\n            }\n            else {\n                offset = m;\n            }\n        }\n        return offset;\n    }\n\n    function gallopRight(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) < 0) {\n            maxOffset = hint + 1;\n\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n        else {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n\n        lastOffset++;\n\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) < 0) {\n                offset = m;\n            }\n            else {\n                lastOffset = m + 1;\n            }\n        }\n\n        return offset;\n    }\n\n    function TimSort(array, compare) {\n        var minGallop = DEFAULT_MIN_GALLOPING;\n        var length = 0;\n        var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n        var stackLength = 0;\n        var runStart;\n        var runLength;\n        var stackSize = 0;\n\n        length = array.length;\n\n        if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n            tmpStorageLength = length >>> 1;\n        }\n\n        var tmp = [];\n\n        stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n\n        runStart = [];\n        runLength = [];\n\n        function pushRun(_runStart, _runLength) {\n            runStart[stackSize] = _runStart;\n            runLength[stackSize] = _runLength;\n            stackSize += 1;\n        }\n\n        function mergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n                    if (runLength[n - 1] < runLength[n + 1]) {\n                        n--;\n                    }\n                }\n                else if (runLength[n] > runLength[n + 1]) {\n                    break;\n                }\n                mergeAt(n);\n            }\n        }\n\n        function forceMergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n                    n--;\n                }\n\n                mergeAt(n);\n            }\n        }\n\n        function mergeAt(i) {\n            var start1 = runStart[i];\n            var length1 = runLength[i];\n            var start2 = runStart[i + 1];\n            var length2 = runLength[i + 1];\n\n            runLength[i] = length1 + length2;\n\n            if (i === stackSize - 3) {\n                runStart[i + 1] = runStart[i + 2];\n                runLength[i + 1] = runLength[i + 2];\n            }\n\n            stackSize--;\n\n            var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n            start1 += k;\n            length1 -= k;\n\n            if (length1 === 0) {\n                return;\n            }\n\n            length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n            if (length2 === 0) {\n                return;\n            }\n\n            if (length1 <= length2) {\n                mergeLow(start1, length1, start2, length2);\n            }\n            else {\n                mergeHigh(start1, length1, start2, length2);\n            }\n        }\n\n        function mergeLow(start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length1; i++) {\n                tmp[i] = array[start1 + i];\n            }\n\n            var cursor1 = 0;\n            var cursor2 = start2;\n            var dest = start1;\n\n            array[dest++] = array[cursor2++];\n\n            if (--length2 === 0) {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n                return;\n            }\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n                return;\n            }\n\n            var _minGallop = minGallop;\n            var count1, count2, exit;\n\n            while (1) {\n                count1 = 0;\n                count2 = 0;\n                exit = false;\n\n                do {\n                    if (compare(array[cursor2], tmp[cursor1]) < 0) {\n                        array[dest++] = array[cursor2++];\n                        count2++;\n                        count1 = 0;\n\n                        if (--length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest++] = tmp[cursor1++];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n                    if (count1 !== 0) {\n                        for (i = 0; i < count1; i++) {\n                            array[dest + i] = tmp[cursor1 + i];\n                        }\n\n                        dest += count1;\n                        cursor1 += count1;\n                        length1 -= count1;\n                        if (length1 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest++] = array[cursor2++];\n\n                    if (--length2 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n                    if (count2 !== 0) {\n                        for (i = 0; i < count2; i++) {\n                            array[dest + i] = array[cursor2 + i];\n                        }\n\n                        dest += count2;\n                        cursor2 += count2;\n                        length2 -= count2;\n\n                        if (length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    array[dest++] = tmp[cursor1++];\n\n                    if (--length1 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            minGallop < 1 && (minGallop = 1);\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n            }\n            else if (length1 === 0) {\n                throw new Error();\n                // throw new Error('mergeLow preconditions were not respected');\n            }\n            else {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n            }\n        }\n\n        function mergeHigh (start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length2; i++) {\n                tmp[i] = array[start2 + i];\n            }\n\n            var cursor1 = start1 + length1 - 1;\n            var cursor2 = length2 - 1;\n            var dest = start2 + length2 - 1;\n            var customCursor = 0;\n            var customDest = 0;\n\n            array[dest--] = array[cursor1--];\n\n            if (--length1 === 0) {\n                customCursor = dest - (length2 - 1);\n\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n\n                return;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n                return;\n            }\n\n            var _minGallop = minGallop;\n\n            while (true) {\n                var count1 = 0;\n                var count2 = 0;\n                var exit = false;\n\n                do {\n                    if (compare(tmp[cursor2], array[cursor1]) < 0) {\n                        array[dest--] = array[cursor1--];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest--] = tmp[cursor2--];\n                        count2++;\n                        count1 = 0;\n                        if (--length2 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n                    if (count1 !== 0) {\n                        dest -= count1;\n                        cursor1 -= count1;\n                        length1 -= count1;\n                        customDest = dest + 1;\n                        customCursor = cursor1 + 1;\n\n                        for (i = count1 - 1; i >= 0; i--) {\n                            array[customDest + i] = array[customCursor + i];\n                        }\n\n                        if (length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = tmp[cursor2--];\n\n                    if (--length2 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n                    if (count2 !== 0) {\n                        dest -= count2;\n                        cursor2 -= count2;\n                        length2 -= count2;\n                        customDest = dest + 1;\n                        customCursor = cursor2 + 1;\n\n                        for (i = 0; i < count2; i++) {\n                            array[customDest + i] = tmp[customCursor + i];\n                        }\n\n                        if (length2 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = array[cursor1--];\n\n                    if (--length1 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            if (minGallop < 1) {\n                minGallop = 1;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n            }\n            else if (length2 === 0) {\n                throw new Error();\n                // throw new Error('mergeHigh preconditions were not respected');\n            }\n            else {\n                customCursor = dest - (length2 - 1);\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n            }\n        }\n\n        this.mergeRuns = mergeRuns;\n        this.forceMergeRuns = forceMergeRuns;\n        this.pushRun = pushRun;\n    }\n\n    function sort(array, compare, lo, hi) {\n        if (!lo) {\n            lo = 0;\n        }\n        if (!hi) {\n            hi = array.length;\n        }\n\n        var remaining = hi - lo;\n\n        if (remaining < 2) {\n            return;\n        }\n\n        var runLength = 0;\n\n        if (remaining < DEFAULT_MIN_MERGE) {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n            return;\n        }\n\n        var ts = new TimSort(array, compare);\n\n        var minRun = minRunLength(remaining);\n\n        do {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            if (runLength < minRun) {\n                var force = remaining;\n                if (force > minRun) {\n                    force = minRun;\n                }\n\n                binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n                runLength = force;\n            }\n\n            ts.pushRun(lo, runLength);\n            ts.mergeRuns();\n\n            remaining -= runLength;\n            lo += runLength;\n        } while (remaining !== 0);\n\n        ts.forceMergeRuns();\n    }\n\n    module.exports = sort;\n\n\n/***/ }),\n/* 347 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n\n\n    var zrUtil = __webpack_require__(317);\n\n    var Style = __webpack_require__(367);\n\n    var Element = __webpack_require__(359);\n    var RectText = __webpack_require__(442);\n    // var Stateful = require('./mixin/Stateful');\n\n    /**\n     * @alias module:zrender/graphic/Displayable\n     * @extends module:zrender/Element\n     * @extends module:zrender/graphic/mixin/RectText\n     */\n    function Displayable(opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        // Extend properties\n        for (var name in opts) {\n            if (\n                opts.hasOwnProperty(name) &&\n                name !== 'style'\n            ) {\n                this[name] = opts[name];\n            }\n        }\n\n        /**\n         * @type {module:zrender/graphic/Style}\n         */\n        this.style = new Style(opts.style);\n\n        this._rect = null;\n        // Shapes for cascade clipping.\n        this.__clipPaths = [];\n\n        // FIXME Stateful must be mixined after style is setted\n        // Stateful.call(this, opts);\n    }\n\n    Displayable.prototype = {\n\n        constructor: Displayable,\n\n        type: 'displayable',\n\n        /**\n         * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n         * Dirty flag. From which painter will determine if this displayable object needs brush\n         * @name module:zrender/graphic/Displayable#__dirty\n         * @type {boolean}\n         */\n        __dirty: true,\n\n        /**\n         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n         * If ignore drawing of the displayable object. Mouse event will still be triggered\n         * @name module:/zrender/graphic/Displayable#invisible\n         * @type {boolean}\n         * @default false\n         */\n        invisible: false,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z: 0,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z2: 0,\n\n        /**\n         * z层level，决定绘画在哪层canvas中\n         * @name module:/zrender/graphic/Displayable#zlevel\n         * @type {number}\n         * @default 0\n         */\n        zlevel: 0,\n\n        /**\n         * 是否可拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        draggable: false,\n\n        /**\n         * 是否正在拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        dragging: false,\n\n        /**\n         * 是否相应鼠标事件\n         * @name module:/zrender/graphic/Displayable#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * If enable culling\n         * @type {boolean}\n         * @default false\n         */\n        culling: false,\n\n        /**\n         * Mouse cursor when hovered\n         * @name module:/zrender/graphic/Displayable#cursor\n         * @type {string}\n         */\n        cursor: 'pointer',\n\n        /**\n         * If hover area is bounding rect\n         * @name module:/zrender/graphic/Displayable#rectHover\n         * @type {string}\n         */\n        rectHover: false,\n\n        /**\n         * Render the element progressively when the value >= 0,\n         * usefull for large data.\n         * @type {number}\n         */\n        progressive: -1,\n\n        beforeBrush: function (ctx) {},\n\n        afterBrush: function (ctx) {},\n\n        /**\n         * 图形绘制方法\n         * @param {Canvas2DRenderingContext} ctx\n         */\n        // Interface\n        brush: function (ctx, prevEl) {},\n\n        /**\n         * 获取最小包围盒\n         * @return {module:zrender/core/BoundingRect}\n         */\n        // Interface\n        getBoundingRect: function () {},\n\n        /**\n         * 判断坐标 x, y 是否在图形上\n         * If displayable element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        contain: function (x, y) {\n            return this.rectContain(x, y);\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            cb.call(context, this);\n        },\n\n        /**\n         * 判断坐标 x, y 是否在图形的包围盒上\n         * If bounding rect of element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        rectContain: function (x, y) {\n            var coord = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            return rect.contain(coord[0], coord[1]);\n        },\n\n        /**\n         * 标记图形元素为脏，并且在下一帧重绘\n         * Mark displayable element dirty and refresh next frame\n         */\n        dirty: function () {\n            this.__dirty = true;\n\n            this._rect = null;\n\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * 图形是否会触发事件\n         * If displayable object binded any event\n         * @return {boolean}\n         */\n        // TODO, 通过 bind 绑定的事件\n        // isSilent: function () {\n        //     return !(\n        //         this.hoverable || this.draggable\n        //         || this.onmousemove || this.onmouseover || this.onmouseout\n        //         || this.onmousedown || this.onmouseup || this.onclick\n        //         || this.ondragenter || this.ondragover || this.ondragleave\n        //         || this.ondrop\n        //     );\n        // },\n        /**\n         * Alias for animate('style')\n         * @param {boolean} loop\n         */\n        animateStyle: function (loop) {\n            return this.animate('style', loop);\n        },\n\n        attrKV: function (key, value) {\n            if (key !== 'style') {\n                Element.prototype.attrKV.call(this, key, value);\n            }\n            else {\n                this.style.set(value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setStyle: function (key, value) {\n            this.style.set(key, value);\n            this.dirty(false);\n            return this;\n        },\n\n        /**\n         * Use given style object\n         * @param  {Object} obj\n         */\n        useStyle: function (obj) {\n            this.style = new Style(obj);\n            this.dirty(false);\n            return this;\n        }\n    };\n\n    zrUtil.inherits(Displayable, Element);\n\n    zrUtil.mixin(Displayable, RectText);\n    // zrUtil.mixin(Displayable, Stateful);\n\n    module.exports = Displayable;\n\n\n/***/ }),\n/* 348 */\n/***/ (function(module, exports) {\n\n\n\n    /**\n     * @param {Array.<Object>} colorStops\n     */\n    var Gradient = function (colorStops) {\n\n        this.colorStops = colorStops || [];\n    };\n\n    Gradient.prototype = {\n\n        constructor: Gradient,\n\n        addColorStop: function (offset, color) {\n            this.colorStops.push({\n\n                offset: offset,\n\n                color: color\n            });\n        }\n    };\n\n    module.exports = Gradient;\n\n\n/***/ }),\n/* 349 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(317);\n    var formatUtil = __webpack_require__(324);\n    var classUtil = __webpack_require__(328);\n    var modelUtil = __webpack_require__(325);\n    var ComponentModel = __webpack_require__(329);\n    var colorPaletteMixin = __webpack_require__(356);\n    var env = __webpack_require__(323);\n    var layout = __webpack_require__(330);\n\n    var set = classUtil.set;\n    var get = classUtil.get;\n    var encodeHTML = formatUtil.encodeHTML;\n    var addCommas = formatUtil.addCommas;\n\n    var SeriesModel = ComponentModel.extend({\n\n        type: 'series.__base__',\n\n        /**\n         * @readOnly\n         */\n        seriesIndex: 0,\n\n        // coodinateSystem will be injected in the echarts/CoordinateSystem\n        coordinateSystem: null,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * Data provided for legend\n         * @type {Function}\n         */\n        // PENDING\n        legendDataProvider: null,\n\n        /**\n         * Access path of color for visual\n         */\n        visualColorAccessPath: 'itemStyle.normal.color',\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            /**\n             * @type {number}\n             * @readOnly\n             */\n            this.seriesIndex = this.componentIndex;\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            /**\n             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n             * @private\n             */\n            set(this, 'dataBeforeProcessed', this.getInitialData(option, ecModel));\n\n            // If we reverse the order (make data firstly, and then make\n            // dataBeforeProcessed by cloneShallow), cloneShallow will\n            // cause data.graph.data !== data when using\n            // module:echarts/data/Graph or module:echarts/data/Tree.\n            // See module:echarts/data/helper/linkList\n            this.restoreData();\n        },\n\n        /**\n         * Util for merge default and theme to option\n         * @param  {Object} option\n         * @param  {module:echarts/model/Global} ecModel\n         */\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            zrUtil.merge(\n                option,\n                ecModel.getTheme().get(this.subType)\n            );\n            zrUtil.merge(option, this.getDefaultOption());\n\n            // Default label emphasis `position` and `show`\n            // FIXME Set label in mergeOption\n            modelUtil.defaultEmphasis(option.label, modelUtil.LABEL_OPTIONS);\n\n            this.fillDataTextStyle(option.data);\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (newSeriesOption, ecModel) {\n            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n            this.fillDataTextStyle(newSeriesOption.data);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n            }\n\n            var data = this.getInitialData(newSeriesOption, ecModel);\n            // TODO Merge data?\n            if (data) {\n                set(this, 'data', data);\n                set(this, 'dataBeforeProcessed', data.cloneShallow());\n            }\n        },\n\n        fillDataTextStyle: function (data) {\n            // Default data label emphasis `position` and `show`\n            // FIXME Tree structure data ?\n            // FIXME Performance ?\n            if (data) {\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i] && data[i].label) {\n                        modelUtil.defaultEmphasis(data[i].label, modelUtil.LABEL_OPTIONS);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Init a data structure from data related option in series\n         * Must be overwritten\n         */\n        getInitialData: function () {},\n\n        /**\n         * @param {string} [dataType]\n         * @return {module:echarts/data/List}\n         */\n        getData: function (dataType) {\n            var data = get(this, 'data');\n            return dataType == null ? data : data.getLinkedData(dataType);\n        },\n\n        /**\n         * @param {module:echarts/data/List} data\n         */\n        setData: function (data) {\n            set(this, 'data', data);\n        },\n\n        /**\n         * Get data before processed\n         * @return {module:echarts/data/List}\n         */\n        getRawData: function () {\n            return get(this, 'dataBeforeProcessed');\n        },\n\n        /**\n         * Coord dimension to data dimension.\n         *\n         * By default the result is the same as dimensions of series data.\n         * But in some series data dimensions are different from coord dimensions (i.e.\n         * candlestick and boxplot). Override this method to handle those cases.\n         *\n         * Coord dimension to data dimension can be one-to-many\n         *\n         * @param {string} coordDim\n         * @return {Array.<string>} dimensions on the axis.\n         */\n        coordDimToDataDim: function (coordDim) {\n            return [coordDim];\n        },\n\n        /**\n         * Convert data dimension to coord dimension.\n         *\n         * @param {string|number} dataDim\n         * @return {string}\n         */\n        dataDimToCoordDim: function (dataDim) {\n            return dataDim;\n        },\n\n        /**\n         * Get base axis if has coordinate system and has axis.\n         * By default use coordSys.getBaseAxis();\n         * Can be overrided for some chart.\n         * @return {type} description\n         */\n        getBaseAxis: function () {\n            var coordSys = this.coordinateSystem;\n            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n        },\n\n        // FIXME\n        /**\n         * Default tooltip formatter\n         *\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         */\n        formatTooltip: function (dataIndex, multipleSeries, dataType) {\n            function formatArrayValue(value) {\n                var result = [];\n\n                zrUtil.each(value, function (val, idx) {\n                    var dimInfo = data.getDimensionInfo(idx);\n                    var dimType = dimInfo && dimInfo.type;\n                    var valStr;\n\n                    if (dimType === 'ordinal') {\n                        valStr = val + '';\n                    }\n                    else if (dimType === 'time') {\n                        valStr = multipleSeries ? '' : formatUtil.formatTime('yyyy/MM/dd hh:mm:ss', val);\n                    }\n                    else {\n                        valStr = addCommas(val);\n                    }\n\n                    valStr && result.push(valStr);\n                });\n\n                return result.join(', ');\n            }\n\n            var data = get(this, 'data');\n\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = encodeHTML(\n                zrUtil.isArray(value) ? formatArrayValue(value) : addCommas(value)\n            );\n            var name = data.getName(dataIndex);\n\n            var color = data.getItemVisual(dataIndex, 'color');\n            if (zrUtil.isObject(color) && color.colorStops) {\n                color = (color.colorStops[0] || {}).color;\n            }\n            color = color || 'transparent';\n\n            var colorEl = '<span style=\"display:inline-block;margin-right:5px;'\n                + 'border-radius:10px;width:9px;height:9px;background-color:' + encodeHTML(color) + '\"></span>';\n\n            var seriesName = this.name;\n            // FIXME\n            if (seriesName === '\\0-') {\n                // Not show '-'\n                seriesName = '';\n            }\n            return !multipleSeries\n                ? ((seriesName && encodeHTML(seriesName) + '<br />') + colorEl\n                    + (name\n                        ? encodeHTML(name) + ' : ' + formattedValue\n                        : formattedValue\n                    )\n                  )\n                : (colorEl + encodeHTML(this.name) + ' : ' + formattedValue);\n        },\n\n        /**\n         * @return {boolean}\n         */\n        isAnimationEnabled: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var animationEnabled = this.getShallow('animation');\n            if (animationEnabled) {\n                if (this.getData().count() > this.getShallow('animationThreshold')) {\n                    animationEnabled = false;\n                }\n            }\n            return animationEnabled;\n        },\n\n        restoreData: function () {\n            set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n        },\n\n        getColorFromPalette: function (name, scope) {\n            var ecModel = this.ecModel;\n            // PENDING\n            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n            if (!color) {\n                color = ecModel.getColorFromPalette(name, scope);\n            }\n            return color;\n        },\n\n        /**\n         * Get data indices for show tooltip content. See tooltip.\n         * @abstract\n         * @param {Array.<string>|string} dim\n         * @param {Array.<number>} value\n         * @param {module:echarts/coord/single/SingleAxis} baseAxis\n         * @return {Array.<number>} data indices.\n         */\n        getAxisTooltipDataIndex: null,\n\n        /**\n         * See tooltip.\n         * @abstract\n         * @param {number} dataIndex\n         * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n         */\n        getTooltipPosition: null\n    });\n\n    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\n    zrUtil.mixin(SeriesModel, colorPaletteMixin);\n\n    module.exports = SeriesModel;\n\n\n/***/ }),\n/* 350 */,\n/* 351 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/**\n * List for data storage\n * @module echarts/data/List\n */\n\n\n    var UNDEFINED = 'undefined';\n    var globalObj = typeof window === 'undefined' ? global : window;\n    var Float64Array = typeof globalObj.Float64Array === UNDEFINED\n        ? Array : globalObj.Float64Array;\n    var Int32Array = typeof globalObj.Int32Array === UNDEFINED\n        ? Array : globalObj.Int32Array;\n\n    var dataCtors = {\n        'float': Float64Array,\n        'int': Int32Array,\n        // Ordinal data type can be string or int\n        'ordinal': Array,\n        'number': Array,\n        'time': Array\n    };\n\n    var Model = __webpack_require__(327);\n    var DataDiffer = __webpack_require__(399);\n\n    var zrUtil = __webpack_require__(317);\n    var modelUtil = __webpack_require__(325);\n    var isObject = zrUtil.isObject;\n\n    var TRANSFERABLE_PROPERTIES = [\n        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'\n    ];\n\n    var transferProperties = function (a, b) {\n        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n            if (b.hasOwnProperty(propName)) {\n                a[propName] = b[propName];\n            }\n        });\n\n        a.__wrappedMethods = b.__wrappedMethods;\n    };\n\n    /**\n     * @constructor\n     * @alias module:echarts/data/List\n     *\n     * @param {Array.<string>} dimensions\n     *        Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n     * @param {module:echarts/model/Model} hostModel\n     */\n    var List = function (dimensions, hostModel) {\n\n        dimensions = dimensions || ['x', 'y'];\n\n        var dimensionInfos = {};\n        var dimensionNames = [];\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimensionName;\n            var dimensionInfo = {};\n            if (typeof dimensions[i] === 'string') {\n                dimensionName = dimensions[i];\n                dimensionInfo = {\n                    name: dimensionName,\n                    stackable: false,\n                    // Type can be 'float', 'int', 'number'\n                    // Default is number, Precision of float may not enough\n                    type: 'number'\n                };\n            }\n            else {\n                dimensionInfo = dimensions[i];\n                dimensionName = dimensionInfo.name;\n                dimensionInfo.type = dimensionInfo.type || 'number';\n            }\n            dimensionNames.push(dimensionName);\n            dimensionInfos[dimensionName] = dimensionInfo;\n        }\n        /**\n         * @readOnly\n         * @type {Array.<string>}\n         */\n        this.dimensions = dimensionNames;\n\n        /**\n         * Infomation of each data dimension, like data type.\n         * @type {Object}\n         */\n        this._dimensionInfos = dimensionInfos;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.hostModel = hostModel;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.dataType;\n\n        /**\n         * Indices stores the indices of data subset after filtered.\n         * This data subset will be used in chart.\n         * @type {Array.<number>}\n         * @readOnly\n         */\n        this.indices = [];\n\n        /**\n         * Data storage\n         * @type {Object.<key, TypedArray|Array>}\n         * @private\n         */\n        this._storage = {};\n\n        /**\n         * @type {Array.<string>}\n         */\n        this._nameList = [];\n        /**\n         * @type {Array.<string>}\n         */\n        this._idList = [];\n        /**\n         * Models of data option is stored sparse for optimizing memory cost\n         * @type {Array.<module:echarts/model/Model>}\n         * @private\n         */\n        this._optionModels = [];\n\n        /**\n         * @param {module:echarts/data/List}\n         */\n        this.stackedOn = null;\n\n        /**\n         * Global visual properties after visual coding\n         * @type {Object}\n         * @private\n         */\n        this._visual = {};\n\n        /**\n         * Globel layout properties.\n         * @type {Object}\n         * @private\n         */\n        this._layout = {};\n\n        /**\n         * Item visual properties after visual coding\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemVisuals = [];\n\n        /**\n         * Item layout properties after layout\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemLayouts = [];\n\n        /**\n         * Graphic elemnents\n         * @type {Array.<module:zrender/Element>}\n         * @private\n         */\n        this._graphicEls = [];\n\n        /**\n         * @type {Array.<Array|Object>}\n         * @private\n         */\n        this._rawData;\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._extent;\n    };\n\n    var listProto = List.prototype;\n\n    listProto.type = 'list';\n    /**\n     * If each data item has it's own option\n     * @type {boolean}\n     */\n    listProto.hasItemOption = true;\n\n    /**\n     * Get dimension name\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     * @return {string} Concrete dim name.\n     */\n    listProto.getDimension = function (dim) {\n        if (!isNaN(dim)) {\n            dim = this.dimensions[dim] || dim;\n        }\n        return dim;\n    };\n    /**\n     * Get type and stackable info of particular dimension\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     */\n    listProto.getDimensionInfo = function (dim) {\n        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n    };\n\n    /**\n     * Initialize from data\n     * @param {Array.<Object|number|Array>} data\n     * @param {Array.<string>} [nameList]\n     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n     */\n    listProto.initData = function (data, nameList, dimValueGetter) {\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        this._rawData = data;\n\n        // Clear\n        var storage = this._storage = {};\n        var indices = this.indices = [];\n\n        var dimensions = this.dimensions;\n        var size = data.length;\n        var dimensionInfoMap = this._dimensionInfos;\n\n        var idList = [];\n        var nameRepeatCount = {};\n\n        nameList = nameList || [];\n\n        // Init storage\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimInfo = dimensionInfoMap[dimensions[i]];\n            var DataCtor = dataCtors[dimInfo.type];\n            storage[dimensions[i]] = new DataCtor(size);\n        }\n\n        var self = this;\n        if (!dimValueGetter) {\n            self.hasItemOption = false;\n        }\n        // Default dim value getter\n        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n            var value = modelUtil.getDataItemValue(dataItem);\n            // If any dataItem is like { value: 10 }\n            if (modelUtil.isDataItemOption(dataItem)) {\n                self.hasItemOption = true;\n            }\n            return modelUtil.converDataValue(\n                (value instanceof Array)\n                    ? value[dimIndex]\n                    // If value is a single number or something else not array.\n                    : value,\n                dimensionInfoMap[dimName]\n            );\n        };\n\n        for (var idx = 0; idx < data.length; idx++) {\n            var dataItem = data[idx];\n            // Each data item is value\n            // [1, 2]\n            // 2\n            // Bar chart, line chart which uses category axis\n            // only gives the 'y' value. 'x' value is the indices of cateogry\n            // Use a tempValue to normalize the value to be a (x, y) value\n\n            // Store the data by dimensions\n            for (var k = 0; k < dimensions.length; k++) {\n                var dim = dimensions[k];\n                var dimStorage = storage[dim];\n                // PENDING NULL is empty or zero\n                dimStorage[idx] = dimValueGetter(dataItem, dim, idx, k);\n            }\n\n            indices.push(idx);\n        }\n\n        // Use the name in option and create id\n        for (var i = 0; i < data.length; i++) {\n            if (!nameList[i]) {\n                if (data[i] && data[i].name != null) {\n                    nameList[i] = data[i].name;\n                }\n            }\n            var name = nameList[i] || '';\n            // Try using the id in option\n            var id = data[i] && data[i].id;\n\n            if (!id && name) {\n                // Use name as id and add counter to avoid same name\n                nameRepeatCount[name] = nameRepeatCount[name] || 0;\n                id = name;\n                if (nameRepeatCount[name] > 0) {\n                    id += '__ec__' + nameRepeatCount[name];\n                }\n                nameRepeatCount[name]++;\n            }\n            id && (idList[i] = id);\n        }\n\n        this._nameList = nameList;\n        this._idList = idList;\n    };\n\n    /**\n     * @return {number}\n     */\n    listProto.count = function () {\n        return this.indices.length;\n    };\n\n    /**\n     * Get value. Return NaN if idx is out of range.\n     * @param {string} dim Dim must be concrete name.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.get = function (dim, idx, stack) {\n        var storage = this._storage;\n        var dataIndex = this.indices[idx];\n\n        // If value not exists\n        if (dataIndex == null) {\n            return NaN;\n        }\n\n        var value = storage[dim] && storage[dim][dataIndex];\n        // FIXME ordinal data type is not stackable\n        if (stack) {\n            var dimensionInfo = this._dimensionInfos[dim];\n            if (dimensionInfo && dimensionInfo.stackable) {\n                var stackedOn = this.stackedOn;\n                while (stackedOn) {\n                    // Get no stacked data of stacked on\n                    var stackedValue = stackedOn.get(dim, idx);\n                    // Considering positive stack, negative stack and empty data\n                    if ((value >= 0 && stackedValue > 0)  // Positive stack\n                        || (value <= 0 && stackedValue < 0) // Negative stack\n                    ) {\n                        value += stackedValue;\n                    }\n                    stackedOn = stackedOn.stackedOn;\n                }\n            }\n        }\n        return value;\n    };\n\n    /**\n     * Get value for multi dimensions.\n     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.getValues = function (dimensions, idx, stack) {\n        var values = [];\n\n        if (!zrUtil.isArray(dimensions)) {\n            stack = idx;\n            idx = dimensions;\n            dimensions = this.dimensions;\n        }\n\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            values.push(this.get(dimensions[i], idx, stack));\n        }\n\n        return values;\n    };\n\n    /**\n     * If value is NaN. Inlcuding '-'\n     * @param {string} dim\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.hasValue = function (idx) {\n        var dimensions = this.dimensions;\n        var dimensionInfos = this._dimensionInfos;\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            if (\n                // Ordinal type can be string or number\n                dimensionInfos[dimensions[i]].type !== 'ordinal'\n                && isNaN(this.get(dimensions[i], idx))\n            ) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * Get extent of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     * @param {Function} filter\n     */\n    listProto.getDataExtent = function (dim, stack, filter) {\n        dim = this.getDimension(dim);\n        var dimData = this._storage[dim];\n        var dimInfo = this.getDimensionInfo(dim);\n        stack = (dimInfo && dimInfo.stackable) && stack;\n        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];\n        var value;\n        if (dimExtent) {\n            return dimExtent;\n        }\n        // var dimInfo = this._dimensionInfos[dim];\n        if (dimData) {\n            var min = Infinity;\n            var max = -Infinity;\n            // var isOrdinal = dimInfo.type === 'ordinal';\n            for (var i = 0, len = this.count(); i < len; i++) {\n                value = this.get(dim, i, stack);\n                // FIXME\n                // if (isOrdinal && typeof value === 'string') {\n                //     value = zrUtil.indexOf(dimData, value);\n                // }\n                if (!filter || filter(value, dim, i)) {\n                    value < min && (min = value);\n                    value > max && (max = value);\n                }\n            }\n            return (this._extent[dim + !!stack] = [min, max]);\n        }\n        else {\n            return [Infinity, -Infinity];\n        }\n    };\n\n    /**\n     * Get sum of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     */\n    listProto.getSum = function (dim, stack) {\n        var dimData = this._storage[dim];\n        var sum = 0;\n        if (dimData) {\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var value = this.get(dim, i, stack);\n                if (!isNaN(value)) {\n                    sum += value;\n                }\n            }\n        }\n        return sum;\n    };\n\n    /**\n     * Retreive the index with given value\n     * @param {number} idx\n     * @param {number} value\n     * @return {number}\n     */\n    // FIXME Precision of float value\n    listProto.indexOf = function (dim, value) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var indices = this.indices;\n\n        if (dimData) {\n            for (var i = 0, len = indices.length; i < len; i++) {\n                var rawIndex = indices[i];\n                if (dimData[rawIndex] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given name\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfName = function (name) {\n        var indices = this.indices;\n        var nameList = this._nameList;\n\n        for (var i = 0, len = indices.length; i < len; i++) {\n            var rawIndex = indices[i];\n            if (nameList[rawIndex] === name) {\n                return i;\n            }\n        }\n\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given raw data index\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfRawIndex = function (rawIndex) {\n        // Indices are ascending\n        var indices = this.indices;\n\n        // If rawIndex === dataIndex\n        var rawDataIndex = indices[rawIndex];\n        if (rawDataIndex != null && rawDataIndex === rawIndex) {\n            return rawIndex;\n        }\n\n        var left = 0;\n        var right = indices.length - 1;\n        while (left <= right) {\n            var mid = (left + right) / 2 | 0;\n            if (indices[mid] < rawIndex) {\n                left = mid + 1;\n            }\n            else if (indices[mid] > rawIndex) {\n                right = mid - 1;\n            }\n            else {\n                return mid;\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index of nearest value\n     * @param {string} dim\n     * @param {number} value\n     * @param {boolean} stack If given value is after stacked\n     * @param {number} [maxDistance=Infinity]\n     * @return {number}\n     */\n    listProto.indexOfNearest = function (dim, value, stack, maxDistance) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n\n        if (maxDistance == null) {\n            maxDistance = Infinity;\n        }\n\n        var nearestIdx = -1;\n        if (dimData) {\n            var minDist = Number.MAX_VALUE;\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var diff = value - this.get(dim, i, stack);\n                var dist = Math.abs(diff);\n                if (\n                    diff <= maxDistance\n                    && (dist < minDist\n                        // For the case of two data are same on xAxis, which has sequence data.\n                        // Show the nearest index\n                        // https://github.com/ecomfe/echarts/issues/2869\n                        || (dist === minDist && diff > 0)\n                    )\n                ) {\n                    minDist = dist;\n                    nearestIdx = i;\n                }\n            }\n        }\n        return nearestIdx;\n    };\n\n    /**\n     * Get raw data index\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawIndex = function (idx) {\n        var rawIdx = this.indices[idx];\n        return rawIdx == null ? -1 : rawIdx;\n    };\n\n    /**\n     * Get raw data item\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawDataItem = function (idx) {\n        return this._rawData[this.getRawIndex(idx)];\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getName = function (idx) {\n        return this._nameList[this.indices[idx]] || '';\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getId = function (idx) {\n        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');\n    };\n\n\n    function normalizeDimensions(dimensions) {\n        if (!zrUtil.isArray(dimensions)) {\n            dimensions = [dimensions];\n        }\n        return dimensions;\n    }\n\n    /**\n     * Data iteration\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     *\n     * @example\n     *  list.each('x', function (x, idx) {});\n     *  list.each(['x', 'y'], function (x, y, idx) {});\n     *  list.each(function (idx) {})\n     */\n    listProto.each = function (dims, cb, stack, context) {\n        if (typeof dims === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dims;\n            dims = [];\n        }\n\n        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n\n        var value = [];\n        var dimSize = dims.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            // Simple optimization\n            switch (dimSize) {\n                case 0:\n                    cb.call(context, i);\n                    break;\n                case 1:\n                    cb.call(context, this.get(dims[0], i, stack), i);\n                    break;\n                case 2:\n                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n                    break;\n                default:\n                    for (var k = 0; k < dimSize; k++) {\n                        value[k] = this.get(dims[k], i, stack);\n                    }\n                    // Index\n                    value[k] = i;\n                    cb.apply(context, value);\n            }\n        }\n    };\n\n    /**\n     * Data filter\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     */\n    listProto.filterSelf = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var newIndices = [];\n        var value = [];\n        var dimSize = dimensions.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            var keep;\n            // Simple optimization\n            if (dimSize === 1) {\n                keep = cb.call(\n                    context, this.get(dimensions[0], i, stack), i\n                );\n            }\n            else {\n                for (var k = 0; k < dimSize; k++) {\n                    value[k] = this.get(dimensions[k], i, stack);\n                }\n                value[k] = i;\n                keep = cb.apply(context, value);\n            }\n            if (keep) {\n                newIndices.push(indices[i]);\n            }\n        }\n\n        this.indices = newIndices;\n\n        // Reset data extent\n        this._extent = {};\n\n        return this;\n    };\n\n    /**\n     * Data mapping to a plain array\n     * @param {string|Array.<string>} [dimensions]\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.mapArray = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        var result = [];\n        this.each(dimensions, function () {\n            result.push(cb && cb.apply(this, arguments));\n        }, stack, context);\n        return result;\n    };\n\n    function cloneListForMapAndSample(original, excludeDimensions) {\n        var allDimensions = original.dimensions;\n        var list = new List(\n            zrUtil.map(allDimensions, original.getDimensionInfo, original),\n            original.hostModel\n        );\n        // FIXME If needs stackedOn, value may already been stacked\n        transferProperties(list, original);\n\n        var storage = list._storage = {};\n        var originalStorage = original._storage;\n        // Init storage\n        for (var i = 0; i < allDimensions.length; i++) {\n            var dim = allDimensions[i];\n            var dimStore = originalStorage[dim];\n            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n                storage[dim] = new dimStore.constructor(\n                    originalStorage[dim].length\n                );\n            }\n            else {\n                // Direct reference for other dimensions\n                storage[dim] = originalStorage[dim];\n            }\n        }\n        return list;\n    }\n\n    /**\n     * Data mapping to a new List with given dimensions\n     * @param {string|Array.<string>} dimensions\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.map = function (dimensions, cb, stack, context) {\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var list = cloneListForMapAndSample(this, dimensions);\n        // Following properties are all immutable.\n        // So we can reference to the same value\n        var indices = list.indices = this.indices;\n\n        var storage = list._storage;\n\n        var tmpRetValue = [];\n        this.each(dimensions, function () {\n            var idx = arguments[arguments.length - 1];\n            var retValue = cb && cb.apply(this, arguments);\n            if (retValue != null) {\n                // a number\n                if (typeof retValue === 'number') {\n                    tmpRetValue[0] = retValue;\n                    retValue = tmpRetValue;\n                }\n                for (var i = 0; i < retValue.length; i++) {\n                    var dim = dimensions[i];\n                    var dimStore = storage[dim];\n                    var rawIdx = indices[idx];\n                    if (dimStore) {\n                        dimStore[rawIdx] = retValue[i];\n                    }\n                }\n            }\n        }, stack, context);\n\n        return list;\n    };\n\n    /**\n     * Large data down sampling on given dimension\n     * @param {string} dimension\n     * @param {number} rate\n     * @param {Function} sampleValue\n     * @param {Function} sampleIndex Sample index for name and id\n     */\n    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n        var list = cloneListForMapAndSample(this, [dimension]);\n        var storage = this._storage;\n        var targetStorage = list._storage;\n\n        var originalIndices = this.indices;\n        var indices = list.indices = [];\n\n        var frameValues = [];\n        var frameIndices = [];\n        var frameSize = Math.floor(1 / rate);\n\n        var dimStore = targetStorage[dimension];\n        var len = this.count();\n        // Copy data from original data\n        for (var i = 0; i < storage[dimension].length; i++) {\n            targetStorage[dimension][i] = storage[dimension][i];\n        }\n        for (var i = 0; i < len; i += frameSize) {\n            // Last frame\n            if (frameSize > len - i) {\n                frameSize = len - i;\n                frameValues.length = frameSize;\n            }\n            for (var k = 0; k < frameSize; k++) {\n                var idx = originalIndices[i + k];\n                frameValues[k] = dimStore[idx];\n                frameIndices[k] = idx;\n            }\n            var value = sampleValue(frameValues);\n            var idx = frameIndices[sampleIndex(frameValues, value) || 0];\n            // Only write value on the filtered data\n            dimStore[idx] = value;\n            indices.push(idx);\n        }\n\n        return list;\n    };\n\n    /**\n     * Get model of one data item.\n     *\n     * @param {number} idx\n     */\n    // FIXME Model proxy ?\n    listProto.getItemModel = function (idx) {\n        var hostModel = this.hostModel;\n        idx = this.indices[idx];\n        return new Model(this._rawData[idx], hostModel, hostModel && hostModel.ecModel);\n    };\n\n    /**\n     * Create a data differ\n     * @param {module:echarts/data/List} otherList\n     * @return {module:echarts/data/DataDiffer}\n     */\n    listProto.diff = function (otherList) {\n        var idList = this._idList;\n        var otherIdList = otherList && otherList._idList;\n        var val;\n        // Use prefix to avoid index to be the same as otherIdList[idx],\n        // which will cause weird udpate animation.\n        var prefix = 'e\\0\\0';\n\n        return new DataDiffer(\n            otherList ? otherList.indices : [],\n            this.indices,\n            function (idx) {\n                return (val = otherIdList[idx]) != null ? val : prefix + idx;\n            },\n            function (idx) {\n                return (val = idList[idx]) != null ? val : prefix + idx;\n            }\n        );\n    };\n    /**\n     * Get visual property.\n     * @param {string} key\n     */\n    listProto.getVisual = function (key) {\n        var visual = this._visual;\n        return visual && visual[key];\n    };\n\n    /**\n     * Set visual property\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setVisual('color', color);\n     *  setVisual({\n     *      'color': color\n     *  });\n     */\n    listProto.setVisual = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setVisual(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._visual = this._visual || {};\n        this._visual[key] = val;\n    };\n\n    /**\n     * Set layout property.\n     * @param {string} key\n     * @param {*} [val]\n     */\n    listProto.setLayout = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setLayout(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._layout[key] = val;\n    };\n\n    /**\n     * Get layout property.\n     * @param  {string} key.\n     * @return {*}\n     */\n    listProto.getLayout = function (key) {\n        return this._layout[key];\n    };\n\n    /**\n     * Get layout of single data item\n     * @param {number} idx\n     */\n    listProto.getItemLayout = function (idx) {\n        return this._itemLayouts[idx];\n    };\n\n    /**\n     * Set layout of single data item\n     * @param {number} idx\n     * @param {Object} layout\n     * @param {boolean=} [merge=false]\n     */\n    listProto.setItemLayout = function (idx, layout, merge) {\n        this._itemLayouts[idx] = merge\n            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)\n            : layout;\n    };\n\n    /**\n     * Clear all layout of single data item\n     */\n    listProto.clearItemLayouts = function () {\n        this._itemLayouts.length = 0;\n    };\n\n    /**\n     * Get visual property of single data item\n     * @param {number} idx\n     * @param {string} key\n     * @param {boolean} ignoreParent\n     */\n    listProto.getItemVisual = function (idx, key, ignoreParent) {\n        var itemVisual = this._itemVisuals[idx];\n        var val = itemVisual && itemVisual[key];\n        if (val == null && !ignoreParent) {\n            // Use global visual property\n            return this.getVisual(key);\n        }\n        return val;\n    };\n\n    /**\n     * Set visual property of single data item\n     *\n     * @param {number} idx\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setItemVisual(0, 'color', color);\n     *  setItemVisual(0, {\n     *      'color': color\n     *  });\n     */\n    listProto.setItemVisual = function (idx, key, value) {\n        var itemVisual = this._itemVisuals[idx] || {};\n        this._itemVisuals[idx] = itemVisual;\n\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    itemVisual[name] = key[name];\n                }\n            }\n            return;\n        }\n        itemVisual[key] = value;\n    };\n\n    /**\n     * Clear itemVisuals and list visual.\n     */\n    listProto.clearAllVisual = function () {\n        this._visual = {};\n        this._itemVisuals = [];\n    };\n\n    var setItemDataAndSeriesIndex = function (child) {\n        child.seriesIndex = this.seriesIndex;\n        child.dataIndex = this.dataIndex;\n        child.dataType = this.dataType;\n    };\n    /**\n     * Set graphic element relative to data. It can be set as null\n     * @param {number} idx\n     * @param {module:zrender/Element} [el]\n     */\n    listProto.setItemGraphicEl = function (idx, el) {\n        var hostModel = this.hostModel;\n\n        if (el) {\n            // Add data index and series index for indexing the data by element\n            // Useful in tooltip\n            el.dataIndex = idx;\n            el.dataType = this.dataType;\n            el.seriesIndex = hostModel && hostModel.seriesIndex;\n            if (el.type === 'group') {\n                el.traverse(setItemDataAndSeriesIndex, el);\n            }\n        }\n\n        this._graphicEls[idx] = el;\n    };\n\n    /**\n     * @param {number} idx\n     * @return {module:zrender/Element}\n     */\n    listProto.getItemGraphicEl = function (idx) {\n        return this._graphicEls[idx];\n    };\n\n    /**\n     * @param {Function} cb\n     * @param {*} context\n     */\n    listProto.eachItemGraphicEl = function (cb, context) {\n        zrUtil.each(this._graphicEls, function (el, idx) {\n            if (el) {\n                cb && cb.call(context, el, idx);\n            }\n        });\n    };\n\n    /**\n     * Shallow clone a new list except visual and layout properties, and graph elements.\n     * New list only change the indices.\n     */\n    listProto.cloneShallow = function () {\n        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n        var list = new List(dimensionInfoList, this.hostModel);\n\n        // FIXME\n        list._storage = this._storage;\n\n        transferProperties(list, this);\n\n\n        // Clone will not change the data extent and indices\n        list.indices = this.indices.slice();\n\n        if (this._extent) {\n            list._extent = zrUtil.extend({}, this._extent);\n        }\n\n        return list;\n    };\n\n    /**\n     * Wrap some method to add more feature\n     * @param {string} methodName\n     * @param {Function} injectFunction\n     */\n    listProto.wrapMethod = function (methodName, injectFunction) {\n        var originalMethod = this[methodName];\n        if (typeof originalMethod !== 'function') {\n            return;\n        }\n        this.__wrappedMethods = this.__wrappedMethods || [];\n        this.__wrappedMethods.push(methodName);\n        this[methodName] = function () {\n            var res = originalMethod.apply(this, arguments);\n            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n        };\n    };\n\n    // Methods that create a new list based on this list should be listed here.\n    // Notice that those method should `RETURN` the new list.\n    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];\n    // Methods that change indices of this list should be listed here.\n    listProto.CHANGABLE_METHODS = ['filterSelf'];\n\n    module.exports = List;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(108)))\n\n/***/ }),\n/* 352 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _promise = __webpack_require__(22);\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nexports.default = _fetch;\nexports.fetch = fetch;\n\nvar _axios = __webpack_require__(59);\n\nvar _axios2 = _interopRequireDefault(_axios);\n\nvar _elementUi = __webpack_require__(60);\n\nvar _store = __webpack_require__(32);\n\nvar _store2 = _interopRequireDefault(_store);\n\nvar _router = __webpack_require__(31);\n\nvar _router2 = _interopRequireDefault(_router);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _fetch(options) {\n  return new _promise2.default(function (resolve, reject) {\n    var instance = _axios2.default.create({\n      baseURL: \"https://api-prod\",\n\n      headers: { 'X-Ivanka-Token': _store2.default.getters.token }\n    });\n    instance(options).then(function (response) {\n      var res = response.data;\n      if (res.code !== 20000) {\n        console.log(options);\n        (0, _elementUi.Message)({\n          message: res.message,\n          type: 'error',\n          duration: 5 * 1000\n        });\n\n        if (res.code === 50008 || res.code === 50014 || res.code === 50012) {\n          (0, _elementUi.Message)({\n            message: res.message,\n            type: 'error',\n            duration: 5 * 1000\n          });\n\n          _store2.default.dispatch('FedLogOut').then(function () {\n            _router2.default.push({ path: '/login' });\n          });\n        }\n        reject(res);\n      }\n      resolve(res);\n    }).catch(function (error) {\n      (0, _elementUi.Message)({\n        message: '发生异常错误,请刷新页面重试,或联系程序员',\n        type: 'error',\n        duration: 5 * 1000\n      });\n      console.log(error);\n      reject(error);\n    });\n  });\n}\n\nfunction fetch(options) {\n  return new _promise2.default(function (resolve, reject) {\n    var instance = _axios2.default.create({\n      timeout: 2000 });\n    instance(options).then(function (response) {\n      var res = response.data;\n      resolve(res);\n    }).catch(function (error) {\n      (0, _elementUi.Message)({\n        message: '发生异常错误,请刷新页面重试,或联系程序员',\n        type: 'error',\n        duration: 5 * 1000\n      });\n      console.log(error);\n      reject(error);\n    });\n  });\n}\n\n/***/ }),\n/* 353 */,\n/* 354 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var zrUtil = __webpack_require__(317);\n    var symbolUtil = __webpack_require__(357);\n    var graphic = __webpack_require__(319);\n    var numberUtil = __webpack_require__(320);\n\n    function getSymbolSize(data, idx) {\n        var symbolSize = data.getItemVisual(idx, 'symbolSize');\n        return symbolSize instanceof Array\n            ? symbolSize.slice()\n            : [+symbolSize, +symbolSize];\n    }\n\n    function getScale(symbolSize) {\n        return [symbolSize[0] / 2, symbolSize[1] / 2];\n    }\n\n    /**\n     * @constructor\n     * @alias {module:echarts/chart/helper/Symbol}\n     * @param {module:echarts/data/List} data\n     * @param {number} idx\n     * @extends {module:zrender/graphic/Group}\n     */\n    function Symbol(data, idx, seriesScope) {\n        graphic.Group.call(this);\n\n        this.updateData(data, idx, seriesScope);\n    }\n\n    var symbolProto = Symbol.prototype;\n\n    function driftSymbol(dx, dy) {\n        this.parent.drift(dx, dy);\n    }\n\n    symbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n        // Remove paths created before\n        this.removeAll();\n\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // var symbolPath = symbolUtil.createSymbol(\n        //     symbolType, -0.5, -0.5, 1, 1, color\n        // );\n        // If width/height are set too small (e.g., set to 1) on ios10\n        // and macOS Sierra, a circle stroke become a rect, no matter what\n        // the scale is set. So we set width/height as 2. See #4150.\n        var symbolPath = symbolUtil.createSymbol(\n            symbolType, -1, -1, 2, 2, color\n        );\n\n        symbolPath.attr({\n            z2: 100,\n            culling: true,\n            scale: [0, 0]\n        });\n        // Rewrite drift method\n        symbolPath.drift = driftSymbol;\n\n        graphic.initProps(symbolPath, {\n            scale: getScale(symbolSize)\n        }, seriesModel, idx);\n        this._symbolType = symbolType;\n\n        this.add(symbolPath);\n    };\n\n    /**\n     * Stop animation\n     * @param {boolean} toLastFrame\n     */\n    symbolProto.stopSymbolAnimation = function (toLastFrame) {\n        this.childAt(0).stopAnimation(toLastFrame);\n    };\n\n    /**\n     * Get symbol path element\n     */\n    symbolProto.getSymbolPath = function () {\n        return this.childAt(0);\n    };\n\n    /**\n     * Get scale(aka, current symbol size).\n     * Including the change caused by animation\n     */\n    symbolProto.getScale = function () {\n        return this.childAt(0).scale;\n    };\n\n    /**\n     * Highlight symbol\n     */\n    symbolProto.highlight = function () {\n        this.childAt(0).trigger('emphasis');\n    };\n\n    /**\n     * Downplay symbol\n     */\n    symbolProto.downplay = function () {\n        this.childAt(0).trigger('normal');\n    };\n\n    /**\n     * @param {number} zlevel\n     * @param {number} z\n     */\n    symbolProto.setZ = function (zlevel, z) {\n        var symbolPath = this.childAt(0);\n        symbolPath.zlevel = zlevel;\n        symbolPath.z = z;\n    };\n\n    symbolProto.setDraggable = function (draggable) {\n        var symbolPath = this.childAt(0);\n        symbolPath.draggable = draggable;\n        symbolPath.cursor = draggable ? 'move' : 'pointer';\n    };\n\n    /**\n     * Update symbol properties\n     * @param  {module:echarts/data/List} data\n     * @param  {number} idx\n     */\n    symbolProto.updateData = function (data, idx, seriesScope) {\n        this.silent = false;\n\n        var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n        var seriesModel = data.hostModel;\n        var symbolSize = getSymbolSize(data, idx);\n\n        if (symbolType !== this._symbolType) {\n            this._createSymbol(symbolType, data, idx, symbolSize);\n        }\n        else {\n            var symbolPath = this.childAt(0);\n            graphic.updateProps(symbolPath, {\n                scale: getScale(symbolSize)\n            }, seriesModel, idx);\n        }\n        this._updateCommon(data, idx, symbolSize, seriesScope);\n        this._seriesModel = seriesModel;\n    };\n\n    // Update common properties\n    var normalStyleAccessPath = ['itemStyle', 'normal'];\n    var emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n    var normalLabelAccessPath = ['label', 'normal'];\n    var emphasisLabelAccessPath = ['label', 'emphasis'];\n\n    symbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n        var symbolPath = this.childAt(0);\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // Reset style\n        if (symbolPath.type !== 'image') {\n            symbolPath.useStyle({\n                strokeNoScale: true\n            });\n        }\n\n        seriesScope = seriesScope || null;\n\n        var itemStyle = seriesScope && seriesScope.itemStyle;\n        var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n        var symbolRotate = seriesScope && seriesScope.symbolRotate;\n        var symbolOffset = seriesScope && seriesScope.symbolOffset;\n        var labelModel = seriesScope && seriesScope.labelModel;\n        var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n        var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n\n        if (!seriesScope || data.hasItemOption) {\n            var itemModel = data.getItemModel(idx);\n\n            // Color must be excluded.\n            // Because symbol provide setColor individually to set fill and stroke\n            itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n            hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n\n            symbolRotate = itemModel.getShallow('symbolRotate');\n            symbolOffset = itemModel.getShallow('symbolOffset');\n\n            labelModel = itemModel.getModel(normalLabelAccessPath);\n            hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n            hoverAnimation = itemModel.getShallow('hoverAnimation');\n        }\n        else {\n            hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n        }\n\n        var elStyle = symbolPath.style;\n\n        symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n        if (symbolOffset) {\n            symbolPath.attr('position', [\n                numberUtil.parsePercent(symbolOffset[0], symbolSize[0]),\n                numberUtil.parsePercent(symbolOffset[1], symbolSize[1])\n            ]);\n        }\n\n        // PENDING setColor before setStyle!!!\n        symbolPath.setColor(color);\n\n        symbolPath.setStyle(itemStyle);\n\n        var opacity = data.getItemVisual(idx, 'opacity');\n        if (opacity != null) {\n            elStyle.opacity = opacity;\n        }\n\n        // Get last value dim\n        var dimensions = data.dimensions.slice();\n        var valueDim;\n        var dataType;\n        while (dimensions.length && (\n            valueDim = dimensions.pop(),\n            dataType = data.getDimensionInfo(valueDim).type,\n            dataType === 'ordinal' || dataType === 'time'\n        )) {} // jshint ignore:line\n\n        if (valueDim != null && labelModel.getShallow('show')) {\n            graphic.setText(elStyle, labelModel, color);\n            elStyle.text = zrUtil.retrieve(\n                seriesModel.getFormattedLabel(idx, 'normal'),\n                data.get(valueDim, idx)\n            );\n        }\n        else {\n            elStyle.text = '';\n        }\n\n        if (valueDim != null && hoverLabelModel.getShallow('show')) {\n            graphic.setText(hoverItemStyle, hoverLabelModel, color);\n            hoverItemStyle.text = zrUtil.retrieve(\n                seriesModel.getFormattedLabel(idx, 'emphasis'),\n                data.get(valueDim, idx)\n            );\n        }\n        else {\n            hoverItemStyle.text = '';\n        }\n\n        symbolPath.off('mouseover')\n            .off('mouseout')\n            .off('emphasis')\n            .off('normal');\n\n        symbolPath.hoverStyle = hoverItemStyle;\n\n        graphic.setHoverStyle(symbolPath);\n\n        var scale = getScale(symbolSize);\n\n        if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n            var onEmphasis = function() {\n                var ratio = scale[1] / scale[0];\n                this.animateTo({\n                    scale: [\n                        Math.max(scale[0] * 1.1, scale[0] + 3),\n                        Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)\n                    ]\n                }, 400, 'elasticOut');\n            };\n            var onNormal = function() {\n                this.animateTo({\n                    scale: scale\n                }, 400, 'elasticOut');\n            };\n            symbolPath.on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n    };\n\n    symbolProto.fadeOut = function (cb) {\n        var symbolPath = this.childAt(0);\n        // Avoid mistaken hover when fading out\n        this.silent = true;\n        // Not show text when animating\n        symbolPath.style.text = '';\n        graphic.updateProps(symbolPath, {\n            scale: [0, 0]\n        }, this._seriesModel, this.dataIndex, cb);\n    };\n\n    zrUtil.inherits(Symbol, graphic.Group);\n\n    module.exports = Symbol;\n\n\n/***/ }),\n/* 355 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var ComponentModel = __webpack_require__(329);\n    var zrUtil = __webpack_require__(317);\n    var axisModelCreator = __webpack_require__(393);\n\n    var AxisModel = ComponentModel.extend({\n\n        type: 'cartesian2dAxis',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Axis2D}\n         */\n        axis: null,\n\n        /**\n         * @override\n         */\n        init: function () {\n            AxisModel.superApply(this, 'init', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function () {\n            AxisModel.superApply(this, 'mergeOption', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        restoreData: function () {\n            AxisModel.superApply(this, 'restoreData', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         * @return {module:echarts/model/Component}\n         */\n        getCoordSysModel: function () {\n            return this.ecModel.queryComponents({\n                mainType: 'grid',\n                index: this.option.gridIndex,\n                id: this.option.gridId\n            })[0];\n        }\n\n    });\n\n    function getAxisType(axisDim, option) {\n        // Default axis with data is category axis\n        return option.type || (option.data ? 'category' : 'value');\n    }\n\n    zrUtil.merge(AxisModel.prototype, __webpack_require__(392));\n\n    var extraOption = {\n        // gridIndex: 0,\n        // gridId: '',\n\n        // Offset is for multiple axis on the same position\n        offset: 0\n    };\n\n    axisModelCreator('x', AxisModel, getAxisType, extraOption);\n    axisModelCreator('y', AxisModel, getAxisType, extraOption);\n\n    module.exports = AxisModel;\n\n\n/***/ }),\n/* 356 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var classUtil = __webpack_require__(328);\n    var set = classUtil.set;\n    var get = classUtil.get;\n\n    module.exports = {\n        clearColorPalette: function () {\n            set(this, 'colorIdx', 0);\n            set(this, 'colorNameMap', {});\n        },\n\n        getColorFromPalette: function (name, scope) {\n            scope = scope || this;\n            var colorIdx = get(scope, 'colorIdx') || 0;\n            var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {});\n            if (colorNameMap[name]) {\n                return colorNameMap[name];\n            }\n            var colorPalette = this.get('color', true) || [];\n            if (!colorPalette.length) {\n                return;\n            }\n\n            var color = colorPalette[colorIdx];\n            if (name) {\n                colorNameMap[name] = color;\n            }\n            set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n\n            return color;\n        }\n    };\n\n\n/***/ }),\n/* 357 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Symbol factory\n\n\n    var graphic = __webpack_require__(319);\n    var BoundingRect = __webpack_require__(326);\n\n    /**\n     * Triangle shape\n     * @inner\n     */\n    var Triangle = graphic.extendShape({\n        type: 'triangle',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy + height);\n            path.lineTo(cx - width, cy + height);\n            path.closePath();\n        }\n    });\n    /**\n     * Diamond shape\n     * @inner\n     */\n    var Diamond = graphic.extendShape({\n        type: 'diamond',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy);\n            path.lineTo(cx, cy + height);\n            path.lineTo(cx - width, cy);\n            path.closePath();\n        }\n    });\n\n    /**\n     * Pin shape\n     * @inner\n     */\n    var Pin = graphic.extendShape({\n        type: 'pin',\n        shape: {\n            // x, y on the cusp\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (path, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var w = shape.width / 5 * 3;\n            // Height must be larger than width\n            var h = Math.max(w, shape.height);\n            var r = w / 2;\n\n            // Dist on y with tangent point and circle center\n            var dy = r * r / (h - r);\n            var cy = y - h + r + dy;\n            var angle = Math.asin(dy / r);\n            // Dist on x with tangent point and circle center\n            var dx = Math.cos(angle) * r;\n\n            var tanX = Math.sin(angle);\n            var tanY = Math.cos(angle);\n\n            path.arc(\n                x, cy, r,\n                Math.PI - angle,\n                Math.PI * 2 + angle\n            );\n\n            var cpLen = r * 0.6;\n            var cpLen2 = r * 0.7;\n            path.bezierCurveTo(\n                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\n                x, y - cpLen2,\n                x, y\n            );\n            path.bezierCurveTo(\n                x, y - cpLen2,\n                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\n                x - dx, cy + dy\n            );\n            path.closePath();\n        }\n    });\n\n    /**\n     * Arrow shape\n     * @inner\n     */\n    var Arrow = graphic.extendShape({\n\n        type: 'arrow',\n\n        shape: {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var height = shape.height;\n            var width = shape.width;\n            var x = shape.x;\n            var y = shape.y;\n            var dx = width / 3 * 2;\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + dx, y + height);\n            ctx.lineTo(x, y + height / 4 * 3);\n            ctx.lineTo(x - dx, y + height);\n            ctx.lineTo(x, y);\n            ctx.closePath();\n        }\n    });\n\n    /**\n     * Map of path contructors\n     * @type {Object.<string, module:zrender/graphic/Path>}\n     */\n    var symbolCtors = {\n        line: graphic.Line,\n\n        rect: graphic.Rect,\n\n        roundRect: graphic.Rect,\n\n        square: graphic.Rect,\n\n        circle: graphic.Circle,\n\n        diamond: Diamond,\n\n        pin: Pin,\n\n        arrow: Arrow,\n\n        triangle: Triangle\n    };\n\n    var symbolShapeMakers = {\n\n        line: function (x, y, w, h, shape) {\n            // FIXME\n            shape.x1 = x;\n            shape.y1 = y + h / 2;\n            shape.x2 = x + w;\n            shape.y2 = y + h / 2;\n        },\n\n        rect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        roundRect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n            shape.r = Math.min(w, h) / 4;\n        },\n\n        square: function (x, y, w, h, shape) {\n            var size = Math.min(w, h);\n            shape.x = x;\n            shape.y = y;\n            shape.width = size;\n            shape.height = size;\n        },\n\n        circle: function (x, y, w, h, shape) {\n            // Put circle in the center of square\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.r = Math.min(w, h) / 2;\n        },\n\n        diamond: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        pin: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        arrow: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        triangle: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        }\n    };\n\n    var symbolBuildProxies = {};\n    for (var name in symbolCtors) {\n        if (symbolCtors.hasOwnProperty(name)) {\n            symbolBuildProxies[name] = new symbolCtors[name]();\n        }\n    }\n\n    var Symbol = graphic.extendShape({\n\n        type: 'symbol',\n\n        shape: {\n            symbolType: '',\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        beforeBrush: function () {\n            var style = this.style;\n            var shape = this.shape;\n            // FIXME\n            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n                style.textPosition = ['50%', '40%'];\n                style.textAlign = 'center';\n                style.textVerticalAlign = 'middle';\n            }\n        },\n\n        buildPath: function (ctx, shape, inBundle) {\n            var symbolType = shape.symbolType;\n            var proxySymbol = symbolBuildProxies[symbolType];\n            if (shape.symbolType !== 'none') {\n                if (!proxySymbol) {\n                    // Default rect\n                    symbolType = 'rect';\n                    proxySymbol = symbolBuildProxies[symbolType];\n                }\n                symbolShapeMakers[symbolType](\n                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\n                );\n                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n            }\n        }\n    });\n\n    // Provide setColor helper method to avoid determine if set the fill or stroke outside\n    var symbolPathSetColor = function (color) {\n        if (this.type !== 'image') {\n            var symbolStyle = this.style;\n            var symbolShape = this.shape;\n            if (symbolShape && symbolShape.symbolType === 'line') {\n                symbolStyle.stroke = color;\n            }\n            else if (this.__isEmptyBrush) {\n                symbolStyle.stroke = color;\n                symbolStyle.fill = '#fff';\n            }\n            else {\n                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n                symbolStyle.fill && (symbolStyle.fill = color);\n                symbolStyle.stroke && (symbolStyle.stroke = color);\n            }\n            this.dirty(false);\n        }\n    };\n\n    var symbolUtil = {\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @param {string} symbolType\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: function (symbolType, x, y, w, h, color) {\n            var isEmpty = symbolType.indexOf('empty') === 0;\n            if (isEmpty) {\n                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n            }\n            var symbolPath;\n\n            if (symbolType.indexOf('image://') === 0) {\n                symbolPath = new graphic.Image({\n                    style: {\n                        image: symbolType.slice(8),\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n            else if (symbolType.indexOf('path://') === 0) {\n                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\n            }\n            else {\n                symbolPath = new Symbol({\n                    shape: {\n                        symbolType: symbolType,\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n\n            symbolPath.__isEmptyBrush = isEmpty;\n\n            symbolPath.setColor = symbolPathSetColor;\n\n            symbolPath.setColor(color);\n\n            return symbolPath;\n        }\n    };\n\n    module.exports = symbolUtil;\n\n\n/***/ }),\n/* 358 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Group = __webpack_require__(339);\n    var componentUtil = __webpack_require__(345);\n    var clazzUtil = __webpack_require__(328);\n    var modelUtil = __webpack_require__(325);\n    var zrUtil = __webpack_require__(317);\n\n    function Chart() {\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewChart');\n    }\n\n    Chart.prototype = {\n\n        type: 'chart',\n\n        /**\n         * Init the chart\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        init: function (ecModel, api) {},\n\n        /**\n         * Render the chart\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        render: function (seriesModel, ecModel, api, payload) {},\n\n        /**\n         * Highlight series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        highlight: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n        },\n\n        /**\n         * Downplay series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        downplay: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'normal');\n        },\n\n        /**\n         * Remove self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        remove: function (ecModel, api) {\n            this.group.removeAll();\n        },\n\n        /**\n         * Dispose self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        dispose: function () {}\n\n        /**\n         * The view contains the given point.\n         * @interface\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        // containPoint: function () {}\n\n    };\n\n    var chartProto = Chart.prototype;\n    chartProto.updateView\n        = chartProto.updateLayout\n        = chartProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            this.render(seriesModel, ecModel, api, payload);\n        };\n\n    /**\n     * Set state of single element\n     * @param  {module:zrender/Element} el\n     * @param  {string} state\n     */\n    function elSetState(el, state) {\n        if (el) {\n            el.trigger(state);\n            if (el.type === 'group') {\n                for (var i = 0; i < el.childCount(); i++) {\n                    elSetState(el.childAt(i), state);\n                }\n            }\n        }\n    }\n    /**\n     * @param  {module:echarts/data/List} data\n     * @param  {Object} payload\n     * @param  {string} state 'normal'|'emphasis'\n     * @inner\n     */\n    function toggleHighlight(data, payload, state) {\n        var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n        if (dataIndex != null) {\n            zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n                elSetState(data.getItemGraphicEl(dataIdx), state);\n            });\n        }\n        else {\n            data.eachItemGraphicEl(function (el) {\n                elSetState(el, state);\n            });\n        }\n    }\n\n    // Enable Chart.extend.\n    clazzUtil.enableClassExtend(Chart, ['dispose']);\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});\n\n    module.exports = Chart;\n\n\n/***/ }),\n/* 359 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module zrender/Element\n */\n\n\n    var guid = __webpack_require__(363);\n    var Eventful = __webpack_require__(333);\n    var Transformable = __webpack_require__(454);\n    var Animatable = __webpack_require__(452);\n    var zrUtil = __webpack_require__(317);\n\n    /**\n     * @alias module:zrender/Element\n     * @constructor\n     * @extends {module:zrender/mixin/Animatable}\n     * @extends {module:zrender/mixin/Transformable}\n     * @extends {module:zrender/mixin/Eventful}\n     */\n    var Element = function (opts) {\n\n        Transformable.call(this, opts);\n        Eventful.call(this, opts);\n        Animatable.call(this, opts);\n\n        /**\n         * 画布元素ID\n         * @type {string}\n         */\n        this.id = opts.id || guid();\n    };\n\n    Element.prototype = {\n\n        /**\n         * 元素类型\n         * Element type\n         * @type {string}\n         */\n        type: 'element',\n\n        /**\n         * 元素名字\n         * Element name\n         * @type {string}\n         */\n        name: '',\n\n        /**\n         * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n         * ZRender instance will be assigned when element is associated with zrender\n         * @name module:/zrender/Element#__zr\n         * @type {module:zrender/ZRender}\n         */\n        __zr: null,\n\n        /**\n         * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n         * If ignore drawing and events of the element object\n         * @name module:/zrender/Element#ignore\n         * @type {boolean}\n         * @default false\n         */\n        ignore: false,\n\n        /**\n         * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n         * 该路径会继承被裁减对象的变换\n         * @type {module:zrender/graphic/Path}\n         * @see http://www.w3.org/TR/2dcontext/#clipping-region\n         * @readOnly\n         */\n        clipPath: null,\n\n        /**\n         * Drift element\n         * @param  {number} dx dx on the global space\n         * @param  {number} dy dy on the global space\n         */\n        drift: function (dx, dy) {\n            switch (this.draggable) {\n                case 'horizontal':\n                    dy = 0;\n                    break;\n                case 'vertical':\n                    dx = 0;\n                    break;\n            }\n\n            var m = this.transform;\n            if (!m) {\n                m = this.transform = [1, 0, 0, 1, 0, 0];\n            }\n            m[4] += dx;\n            m[5] += dy;\n\n            this.decomposeTransform();\n            this.dirty(false);\n        },\n\n        /**\n         * Hook before update\n         */\n        beforeUpdate: function () {},\n        /**\n         * Hook after update\n         */\n        afterUpdate: function () {},\n        /**\n         * Update each frame\n         */\n        update: function () {\n            this.updateTransform();\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {},\n\n        /**\n         * @protected\n         */\n        attrKV: function (key, value) {\n            if (key === 'position' || key === 'scale' || key === 'origin') {\n                // Copy the array\n                if (value) {\n                    var target = this[key];\n                    if (!target) {\n                        target = this[key] = [];\n                    }\n                    target[0] = value[0];\n                    target[1] = value[1];\n                }\n            }\n            else {\n                this[key] = value;\n            }\n        },\n\n        /**\n         * Hide the element\n         */\n        hide: function () {\n            this.ignore = true;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * Show the element\n         */\n        show: function () {\n            this.ignore = false;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * @param {string|Object} key\n         * @param {*} value\n         */\n        attr: function (key, value) {\n            if (typeof key === 'string') {\n                this.attrKV(key, value);\n            }\n            else if (zrUtil.isObject(key)) {\n                for (var name in key) {\n                    if (key.hasOwnProperty(name)) {\n                        this.attrKV(name, key[name]);\n                    }\n                }\n            }\n\n            this.dirty(false);\n\n            return this;\n        },\n\n        /**\n         * @param {module:zrender/graphic/Path} clipPath\n         */\n        setClipPath: function (clipPath) {\n            var zr = this.__zr;\n            if (zr) {\n                clipPath.addSelfToZr(zr);\n            }\n\n            // Remove previous clip path\n            if (this.clipPath && this.clipPath !== clipPath) {\n                this.removeClipPath();\n            }\n\n            this.clipPath = clipPath;\n            clipPath.__zr = zr;\n            clipPath.__clipTarget = this;\n\n            this.dirty(false);\n        },\n\n        /**\n         */\n        removeClipPath: function () {\n            var clipPath = this.clipPath;\n            if (clipPath) {\n                if (clipPath.__zr) {\n                    clipPath.removeSelfFromZr(clipPath.__zr);\n                }\n\n                clipPath.__zr = null;\n                clipPath.__clipTarget = null;\n                this.clipPath = null;\n\n                this.dirty(false);\n            }\n        },\n\n        /**\n         * Add self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        addSelfToZr: function (zr) {\n            this.__zr = zr;\n            // 添加动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.addAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.addSelfToZr(zr);\n            }\n        },\n\n        /**\n         * Remove self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        removeSelfFromZr: function (zr) {\n            this.__zr = null;\n            // 移除动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.removeAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.removeSelfFromZr(zr);\n            }\n        }\n    };\n\n    zrUtil.mixin(Element, Animatable);\n    zrUtil.mixin(Element, Transformable);\n    zrUtil.mixin(Element, Eventful);\n\n    module.exports = Element;\n\n\n/***/ }),\n/* 360 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/animation/Animator\n */\n\n\n    var Clip = __webpack_require__(424);\n    var color = __webpack_require__(332);\n    var util = __webpack_require__(317);\n    var isArrayLike = util.isArrayLike;\n\n    var arraySlice = Array.prototype.slice;\n\n    function defaultGetter(target, key) {\n        return target[key];\n    }\n\n    function defaultSetter(target, key, value) {\n        target[key] = value;\n    }\n\n    /**\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} percent\n     * @return {number}\n     */\n    function interpolateNumber(p0, p1, percent) {\n        return (p1 - p0) * percent + p0;\n    }\n\n    /**\n     * @param  {string} p0\n     * @param  {string} p1\n     * @param  {number} percent\n     * @return {string}\n     */\n    function interpolateString(p0, p1, percent) {\n        return percent > 0.5 ? p1 : p0;\n    }\n\n    /**\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {number} percent\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function interpolateArray(p0, p1, percent, out, arrDim) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = interpolateNumber(p0[i], p1[i], percent);\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = interpolateNumber(\n                        p0[i][j], p1[i][j], percent\n                    );\n                }\n            }\n        }\n    }\n\n    // arr0 is source array, arr1 is target array.\n    // Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n    function fillArr(arr0, arr1, arrDim) {\n        var arr0Len = arr0.length;\n        var arr1Len = arr1.length;\n        if (arr0Len !== arr1Len) {\n            // FIXME Not work for TypedArray\n            var isPreviousLarger = arr0Len > arr1Len;\n            if (isPreviousLarger) {\n                // Cut the previous\n                arr0.length = arr1Len;\n            }\n            else {\n                // Fill the previous\n                for (var i = arr0Len; i < arr1Len; i++) {\n                    arr0.push(\n                        arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i])\n                    );\n                }\n            }\n        }\n        // Handling NaN value\n        var len2 = arr0[0] && arr0[0].length;\n        for (var i = 0; i < arr0.length; i++) {\n            if (arrDim === 1) {\n                if (isNaN(arr0[i])) {\n                    arr0[i] = arr1[i];\n                }\n            }\n            else {\n                for (var j = 0; j < len2; j++) {\n                    if (isNaN(arr0[i][j])) {\n                        arr0[i][j] = arr1[i][j];\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @param  {Array} arr0\n     * @param  {Array} arr1\n     * @param  {number} arrDim\n     * @return {boolean}\n     */\n    function isArraySame(arr0, arr1, arrDim) {\n        if (arr0 === arr1) {\n            return true;\n        }\n        var len = arr0.length;\n        if (len !== arr1.length) {\n            return false;\n        }\n        if (arrDim === 1) {\n            for (var i = 0; i < len; i++) {\n                if (arr0[i] !== arr1[i]) {\n                    return false;\n                }\n            }\n        }\n        else {\n            var len2 = arr0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    if (arr0[i][j] !== arr1[i][j]) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Catmull Rom interpolate array\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {Array} p2\n     * @param  {Array} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function catmullRomInterpolateArray(\n        p0, p1, p2, p3, t, t2, t3, out, arrDim\n    ) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = catmullRomInterpolate(\n                    p0[i], p1[i], p2[i], p3[i], t, t2, t3\n                );\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = catmullRomInterpolate(\n                        p0[i][j], p1[i][j], p2[i][j], p3[i][j],\n                        t, t2, t3\n                    );\n                }\n            }\n        }\n    }\n\n    /**\n     * Catmull Rom interpolate number\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @return {number}\n     */\n    function catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    function cloneValue(value) {\n        if (isArrayLike(value)) {\n            var len = value.length;\n            if (isArrayLike(value[0])) {\n                var ret = [];\n                for (var i = 0; i < len; i++) {\n                    ret.push(arraySlice.call(value[i]));\n                }\n                return ret;\n            }\n\n            return arraySlice.call(value);\n        }\n\n        return value;\n    }\n\n    function rgba2String(rgba) {\n        rgba[0] = Math.floor(rgba[0]);\n        rgba[1] = Math.floor(rgba[1]);\n        rgba[2] = Math.floor(rgba[2]);\n\n        return 'rgba(' + rgba.join(',') + ')';\n    }\n\n    function createTrackClip (animator, easing, oneTrackDone, keyframes, propName) {\n        var getter = animator._getter;\n        var setter = animator._setter;\n        var useSpline = easing === 'spline';\n\n        var trackLen = keyframes.length;\n        if (!trackLen) {\n            return;\n        }\n        // Guess data type\n        var firstVal = keyframes[0].value;\n        var isValueArray = isArrayLike(firstVal);\n        var isValueColor = false;\n        var isValueString = false;\n\n        // For vertices morphing\n        var arrDim = (\n                isValueArray\n                && isArrayLike(firstVal[0])\n            )\n            ? 2 : 1;\n        var trackMaxTime;\n        // Sort keyframe as ascending\n        keyframes.sort(function(a, b) {\n            return a.time - b.time;\n        });\n\n        trackMaxTime = keyframes[trackLen - 1].time;\n        // Percents of each keyframe\n        var kfPercents = [];\n        // Value of each keyframe\n        var kfValues = [];\n        var prevValue = keyframes[0].value;\n        var isAllValueEqual = true;\n        for (var i = 0; i < trackLen; i++) {\n            kfPercents.push(keyframes[i].time / trackMaxTime);\n            // Assume value is a color when it is a string\n            var value = keyframes[i].value;\n\n            // Check if value is equal, deep check if value is array\n            if (!((isValueArray && isArraySame(value, prevValue, arrDim))\n                || (!isValueArray && value === prevValue))) {\n                isAllValueEqual = false;\n            }\n            prevValue = value;\n\n            // Try converting a string to a color array\n            if (typeof value == 'string') {\n                var colorArray = color.parse(value);\n                if (colorArray) {\n                    value = colorArray;\n                    isValueColor = true;\n                }\n                else {\n                    isValueString = true;\n                }\n            }\n            kfValues.push(value);\n        }\n        if (isAllValueEqual) {\n            return;\n        }\n\n        var lastValue = kfValues[trackLen - 1];\n        // Polyfill array and NaN value\n        for (var i = 0; i < trackLen - 1; i++) {\n            if (isValueArray) {\n                fillArr(kfValues[i], lastValue, arrDim);\n            }\n            else {\n                if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n                    kfValues[i] = lastValue;\n                }\n            }\n        }\n        isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim);\n\n        // Cache the key of last frame to speed up when\n        // animation playback is sequency\n        var lastFrame = 0;\n        var lastFramePercent = 0;\n        var start;\n        var w;\n        var p0;\n        var p1;\n        var p2;\n        var p3;\n\n        if (isValueColor) {\n            var rgba = [0, 0, 0, 0];\n        }\n\n        var onframe = function (target, percent) {\n            // Find the range keyframes\n            // kf1-----kf2---------current--------kf3\n            // find kf2 and kf3 and do interpolation\n            var frame;\n            // In the easing function like elasticOut, percent may less than 0\n            if (percent < 0) {\n                frame = 0;\n            }\n            else if (percent < lastFramePercent) {\n                // Start from next key\n                // PENDING start from lastFrame ?\n                start = Math.min(lastFrame + 1, trackLen - 1);\n                for (frame = start; frame >= 0; frame--) {\n                    if (kfPercents[frame] <= percent) {\n                        break;\n                    }\n                }\n                // PENDING really need to do this ?\n                frame = Math.min(frame, trackLen - 2);\n            }\n            else {\n                for (frame = lastFrame; frame < trackLen; frame++) {\n                    if (kfPercents[frame] > percent) {\n                        break;\n                    }\n                }\n                frame = Math.min(frame - 1, trackLen - 2);\n            }\n            lastFrame = frame;\n            lastFramePercent = percent;\n\n            var range = (kfPercents[frame + 1] - kfPercents[frame]);\n            if (range === 0) {\n                return;\n            }\n            else {\n                w = (percent - kfPercents[frame]) / range;\n            }\n            if (useSpline) {\n                p1 = kfValues[frame];\n                p0 = kfValues[frame === 0 ? frame : frame - 1];\n                p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n                p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n                if (isValueArray) {\n                    catmullRomInterpolateArray(\n                        p0, p1, p2, p3, w, w * w, w * w * w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        value = catmullRomInterpolateArray(\n                            p0, p1, p2, p3, w, w * w, w * w * w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(p1, p2, w);\n                    }\n                    else {\n                        value = catmullRomInterpolate(\n                            p0, p1, p2, p3, w, w * w, w * w * w\n                        );\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n            else {\n                if (isValueArray) {\n                    interpolateArray(\n                        kfValues[frame], kfValues[frame + 1], w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        interpolateArray(\n                            kfValues[frame], kfValues[frame + 1], w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    else {\n                        value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n        };\n\n        var clip = new Clip({\n            target: animator._target,\n            life: trackMaxTime,\n            loop: animator._loop,\n            delay: animator._delay,\n            onframe: onframe,\n            ondestroy: oneTrackDone\n        });\n\n        if (easing && easing !== 'spline') {\n            clip.easing = easing;\n        }\n\n        return clip;\n    }\n\n    /**\n     * @alias module:zrender/animation/Animator\n     * @constructor\n     * @param {Object} target\n     * @param {boolean} loop\n     * @param {Function} getter\n     * @param {Function} setter\n     */\n    var Animator = function(target, loop, getter, setter) {\n        this._tracks = {};\n        this._target = target;\n\n        this._loop = loop || false;\n\n        this._getter = getter || defaultGetter;\n        this._setter = setter || defaultSetter;\n\n        this._clipCount = 0;\n\n        this._delay = 0;\n\n        this._doneList = [];\n\n        this._onframeList = [];\n\n        this._clipList = [];\n    };\n\n    Animator.prototype = {\n        /**\n         * 设置动画关键帧\n         * @param  {number} time 关键帧时间，单位是ms\n         * @param  {Object} props 关键帧的属性值，key-value表示\n         * @return {module:zrender/animation/Animator}\n         */\n        when: function(time /* ms */, props) {\n            var tracks = this._tracks;\n            for (var propName in props) {\n                if (!props.hasOwnProperty(propName)) {\n                    continue;\n                }\n\n                if (!tracks[propName]) {\n                    tracks[propName] = [];\n                    // Invalid value\n                    var value = this._getter(this._target, propName);\n                    if (value == null) {\n                        // zrLog('Invalid property ' + propName);\n                        continue;\n                    }\n                    // If time is 0\n                    //  Then props is given initialize value\n                    // Else\n                    //  Initialize value from current prop value\n                    if (time !== 0) {\n                        tracks[propName].push({\n                            time: 0,\n                            value: cloneValue(value)\n                        });\n                    }\n                }\n                tracks[propName].push({\n                    time: time,\n                    value: props[propName]\n                });\n            }\n            return this;\n        },\n        /**\n         * 添加动画每一帧的回调函数\n         * @param  {Function} callback\n         * @return {module:zrender/animation/Animator}\n         */\n        during: function (callback) {\n            this._onframeList.push(callback);\n            return this;\n        },\n\n        _doneCallback: function () {\n            // Clear all tracks\n            this._tracks = {};\n            // Clear all clips\n            this._clipList.length = 0;\n\n            var doneList = this._doneList;\n            var len = doneList.length;\n            for (var i = 0; i < len; i++) {\n                doneList[i].call(this);\n            }\n        },\n        /**\n         * 开始执行动画\n         * @param  {string|Function} easing\n         *         动画缓动函数，详见{@link module:zrender/animation/easing}\n         * @return {module:zrender/animation/Animator}\n         */\n        start: function (easing) {\n\n            var self = this;\n            var clipCount = 0;\n\n            var oneTrackDone = function() {\n                clipCount--;\n                if (!clipCount) {\n                    self._doneCallback();\n                }\n            };\n\n            var lastClip;\n            for (var propName in this._tracks) {\n                if (!this._tracks.hasOwnProperty(propName)) {\n                    continue;\n                }\n                var clip = createTrackClip(\n                    this, easing, oneTrackDone,\n                    this._tracks[propName], propName\n                );\n                if (clip) {\n                    this._clipList.push(clip);\n                    clipCount++;\n\n                    // If start after added to animation\n                    if (this.animation) {\n                        this.animation.addClip(clip);\n                    }\n\n                    lastClip = clip;\n                }\n            }\n\n            // Add during callback on the last clip\n            if (lastClip) {\n                var oldOnFrame = lastClip.onframe;\n                lastClip.onframe = function (target, percent) {\n                    oldOnFrame(target, percent);\n\n                    for (var i = 0; i < self._onframeList.length; i++) {\n                        self._onframeList[i](target, percent);\n                    }\n                };\n            }\n\n            if (!clipCount) {\n                this._doneCallback();\n            }\n            return this;\n        },\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stop: function (forwardToLast) {\n            var clipList = this._clipList;\n            var animation = this.animation;\n            for (var i = 0; i < clipList.length; i++) {\n                var clip = clipList[i];\n                if (forwardToLast) {\n                    // Move to last frame before stop\n                    clip.onframe(this._target, 1);\n                }\n                animation && animation.removeClip(clip);\n            }\n            clipList.length = 0;\n        },\n        /**\n         * 设置动画延迟开始的时间\n         * @param  {number} time 单位ms\n         * @return {module:zrender/animation/Animator}\n         */\n        delay: function (time) {\n            this._delay = time;\n            return this;\n        },\n        /**\n         * 添加动画结束的回调\n         * @param  {Function} cb\n         * @return {module:zrender/animation/Animator}\n         */\n        done: function(cb) {\n            if (cb) {\n                this._doneList.push(cb);\n            }\n            return this;\n        },\n\n        /**\n         * @return {Array.<module:zrender/animation/Clip>}\n         */\n        getClips: function () {\n            return this._clipList;\n        }\n    };\n\n    module.exports = Animator;\n\n\n/***/ }),\n/* 361 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = (typeof window !== 'undefined' &&\n                                    (window.requestAnimationFrame\n                                    || window.msRequestAnimationFrame\n                                    || window.mozRequestAnimationFrame\n                                    || window.webkitRequestAnimationFrame))\n                                || function (func) {\n                                    setTimeout(func, 16);\n                                };\n\n\n\n/***/ }),\n/* 362 */\n/***/ (function(module, exports) {\n\n\n\n    var PI2 = Math.PI * 2;\n    module.exports = {\n        normalizeRadian: function(angle) {\n            angle %= PI2;\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return angle;\n        }\n    };\n\n\n/***/ }),\n/* 363 */\n/***/ (function(module, exports) {\n\n/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\n\n\n    var idStart = 0x0907;\n\n    module.exports = function () {\n        return idStart++;\n    };\n\n\n\n/***/ }),\n/* 364 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n        var config = __webpack_require__(338);\n\n        /**\n         * @exports zrender/tool/log\n         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n         */\n        module.exports = function() {\n            if (config.debugMode === 0) {\n                return;\n            }\n            else if (config.debugMode == 1) {\n                for (var k in arguments) {\n                    throw new Error(arguments[k]);\n                }\n            }\n            else if (config.debugMode > 1) {\n                for (var k in arguments) {\n                    console.log(arguments[k]);\n                }\n            }\n        };\n\n        /* for debug\n        return function(mes) {\n            document.getElementById('wrong-message').innerHTML =\n                mes + ' ' + (new Date() - 0)\n                + '<br/>'\n                + document.getElementById('wrong-message').innerHTML;\n        };\n        */\n    \n\n\n/***/ }),\n/* 365 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Image element\n * @module zrender/graphic/Image\n */\n\n\n\n    var Displayable = __webpack_require__(347);\n    var BoundingRect = __webpack_require__(326);\n    var zrUtil = __webpack_require__(317);\n\n    var LRU = __webpack_require__(433);\n    var globalImageCache = new LRU(50);\n    /**\n     * @alias zrender/graphic/Image\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function ZImage(opts) {\n        Displayable.call(this, opts);\n    }\n\n    ZImage.prototype = {\n\n        constructor: ZImage,\n\n        type: 'image',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var src = style.image;\n            var image;\n\n            // Must bind each time\n            style.bind(ctx, this, prevEl);\n            // style.image is a url string\n            if (typeof src === 'string') {\n                image = this._image;\n            }\n            // style.image is an HTMLImageElement or HTMLCanvasElement or Canvas\n            else {\n                image = src;\n            }\n            // FIXME Case create many images with src\n            if (!image && src) {\n                // Try get from global image cache\n                var cachedImgObj = globalImageCache.get(src);\n                if (!cachedImgObj) {\n                    // Create a new image\n                    image = new Image();\n                    image.onload = function () {\n                        image.onload = null;\n                        for (var i = 0; i < cachedImgObj.pending.length; i++) {\n                            cachedImgObj.pending[i].dirty();\n                        }\n                    };\n                    cachedImgObj = {\n                        image: image,\n                        pending: [this]\n                    };\n                    image.src = src;\n                    globalImageCache.put(src, cachedImgObj);\n                    this._image = image;\n                    return;\n                }\n                else {\n                    image = cachedImgObj.image;\n                    this._image = image;\n                    // Image is not complete finish, add to pending list\n                    if (!image.width || !image.height) {\n                        cachedImgObj.pending.push(this);\n                        return;\n                    }\n                }\n            }\n\n            if (image) {\n                // 图片已经加载完成\n                // if (image.nodeName.toUpperCase() == 'IMG') {\n                //     if (!image.complete) {\n                //         return;\n                //     }\n                // }\n                // Else is canvas\n\n                var width = style.width || image.width;\n                var height = style.height || image.height;\n                var x = style.x || 0;\n                var y = style.y || 0;\n                // 图片加载失败\n                if (!image.width || !image.height) {\n                    return;\n                }\n\n                // 设置transform\n                this.setTransform(ctx);\n\n\n                if (style.sWidth && style.sHeight) {\n                    var sx = style.sx || 0;\n                    var sy = style.sy || 0;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, style.sWidth, style.sHeight,\n                        x, y, width, height\n                    );\n                }\n                else if (style.sx && style.sy) {\n                    var sx = style.sx;\n                    var sy = style.sy;\n                    var sWidth = width - sx;\n                    var sHeight = height - sy;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, sWidth, sHeight,\n                        x, y, width, height\n                    );\n                }\n                else {\n                    ctx.drawImage(image, x, y, width, height);\n                }\n\n                // 如果没设置宽和高的话自动根据图片宽高设置\n                if (style.width == null) {\n                    style.width = width;\n                }\n                if (style.height == null) {\n                    style.height = height;\n                }\n\n                this.restoreTransform(ctx);\n\n                // Draw rect text\n                if (style.text != null) {\n                    this.drawRectText(ctx, this.getBoundingRect());\n                }\n\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (! this._rect) {\n                this._rect = new BoundingRect(\n                    style.x || 0, style.y || 0, style.width || 0, style.height || 0\n                );\n            }\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(ZImage, Displayable);\n\n    module.exports = ZImage;\n\n\n/***/ }),\n/* 366 */\n/***/ (function(module, exports) {\n\n\n\n    var Pattern = function (image, repeat) {\n        this.image = image;\n        this.repeat = repeat;\n\n        // Can be cloned\n        this.type = 'pattern';\n    };\n\n    Pattern.prototype.getCanvasPattern = function (ctx) {\n\n        return this._canvasPattern\n            || (this._canvasPattern = ctx.createPattern(this.image, this.repeat));\n    };\n\n    module.exports = Pattern;\n\n\n/***/ }),\n/* 367 */\n/***/ (function(module, exports) {\n\n/**\n * @module zrender/graphic/Style\n */\n\n\n    var STYLE_COMMON_PROPS = [\n        ['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'],\n        ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]\n    ];\n\n    // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n    // var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\n    var Style = function (opts) {\n        this.extendFrom(opts);\n    };\n\n    function createLinearGradient(ctx, obj, rect) {\n        // var size =\n        var x = obj.x;\n        var x2 = obj.x2;\n        var y = obj.y;\n        var y2 = obj.y2;\n\n        if (!obj.global) {\n            x = x * rect.width + rect.x;\n            x2 = x2 * rect.width + rect.x;\n            y = y * rect.height + rect.y;\n            y2 = y2 * rect.height + rect.y;\n        }\n\n        var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n\n        return canvasGradient;\n    }\n\n    function createRadialGradient(ctx, obj, rect) {\n        var width = rect.width;\n        var height = rect.height;\n        var min = Math.min(width, height);\n\n        var x = obj.x;\n        var y = obj.y;\n        var r = obj.r;\n        if (!obj.global) {\n            x = x * width + rect.x;\n            y = y * height + rect.y;\n            r = r * min;\n        }\n\n        var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n\n        return canvasGradient;\n    }\n\n\n    Style.prototype = {\n\n        constructor: Style,\n\n        /**\n         * @type {string}\n         */\n        fill: '#000000',\n\n        /**\n         * @type {string}\n         */\n        stroke: null,\n\n        /**\n         * @type {number}\n         */\n        opacity: 1,\n\n        /**\n         * @type {Array.<number>}\n         */\n        lineDash: null,\n\n        /**\n         * @type {number}\n         */\n        lineDashOffset: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetY: 0,\n\n        /**\n         * @type {number}\n         */\n        lineWidth: 1,\n\n        /**\n         * If stroke ignore scale\n         * @type {Boolean}\n         */\n        strokeNoScale: false,\n\n        // Bounding rect text configuration\n        // Not affected by element transform\n        /**\n         * @type {string}\n         */\n        text: null,\n\n        /**\n         * @type {string}\n         */\n        textFill: '#000',\n\n        /**\n         * @type {string}\n         */\n        textStroke: null,\n\n        /**\n         * 'inside', 'left', 'right', 'top', 'bottom'\n         * [x, y]\n         * @type {string|Array.<number>}\n         * @default 'inside'\n         */\n        textPosition: 'inside',\n\n        /**\n         * [x, y]\n         * @type {Array.<number>}\n         */\n        textOffset: null,\n\n        /**\n         * @type {string}\n         */\n        textBaseline: null,\n\n        /**\n         * @type {string}\n         */\n        textAlign: null,\n\n        /**\n         * @type {string}\n         */\n        textVerticalAlign: null,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textDistance: 5,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowBlur: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetX: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetY: 0,\n\n        /**\n         * If transform text\n         * Only useful in Path and Image element\n         * @type {boolean}\n         */\n        textTransform: false,\n\n        /**\n         * Text rotate around position of Path or Image\n         * Only useful in Path and Image element and textTransform is false.\n         */\n        textRotation: 0,\n\n        /**\n         * @type {string}\n         * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n         */\n        blend: null,\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        bind: function (ctx, el, prevEl) {\n            var style = this;\n            var prevStyle = prevEl && prevEl.style;\n            var firstDraw = !prevStyle;\n\n            for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n                var prop = STYLE_COMMON_PROPS[i];\n                var styleName = prop[0];\n\n                if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n                    // FIXME Invalid property value will cause style leak from previous element.\n                    ctx[styleName] = style[styleName] || prop[1];\n                }\n            }\n\n            if ((firstDraw || style.fill !== prevStyle.fill)) {\n                ctx.fillStyle = style.fill;\n            }\n            if ((firstDraw || style.stroke !== prevStyle.stroke)) {\n                ctx.strokeStyle = style.stroke;\n            }\n            if ((firstDraw || style.opacity !== prevStyle.opacity)) {\n                ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n            }\n\n            if ((firstDraw || style.blend !== prevStyle.blend)) {\n                ctx.globalCompositeOperation = style.blend || 'source-over';\n            }\n            if (this.hasStroke()) {\n                var lineWidth = style.lineWidth;\n                ctx.lineWidth = lineWidth / (\n                    (this.strokeNoScale && el && el.getLineScale) ? el.getLineScale() : 1\n                );\n            }\n        },\n\n        hasFill: function () {\n            var fill = this.fill;\n            return fill != null && fill !== 'none';\n        },\n\n        hasStroke: function () {\n            var stroke = this.stroke;\n            return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n        },\n\n        /**\n         * Extend from other style\n         * @param {zrender/graphic/Style} otherStyle\n         * @param {boolean} overwrite\n         */\n        extendFrom: function (otherStyle, overwrite) {\n            if (otherStyle) {\n                var target = this;\n                for (var name in otherStyle) {\n                    if (otherStyle.hasOwnProperty(name)\n                        && (overwrite || ! target.hasOwnProperty(name))\n                    ) {\n                        target[name] = otherStyle[name];\n                    }\n                }\n            }\n        },\n\n        /**\n         * Batch setting style with a given object\n         * @param {Object|string} obj\n         * @param {*} [obj]\n         */\n        set: function (obj, value) {\n            if (typeof obj === 'string') {\n                this[obj] = value;\n            }\n            else {\n                this.extendFrom(obj, true);\n            }\n        },\n\n        /**\n         * Clone\n         * @return {zrender/graphic/Style} [description]\n         */\n        clone: function () {\n            var newStyle = new this.constructor();\n            newStyle.extendFrom(this, true);\n            return newStyle;\n        },\n\n        getGradient: function (ctx, obj, rect) {\n            var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n            var canvasGradient = method(ctx, obj, rect);\n            var colorStops = obj.colorStops;\n            for (var i = 0; i < colorStops.length; i++) {\n                canvasGradient.addColorStop(\n                    colorStops[i].offset, colorStops[i].color\n                );\n            }\n            return canvasGradient;\n        }\n    };\n\n    var styleProto = Style.prototype;\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n        var prop = STYLE_COMMON_PROPS[i];\n        if (!(prop[0] in styleProto)) {\n            styleProto[prop[0]] = prop[1];\n        }\n    }\n\n    // Provide for others\n    Style.getGradient = styleProto.getGradient;\n\n    module.exports = Style;\n\n\n/***/ }),\n/* 368 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var smoothSpline = __webpack_require__(441);\n    var smoothBezier = __webpack_require__(440);\n\n    module.exports = {\n        buildPath: function (ctx, shape, closePath) {\n            var points = shape.points;\n            var smooth = shape.smooth;\n            if (points && points.length >= 2) {\n                if (smooth && smooth !== 'spline') {\n                    var controlPoints = smoothBezier(\n                        points, smooth, closePath, shape.smoothConstraint\n                    );\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    var len = points.length;\n                    for (var i = 0; i < (closePath ? len : len - 1); i++) {\n                        var cp1 = controlPoints[i * 2];\n                        var cp2 = controlPoints[i * 2 + 1];\n                        var p = points[(i + 1) % len];\n                        ctx.bezierCurveTo(\n                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\n                        );\n                    }\n                }\n                else {\n                    if (smooth === 'spline') {\n                        points = smoothSpline(points, closePath);\n                    }\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    for (var i = 1, l = points.length; i < l; i++) {\n                        ctx.lineTo(points[i][0], points[i][1]);\n                    }\n                }\n\n                closePath && ctx.closePath();\n            }\n        }\n    };\n\n\n/***/ }),\n/* 369 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var List = __webpack_require__(351);\n    var completeDimensions = __webpack_require__(400);\n    var zrUtil = __webpack_require__(317);\n    var modelUtil = __webpack_require__(325);\n    var CoordinateSystem = __webpack_require__(342);\n    var getDataItemValue = modelUtil.getDataItemValue;\n    var converDataValue = modelUtil.converDataValue;\n\n    function firstDataNotNull(data) {\n        var i = 0;\n        while (i < data.length && data[i] == null) {\n            i++;\n        }\n        return data[i];\n    }\n    function ifNeedCompleteOrdinalData(data) {\n        var sampleItem = firstDataNotNull(data);\n        return sampleItem != null\n            && !zrUtil.isArray(getDataItemValue(sampleItem));\n    }\n\n    /**\n     * Helper function to create a list from option data\n     */\n    function createListFromArray(data, seriesModel, ecModel) {\n        // If data is undefined\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        var coordSysName = seriesModel.get('coordinateSystem');\n        var creator = creators[coordSysName];\n        var registeredCoordSys = CoordinateSystem.get(coordSysName);\n        // FIXME\n        var axesInfo = creator && creator(data, seriesModel, ecModel);\n        var dimensions = axesInfo && axesInfo.dimensions;\n        if (!dimensions) {\n            // Get dimensions from registered coordinate system\n            dimensions = (registeredCoordSys && registeredCoordSys.dimensions) || ['x', 'y'];\n            dimensions = completeDimensions(dimensions, data, dimensions.concat(['value']));\n        }\n        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n\n        var list = new List(dimensions, seriesModel);\n\n        var nameList = createNameList(axesInfo, data);\n\n        var categories = {};\n        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))\n            ? function (itemOpt, dimName, dataIndex, dimIndex) {\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                // Use dataIndex as ordinal value in categoryAxis\n                return dimIndex === categoryIndex\n                    ? dataIndex\n                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n            }\n            : function (itemOpt, dimName, dataIndex, dimIndex) {\n                var value = getDataItemValue(itemOpt);\n                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n                if (categoryAxesModels && categoryAxesModels[dimName]) {\n                    // If given value is a category string\n                    if (typeof val === 'string') {\n                        // Lazy get categories\n                        categories[dimName] = categories[dimName]\n                            || categoryAxesModels[dimName].getCategories();\n                        val = zrUtil.indexOf(categories[dimName], val);\n                        if (val < 0 && !isNaN(val)) {\n                            // In case some one write '1', '2' istead of 1, 2\n                            val = +val;\n                        }\n                    }\n                }\n                return val;\n            };\n\n        list.hasItemOption = false;\n        list.initData(data, nameList, dimValueGetter);\n\n        return list;\n    }\n\n    function isStackable(axisType) {\n        return axisType !== 'category' && axisType !== 'time';\n    }\n\n    function getDimTypeByAxis(axisType) {\n        return axisType === 'category'\n            ? 'ordinal'\n            : axisType === 'time'\n            ? 'time'\n            : 'float';\n    }\n\n    /**\n     * Creaters for each coord system.\n     */\n    var creators = {\n\n        cartesian2d: function (data, seriesModel, ecModel) {\n\n            var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n                return ecModel.queryComponents({\n                    mainType: name,\n                    index: seriesModel.get(name + 'Index'),\n                    id: seriesModel.get(name + 'Id')\n                })[0];\n            });\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            if (__DEV__) {\n                if (!xAxisModel) {\n                    throw new Error('xAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('xAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n                if (!yAxisModel) {\n                    throw new Error('yAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('yAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n\n            var xAxisType = xAxisModel.get('type');\n            var yAxisType = yAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'x',\n                    type: getDimTypeByAxis(xAxisType),\n                    stackable: isStackable(xAxisType)\n                },\n                {\n                    name: 'y',\n                    // If two category axes\n                    type: getDimTypeByAxis(yAxisType),\n                    stackable: isStackable(yAxisType)\n                }\n            ];\n\n            var isXAxisCateogry = xAxisType === 'category';\n            var isYAxisCategory = yAxisType === 'category';\n\n            completeDimensions(dimensions, data, ['x', 'y', 'z']);\n\n            var categoryAxesModels = {};\n            if (isXAxisCateogry) {\n                categoryAxesModels.x = xAxisModel;\n            }\n            if (isYAxisCategory) {\n                categoryAxesModels.y = yAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        singleAxis: function (data, seriesModel, ecModel) {\n\n            var singleAxisModel = ecModel.queryComponents({\n                mainType: 'singleAxis',\n                index: seriesModel.get('singleAxisIndex'),\n                id: seriesModel.get('singleAxisId')\n            })[0];\n\n            if (__DEV__) {\n                if (!singleAxisModel) {\n                    throw new Error('singleAxis should be specified.');\n                }\n            }\n\n            var singleAxisType = singleAxisModel.get('type');\n            var isCategory = singleAxisType === 'category';\n\n            var dimensions = [{\n                name: 'single',\n                type: getDimTypeByAxis(singleAxisType),\n                stackable: isStackable(singleAxisType)\n            }];\n\n            completeDimensions(dimensions, data);\n\n            var categoryAxesModels = {};\n            if (isCategory) {\n                categoryAxesModels.single = singleAxisModel;\n            }\n\n            return {\n                dimensions: dimensions,\n                categoryIndex: isCategory ? 0 : -1,\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        polar: function (data, seriesModel, ecModel) {\n            var polarModel = ecModel.queryComponents({\n                mainType: 'polar',\n                index: seriesModel.get('polarIndex'),\n                id: seriesModel.get('polarId')\n            })[0];\n\n            var angleAxisModel = polarModel.findAxisModel('angleAxis');\n            var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n\n            if (__DEV__) {\n                if (!angleAxisModel) {\n                    throw new Error('angleAxis option not found');\n                }\n                if (!radiusAxisModel) {\n                    throw new Error('radiusAxis option not found');\n                }\n            }\n\n            var radiusAxisType = radiusAxisModel.get('type');\n            var angleAxisType = angleAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'radius',\n                    type: getDimTypeByAxis(radiusAxisType),\n                    stackable: isStackable(radiusAxisType)\n                },\n                {\n                    name: 'angle',\n                    type: getDimTypeByAxis(angleAxisType),\n                    stackable: isStackable(angleAxisType)\n                }\n            ];\n            var isAngleAxisCateogry = angleAxisType === 'category';\n            var isRadiusAxisCateogry = radiusAxisType === 'category';\n\n            completeDimensions(dimensions, data, ['radius', 'angle', 'value']);\n\n            var categoryAxesModels = {};\n            if (isRadiusAxisCateogry) {\n                categoryAxesModels.radius = radiusAxisModel;\n            }\n            if (isAngleAxisCateogry) {\n                categoryAxesModels.angle = angleAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        geo: function (data, seriesModel, ecModel) {\n            // TODO Region\n            // 多个散点图系列在同一个地区的时候\n            return {\n                dimensions: completeDimensions([\n                    {name: 'lng'},\n                    {name: 'lat'}\n                ], data, ['lng', 'lat', 'value'])\n            };\n        }\n    };\n\n    function createNameList(result, data) {\n        var nameList = [];\n\n        var categoryDim = result && result.dimensions[result.categoryIndex];\n        var categoryAxisModel;\n        if (categoryDim) {\n            categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n        }\n\n        if (categoryAxisModel) {\n            // FIXME Two category axis\n            var categories = categoryAxisModel.getCategories();\n            if (categories) {\n                var dataLen = data.length;\n                // Ordered data is given explicitly like\n                // [[3, 0.2], [1, 0.3], [2, 0.15]]\n                // or given scatter data,\n                // pick the category\n                if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n                    nameList = [];\n                    for (var i = 0; i < dataLen; i++) {\n                        nameList[i] = categories[data[i][result.categoryIndex || 0]];\n                    }\n                }\n                else {\n                    nameList = categories.slice(0);\n                }\n            }\n        }\n\n        return nameList;\n    }\n\n    module.exports = createListFromArray;\n\n\n\n/***/ }),\n/* 370 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var graphic = __webpack_require__(319);\n    var zrUtil = __webpack_require__(317);\n    var echarts = __webpack_require__(318);\n\n    __webpack_require__(371);\n\n    __webpack_require__(384);\n\n    // Grid view\n    echarts.extendComponentView({\n\n        type: 'grid',\n\n        render: function (gridModel, ecModel) {\n            this.group.removeAll();\n            if (gridModel.get('show')) {\n                this.group.add(new graphic.Rect({\n                    shape: gridModel.coordinateSystem.getRect(),\n                    style: zrUtil.defaults({\n                        fill: gridModel.get('backgroundColor')\n                    }, gridModel.getItemStyle()),\n                    silent: true,\n                    z2: -1\n                }));\n            }\n        }\n\n    });\n\n    echarts.registerPreprocessor(function (option) {\n        // Only create grid when need\n        if (option.xAxis && option.yAxis && !option.grid) {\n            option.grid = {};\n        }\n    });\n\n\n/***/ }),\n/* 371 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\nvar factory = exports;\n\n    var layout = __webpack_require__(330);\n    var axisHelper = __webpack_require__(343);\n\n    var zrUtil = __webpack_require__(317);\n    var Cartesian2D = __webpack_require__(396);\n    var Axis2D = __webpack_require__(394);\n\n    var each = zrUtil.each;\n\n    var ifAxisCrossZero = axisHelper.ifAxisCrossZero;\n    var niceScaleExtent = axisHelper.niceScaleExtent;\n\n    // 依赖 GridModel, AxisModel 做预处理\n    __webpack_require__(397);\n\n    /**\n     * Check if the axis is used in the specified grid\n     * @inner\n     */\n    function isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n        return axisModel.getCoordSysModel() === gridModel;\n    }\n\n    function getLabelUnionRect(axis) {\n        var axisModel = axis.model;\n        var labels = axisModel.getFormattedLabels();\n        var textStyleModel = axisModel.getModel('axisLabel.textStyle');\n        var rect;\n        var step = 1;\n        var labelCount = labels.length;\n        if (labelCount > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.ceil(labelCount / 40);\n        }\n        for (var i = 0; i < labelCount; i += step) {\n            if (!axis.isLabelIgnored(i)) {\n                var singleRect = textStyleModel.getTextRect(labels[i]);\n                // FIXME consider label rotate\n                rect ? rect.union(singleRect) : (rect = singleRect);\n            }\n        }\n        return rect;\n    }\n\n    function Grid(gridModel, ecModel, api) {\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n         * @private\n         */\n        this._coordsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n         * @private\n         */\n        this._coordsList = [];\n\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesList = [];\n\n        this._initCartesian(gridModel, ecModel, api);\n\n        this._model = gridModel;\n    }\n\n    var gridProto = Grid.prototype;\n\n    gridProto.type = 'grid';\n\n    gridProto.getRect = function () {\n        return this._rect;\n    };\n\n    gridProto.update = function (ecModel, api) {\n\n        var axesMap = this._axesMap;\n\n        this._updateScale(ecModel, this._model);\n\n        function ifAxisCanNotOnZero(otherAxisDim) {\n            var axes = axesMap[otherAxisDim];\n            for (var idx in axes) {\n                if (axes.hasOwnProperty(idx)) {\n                    var axis = axes[idx];\n                    if (axis && (axis.type === 'category' || !ifAxisCrossZero(axis))) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n\n        each(axesMap.x, function (xAxis) {\n            niceScaleExtent(xAxis, xAxis.model);\n        });\n        each(axesMap.y, function (yAxis) {\n            niceScaleExtent(yAxis, yAxis.model);\n        });\n        // Fix configuration\n        each(axesMap.x, function (xAxis) {\n            // onZero can not be enabled in these two situations\n            // 1. When any other axis is a category axis\n            // 2. When any other axis not across 0 point\n            if (ifAxisCanNotOnZero('y')) {\n                xAxis.onZero = false;\n            }\n        });\n        each(axesMap.y, function (yAxis) {\n            if (ifAxisCanNotOnZero('x')) {\n                yAxis.onZero = false;\n            }\n        });\n\n        // Resize again if containLabel is enabled\n        // FIXME It may cause getting wrong grid size in data processing stage\n        this.resize(this._model, api);\n    };\n\n    /**\n     * Resize the grid\n     * @param {module:echarts/coord/cartesian/GridModel} gridModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    gridProto.resize = function (gridModel, api) {\n\n        var gridRect = layout.getLayoutRect(\n            gridModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n\n        this._rect = gridRect;\n\n        var axesList = this._axesList;\n\n        adjustAxes();\n\n        // Minus label size\n        if (gridModel.get('containLabel')) {\n            each(axesList, function (axis) {\n                if (!axis.model.get('axisLabel.inside')) {\n                    var labelUnionRect = getLabelUnionRect(axis);\n                    if (labelUnionRect) {\n                        var dim = axis.isHorizontal() ? 'height' : 'width';\n                        var margin = axis.model.get('axisLabel.margin');\n                        gridRect[dim] -= labelUnionRect[dim] + margin;\n                        if (axis.position === 'top') {\n                            gridRect.y += labelUnionRect.height + margin;\n                        }\n                        else if (axis.position === 'left')  {\n                            gridRect.x += labelUnionRect.width + margin;\n                        }\n                    }\n                }\n            });\n\n            adjustAxes();\n        }\n\n        function adjustAxes() {\n            each(axesList, function (axis) {\n                var isHorizontal = axis.isHorizontal();\n                var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n                var idx = axis.inverse ? 1 : 0;\n                axis.setExtent(extent[idx], extent[1 - idx]);\n                updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n            });\n        }\n    };\n\n    /**\n     * @param {string} axisType\n     * @param {ndumber} [axisIndex]\n     */\n    gridProto.getAxis = function (axisType, axisIndex) {\n        var axesMapOnDim = this._axesMap[axisType];\n        if (axesMapOnDim != null) {\n            if (axisIndex == null) {\n                // Find first axis\n                for (var name in axesMapOnDim) {\n                    if (axesMapOnDim.hasOwnProperty(name)) {\n                        return axesMapOnDim[name];\n                    }\n                }\n            }\n            return axesMapOnDim[axisIndex];\n        }\n    };\n\n    gridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n        if (xAxisIndex != null && yAxisIndex != null) {\n            var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n            return this._coordsMap[key];\n        }\n        else {\n            // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n            for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n                if (coordList[i].getAxis('x').index === xAxisIndex\n                    || coordList[i].getAxis('y').index === yAxisIndex\n                ) {\n                    return coordList[i];\n                }\n            }\n        }\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertToPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.dataToPoint(value)\n            : target.axis\n            ? target.axis.toGlobalCoord(target.axis.dataToCoord(value))\n            : null;\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertFromPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.pointToData(value)\n            : target.axis\n            ? target.axis.coordToData(target.axis.toLocalCoord(value))\n            : null;\n    };\n\n    /**\n     * @inner\n     */\n    gridProto._findConvertTarget = function (ecModel, finder) {\n        var seriesModel = finder.seriesModel;\n        var xAxisModel = finder.xAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('xAxis')[0]);\n        var yAxisModel = finder.yAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('yAxis')[0]);\n        var gridModel = finder.gridModel;\n        var coordsList = this._coordsList;\n        var cartesian;\n        var axis;\n\n        if (seriesModel) {\n            cartesian = seriesModel.coordinateSystem;\n            zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n        }\n        else if (xAxisModel && yAxisModel) {\n            cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n        }\n        else if (xAxisModel) {\n            axis = this.getAxis('x', xAxisModel.componentIndex);\n        }\n        else if (yAxisModel) {\n            axis = this.getAxis('y', yAxisModel.componentIndex);\n        }\n        // Lowest priority.\n        else if (gridModel) {\n            var grid = gridModel.coordinateSystem;\n            if (grid === this) {\n                cartesian = this._coordsList[0];\n            }\n        }\n\n        return {cartesian: cartesian, axis: axis};\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.containPoint = function (point) {\n        var coord = this._coordsList[0];\n        if (coord) {\n            return coord.containPoint(point);\n        }\n    };\n\n    /**\n     * Initialize cartesian coordinate systems\n     * @private\n     */\n    gridProto._initCartesian = function (gridModel, ecModel, api) {\n        var axisPositionUsed = {\n            left: false,\n            right: false,\n            top: false,\n            bottom: false\n        };\n\n        var axesMap = {\n            x: {},\n            y: {}\n        };\n        var axesCount = {\n            x: 0,\n            y: 0\n        };\n\n        /// Create axis\n        ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n        ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n        if (!axesCount.x || !axesCount.y) {\n            // Roll back when there no either x or y axis\n            this._axesMap = {};\n            this._axesList = [];\n            return;\n        }\n\n        this._axesMap = axesMap;\n\n        /// Create cartesian2d\n        each(axesMap.x, function (xAxis, xAxisIndex) {\n            each(axesMap.y, function (yAxis, yAxisIndex) {\n                var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n                var cartesian = new Cartesian2D(key);\n\n                cartesian.grid = this;\n\n                this._coordsMap[key] = cartesian;\n                this._coordsList.push(cartesian);\n\n                cartesian.addAxis(xAxis);\n                cartesian.addAxis(yAxis);\n            }, this);\n        }, this);\n\n        function createAxisCreator(axisType) {\n            return function (axisModel, idx) {\n                if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n                    return;\n                }\n\n                var axisPosition = axisModel.get('position');\n                if (axisType === 'x') {\n                    // Fix position\n                    if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n                        // Default bottom of X\n                        axisPosition = 'bottom';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n                        }\n                    }\n                }\n                else {\n                    // Fix position\n                    if (axisPosition !== 'left' && axisPosition !== 'right') {\n                        // Default left of Y\n                        axisPosition = 'left';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n                        }\n                    }\n                }\n                axisPositionUsed[axisPosition] = true;\n\n                var axis = new Axis2D(\n                    axisType, axisHelper.createScaleByModel(axisModel),\n                    [0, 0],\n                    axisModel.get('type'),\n                    axisPosition\n                );\n\n                var isCategory = axis.type === 'category';\n                axis.onBand = isCategory && axisModel.get('boundaryGap');\n                axis.inverse = axisModel.get('inverse');\n\n                axis.onZero = axisModel.get('axisLine.onZero');\n\n                // Inject axis into axisModel\n                axisModel.axis = axis;\n\n                // Inject axisModel into axis\n                axis.model = axisModel;\n\n                // Inject grid info axis\n                axis.grid = this;\n\n                // Index of axis, can be used as key\n                axis.index = idx;\n\n                this._axesList.push(axis);\n\n                axesMap[axisType][idx] = axis;\n                axesCount[axisType]++;\n            };\n        }\n    };\n\n    /**\n     * Update cartesian properties from series\n     * @param  {module:echarts/model/Option} option\n     * @private\n     */\n    gridProto._updateScale = function (ecModel, gridModel) {\n        // Reset scale\n        zrUtil.each(this._axesList, function (axis) {\n            axis.scale.setExtent(Infinity, -Infinity);\n        });\n        ecModel.eachSeries(function (seriesModel) {\n            if (isCartesian2D(seriesModel)) {\n                var axesModels = findAxesModels(seriesModel, ecModel);\n                var xAxisModel = axesModels[0];\n                var yAxisModel = axesModels[1];\n\n                if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel)\n                    || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)\n                 ) {\n                    return;\n                }\n\n                var cartesian = this.getCartesian(\n                    xAxisModel.componentIndex, yAxisModel.componentIndex\n                );\n                var data = seriesModel.getData();\n                var xAxis = cartesian.getAxis('x');\n                var yAxis = cartesian.getAxis('y');\n\n                if (data.type === 'list') {\n                    unionExtent(data, xAxis, seriesModel);\n                    unionExtent(data, yAxis, seriesModel);\n                }\n            }\n        }, this);\n\n        function unionExtent(data, axis, seriesModel) {\n            each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n                axis.scale.unionExtentFromData(data, dim);\n            });\n        }\n    };\n\n    /**\n     * @inner\n     */\n    function updateAxisTransfrom(axis, coordBase) {\n        var axisExtent = axis.getExtent();\n        var axisExtentSum = axisExtent[0] + axisExtent[1];\n\n        // Fast transform\n        axis.toGlobalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord + coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n        axis.toLocalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord - coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n    }\n\n    var axesTypes = ['xAxis', 'yAxis'];\n    /**\n     * @inner\n     */\n    function findAxesModels(seriesModel, ecModel) {\n        return zrUtil.map(axesTypes, function (axisType) {\n            var axisModel = seriesModel.getReferringComponents(axisType)[0];\n\n            if (__DEV__) {\n                if (!axisModel) {\n                    throw new Error(axisType + ' \"' + zrUtil.retrieve(\n                        seriesModel.get(axisType + 'Index'),\n                        seriesModel.get(axisType + 'Id'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n            return axisModel;\n        });\n    }\n\n    /**\n     * @inner\n     */\n    function isCartesian2D(seriesModel) {\n        return seriesModel.get('coordinateSystem') === 'cartesian2d';\n    }\n\n    Grid.create = function (ecModel, api) {\n        var grids = [];\n        ecModel.eachComponent('grid', function (gridModel, idx) {\n            var grid = new Grid(gridModel, ecModel, api);\n            grid.name = 'grid_' + idx;\n            grid.resize(gridModel, api);\n\n            gridModel.coordinateSystem = grid;\n\n            grids.push(grid);\n        });\n\n        // Inject the coordinateSystems into seriesModel\n        ecModel.eachSeries(function (seriesModel) {\n            if (!isCartesian2D(seriesModel)) {\n                return;\n            }\n\n            var axesModels = findAxesModels(seriesModel, ecModel);\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            var gridModel = xAxisModel.getCoordSysModel();\n\n            if (__DEV__) {\n                if (!gridModel) {\n                    throw new Error(\n                        'Grid \"' + zrUtil.retrieve(\n                            xAxisModel.get('gridIndex'),\n                            xAxisModel.get('gridId'),\n                            0\n                        ) + '\" not found'\n                    );\n                }\n                if (xAxisModel.getCoordSysModel() !== yAxisModel.getCoordSysModel()) {\n                    throw new Error('xAxis and yAxis must use the same grid');\n                }\n            }\n\n            var grid = gridModel.coordinateSystem;\n\n            seriesModel.coordinateSystem = grid.getCartesian(\n                xAxisModel.componentIndex, yAxisModel.componentIndex\n            );\n        });\n\n        return grids;\n    };\n\n    // For deciding which dimensions to use when creating list data\n    Grid.dimensions = Cartesian2D.prototype.dimensions;\n\n    __webpack_require__(342).register('cartesian2d', Grid);\n\n    module.exports = Grid;\n\n\n/***/ }),\n/* 372 */\n/***/ (function(module, exports) {\n\n\n\n    var lib = {};\n\n    var ORIGIN_METHOD = '\\0__throttleOriginMethod';\n    var RATE = '\\0__throttleRate';\n    var THROTTLE_TYPE = '\\0__throttleType';\n\n    /**\n     * @public\n     * @param {(Function)} fn\n     * @param {number} [delay=0] Unit: ms.\n     * @param {boolean} [debounce=false]\n     *        true: If call interval less than `delay`, only the last call works.\n     *        false: If call interval less than `delay, call works on fixed rate.\n     * @return {(Function)} throttled fn.\n     */\n    lib.throttle = function (fn, delay, debounce) {\n\n        var currCall;\n        var lastCall = 0;\n        var lastExec = 0;\n        var timer = null;\n        var diff;\n        var scope;\n        var args;\n\n        delay = delay || 0;\n\n        function exec() {\n            lastExec = (new Date()).getTime();\n            timer = null;\n            fn.apply(scope, args || []);\n        }\n\n        var cb = function () {\n            currCall = (new Date()).getTime();\n            scope = this;\n            args = arguments;\n            diff = currCall - (debounce ? lastCall : lastExec) - delay;\n\n            clearTimeout(timer);\n\n            if (debounce) {\n                timer = setTimeout(exec, delay);\n            }\n            else {\n                if (diff >= 0) {\n                    exec();\n                }\n                else {\n                    timer = setTimeout(exec, -diff);\n                }\n            }\n\n            lastCall = currCall;\n        };\n\n        /**\n         * Clear throttle.\n         * @public\n         */\n        cb.clear = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n\n        return cb;\n    };\n\n    /**\n     * Create throttle method or update throttle rate.\n     *\n     * @example\n     * ComponentView.prototype.render = function () {\n     *     ...\n     *     throttle.createOrUpdate(\n     *         this,\n     *         '_dispatchAction',\n     *         this.model.get('throttle'),\n     *         'fixRate'\n     *     );\n     * };\n     * ComponentView.prototype.remove = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     * ComponentView.prototype.dispose = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     * @param {number} [rate]\n     * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n     * @return {Function} throttled function.\n     */\n    lib.createOrUpdate = function (obj, fnAttr, rate, throttleType) {\n        var fn = obj[fnAttr];\n\n        if (!fn) {\n            return;\n        }\n\n        var originFn = fn[ORIGIN_METHOD] || fn;\n        var lastThrottleType = fn[THROTTLE_TYPE];\n        var lastRate = fn[RATE];\n\n        if (lastRate !== rate || lastThrottleType !== throttleType) {\n            if (rate == null || !throttleType) {\n                return (obj[fnAttr] = originFn);\n            }\n\n            fn = obj[fnAttr] = lib.throttle(\n                originFn, rate, throttleType === 'debounce'\n            );\n            fn[ORIGIN_METHOD] = originFn;\n            fn[THROTTLE_TYPE] = throttleType;\n            fn[RATE] = rate;\n        }\n\n        return fn;\n    };\n\n    /**\n     * Clear throttle. Example see throttle.createOrUpdate.\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     */\n    lib.clear = function (obj, fnAttr) {\n        var fn = obj[fnAttr];\n        if (fn && fn[ORIGIN_METHOD]) {\n            obj[fnAttr] = fn[ORIGIN_METHOD];\n        }\n    };\n\n    module.exports = lib;\n\n\n\n/***/ }),\n/* 373 */,\n/* 374 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(317);\n\n    var Gradient = __webpack_require__(348);\n\n    /**\n     * x, y, x2, y2 are all percent from 0 to 1\n     * @param {number} [x=0]\n     * @param {number} [y=0]\n     * @param {number} [x2=1]\n     * @param {number} [y2=0]\n     * @param {Array.<Object>} colorStops\n     * @param {boolean} [globalCoord=false]\n     */\n    var LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n        this.x = x == null ? 0 : x;\n\n        this.y = y == null ? 0 : y;\n\n        this.x2 = x2 == null ? 1 : x2;\n\n        this.y2 = y2 == null ? 0 : y2;\n\n        // Can be cloned\n        this.type = 'linear';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    LinearGradient.prototype = {\n\n        constructor: LinearGradient\n    };\n\n    zrUtil.inherits(LinearGradient, Gradient);\n\n    module.exports = LinearGradient;\n\n\n/***/ }),\n/* 375 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n\n    var graphic = __webpack_require__(319);\n    var Symbol = __webpack_require__(354);\n\n    /**\n     * @constructor\n     * @alias module:echarts/chart/helper/SymbolDraw\n     * @param {module:zrender/graphic/Group} [symbolCtor]\n     */\n    function SymbolDraw(symbolCtor) {\n        this.group = new graphic.Group();\n\n        this._symbolCtor = symbolCtor || Symbol;\n    }\n\n    var symbolDrawProto = SymbolDraw.prototype;\n\n    function symbolNeedsDraw(data, idx, isIgnore) {\n        var point = data.getItemLayout(idx);\n        // Is an object\n        // if (point && point.hasOwnProperty('point')) {\n        //     point = point.point;\n        // }\n        return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx))\n                    && data.getItemVisual(idx, 'symbol') !== 'none';\n    }\n    /**\n     * Update symbols draw by new data\n     * @param {module:echarts/data/List} data\n     * @param {Array.<boolean>} [isIgnore]\n     */\n    symbolDrawProto.updateData = function (data, isIgnore) {\n        var group = this.group;\n        var seriesModel = data.hostModel;\n        var oldData = this._data;\n\n        var SymbolCtor = this._symbolCtor;\n\n        var seriesScope = {\n            itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n            hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n            symbolRotate: seriesModel.get('symbolRotate'),\n            symbolOffset: seriesModel.get('symbolOffset'),\n            hoverAnimation: seriesModel.get('hoverAnimation'),\n\n            labelModel: seriesModel.getModel('label.normal'),\n            hoverLabelModel: seriesModel.getModel('label.emphasis')\n        };\n\n        data.diff(oldData)\n            .add(function (newIdx) {\n                var point = data.getItemLayout(newIdx);\n                if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n                    symbolEl.attr('position', point);\n                    data.setItemGraphicEl(newIdx, symbolEl);\n                    group.add(symbolEl);\n                }\n            })\n            .update(function (newIdx, oldIdx) {\n                var symbolEl = oldData.getItemGraphicEl(oldIdx);\n                var point = data.getItemLayout(newIdx);\n                if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    group.remove(symbolEl);\n                    return;\n                }\n                if (!symbolEl) {\n                    symbolEl = new SymbolCtor(data, newIdx);\n                    symbolEl.attr('position', point);\n                }\n                else {\n                    symbolEl.updateData(data, newIdx, seriesScope);\n                    graphic.updateProps(symbolEl, {\n                        position: point\n                    }, seriesModel);\n                }\n\n                // Add back\n                group.add(symbolEl);\n\n                data.setItemGraphicEl(newIdx, symbolEl);\n            })\n            .remove(function (oldIdx) {\n                var el = oldData.getItemGraphicEl(oldIdx);\n                el && el.fadeOut(function () {\n                    group.remove(el);\n                });\n            })\n            .execute();\n\n        this._data = data;\n    };\n\n    symbolDrawProto.updateLayout = function () {\n        var data = this._data;\n        if (data) {\n            // Not use animation\n            data.eachItemGraphicEl(function (el, idx) {\n                var point = data.getItemLayout(idx);\n                el.attr('position', point);\n            });\n        }\n    };\n\n    symbolDrawProto.remove = function (enableAnimation) {\n        var group = this.group;\n        var data = this._data;\n        if (data) {\n            if (enableAnimation) {\n                data.eachItemGraphicEl(function (el) {\n                    el.fadeOut(function () {\n                        group.remove(el);\n                    });\n                });\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    };\n\n    module.exports = SymbolDraw;\n\n\n/***/ }),\n/* 376 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// FIXME Better way to pack data in graphic element\n\n\n    __webpack_require__(388);\n\n    __webpack_require__(389);\n\n    // Show tip action\n    /**\n     * @action\n     * @property {string} type\n     * @property {number} seriesIndex\n     * @property {number} dataIndex\n     * @property {number} [x]\n     * @property {number} [y]\n     */\n    __webpack_require__(318).registerAction(\n        {\n            type: 'showTip',\n            event: 'showTip',\n            update: 'tooltip:manuallyShowTip'\n        },\n        // noop\n        function () {}\n    );\n    // Hide tip action\n    __webpack_require__(318).registerAction(\n        {\n            type: 'hideTip',\n            event: 'hideTip',\n            update: 'tooltip:manuallyHideTip'\n        },\n        // noop\n        function () {}\n    );\n\n\n/***/ }),\n/* 377 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Group = __webpack_require__(339);\n    var componentUtil = __webpack_require__(345);\n    var clazzUtil = __webpack_require__(328);\n\n    var Component = function () {\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewComponent');\n    };\n\n    Component.prototype = {\n\n        constructor: Component,\n\n        init: function (ecModel, api) {},\n\n        render: function (componentModel, ecModel, api, payload) {},\n\n        dispose: function () {}\n\n    };\n\n    var componentProto = Component.prototype;\n    componentProto.updateView\n        = componentProto.updateLayout\n        = componentProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            // Do nothing;\n        };\n    // Enable Component.extend.\n    clazzUtil.enableClassExtend(Component);\n\n    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});\n\n    module.exports = Component;\n\n\n/***/ }),\n/* 378 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(317);\n\n    var echartsAPIList = [\n        'getDom', 'getZr', 'getWidth', 'getHeight', 'dispatchAction', 'isDisposed',\n        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption'\n    ];\n\n    function ExtensionAPI(chartInstance) {\n        zrUtil.each(echartsAPIList, function (name) {\n            this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n        }, this);\n    }\n\n    module.exports = ExtensionAPI;\n\n\n/***/ }),\n/* 379 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(317);\n    var echarts = __webpack_require__(318);\n    var PRIORITY = echarts.PRIORITY;\n\n    __webpack_require__(380);\n    __webpack_require__(381);\n\n    echarts.registerVisual(zrUtil.curry(\n        __webpack_require__(418), 'line', 'circle', 'line'\n    ));\n    echarts.registerLayout(zrUtil.curry(\n        __webpack_require__(401), 'line'\n    ));\n\n    // Down sample after filter\n    echarts.registerProcessor(PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(\n        __webpack_require__(413), 'line'\n    ));\n\n    // In case developer forget to include grid component\n    __webpack_require__(370);\n\n\n/***/ }),\n/* 380 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var createListFromArray = __webpack_require__(369);\n    var SeriesModel = __webpack_require__(349);\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.line',\n\n        dependencies: ['grid', 'polar'],\n\n        getInitialData: function (option, ecModel) {\n            if (__DEV__) {\n                var coordSys = option.coordinateSystem;\n                if (coordSys !== 'polar' && coordSys !== 'cartesian2d') {\n                    throw new Error('Line not support coordinateSystem besides cartesian and polar');\n                }\n            }\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // stack: null\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // polarIndex: 0,\n\n            // If clip the overflow value\n            clipOverflow: true,\n\n            label: {\n                normal: {\n                    position: 'top'\n                }\n            },\n            // itemStyle: {\n            //     normal: {},\n            //     emphasis: {}\n            // },\n            lineStyle: {\n                normal: {\n                    width: 2,\n                    type: 'solid'\n                }\n            },\n            // areaStyle: {},\n            // false, 'start', 'end', 'middle'\n            step: false,\n\n            // Disabled if step is true\n            smooth: false,\n            smoothMonotone: null,\n            // 拐点图形类型\n            symbol: 'emptyCircle',\n            // 拐点图形大小\n            symbolSize: 4,\n            // 拐点图形旋转控制\n            symbolRotate: null,\n\n            // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n            showSymbol: true,\n            // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n            showAllSymbol: false,\n\n            // 是否连接断点\n            connectNulls: false,\n\n            // 数据过滤，'average', 'max', 'min', 'sum'\n            sampling: 'none',\n\n            animationEasing: 'linear',\n\n            // Disable progressive\n            progressive: 0,\n            hoverLayerThreshold: Infinity\n        }\n    });\n\n\n/***/ }),\n/* 381 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// FIXME step not support polar\n\n\n    var zrUtil = __webpack_require__(317);\n    var SymbolDraw = __webpack_require__(375);\n    var Symbol = __webpack_require__(354);\n    var lineAnimationDiff = __webpack_require__(382);\n    var graphic = __webpack_require__(319);\n    var modelUtil = __webpack_require__(325);\n    var polyHelper = __webpack_require__(383);\n    var ChartView = __webpack_require__(358);\n\n    function isPointsSame(points1, points2) {\n        if (points1.length !== points2.length) {\n            return;\n        }\n        for (var i = 0; i < points1.length; i++) {\n            var p1 = points1[i];\n            var p2 = points2[i];\n            if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n                return;\n            }\n        }\n        return true;\n    }\n\n    function getSmooth(smooth) {\n        return typeof (smooth) === 'number' ? smooth : (smooth ? 0.3 : 0);\n    }\n\n    function getAxisExtentWithGap(axis) {\n        var extent = axis.getGlobalExtent();\n        if (axis.onBand) {\n            // Remove extra 1px to avoid line miter in clipped edge\n            var halfBandWidth = axis.getBandWidth() / 2 - 1;\n            var dir = extent[1] > extent[0] ? 1 : -1;\n            extent[0] += dir * halfBandWidth;\n            extent[1] -= dir * halfBandWidth;\n        }\n        return extent;\n    }\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n    /**\n     * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n     * @param {module:echarts/data/List} data\n     * @param {Array.<Array.<number>>} points\n     * @private\n     */\n    function getStackedOnPoints(coordSys, data) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        return data.mapArray([valueDim], function (val, idx) {\n            var stackedOnSameSign;\n            var stackedOn = data.stackedOn;\n            // Find first stacked value with same sign\n            while (stackedOn &&\n                sign(stackedOn.get(valueDim, idx)) === sign(val)\n            ) {\n                stackedOnSameSign = stackedOn;\n                break;\n            }\n            var stackedData = [];\n            stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n            stackedData[1 - baseDataOffset] = stackedOnSameSign\n                ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n            return coordSys.dataToPoint(stackedData);\n        }, true);\n    }\n\n    function createGridClipShape(cartesian, hasAnimation, seriesModel) {\n        var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n        var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n        var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n\n        var x = Math.min(xExtent[0], xExtent[1]);\n        var y = Math.min(yExtent[0], yExtent[1]);\n        var width = Math.max(xExtent[0], xExtent[1]) - x;\n        var height = Math.max(yExtent[0], yExtent[1]) - y;\n        var lineWidth = seriesModel.get('lineStyle.normal.width') || 2;\n        // Expand clip shape to avoid clipping when line value exceeds axis\n        var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n        if (isHorizontal) {\n            y -= expandSize;\n            height += expandSize * 2;\n        }\n        else {\n            x -= expandSize;\n            width += expandSize * 2;\n        }\n\n        var clipPath = new graphic.Rect({\n            shape: {\n                x: x,\n                y: y,\n                width: width,\n                height: height\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n            graphic.initProps(clipPath, {\n                shape: {\n                    width: width,\n                    height: height\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createPolarClipShape(polar, hasAnimation, seriesModel) {\n        var angleAxis = polar.getAngleAxis();\n        var radiusAxis = polar.getRadiusAxis();\n\n        var radiusExtent = radiusAxis.getExtent();\n        var angleExtent = angleAxis.getExtent();\n\n        var RADIAN = Math.PI / 180;\n\n        var clipPath = new graphic.Sector({\n            shape: {\n                cx: polar.cx,\n                cy: polar.cy,\n                r0: radiusExtent[0],\n                r: radiusExtent[1],\n                startAngle: -angleExtent[0] * RADIAN,\n                endAngle: -angleExtent[1] * RADIAN,\n                clockwise: angleAxis.inverse\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: -angleExtent[1] * RADIAN\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createClipShape(coordSys, hasAnimation, seriesModel) {\n        return coordSys.type === 'polar'\n            ? createPolarClipShape(coordSys, hasAnimation, seriesModel)\n            : createGridClipShape(coordSys, hasAnimation, seriesModel);\n    }\n\n    function turnPointsIntoStep(points, coordSys, stepTurnAt) {\n        var baseAxis = coordSys.getBaseAxis();\n        var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n\n        var stepPoints = [];\n        for (var i = 0; i < points.length - 1; i++) {\n            var nextPt = points[i + 1];\n            var pt = points[i];\n            stepPoints.push(pt);\n\n            var stepPt = [];\n            switch (stepTurnAt) {\n                case 'end':\n                    stepPt[baseIndex] = nextPt[baseIndex];\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n                    break;\n                case 'middle':\n                    // default is start\n                    var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n                    var stepPt2 = [];\n                    stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n                    stepPoints.push(stepPt);\n                    stepPoints.push(stepPt2);\n                    break;\n                default:\n                    stepPt[baseIndex] = pt[baseIndex];\n                    stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n            }\n        }\n        // Last points\n        points[i] && stepPoints.push(points[i]);\n        return stepPoints;\n    }\n\n    function getVisualGradient(data, coordSys) {\n        var visualMetaList = data.getVisual('visualMeta');\n        if (!visualMetaList || !visualMetaList.length || !data.count()) {\n            // When data.count() is 0, gradient range can not be calculated.\n            return;\n        }\n\n        var visualMeta;\n        for (var i = visualMetaList.length - 1; i >= 0; i--) {\n            // Can only be x or y\n            if (visualMetaList[i].dimension < 2) {\n                visualMeta = visualMetaList[i];\n                break;\n            }\n        }\n        if (!visualMeta || coordSys.type !== 'cartesian2d') {\n            if (__DEV__) {\n                console.warn('Visual map on line style only support x or y dimension.');\n            }\n            return;\n        }\n\n        // If the area to be rendered is bigger than area defined by LinearGradient,\n        // the canvas spec prescribes that the color of the first stop and the last\n        // stop should be used. But if two stops are added at offset 0, in effect\n        // browsers use the color of the second stop to render area outside\n        // LinearGradient. So we can only infinitesimally extend area defined in\n        // LinearGradient to render `outerColors`.\n\n        var dimension = visualMeta.dimension;\n        var dimName = data.dimensions[dimension];\n        var axis = coordSys.getAxis(dimName);\n\n        // dataToCoor mapping may not be linear, but must be monotonic.\n        var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n            return {\n                coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n                color: stop.color\n            };\n        });\n        var stopLen = colorStops.length;\n        var outerColors = visualMeta.outerColors.slice();\n\n        if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n            colorStops.reverse();\n            outerColors.reverse();\n        }\n\n        var tinyExtent = 10; // Arbitrary value: 10px\n        var minCoord = colorStops[0].coord - tinyExtent;\n        var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n        var coordSpan = maxCoord - minCoord;\n\n        if (coordSpan < 1e-3) {\n            return 'transparent';\n        }\n\n        zrUtil.each(colorStops, function (stop) {\n            stop.offset = (stop.coord - minCoord) / coordSpan;\n        });\n        colorStops.push({\n            offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n            color: outerColors[1] || 'transparent'\n        });\n        colorStops.unshift({ // notice colorStops.length have been changed.\n            offset: stopLen ? colorStops[0].offset : 0.5,\n            color: outerColors[0] || 'transparent'\n        });\n\n        // zrUtil.each(colorStops, function (colorStop) {\n        //     // Make sure each offset has rounded px to avoid not sharp edge\n        //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n        // });\n\n        var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n        gradient[dimName] = minCoord;\n        gradient[dimName + '2'] = maxCoord;\n\n        return gradient;\n    }\n\n    module.exports = ChartView.extend({\n\n        type: 'line',\n\n        init: function () {\n            var lineGroup = new graphic.Group();\n\n            var symbolDraw = new SymbolDraw();\n            this.group.add(symbolDraw.group);\n\n            this._symbolDraw = symbolDraw;\n            this._lineGroup = lineGroup;\n        },\n\n        render: function (seriesModel, ecModel, api) {\n            var coordSys = seriesModel.coordinateSystem;\n            var group = this.group;\n            var data = seriesModel.getData();\n            var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n            var areaStyleModel = seriesModel.getModel('areaStyle.normal');\n\n            var points = data.mapArray(data.getItemLayout, true);\n\n            var isCoordSysPolar = coordSys.type === 'polar';\n            var prevCoordSys = this._coordSys;\n\n            var symbolDraw = this._symbolDraw;\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n\n            var lineGroup = this._lineGroup;\n\n            var hasAnimation = seriesModel.get('animation');\n\n            var isAreaChart = !areaStyleModel.isEmpty();\n            var stackedOnPoints = getStackedOnPoints(coordSys, data);\n\n            var showSymbol = seriesModel.get('showSymbol');\n\n            var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol')\n                && this._getSymbolIgnoreFunc(data, coordSys);\n\n            // Remove temporary symbols\n            var oldData = this._data;\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            // Remove previous created symbols if showSymbol changed to false\n            if (!showSymbol) {\n                symbolDraw.remove();\n            }\n\n            group.add(lineGroup);\n\n            // FIXME step not support polar\n            var step = !isCoordSysPolar && seriesModel.get('step');\n            // Initialization animation or coordinate system changed\n            if (\n                !(polyline && prevCoordSys.type === coordSys.type && step === this._step)\n            ) {\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                if (step) {\n                    // TODO If stacked series is not step\n                    points = turnPointsIntoStep(points, coordSys, step);\n                    stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                }\n\n                polyline = this._newPolyline(points, coordSys, hasAnimation);\n                if (isAreaChart) {\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n            }\n            else {\n                if (isAreaChart && !polygon) {\n                    // If areaStyle is added\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                else if (polygon && !isAreaChart) {\n                    // If areaStyle is removed\n                    lineGroup.remove(polygon);\n                    polygon = this._polygon = null;\n                }\n\n                // Update clipPath\n                lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel));\n\n                // Always update, or it is wrong in the case turning on legend\n                // because points are not changed\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                // Stop symbol animation and sync with line points\n                // FIXME performance?\n                data.eachItemGraphicEl(function (el) {\n                    el.stopAnimation(true);\n                });\n\n                // In the case data zoom triggerred refreshing frequently\n                // Data may not change if line has a category axis. So it should animate nothing\n                if (!isPointsSame(this._stackedOnPoints, stackedOnPoints)\n                    || !isPointsSame(this._points, points)\n                ) {\n                    if (hasAnimation) {\n                        this._updateAnimation(\n                            data, stackedOnPoints, coordSys, api, step\n                        );\n                    }\n                    else {\n                        // Not do it in update with animation\n                        if (step) {\n                            // TODO If stacked series is not step\n                            points = turnPointsIntoStep(points, coordSys, step);\n                            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                        }\n\n                        polyline.setShape({\n                            points: points\n                        });\n                        polygon && polygon.setShape({\n                            points: points,\n                            stackedOnPoints: stackedOnPoints\n                        });\n                    }\n                }\n            }\n\n            var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n\n            polyline.useStyle(zrUtil.defaults(\n                // Use color in lineStyle first\n                lineStyleModel.getLineStyle(),\n                {\n                    fill: 'none',\n                    stroke: visualColor,\n                    lineJoin: 'bevel'\n                }\n            ));\n\n            var smooth = seriesModel.get('smooth');\n            smooth = getSmooth(seriesModel.get('smooth'));\n            polyline.setShape({\n                smooth: smooth,\n                smoothMonotone: seriesModel.get('smoothMonotone'),\n                connectNulls: seriesModel.get('connectNulls')\n            });\n\n            if (polygon) {\n                var stackedOn = data.stackedOn;\n                var stackedOnSmooth = 0;\n\n                polygon.useStyle(zrUtil.defaults(\n                    areaStyleModel.getAreaStyle(),\n                    {\n                        fill: visualColor,\n                        opacity: 0.7,\n                        lineJoin: 'bevel'\n                    }\n                ));\n\n                if (stackedOn) {\n                    var stackedOnSeries = stackedOn.hostModel;\n                    stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n                }\n\n                polygon.setShape({\n                    smooth: smooth,\n                    stackedOnSmooth: stackedOnSmooth,\n                    smoothMonotone: seriesModel.get('smoothMonotone'),\n                    connectNulls: seriesModel.get('connectNulls')\n                });\n            }\n\n            this._data = data;\n            // Save the coordinate system for transition animation when data changed\n            this._coordSys = coordSys;\n            this._stackedOnPoints = stackedOnPoints;\n            this._points = points;\n            this._step = step;\n        },\n\n        dispose: function () {},\n\n        highlight: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n            if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (!symbol) {\n                    // Create a temporary symbol if it is not exists\n                    var pt = data.getItemLayout(dataIndex);\n                    if (!pt) {\n                        // Null data\n                        return;\n                    }\n                    symbol = new Symbol(data, dataIndex);\n                    symbol.position = pt;\n                    symbol.setZ(\n                        seriesModel.get('zlevel'),\n                        seriesModel.get('z')\n                    );\n                    symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n                    symbol.__temp = true;\n                    data.setItemGraphicEl(dataIndex, symbol);\n\n                    // Stop scale animation\n                    symbol.stopSymbolAnimation(true);\n\n                    this.group.add(symbol);\n                }\n                symbol.highlight();\n            }\n            else {\n                // Highlight whole series\n                ChartView.prototype.highlight.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        downplay: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n            if (dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (symbol) {\n                    if (symbol.__temp) {\n                        data.setItemGraphicEl(dataIndex, null);\n                        this.group.remove(symbol);\n                    }\n                    else {\n                        symbol.downplay();\n                    }\n                }\n            }\n            else {\n                // Downplay whole series\n                ChartView.prototype.downplay.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolyline: function (points) {\n            var polyline = this._polyline;\n            // Remove previous created polyline\n            if (polyline) {\n                this._lineGroup.remove(polyline);\n            }\n\n            polyline = new polyHelper.Polyline({\n                shape: {\n                    points: points\n                },\n                silent: true,\n                z2: 10\n            });\n\n            this._lineGroup.add(polyline);\n\n            this._polyline = polyline;\n\n            return polyline;\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} stackedOnPoints\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolygon: function (points, stackedOnPoints) {\n            var polygon = this._polygon;\n            // Remove previous created polygon\n            if (polygon) {\n                this._lineGroup.remove(polygon);\n            }\n\n            polygon = new polyHelper.Polygon({\n                shape: {\n                    points: points,\n                    stackedOnPoints: stackedOnPoints\n                },\n                silent: true\n            });\n\n            this._lineGroup.add(polygon);\n\n            this._polygon = polygon;\n            return polygon;\n        },\n        /**\n         * @private\n         */\n        _getSymbolIgnoreFunc: function (data, coordSys) {\n            var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n            // `getLabelInterval` is provided by echarts/component/axis\n            if (categoryAxis && categoryAxis.isLabelIgnored) {\n                return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n            }\n        },\n\n        /**\n         * @private\n         */\n        // FIXME Two value axis\n        _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n            var seriesModel = data.hostModel;\n\n            var diff = lineAnimationDiff(\n                this._data, data,\n                this._stackedOnPoints, stackedOnPoints,\n                this._coordSys, coordSys\n            );\n\n            var current = diff.current;\n            var stackedOnCurrent = diff.stackedOnCurrent;\n            var next = diff.next;\n            var stackedOnNext = diff.stackedOnNext;\n            if (step) {\n                // TODO If stacked series is not step\n                current = turnPointsIntoStep(diff.current, coordSys, step);\n                stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n                next = turnPointsIntoStep(diff.next, coordSys, step);\n                stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n            }\n            // `diff.current` is subset of `current` (which should be ensured by\n            // turnPointsIntoStep), so points in `__points` can be updated when\n            // points in `current` are update during animation.\n            polyline.shape.__points = diff.current;\n            polyline.shape.points = current;\n\n            graphic.updateProps(polyline, {\n                shape: {\n                    points: next\n                }\n            }, seriesModel);\n\n            if (polygon) {\n                polygon.setShape({\n                    points: current,\n                    stackedOnPoints: stackedOnCurrent\n                });\n                graphic.updateProps(polygon, {\n                    shape: {\n                        points: next,\n                        stackedOnPoints: stackedOnNext\n                    }\n                }, seriesModel);\n            }\n\n            var updatedDataInfo = [];\n            var diffStatus = diff.status;\n\n            for (var i = 0; i < diffStatus.length; i++) {\n                var cmd = diffStatus[i].cmd;\n                if (cmd === '=') {\n                    var el = data.getItemGraphicEl(diffStatus[i].idx1);\n                    if (el) {\n                        updatedDataInfo.push({\n                            el: el,\n                            ptIdx: i    // Index of points\n                        });\n                    }\n                }\n            }\n\n            if (polyline.animators && polyline.animators.length) {\n                polyline.animators[0].during(function () {\n                    for (var i = 0; i < updatedDataInfo.length; i++) {\n                        var el = updatedDataInfo[i].el;\n                        el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n                    }\n                });\n            }\n        },\n\n        remove: function (ecModel) {\n            var group = this.group;\n            var oldData = this._data;\n            this._lineGroup.removeAll();\n            this._symbolDraw.remove(true);\n            // Remove temporary created elements when highlighting\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            this._polyline =\n            this._polygon =\n            this._coordSys =\n            this._points =\n            this._stackedOnPoints =\n            this._data = null;\n        }\n    });\n\n\n/***/ }),\n/* 382 */\n/***/ (function(module, exports) {\n\n\n\n    // var arrayDiff = require('zrender/lib/core/arrayDiff');\n    // 'zrender/core/arrayDiff' has been used before, but it did\n    // not do well in performance when roam with fixed dataZoom window.\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n\n    function getStackedOnPoint(coordSys, data, idx) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        var stackedOnSameSign;\n        var stackedOn = data.stackedOn;\n        var val = data.get(valueDim, idx);\n        // Find first stacked value with same sign\n        while (stackedOn &&\n            sign(stackedOn.get(valueDim, idx)) === sign(val)\n        ) {\n            stackedOnSameSign = stackedOn;\n            break;\n        }\n        var stackedData = [];\n        stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n        stackedData[1 - baseDataOffset] = stackedOnSameSign\n            ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n        return coordSys.dataToPoint(stackedData);\n    }\n\n    // function convertToIntId(newIdList, oldIdList) {\n    //     // Generate int id instead of string id.\n    //     // Compare string maybe slow in score function of arrDiff\n\n    //     // Assume id in idList are all unique\n    //     var idIndicesMap = {};\n    //     var idx = 0;\n    //     for (var i = 0; i < newIdList.length; i++) {\n    //         idIndicesMap[newIdList[i]] = idx;\n    //         newIdList[i] = idx++;\n    //     }\n    //     for (var i = 0; i < oldIdList.length; i++) {\n    //         var oldId = oldIdList[i];\n    //         // Same with newIdList\n    //         if (idIndicesMap[oldId]) {\n    //             oldIdList[i] = idIndicesMap[oldId];\n    //         }\n    //         else {\n    //             oldIdList[i] = idx++;\n    //         }\n    //     }\n    // }\n\n    function diffData(oldData, newData) {\n        var diffResult = [];\n\n        newData.diff(oldData)\n            .add(function (idx) {\n                diffResult.push({cmd: '+', idx: idx});\n            })\n            .update(function (newIdx, oldIdx) {\n                diffResult.push({cmd: '=', idx: oldIdx, idx1: newIdx});\n            })\n            .remove(function (idx) {\n                diffResult.push({cmd: '-', idx: idx});\n            })\n            .execute();\n\n        return diffResult;\n    }\n\n    module.exports = function (\n        oldData, newData,\n        oldStackedOnPoints, newStackedOnPoints,\n        oldCoordSys, newCoordSys\n    ) {\n        var diff = diffData(oldData, newData);\n\n        // var newIdList = newData.mapArray(newData.getId);\n        // var oldIdList = oldData.mapArray(oldData.getId);\n\n        // convertToIntId(newIdList, oldIdList);\n\n        // // FIXME One data ?\n        // diff = arrayDiff(oldIdList, newIdList);\n\n        var currPoints = [];\n        var nextPoints = [];\n        // Points for stacking base line\n        var currStackedPoints = [];\n        var nextStackedPoints = [];\n\n        var status = [];\n        var sortedIndices = [];\n        var rawIndices = [];\n        var dims = newCoordSys.dimensions;\n        for (var i = 0; i < diff.length; i++) {\n            var diffItem = diff[i];\n            var pointAdded = true;\n\n            // FIXME, animation is not so perfect when dataZoom window moves fast\n            // Which is in case remvoing or add more than one data in the tail or head\n            switch (diffItem.cmd) {\n                case '=':\n                    var currentPt = oldData.getItemLayout(diffItem.idx);\n                    var nextPt = newData.getItemLayout(diffItem.idx1);\n                    // If previous data is NaN, use next point directly\n                    if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n                        currentPt = nextPt.slice();\n                    }\n                    currPoints.push(currentPt);\n                    nextPoints.push(nextPt);\n\n                    currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n                    nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n\n                    rawIndices.push(newData.getRawIndex(diffItem.idx1));\n                    break;\n                case '+':\n                    var idx = diffItem.idx;\n                    currPoints.push(\n                        oldCoordSys.dataToPoint([\n                            newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)\n                        ])\n                    );\n\n                    nextPoints.push(newData.getItemLayout(idx).slice());\n\n                    currStackedPoints.push(\n                        getStackedOnPoint(oldCoordSys, newData, idx)\n                    );\n                    nextStackedPoints.push(newStackedOnPoints[idx]);\n\n                    rawIndices.push(newData.getRawIndex(idx));\n                    break;\n                case '-':\n                    var idx = diffItem.idx;\n                    var rawIndex = oldData.getRawIndex(idx);\n                    // Data is replaced. In the case of dynamic data queue\n                    // FIXME FIXME FIXME\n                    if (rawIndex !== idx) {\n                        currPoints.push(oldData.getItemLayout(idx));\n                        nextPoints.push(newCoordSys.dataToPoint([\n                            oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)\n                        ]));\n\n                        currStackedPoints.push(oldStackedOnPoints[idx]);\n                        nextStackedPoints.push(\n                            getStackedOnPoint(\n                                newCoordSys, oldData, idx\n                            )\n                        );\n\n                        rawIndices.push(rawIndex);\n                    }\n                    else {\n                        pointAdded = false;\n                    }\n            }\n\n            // Original indices\n            if (pointAdded) {\n                status.push(diffItem);\n                sortedIndices.push(sortedIndices.length);\n            }\n        }\n\n        // Diff result may be crossed if all items are changed\n        // Sort by data index\n        sortedIndices.sort(function (a, b) {\n            return rawIndices[a] - rawIndices[b];\n        });\n\n        var sortedCurrPoints = [];\n        var sortedNextPoints = [];\n\n        var sortedCurrStackedPoints = [];\n        var sortedNextStackedPoints = [];\n\n        var sortedStatus = [];\n        for (var i = 0; i < sortedIndices.length; i++) {\n            var idx = sortedIndices[i];\n            sortedCurrPoints[i] = currPoints[idx];\n            sortedNextPoints[i] = nextPoints[idx];\n\n            sortedCurrStackedPoints[i] = currStackedPoints[idx];\n            sortedNextStackedPoints[i] = nextStackedPoints[idx];\n\n            sortedStatus[i] = status[idx];\n        }\n\n        return {\n            current: sortedCurrPoints,\n            next: sortedNextPoints,\n\n            stackedOnCurrent: sortedCurrStackedPoints,\n            stackedOnNext: sortedNextStackedPoints,\n\n            status: sortedStatus\n        };\n    };\n\n\n/***/ }),\n/* 383 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// Poly path support NaN point\n\n\n    var Path = __webpack_require__(322);\n    var vec2 = __webpack_require__(321);\n\n    var vec2Min = vec2.min;\n    var vec2Max = vec2.max;\n\n    var scaleAndAdd = vec2.scaleAndAdd;\n    var v2Copy = vec2.copy;\n\n    // Temporary variable\n    var v = [];\n    var cp0 = [];\n    var cp1 = [];\n\n    function isPointNull(p) {\n        return isNaN(p[0]) || isNaN(p[1]);\n    }\n\n    function drawSegment(\n        ctx, points, start, segLen, allLen,\n        dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls\n    ) {\n        var prevIdx = 0;\n        var idx = start;\n        for (var k = 0; k < segLen; k++) {\n            var p = points[idx];\n            if (idx >= allLen || idx < 0) {\n                break;\n            }\n            if (isPointNull(p)) {\n                if (connectNulls) {\n                    idx += dir;\n                    continue;\n                }\n                break;\n            }\n\n            if (idx === start) {\n                ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n                v2Copy(cp0, p);\n            }\n            else {\n                if (smooth > 0) {\n                    var nextIdx = idx + dir;\n                    var nextP = points[nextIdx];\n                    if (connectNulls) {\n                        // Find next point not null\n                        while (nextP && isPointNull(points[nextIdx])) {\n                            nextIdx += dir;\n                            nextP = points[nextIdx];\n                        }\n                    }\n\n                    var ratioNextSeg = 0.5;\n                    var prevP = points[prevIdx];\n                    var nextP = points[nextIdx];\n                    // Last point\n                    if (!nextP || isPointNull(nextP)) {\n                        v2Copy(cp1, p);\n                    }\n                    else {\n                        // If next data is null in not connect case\n                        if (isPointNull(nextP) && !connectNulls) {\n                            nextP = p;\n                        }\n\n                        vec2.sub(v, nextP, prevP);\n\n                        var lenPrevSeg;\n                        var lenNextSeg;\n                        if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n                            var dim = smoothMonotone === 'x' ? 0 : 1;\n                            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n                            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n                        }\n                        else {\n                            lenPrevSeg = vec2.dist(p, prevP);\n                            lenNextSeg = vec2.dist(p, nextP);\n                        }\n\n                        // Use ratio of seg length\n                        ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n\n                        scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n                    }\n                    // Smooth constraint\n                    vec2Min(cp0, cp0, smoothMax);\n                    vec2Max(cp0, cp0, smoothMin);\n                    vec2Min(cp1, cp1, smoothMax);\n                    vec2Max(cp1, cp1, smoothMin);\n\n                    ctx.bezierCurveTo(\n                        cp0[0], cp0[1],\n                        cp1[0], cp1[1],\n                        p[0], p[1]\n                    );\n                    // cp0 of next segment\n                    scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n                }\n                else {\n                    ctx.lineTo(p[0], p[1]);\n                }\n            }\n\n            prevIdx = idx;\n            idx += dir;\n        }\n\n        return k;\n    }\n\n    function getBoundingBox(points, smoothConstraint) {\n        var ptMin = [Infinity, Infinity];\n        var ptMax = [-Infinity, -Infinity];\n        if (smoothConstraint) {\n            for (var i = 0; i < points.length; i++) {\n                var pt = points[i];\n                if (pt[0] < ptMin[0]) { ptMin[0] = pt[0]; }\n                if (pt[1] < ptMin[1]) { ptMin[1] = pt[1]; }\n                if (pt[0] > ptMax[0]) { ptMax[0] = pt[0]; }\n                if (pt[1] > ptMax[1]) { ptMax[1] = pt[1]; }\n            }\n        }\n        return {\n            min: smoothConstraint ? ptMin : ptMax,\n            max: smoothConstraint ? ptMax : ptMin\n        };\n    }\n\n    module.exports = {\n\n        Polyline: Path.extend({\n\n            type: 'ec-polyline',\n\n            shape: {\n                points: [],\n\n                smooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            style: {\n                fill: null,\n\n                stroke: '#000'\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n\n                var i = 0;\n                var len = points.length;\n\n                var result = getBoundingBox(points, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    i += drawSegment(\n                        ctx, points, i, len, len,\n                        1, result.min, result.max, shape.smooth,\n                        shape.smoothMonotone, shape.connectNulls\n                    ) + 1;\n                }\n            }\n        }),\n\n        Polygon: Path.extend({\n\n            type: 'ec-polygon',\n\n            shape: {\n                points: [],\n\n                // Offset between stacked base points and points\n                stackedOnPoints: [],\n\n                smooth: 0,\n\n                stackedOnSmooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n                var stackedOnPoints = shape.stackedOnPoints;\n\n                var i = 0;\n                var len = points.length;\n                var smoothMonotone = shape.smoothMonotone;\n                var bbox = getBoundingBox(points, shape.smoothConstraint);\n                var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    var k = drawSegment(\n                        ctx, points, i, len, len,\n                        1, bbox.min, bbox.max, shape.smooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    drawSegment(\n                        ctx, stackedOnPoints, i + k - 1, k, len,\n                        -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    i += k + 1;\n\n                    ctx.closePath();\n                }\n            }\n        })\n    };\n\n\n/***/ }),\n/* 384 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// TODO boundaryGap\n\n\n    __webpack_require__(355);\n\n    __webpack_require__(386);\n\n\n/***/ }),\n/* 385 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(317);\n    var formatUtil = __webpack_require__(324);\n    var graphic = __webpack_require__(319);\n    var Model = __webpack_require__(327);\n    var numberUtil = __webpack_require__(320);\n    var remRadian = numberUtil.remRadian;\n    var isRadianAroundZero = numberUtil.isRadianAroundZero;\n    var vec2 = __webpack_require__(321);\n    var v2ApplyTransform = vec2.applyTransform;\n    var retrieve = zrUtil.retrieve;\n\n    var PI = Math.PI;\n\n    function makeAxisEventDataBase(axisModel) {\n        var eventData = {\n            componentType: axisModel.mainType\n        };\n        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n        return eventData;\n    }\n\n    /**\n     * A final axis is translated and rotated from a \"standard axis\".\n     * So opt.position and opt.rotation is required.\n     *\n     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n     * for example: (0, 0) ------------> (0, 50)\n     *\n     * nameDirection or tickDirection or labelDirection is 1 means tick\n     * or label is below the standard axis, whereas is -1 means above\n     * the standard axis. labelOffset means offset between label and axis,\n     * which is useful when 'onZero', where axisLabel is in the grid and\n     * label in outside grid.\n     *\n     * Tips: like always,\n     * positive rotation represents anticlockwise, and negative rotation\n     * represents clockwise.\n     * The direction of position coordinate is the same as the direction\n     * of screen coordinate.\n     *\n     * Do not need to consider axis 'inverse', which is auto processed by\n     * axis extent.\n     *\n     * @param {module:zrender/container/Group} group\n     * @param {Object} axisModel\n     * @param {Object} opt Standard axis parameters.\n     * @param {Array.<number>} opt.position [x, y]\n     * @param {number} opt.rotation by radian\n     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle'.\n     * @param {number} [opt.tickDirection=1] 1 or -1\n     * @param {number} [opt.labelDirection=1] 1 or -1\n     * @param {number} [opt.labelOffset=0] Usefull when onZero.\n     * @param {string} [opt.axisLabelShow] default get from axisModel.\n     * @param {string} [opt.axisName] default get from axisModel.\n     * @param {number} [opt.axisNameAvailableWidth]\n     * @param {number} [opt.labelRotation] by degree, default get from axisModel.\n     * @param {number} [opt.labelInterval] Default label interval when label\n     *                                     interval from model is null or 'auto'.\n     * @param {number} [opt.strokeContainThreshold] Default label interval when label\n     */\n    var AxisBuilder = function (axisModel, opt) {\n\n        /**\n         * @readOnly\n         */\n        this.opt = opt;\n\n        /**\n         * @readOnly\n         */\n        this.axisModel = axisModel;\n\n        // Default value\n        zrUtil.defaults(\n            opt,\n            {\n                labelOffset: 0,\n                nameDirection: 1,\n                tickDirection: 1,\n                labelDirection: 1,\n                silent: true\n            }\n        );\n\n        /**\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        // FIXME Not use a seperate text group?\n        var dumbGroup = new graphic.Group({\n            position: opt.position.slice(),\n            rotation: opt.rotation\n        });\n\n        // this.group.add(dumbGroup);\n        // this._dumbGroup = dumbGroup;\n\n        dumbGroup.updateTransform();\n        this._transform = dumbGroup.transform;\n\n        this._dumbGroup = dumbGroup;\n    };\n\n    AxisBuilder.prototype = {\n\n        constructor: AxisBuilder,\n\n        hasBuilder: function (name) {\n            return !!builders[name];\n        },\n\n        add: function (name) {\n            builders[name].call(this);\n        },\n\n        getGroup: function () {\n            return this.group;\n        }\n\n    };\n\n    var builders = {\n\n        /**\n         * @private\n         */\n        axisLine: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n\n            if (!axisModel.get('axisLine.show')) {\n                return;\n            }\n\n            var extent = this.axisModel.axis.getExtent();\n\n            var matrix = this._transform;\n            var pt1 = [extent[0], 0];\n            var pt2 = [extent[1], 0];\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n\n            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                // Id for animation\n                anid: 'line',\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.extend(\n                    {lineCap: 'round'},\n                    axisModel.getModel('axisLine.lineStyle').getLineStyle()\n                ),\n                strokeContainThreshold: opt.strokeContainThreshold || 5,\n                silent: true,\n                z2: 1\n            })));\n        },\n\n        /**\n         * @private\n         */\n        axisTick: function () {\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n\n            if (!axisModel.get('axisTick.show') || axis.isBlank()) {\n                return;\n            }\n\n            var tickModel = axisModel.getModel('axisTick');\n            var opt = this.opt;\n\n            var lineStyleModel = tickModel.getModel('lineStyle');\n            var tickLen = tickModel.get('length');\n\n            var tickInterval = getInterval(tickModel, opt.labelInterval);\n            var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));\n            var ticks = axis.scale.getTicks();\n\n            var pt1 = [];\n            var pt2 = [];\n            var matrix = this._transform;\n\n            for (var i = 0; i < ticksCoords.length; i++) {\n                // Only ordinal scale support tick interval\n                if (ifIgnoreOnTick(axis, i, tickInterval)) {\n                     continue;\n                }\n\n                var tickCoord = ticksCoords[i];\n\n                pt1[0] = tickCoord;\n                pt1[1] = 0;\n                pt2[0] = tickCoord;\n                pt2[1] = opt.tickDirection * tickLen;\n\n                if (matrix) {\n                    v2ApplyTransform(pt1, pt1, matrix);\n                    v2ApplyTransform(pt2, pt2, matrix);\n                }\n                // Tick line, Not use group transform to have better line draw\n                this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                    // Id for animation\n                    anid: 'tick_' + ticks[i],\n\n                    shape: {\n                        x1: pt1[0],\n                        y1: pt1[1],\n                        x2: pt2[0],\n                        y2: pt2[1]\n                    },\n                    style: zrUtil.defaults(\n                        lineStyleModel.getLineStyle(),\n                        {\n                            stroke: axisModel.get('axisLine.lineStyle.color')\n                        }\n                    ),\n                    z2: 2,\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @private\n         */\n        axisLabel: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n            var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n            if (!show || axis.isBlank()) {\n                return;\n            }\n\n            var labelModel = axisModel.getModel('axisLabel');\n            var textStyleModel = labelModel.getModel('textStyle');\n            var labelMargin = labelModel.get('margin');\n            var ticks = axis.scale.getTicks();\n            var labels = axisModel.getFormattedLabels();\n\n            // Special label rotate.\n            var labelRotation = retrieve(opt.labelRotation, labelModel.get('rotate')) || 0;\n            // To radian.\n            labelRotation = labelRotation * PI / 180;\n\n            var labelLayout = innerTextLayout(opt, labelRotation, opt.labelDirection);\n            var categoryData = axisModel.get('data');\n\n            var textEls = [];\n            var silent = isSilent(axisModel);\n            var triggerEvent = axisModel.get('triggerEvent');\n\n            zrUtil.each(ticks, function (tickVal, index) {\n                if (ifIgnoreOnTick(axis, index, opt.labelInterval)) {\n                     return;\n                }\n\n                var itemTextStyleModel = textStyleModel;\n                if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n                    itemTextStyleModel = new Model(\n                        categoryData[tickVal].textStyle, textStyleModel, axisModel.ecModel\n                    );\n                }\n                var textColor = itemTextStyleModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color');\n\n                var tickCoord = axis.dataToCoord(tickVal);\n                var pos = [\n                    tickCoord,\n                    opt.labelOffset + opt.labelDirection * labelMargin\n                ];\n                var labelBeforeFormat = axis.scale.getLabel(tickVal);\n\n                var textEl = new graphic.Text({\n\n                    // Id for animation\n                    anid: 'label_' + tickVal,\n\n                    style: {\n                        text: labels[index],\n                        textAlign: itemTextStyleModel.get('align', true) || labelLayout.textAlign,\n                        textVerticalAlign: itemTextStyleModel.get('baseline', true) || labelLayout.verticalAlign,\n                        textFont: itemTextStyleModel.getFont(),\n                        fill: typeof textColor === 'function' ? textColor(labelBeforeFormat) : textColor\n                    },\n                    position: pos,\n                    rotation: labelLayout.rotation,\n                    silent: silent,\n                    z2: 10\n                });\n\n                // Pack data for mouse event\n                if (triggerEvent) {\n                    textEl.eventData = makeAxisEventDataBase(axisModel);\n                    textEl.eventData.targetType = 'axisLabel';\n                    textEl.eventData.value = labelBeforeFormat;\n                }\n\n                // FIXME\n                this._dumbGroup.add(textEl);\n                textEl.updateTransform();\n\n                textEls.push(textEl);\n                this.group.add(textEl);\n\n                textEl.decomposeTransform();\n\n            }, this);\n\n            function isTwoLabelOverlapped(current, next) {\n                var firstRect = current && current.getBoundingRect().clone();\n                var nextRect = next && next.getBoundingRect().clone();\n                if (firstRect && nextRect) {\n                    firstRect.applyTransform(current.getLocalTransform());\n                    nextRect.applyTransform(next.getLocalTransform());\n                    return firstRect.intersect(nextRect);\n                }\n            }\n\n            // If min or max are user set, we need to check\n            // If the tick on min(max) are overlap on their neighbour tick\n            // If they are overlapped, we need to hide the min(max) tick label\n            if (axisModel.getMin() != null) {\n                var firstLabel = textEls[0];\n                var nextLabel = textEls[1];\n                if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n                    firstLabel.ignore = true;\n                }\n            }\n            if (axisModel.getMax() != null) {\n                var lastLabel = textEls[textEls.length - 1];\n                var prevLabel = textEls[textEls.length - 2];\n                if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n                    lastLabel.ignore = true;\n                }\n            }\n        },\n\n        /**\n         * @private\n         */\n        axisName: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var name = retrieve(opt.axisName, axisModel.get('name'));\n\n            if (!name) {\n                return;\n            }\n\n            var nameLocation = axisModel.get('nameLocation');\n            var nameDirection = opt.nameDirection;\n            var textStyleModel = axisModel.getModel('nameTextStyle');\n            var gap = axisModel.get('nameGap') || 0;\n\n            var extent = this.axisModel.axis.getExtent();\n            var gapSignal = extent[0] > extent[1] ? -1 : 1;\n            var pos = [\n                nameLocation === 'start'\n                    ? extent[0] - gapSignal * gap\n                    : nameLocation === 'end'\n                    ? extent[1] + gapSignal * gap\n                    : (extent[0] + extent[1]) / 2, // 'middle'\n                // Reuse labelOffset.\n                nameLocation === 'middle' ? opt.labelOffset + nameDirection * gap : 0\n            ];\n\n            var labelLayout;\n\n            var nameRotation = axisModel.get('nameRotate');\n            if (nameRotation != null) {\n                nameRotation = nameRotation * PI / 180; // To radian.\n            }\n\n            var axisNameAvailableWidth;\n\n            if (nameLocation === 'middle') {\n                labelLayout = innerTextLayout(\n                    opt,\n                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n                    nameDirection\n                );\n            }\n            else {\n                labelLayout = endTextLayout(\n                    opt, nameLocation, nameRotation || 0, extent\n                );\n\n                axisNameAvailableWidth = opt.axisNameAvailableWidth;\n                if (axisNameAvailableWidth != null) {\n                    axisNameAvailableWidth = Math.abs(\n                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)\n                    );\n                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n                }\n            }\n\n            var textFont = textStyleModel.getFont();\n\n            var truncateOpt = axisModel.get('nameTruncate', true) || {};\n            var ellipsis = truncateOpt.ellipsis;\n            var maxWidth = retrieve(truncateOpt.maxWidth, axisNameAvailableWidth);\n            var truncatedText = (ellipsis != null && maxWidth != null)\n                ? formatUtil.truncateText(\n                    name, maxWidth, textFont, ellipsis,\n                    {minChar: 2, placeholder: truncateOpt.placeholder}\n                )\n                : name;\n\n            var tooltipOpt = axisModel.get('tooltip', true);\n\n            var mainType = axisModel.mainType;\n            var formatterParams = {\n                componentType: mainType,\n                name: name,\n                $vars: ['name']\n            };\n            formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n\n            var textEl = new graphic.Text({\n\n                // Id for animation\n                anid: 'name',\n\n                __fullText: name,\n                __truncatedText: truncatedText,\n\n                style: {\n                    text: truncatedText,\n                    textFont: textFont,\n                    fill: textStyleModel.getTextColor()\n                        || axisModel.get('axisLine.lineStyle.color'),\n                    textAlign: labelLayout.textAlign,\n                    textVerticalAlign: labelLayout.verticalAlign\n                },\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: isSilent(axisModel),\n                z2: 1,\n                tooltip: (tooltipOpt && tooltipOpt.show)\n                    ? zrUtil.extend({\n                        content: name,\n                        formatter: function () {\n                            return name;\n                        },\n                        formatterParams: formatterParams\n                    }, tooltipOpt)\n                    : null\n            });\n\n            if (axisModel.get('triggerEvent')) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisName';\n                textEl.eventData.name = name;\n            }\n\n            // FIXME\n            this._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            this.group.add(textEl);\n\n            textEl.decomposeTransform();\n        }\n\n    };\n\n    /**\n     * @inner\n     */\n    function innerTextLayout(opt, textRotation, direction) {\n        var rotationDiff = remRadian(textRotation - opt.rotation);\n        var textAlign;\n        var verticalAlign;\n\n        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.\n            verticalAlign = direction > 0 ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.\n            verticalAlign = direction > 0 ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else {\n            verticalAlign = 'middle';\n\n            if (rotationDiff > 0 && rotationDiff < PI) {\n                textAlign = direction > 0 ? 'right' : 'left';\n            }\n            else {\n                textAlign = direction > 0 ? 'left' : 'right';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            verticalAlign: verticalAlign\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function endTextLayout(opt, textPosition, textRotate, extent) {\n        var rotationDiff = remRadian(textRotate - opt.rotation);\n        var textAlign;\n        var verticalAlign;\n        var inverse = extent[0] > extent[1];\n        var onLeft = (textPosition === 'start' && !inverse)\n            || (textPosition !== 'start' && inverse);\n\n        if (isRadianAroundZero(rotationDiff - PI / 2)) {\n            verticalAlign = onLeft ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n            verticalAlign = onLeft ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else {\n            verticalAlign = 'middle';\n            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n                textAlign = onLeft ? 'left' : 'right';\n            }\n            else {\n                textAlign = onLeft ? 'right' : 'left';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            verticalAlign: verticalAlign\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function isSilent(axisModel) {\n        var tooltipOpt = axisModel.get('tooltip');\n        return axisModel.get('silent')\n            // Consider mouse cursor, add these restrictions.\n            || !(\n                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)\n            );\n    }\n\n    /**\n     * @static\n     */\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval) {\n        var rawTick;\n        var scale = axis.scale;\n        return scale.type === 'ordinal'\n            && (\n                typeof interval === 'function'\n                    ? (\n                        rawTick = scale.getTicks()[i],\n                        !interval(rawTick, scale.getLabel(rawTick))\n                    )\n                    : i % (interval + 1)\n            );\n    };\n\n    /**\n     * @static\n     */\n    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n        var interval = model.get('interval');\n        if (interval == null || interval == 'auto') {\n            interval = labelInterval;\n        }\n        return interval;\n    };\n\n    module.exports = AxisBuilder;\n\n\n\n/***/ }),\n/* 386 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(317);\n    var graphic = __webpack_require__(319);\n    var AxisBuilder = __webpack_require__(385);\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\n    var getInterval = AxisBuilder.getInterval;\n\n    var axisBuilderAttrs = [\n        'axisLine', 'axisLabel', 'axisTick', 'axisName'\n    ];\n    var selfBuilderAttrs = [\n        'splitArea', 'splitLine'\n    ];\n\n    // function getAlignWithLabel(model, axisModel) {\n    //     var alignWithLabel = model.get('alignWithLabel');\n    //     if (alignWithLabel === 'auto') {\n    //         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n    //     }\n    //     return alignWithLabel;\n    // }\n\n    var AxisView = __webpack_require__(318).extendComponentView({\n\n        type: 'axis',\n\n        render: function (axisModel, ecModel) {\n\n            this.group.removeAll();\n\n            var oldAxisGroup = this._axisGroup;\n            this._axisGroup = new graphic.Group();\n\n            this.group.add(this._axisGroup);\n\n            if (!axisModel.get('show')) {\n                return;\n            }\n\n            var gridModel = axisModel.getCoordSysModel();\n\n            var layout = layoutAxis(gridModel, axisModel);\n\n            var axisBuilder = new AxisBuilder(axisModel, layout);\n\n            zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n            this._axisGroup.add(axisBuilder.getGroup());\n\n            zrUtil.each(selfBuilderAttrs, function (name) {\n                if (axisModel.get(name + '.show')) {\n                    this['_' + name](axisModel, gridModel, layout.labelInterval);\n                }\n            }, this);\n\n            graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitLine: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.isBlank()) {\n                return;\n            }\n\n            var splitLineModel = axisModel.getModel('splitLine');\n            var lineStyleModel = splitLineModel.getModel('lineStyle');\n            var lineColors = lineStyleModel.get('color');\n\n            var lineInterval = getInterval(splitLineModel, labelInterval);\n\n            lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n            var isHorizontal = axis.isHorizontal();\n\n            var lineCount = 0;\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitLineModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var p1 = [];\n            var p2 = [];\n            // Simple optimization\n            // Batching the lines if color are the same\n            var lineStyle = lineStyleModel.getLineStyle();\n            for (var i = 0; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, lineInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                if (isHorizontal) {\n                    p1[0] = tickCoord;\n                    p1[1] = gridRect.y;\n                    p2[0] = tickCoord;\n                    p2[1] = gridRect.y + gridRect.height;\n                }\n                else {\n                    p1[0] = gridRect.x;\n                    p1[1] = tickCoord;\n                    p2[0] = gridRect.x + gridRect.width;\n                    p2[1] = tickCoord;\n                }\n\n                var colorIndex = (lineCount++) % lineColors.length;\n                this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n                    anid: 'line_' + ticks[i],\n\n                    shape: {\n                        x1: p1[0],\n                        y1: p1[1],\n                        x2: p2[0],\n                        y2: p2[1]\n                    },\n                    style: zrUtil.defaults({\n                        stroke: lineColors[colorIndex]\n                    }, lineStyle),\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitArea: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.isBlank()) {\n                return;\n            }\n\n            var splitAreaModel = axisModel.getModel('splitArea');\n            var areaStyleModel = splitAreaModel.getModel('areaStyle');\n            var areaColors = areaStyleModel.get('color');\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitAreaModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var prevX = axis.toGlobalCoord(ticksCoords[0]);\n            var prevY = axis.toGlobalCoord(ticksCoords[0]);\n\n            var count = 0;\n\n            var areaInterval = getInterval(splitAreaModel, labelInterval);\n\n            var areaStyle = areaStyleModel.getAreaStyle();\n            areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n            for (var i = 1; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, areaInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                var x;\n                var y;\n                var width;\n                var height;\n                if (axis.isHorizontal()) {\n                    x = prevX;\n                    y = gridRect.y;\n                    width = tickCoord - x;\n                    height = gridRect.height;\n                }\n                else {\n                    x = gridRect.x;\n                    y = prevY;\n                    width = gridRect.width;\n                    height = tickCoord - y;\n                }\n\n                var colorIndex = (count++) % areaColors.length;\n                this._axisGroup.add(new graphic.Rect({\n                    anid: 'area_' + ticks[i],\n\n                    shape: {\n                        x: x,\n                        y: y,\n                        width: width,\n                        height: height\n                    },\n                    style: zrUtil.defaults({\n                        fill: areaColors[colorIndex]\n                    }, areaStyle),\n                    silent: true\n                }));\n\n                prevX = x + width;\n                prevY = y + height;\n            }\n        }\n    });\n\n    AxisView.extend({\n        type: 'xAxis'\n    });\n    AxisView.extend({\n        type: 'yAxis'\n    });\n\n    /**\n     * @inner\n     */\n    function layoutAxis(gridModel, axisModel) {\n        var grid = gridModel.coordinateSystem;\n        var axis = axisModel.axis;\n        var layout = {};\n\n        var rawAxisPosition = axis.position;\n        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n        var axisDim = axis.dim;\n\n        // [left, right, top, bottom]\n        var rect = grid.getRect();\n        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n\n        var axisOffset = axisModel.get('offset') || 0;\n\n        var posMap = {\n            x: { top: rectBound[2] - axisOffset, bottom: rectBound[3] + axisOffset },\n            y: { left: rectBound[0] - axisOffset, right: rectBound[1] + axisOffset }\n        };\n\n        posMap.x.onZero = Math.max(Math.min(getZero('y'), posMap.x.bottom), posMap.x.top);\n        posMap.y.onZero = Math.max(Math.min(getZero('x'), posMap.y.right), posMap.y.left);\n\n        function getZero(dim, val) {\n            var theAxis = grid.getAxis(dim);\n            return theAxis.toGlobalCoord(theAxis.dataToCoord(0));\n        }\n\n        // Axis position\n        layout.position = [\n            axisDim === 'y' ? posMap.y[axisPosition] : rectBound[0],\n            axisDim === 'x' ? posMap.x[axisPosition] : rectBound[3]\n        ];\n\n        // Axis rotation\n        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);\n\n        // Tick and label direction, x y is axisDim\n        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};\n\n        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n        if (axis.onZero) {\n            layout.labelOffset = posMap[axisDim][rawAxisPosition] - posMap[axisDim].onZero;\n        }\n\n        if (axisModel.getModel('axisTick').get('inside')) {\n            layout.tickDirection = -layout.tickDirection;\n        }\n        if (axisModel.getModel('axisLabel').get('inside')) {\n            layout.labelDirection = -layout.labelDirection;\n        }\n\n        // Special label rotation\n        var labelRotation = axisModel.getModel('axisLabel').get('rotate');\n        layout.labelRotation = axisPosition === 'top' ? -labelRotation : labelRotation;\n\n        // label interval when auto mode.\n        layout.labelInterval = axis.getLabelInterval();\n\n        // Over splitLine and splitArea\n        layout.z2 = 1;\n\n        return layout;\n    }\n\n\n/***/ }),\n/* 387 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/component/tooltip/TooltipContent\n */\n\n\n    var zrUtil = __webpack_require__(317);\n    var zrColor = __webpack_require__(332);\n    var eventUtil = __webpack_require__(336);\n    var formatUtil = __webpack_require__(324);\n    var each = zrUtil.each;\n    var toCamelCase = formatUtil.toCamelCase;\n    var env = __webpack_require__(323);\n\n    var vendors = ['', '-webkit-', '-moz-', '-o-'];\n\n    var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n\n    /**\n     * @param {number} duration\n     * @return {string}\n     * @inner\n     */\n    function assembleTransition(duration) {\n        var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n        var transitionText = 'left ' + duration + 's ' + transitionCurve + ','\n                            + 'top ' + duration + 's ' + transitionCurve;\n        return zrUtil.map(vendors, function (vendorPrefix) {\n            return vendorPrefix + 'transition:' + transitionText;\n        }).join(';');\n    }\n\n    /**\n     * @param {Object} textStyle\n     * @return {string}\n     * @inner\n     */\n    function assembleFont(textStyleModel) {\n        var cssText = [];\n\n        var fontSize = textStyleModel.get('fontSize');\n        var color = textStyleModel.getTextColor();\n\n        color && cssText.push('color:' + color);\n\n        cssText.push('font:' + textStyleModel.getFont());\n\n        fontSize &&\n            cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n\n        each(['decoration', 'align'], function (name) {\n            var val = textStyleModel.get(name);\n            val && cssText.push('text-' + name + ':' + val);\n        });\n\n        return cssText.join(';');\n    }\n\n    /**\n     * @param {Object} tooltipModel\n     * @return {string}\n     * @inner\n     */\n    function assembleCssText(tooltipModel) {\n\n        tooltipModel = tooltipModel;\n\n        var cssText = [];\n\n        var transitionDuration = tooltipModel.get('transitionDuration');\n        var backgroundColor = tooltipModel.get('backgroundColor');\n        var textStyleModel = tooltipModel.getModel('textStyle');\n        var padding = tooltipModel.get('padding');\n\n        // Animation transition\n        transitionDuration &&\n            cssText.push(assembleTransition(transitionDuration));\n\n        if (backgroundColor) {\n            if (env.canvasSupported) {\n                cssText.push('background-Color:' + backgroundColor);\n            }\n            else {\n                // for ie\n                cssText.push(\n                    'background-Color:#' + zrColor.toHex(backgroundColor)\n                );\n                cssText.push('filter:alpha(opacity=70)');\n            }\n        }\n\n        // Border style\n        each(['width', 'color', 'radius'], function (name) {\n            var borderName = 'border-' + name;\n            var camelCase = toCamelCase(borderName);\n            var val = tooltipModel.get(camelCase);\n            val != null &&\n                cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n        });\n\n        // Text style\n        cssText.push(assembleFont(textStyleModel));\n\n        // Padding\n        if (padding != null) {\n            cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n        }\n\n        return cssText.join(';') + ';';\n    }\n\n    /**\n     * @alias module:echarts/component/tooltip/TooltipContent\n     * @constructor\n     */\n    function TooltipContent(container, api) {\n        var el = document.createElement('div');\n        var zr = api.getZr();\n\n        this.el = el;\n\n        this._x = api.getWidth() / 2;\n        this._y = api.getHeight() / 2;\n\n        container.appendChild(el);\n\n        this._container = container;\n\n        this._show = false;\n\n        /**\n         * @private\n         */\n        this._hideTimeout;\n\n        var self = this;\n        el.onmouseenter = function () {\n            // clear the timeout in hideLater and keep showing tooltip\n            if (self.enterable) {\n                clearTimeout(self._hideTimeout);\n                self._show = true;\n            }\n            self._inContent = true;\n        };\n        el.onmousemove = function (e) {\n            e = e || window.event;\n            if (!self.enterable) {\n                // Try trigger zrender event to avoid mouse\n                // in and out shape too frequently\n                var handler = zr.handler;\n                eventUtil.normalizeEvent(container, e, true);\n                handler.dispatch('mousemove', e);\n            }\n        };\n        el.onmouseleave = function () {\n            if (self.enterable) {\n                if (self._show) {\n                    self.hideLater(self._hideDelay);\n                }\n            }\n            self._inContent = false;\n        };\n    }\n\n    TooltipContent.prototype = {\n\n        constructor: TooltipContent,\n\n        enterable: true,\n\n        /**\n         * Update when tooltip is rendered\n         */\n        update: function () {\n            var container = this._container;\n            var stl = container.currentStyle\n                || document.defaultView.getComputedStyle(container);\n            var domStyle = container.style;\n            if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n                domStyle.position = 'relative';\n            }\n            // Hide the tooltip\n            // PENDING\n            // this.hide();\n        },\n\n        show: function (tooltipModel) {\n            clearTimeout(this._hideTimeout);\n            var el = this.el;\n\n            el.style.cssText = gCssText + assembleCssText(tooltipModel)\n                // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n                + ';left:' + this._x + 'px;top:' + this._y + 'px;'\n                + (tooltipModel.get('extraCssText') || '');\n\n            el.style.display = el.innerHTML ?  'block' : 'none';\n\n            this._show = true;\n        },\n\n        setContent: function (content) {\n            var el = this.el;\n            el.innerHTML = content;\n            el.style.display = content ? 'block' : 'none';\n        },\n\n        moveTo: function (x, y) {\n            var style = this.el.style;\n            style.left = x + 'px';\n            style.top = y + 'px';\n\n            this._x = x;\n            this._y = y;\n        },\n\n        hide: function () {\n            this.el.style.display = 'none';\n            this._show = false;\n        },\n\n        // showLater: function ()\n\n        hideLater: function (time) {\n            if (this._show && !(this._inContent && this.enterable)) {\n                if (time) {\n                    this._hideDelay = time;\n                    // Set show false to avoid invoke hideLater mutiple times\n                    this._show = false;\n                    this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n                }\n                else {\n                    this.hide();\n                }\n            }\n        },\n\n        isShow: function () {\n            return this._show;\n        }\n    };\n\n    module.exports = TooltipContent;\n\n\n/***/ }),\n/* 388 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    __webpack_require__(318).extendComponentModel({\n\n        type: 'tooltip',\n\n        defaultOption: {\n            zlevel: 0,\n\n            z: 8,\n\n            show: true,\n\n            // tooltip主体内容\n            showContent: true,\n\n            // 触发类型，默认数据触发，见下图，可选为：'item' ¦ 'axis'\n            trigger: 'item',\n\n            // 触发条件，支持 'click' | 'mousemove' | 'none'\n            triggerOn: 'mousemove',\n\n            // 是否永远显示 content\n            alwaysShowContent: false,\n\n            // 位置 {Array} | {Function}\n            // position: null\n\n            // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n            confine: false,\n\n            // 内容格式器：{string}（Template） ¦ {Function}\n            // formatter: null\n\n            showDelay: 0,\n\n            // 隐藏延迟，单位ms\n            hideDelay: 100,\n\n            // 动画变换时间，单位s\n            transitionDuration: 0.4,\n\n            enterable: false,\n\n            // 提示背景颜色，默认为透明度为0.7的黑色\n            backgroundColor: 'rgba(50,50,50,0.7)',\n\n            // 提示边框颜色\n            borderColor: '#333',\n\n            // 提示边框圆角，单位px，默认为4\n            borderRadius: 4,\n\n            // 提示边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 提示内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // Extra css text\n            extraCssText: '',\n\n            // 坐标轴指示器，坐标轴触发有效\n            axisPointer: {\n                // 默认为直线\n                // 可选为：'line' | 'shadow' | 'cross'\n                type: 'line',\n\n                // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n                // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n                // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n                // 极坐标系会默认选择 angle 轴\n                axis: 'auto',\n\n                animation: true,\n                animationDurationUpdate: 200,\n                animationEasingUpdate: 'exponentialOut',\n\n                // 直线指示器样式设置\n                lineStyle: {\n                    color: '#555',\n                    width: 1,\n                    type: 'solid'\n                },\n\n                crossStyle: {\n                    color: '#555',\n                    width: 1,\n                    type: 'dashed',\n\n                    // TODO formatter\n                    textStyle: {}\n                },\n\n                // 阴影指示器样式设置\n                shadowStyle: {\n                    color: 'rgba(150,150,150,0.3)'\n                }\n            },\n            textStyle: {\n                color: '#fff',\n                fontSize: 14\n            }\n        }\n    });\n\n\n/***/ }),\n/* 389 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var TooltipContent = __webpack_require__(387);\n    var graphic = __webpack_require__(319);\n    var zrUtil = __webpack_require__(317);\n    var formatUtil = __webpack_require__(324);\n    var numberUtil = __webpack_require__(320);\n    var modelUtil = __webpack_require__(325);\n    var parsePercent = numberUtil.parsePercent;\n    var env = __webpack_require__(323);\n    var Model = __webpack_require__(327);\n\n    function dataEqual(a, b) {\n        if (!a || !b) {\n            return false;\n        }\n        var round = numberUtil.round;\n        return round(a[0]) === round(b[0])\n            && round(a[1]) === round(b[1]);\n    }\n    /**\n     * @inner\n     */\n    function makeLineShape(x1, y1, x2, y2) {\n        return {\n            x1: x1,\n            y1: y1,\n            x2: x2,\n            y2: y2\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function makeRectShape(x, y, width, height) {\n        return {\n            x: x,\n            y: y,\n            width: width,\n            height: height\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n        return {\n            cx: cx,\n            cy: cy,\n            r0: r0,\n            r: r,\n            startAngle: startAngle,\n            endAngle: endAngle,\n            clockwise: true\n        };\n    }\n\n    function refixTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n        var gap = 20;\n\n        if (x + width + gap > viewWidth) {\n            x -= width + gap;\n        }\n        else {\n            x += gap;\n        }\n        if (y + height + gap > viewHeight) {\n            y -= height + gap;\n        }\n        else {\n            y += gap;\n        }\n        return [x, y];\n    }\n\n    function confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        x = Math.min(x + width, viewWidth) - width;\n        y = Math.min(y + height, viewHeight) - height;\n        x = Math.max(x, 0);\n        y = Math.max(y, 0);\n\n        return [x, y];\n    }\n\n    function calcTooltipPosition(position, rect, dom) {\n        var domWidth = dom.clientWidth;\n        var domHeight = dom.clientHeight;\n        var gap = 5;\n        var x = 0;\n        var y = 0;\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n        switch (position) {\n            case 'inside':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'top':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y - domHeight - gap;\n                break;\n            case 'bottom':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight + gap;\n                break;\n            case 'left':\n                x = rect.x - domWidth - gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'right':\n                x = rect.x + rectWidth + gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n        }\n        return [x, y];\n    }\n\n    /**\n     * @param  {string|Function|Array.<number>} positionExpr\n     * @param  {number} x Mouse x\n     * @param  {number} y Mouse y\n     * @param  {boolean} confine Whether confine tooltip content in view rect.\n     * @param  {module:echarts/component/tooltip/TooltipContent} content\n     * @param  {Object|<Array.<Object>} params\n     * @param  {module:zrender/Element} el target element\n     * @param  {module:echarts/ExtensionAPI} api\n     * @return {Array.<number>}\n     */\n    function updatePosition(positionExpr, x, y, confine, content, params, el, api) {\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n\n        var rect = el && el.getBoundingRect().clone();\n        el && rect.applyTransform(el.transform);\n        if (typeof positionExpr === 'function') {\n            // Callback of position can be an array or a string specify the position\n            positionExpr = positionExpr([x, y], params, content.el, rect);\n        }\n\n        if (zrUtil.isArray(positionExpr)) {\n            x = parsePercent(positionExpr[0], viewWidth);\n            y = parsePercent(positionExpr[1], viewHeight);\n        }\n        // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n        else if (typeof positionExpr === 'string' && el) {\n            var pos = calcTooltipPosition(\n                positionExpr, rect, content.el\n            );\n            x = pos[0];\n            y = pos[1];\n        }\n        else {\n            var pos = refixTooltipPosition(\n                x, y, content.el, viewWidth, viewHeight\n            );\n            x = pos[0];\n            y = pos[1];\n        }\n\n        if (confine) {\n            var pos = confineTooltipPosition(\n                x, y, content.el, viewWidth, viewHeight\n            );\n            x = pos[0];\n            y = pos[1];\n        }\n\n        content.moveTo(x, y);\n    }\n\n    function ifSeriesSupportAxisTrigger(seriesModel) {\n        var coordSys = seriesModel.coordinateSystem;\n        var trigger = seriesModel.get('tooltip.trigger', true);\n        // Ignore series use item tooltip trigger and series coordinate system is not cartesian or\n        return !(!coordSys\n            || (coordSys.type !== 'cartesian2d' && coordSys.type !== 'polar' && coordSys.type !== 'singleAxis')\n            || trigger === 'item');\n    }\n\n    __webpack_require__(318).extendComponentView({\n\n        type: 'tooltip',\n\n        _axisPointers: {},\n\n        init: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var tooltipContent = new TooltipContent(api.getDom(), api);\n            this._tooltipContent = tooltipContent;\n        },\n\n        render: function (tooltipModel, ecModel, api) {\n            if (env.node) {\n                return;\n            }\n\n            // Reset\n            this.group.removeAll();\n\n            /**\n             * @type {Object}\n             * @private\n             */\n            this._axisPointers = {};\n\n            /**\n             * @private\n             * @type {module:echarts/component/tooltip/TooltipModel}\n             */\n            this._tooltipModel = tooltipModel;\n\n            /**\n             * @private\n             * @type {module:echarts/model/Global}\n             */\n            this._ecModel = ecModel;\n\n            /**\n             * @private\n             * @type {module:echarts/ExtensionAPI}\n             */\n            this._api = api;\n\n            /**\n             * @type {Object}\n             * @private\n             */\n            this._lastHover = {\n                // data\n                // payloadBatch\n            };\n\n            var tooltipContent = this._tooltipContent;\n            tooltipContent.update();\n            tooltipContent.enterable = tooltipModel.get('enterable');\n            this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n\n            /**\n             * @type {Object.<string, Array>}\n             */\n            this._seriesGroupByAxis = this._prepareAxisTriggerData(\n                tooltipModel, ecModel\n            );\n\n            var crossText = this._crossText;\n            if (crossText) {\n                this.group.add(crossText);\n            }\n\n            var triggerOn = tooltipModel.get('triggerOn');\n\n            // Try to keep the tooltip show when refreshing\n            if (this._lastX != null\n                && this._lastY != null\n                // When user is willing to control tooltip totally using API,\n                // self.manuallyShowTip({x, y}) might cause tooltip hide,\n                // which is not expected.\n                && triggerOn !== 'none'\n            ) {\n                var self = this;\n                clearTimeout(this._refreshUpdateTimeout);\n                this._refreshUpdateTimeout = setTimeout(function () {\n                    // Show tip next tick after other charts are rendered\n                    // In case highlight action has wrong result\n                    // FIXME\n                    self.manuallyShowTip(tooltipModel, ecModel, api, {\n                        x: self._lastX,\n                        y: self._lastY\n                    });\n                });\n            }\n\n            var zr = this._api.getZr();\n            zr.off('click', this._tryShow);\n            zr.off('mousemove', this._mousemove);\n            zr.off('mouseout', this._hide);\n            zr.off('globalout', this._hide);\n\n            if (triggerOn === 'click') {\n                zr.on('click', this._tryShow, this);\n            }\n            else if (triggerOn === 'mousemove') {\n                zr.on('mousemove', this._mousemove, this);\n                zr.on('mouseout', this._hide, this);\n                zr.on('globalout', this._hide, this);\n            }\n            // else triggerOn is 'none', which enable user\n            // to control tooltip totally using API.\n        },\n\n        _mousemove: function (e) {\n            var showDelay = this._tooltipModel.get('showDelay');\n            var self = this;\n            clearTimeout(this._showTimeout);\n            if (showDelay > 0) {\n                this._showTimeout = setTimeout(function () {\n                    self._tryShow(e);\n                }, showDelay);\n            }\n            else {\n                this._tryShow(e);\n            }\n        },\n\n        /**\n         * Show tip manually by\n         * dispatchAction({\n         *     type: 'showTip',\n         *     x: 10,\n         *     y: 10\n         * });\n         * Or\n         * dispatchAction({\n         *      type: 'showTip',\n         *      seriesIndex: 0,\n         *      dataIndex or dataIndexInside or name\n         * });\n         *\n         *  TODO Batch\n         */\n        manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n            // From self\n            if (payload.from === this.uid) {\n                return;\n            }\n\n            var ecModel = this._ecModel;\n            var seriesIndex = payload.seriesIndex;\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n            var api = this._api;\n\n            var isTriggerAxis = this._tooltipModel.get('trigger') === 'axis';\n            function seriesHaveDataOnIndex(_series) {\n                var data = _series.getData();\n                var dataIndex = modelUtil.queryDataIndex(data, payload);\n                // Have single dataIndex\n                if (dataIndex != null && !zrUtil.isArray(dataIndex)\n                    && data.hasValue(dataIndex)\n                ) {\n                    return true;\n                }\n            }\n\n            if (payload.x == null || payload.y == null) {\n                if (isTriggerAxis) {\n                    // Find another series.\n                    if (seriesModel && !seriesHaveDataOnIndex(seriesModel)) {\n                        seriesModel = null;\n                    }\n                    if (!seriesModel) {\n                        // Find the first series can use axis trigger And data is not null\n                        ecModel.eachSeries(function (_series) {\n                            if (ifSeriesSupportAxisTrigger(_series) && !seriesModel) {\n                                if (seriesHaveDataOnIndex(_series)) {\n                                    seriesModel = _series;\n                                }\n                            }\n                        });\n                    }\n                }\n                else {\n                    // Use the first series by default.\n                    seriesModel = seriesModel || ecModel.getSeriesByIndex(0);\n                }\n                if (seriesModel) {\n                    var data = seriesModel.getData();\n                    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n                    if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n                        return;\n                    }\n\n                    var el = data.getItemGraphicEl(dataIndex);\n                    var cx;\n                    var cy;\n                    // Try to get the point in coordinate system\n                    var coordSys = seriesModel.coordinateSystem;\n                    if (seriesModel.getTooltipPosition) {\n                        var point = seriesModel.getTooltipPosition(dataIndex) || [];\n                        cx = point[0];\n                        cy = point[1];\n                    }\n                    else if (coordSys && coordSys.dataToPoint) {\n                        var point = coordSys.dataToPoint(\n                            data.getValues(\n                                zrUtil.map(coordSys.dimensions, function (dim) {\n                                    return seriesModel.coordDimToDataDim(dim)[0];\n                                }), dataIndex, true\n                            )\n                        );\n                        cx = point && point[0];\n                        cy = point && point[1];\n                    }\n                    else if (el) {\n                        // Use graphic bounding rect\n                        var rect = el.getBoundingRect().clone();\n                        rect.applyTransform(el.transform);\n                        cx = rect.x + rect.width / 2;\n                        cy = rect.y + rect.height / 2;\n                    }\n\n                    if (cx != null && cy != null) {\n                        this._tryShow({\n                            offsetX: cx,\n                            offsetY: cy,\n                            position: payload.position,\n                            target: el,\n                            event: {}\n                        });\n                    }\n                }\n            }\n            else {\n                var el = api.getZr().handler.findHover(payload.x, payload.y);\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    target: el,\n                    event: {}\n                });\n            }\n        },\n\n        manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n            if (payload.from === this.uid) {\n                return;\n            }\n\n            this._hide();\n        },\n\n        _prepareAxisTriggerData: function (tooltipModel, ecModel) {\n            // Prepare data for axis trigger\n            var seriesGroupByAxis = {};\n            ecModel.eachSeries(function (seriesModel) {\n                if (ifSeriesSupportAxisTrigger(seriesModel)) {\n                    var coordSys = seriesModel.coordinateSystem;\n                    var baseAxis;\n                    var key;\n\n                    // Only cartesian2d, polar and single support axis trigger\n                    if (coordSys.type === 'cartesian2d') {\n                        // FIXME `axisPointer.axis` is not baseAxis\n                        baseAxis = coordSys.getBaseAxis();\n                        key = baseAxis.dim + baseAxis.index;\n                    }\n                    else if (coordSys.type === 'singleAxis') {\n                        baseAxis = coordSys.getAxis();\n                        key = baseAxis.dim + baseAxis.type;\n                    }\n                    else {\n                        baseAxis = coordSys.getBaseAxis();\n                        key = baseAxis.dim + coordSys.name;\n                    }\n\n                    seriesGroupByAxis[key] = seriesGroupByAxis[key] || {\n                        coordSys: [],\n                        series: []\n                    };\n                    seriesGroupByAxis[key].coordSys.push(coordSys);\n                    seriesGroupByAxis[key].series.push(seriesModel);\n                }\n            }, this);\n\n            return seriesGroupByAxis;\n        },\n\n        /**\n         * mousemove handler\n         * @param {Object} e\n         * @private\n         */\n        _tryShow: function (e) {\n            var el = e.target;\n            var tooltipModel = this._tooltipModel;\n            var globalTrigger = tooltipModel.get('trigger');\n            var ecModel = this._ecModel;\n            var api = this._api;\n\n            if (!tooltipModel) {\n                return;\n            }\n\n            // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n            this._lastX = e.offsetX;\n            this._lastY = e.offsetY;\n\n            // Always show item tooltip if mouse is on the element with dataIndex\n            if (el && el.dataIndex != null) {\n                // Use dataModel in element if possible\n                // Used when mouseover on a element like markPoint or edge\n                // In which case, the data is not main data in series.\n                var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                var dataIndex = el.dataIndex;\n                var data = dataModel.getData();\n                var itemModel = data.getItemModel(dataIndex);\n                // Series or single data may use item trigger when global is axis trigger\n                if ((itemModel.get('tooltip.trigger') || globalTrigger) === 'axis') {\n                    this._showAxisTooltip(tooltipModel, ecModel, e);\n                }\n                else {\n                    // Reset ticket\n                    this._ticket = '';\n                    // If either single data or series use item trigger\n                    this._hideAxisPointer();\n                    // Reset last hover and dispatch downplay action\n                    this._resetLastHover();\n\n                    this._showItemTooltipContent(dataModel, dataIndex, el.dataType, e);\n                }\n\n                api.dispatchAction({\n                    type: 'showTip',\n                    from: this.uid,\n                    dataIndexInside: dataIndex,\n                    dataIndex: data.getRawIndex(dataIndex), // expose to user.\n                    seriesIndex: el.seriesIndex\n                });\n            }\n            // Tooltip provided directly. Like legend\n            else if (el && el.tooltip) {\n                var tooltipOpt = el.tooltip;\n                if (typeof tooltipOpt === 'string') {\n                    var content = tooltipOpt;\n                    tooltipOpt = {\n                        content: content,\n                        // Fixed formatter\n                        formatter: content\n                    };\n                }\n                var subTooltipModel = new Model(tooltipOpt, tooltipModel);\n                var defaultHtml = subTooltipModel.get('content');\n                var asyncTicket = Math.random();\n                this._showTooltipContent(\n                    // TODO params\n                    subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {},\n                    asyncTicket, e.offsetX, e.offsetY, e.position, el, api\n                );\n            }\n            else {\n                if (globalTrigger === 'item') {\n                    this._hide();\n                }\n                else {\n                    // Try show axis tooltip\n                    this._showAxisTooltip(tooltipModel, ecModel, e);\n                }\n\n                // Action of cross pointer\n                // other pointer types will trigger action in _dispatchAndShowSeriesTooltipContent method\n                if (tooltipModel.get('axisPointer.type') === 'cross') {\n                    api.dispatchAction({\n                        type: 'showTip',\n                        from: this.uid,\n                        x: e.offsetX,\n                        y: e.offsetY\n                    });\n                }\n            }\n        },\n\n        /**\n         * Show tooltip on axis\n         * @param {module:echarts/component/tooltip/TooltipModel} tooltipModel\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Object} e\n         * @private\n         */\n        _showAxisTooltip: function (tooltipModel, ecModel, e) {\n            var axisPointerModel = tooltipModel.getModel('axisPointer');\n            var axisPointerType = axisPointerModel.get('type');\n\n            if (axisPointerType === 'cross') {\n                var el = e.target;\n                if (el && el.dataIndex != null) {\n                    var seriesModel = ecModel.getSeriesByIndex(el.seriesIndex);\n                    var dataIndex = el.dataIndex;\n                    this._showItemTooltipContent(seriesModel, dataIndex, el.dataType, e);\n                }\n            }\n\n            this._showAxisPointer();\n            var allNotShow = true;\n            zrUtil.each(this._seriesGroupByAxis, function (seriesCoordSysSameAxis) {\n                // Try show the axis pointer\n                var allCoordSys = seriesCoordSysSameAxis.coordSys;\n                var coordSys = allCoordSys[0];\n\n                // If mouse position is not in the grid or polar\n                var point = [e.offsetX, e.offsetY];\n\n                if (!coordSys.containPoint(point)) {\n                    // Hide axis pointer\n                    this._hideAxisPointer(coordSys.name);\n                    return;\n                }\n\n                allNotShow = false;\n                // Make sure point is discrete on cateogry axis\n                var dimensions = coordSys.dimensions;\n                var value = coordSys.pointToData(point, true);\n                point = coordSys.dataToPoint(value);\n\n                var baseAxis = coordSys.getBaseAxis();\n                var axisType = axisPointerModel.get('axis');\n                if (axisType === 'auto') {\n                    axisType = baseAxis.dim;\n                }\n\n                if (baseAxis.isBlank() || zrUtil.eqNaN(point[0]) || zrUtil.eqNaN(point[1])) {\n                    this._hideAxisPointer(coordSys.name);\n                    return;\n                }\n\n                var contentNotChange = false;\n                var lastHover = this._lastHover;\n                if (axisPointerType === 'cross') {\n                    // If hover data not changed\n                    // Possible when two axes are all category\n                    if (dataEqual(lastHover.data, value)) {\n                        contentNotChange = true;\n                    }\n                    lastHover.data = value;\n                }\n                else {\n                    var valIndex = zrUtil.indexOf(dimensions, axisType);\n\n                    // If hover data not changed on the axis dimension\n                    if (lastHover.data === value[valIndex]) {\n                        contentNotChange = true;\n                    }\n                    lastHover.data = value[valIndex];\n                }\n\n                var enableAnimation = tooltipModel.get('animation');\n\n                if (coordSys.type === 'cartesian2d' && !contentNotChange) {\n                    this._showCartesianPointer(\n                        axisPointerModel, coordSys, axisType, point, enableAnimation\n                    );\n                }\n                else if (coordSys.type === 'polar' && !contentNotChange) {\n                    this._showPolarPointer(\n                        axisPointerModel, coordSys, axisType, point, enableAnimation\n                    );\n                }\n                else if (coordSys.type === 'singleAxis' && !contentNotChange) {\n                    this._showSinglePointer(\n                        axisPointerModel, coordSys, axisType, point, enableAnimation\n                    );\n                }\n\n                if (axisPointerType !== 'cross') {\n                    this._dispatchAndShowSeriesTooltipContent(\n                        coordSys, seriesCoordSysSameAxis.series, point, value, contentNotChange, e.position\n                    );\n                }\n            }, this);\n\n            if (!this._tooltipModel.get('show')) {\n                this._hideAxisPointer();\n            }\n\n            if (allNotShow) {\n                this._hide();\n            }\n        },\n\n        /**\n         * Show tooltip on axis of cartesian coordinate\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @param {module:echarts/coord/cartesian/Cartesian2D} cartesians\n         * @param {string} axisType\n         * @param {Array.<number>} point\n         * @private\n         */\n        _showCartesianPointer: function (axisPointerModel, cartesian, axisType, point, enableAnimation) {\n            var self = this;\n\n            var axisPointerType = axisPointerModel.get('type');\n            var baseAxis = cartesian.getBaseAxis();\n            var moveAnimation = enableAnimation\n                && axisPointerType !== 'cross'\n                && baseAxis.type === 'category'\n                && baseAxis.getBandWidth() > 20;\n\n            if (axisPointerType === 'cross') {\n                moveGridLine('x', point, cartesian.getAxis('y').getGlobalExtent());\n                moveGridLine('y', point, cartesian.getAxis('x').getGlobalExtent());\n\n                this._updateCrossText(cartesian, point, axisPointerModel);\n            }\n            else {\n                var otherAxis = cartesian.getAxis(axisType === 'x' ? 'y' : 'x');\n                var otherExtent = otherAxis.getGlobalExtent();\n\n                if (cartesian.type === 'cartesian2d') {\n                    (axisPointerType === 'line' ? moveGridLine : moveGridShadow)(\n                        axisType, point, otherExtent\n                    );\n                }\n            }\n\n            /**\n             * @inner\n             */\n            function moveGridLine(axisType, point, otherExtent) {\n                var targetShape = axisType === 'x'\n                    ? makeLineShape(point[0], otherExtent[0], point[0], otherExtent[1])\n                    : makeLineShape(otherExtent[0], point[1], otherExtent[1], point[1]);\n\n                var pointerEl = self._getPointerElement(\n                    cartesian, axisPointerModel, axisType, targetShape\n                );\n                graphic.subPixelOptimizeLine({\n                    shape: targetShape,\n                    style: pointerEl.style\n                });\n\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n\n            /**\n             * @inner\n             */\n            function moveGridShadow(axisType, point, otherExtent) {\n                var axis = cartesian.getAxis(axisType);\n                var bandWidth = axis.getBandWidth();\n                var span = otherExtent[1] - otherExtent[0];\n                var targetShape = axisType === 'x'\n                    ? makeRectShape(point[0] - bandWidth / 2, otherExtent[0], bandWidth, span)\n                    : makeRectShape(otherExtent[0], point[1] - bandWidth / 2, span, bandWidth);\n\n                var pointerEl = self._getPointerElement(\n                    cartesian, axisPointerModel, axisType, targetShape\n                );\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n        },\n\n        _showSinglePointer: function (axisPointerModel, single, axisType, point, enableAnimation) {\n            var self = this;\n            var axisPointerType = axisPointerModel.get('type');\n            var moveAnimation =\n                enableAnimation\n                && axisPointerType !== 'cross'\n                && single.getBaseAxis().type === 'category';\n            var rect = single.getRect();\n            var otherExtent = [rect.y, rect.y + rect.height];\n\n            moveSingleLine(axisType, point, otherExtent);\n\n            /**\n             * @inner\n             */\n            function moveSingleLine(axisType, point, otherExtent) {\n                var axis = single.getAxis();\n                var orient = axis.orient;\n\n                var targetShape = orient === 'horizontal'\n                    ? makeLineShape(point[0], otherExtent[0], point[0], otherExtent[1])\n                    : makeLineShape(otherExtent[0], point[1], otherExtent[1], point[1]);\n\n                var pointerEl = self._getPointerElement(\n                    single, axisPointerModel, axisType, targetShape\n                );\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n\n        },\n\n        /**\n         * Show tooltip on axis of polar coordinate\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @param {Array.<module:echarts/coord/polar/Polar>} polar\n         * @param {string} axisType\n         * @param {Array.<number>} point\n         */\n        _showPolarPointer: function (axisPointerModel, polar, axisType, point, enableAnimation) {\n            var self = this;\n\n            var axisPointerType = axisPointerModel.get('type');\n\n            var angleAxis = polar.getAngleAxis();\n            var radiusAxis = polar.getRadiusAxis();\n\n            var moveAnimation = enableAnimation\n                && axisPointerType !== 'cross'\n                && polar.getBaseAxis().type === 'category';\n\n            if (axisPointerType === 'cross') {\n                movePolarLine('angle', point, radiusAxis.getExtent());\n                movePolarLine('radius', point, angleAxis.getExtent());\n\n                this._updateCrossText(polar, point, axisPointerModel);\n            }\n            else {\n                var otherAxis = polar.getAxis(axisType === 'radius' ? 'angle' : 'radius');\n                var otherExtent = otherAxis.getExtent();\n\n                (axisPointerType === 'line' ? movePolarLine : movePolarShadow)(\n                    axisType, point, otherExtent\n                );\n            }\n            /**\n             * @inner\n             */\n            function movePolarLine(axisType, point, otherExtent) {\n                var mouseCoord = polar.pointToCoord(point);\n\n                var targetShape;\n\n                if (axisType === 'angle') {\n                    var p1 = polar.coordToPoint([otherExtent[0], mouseCoord[1]]);\n                    var p2 = polar.coordToPoint([otherExtent[1], mouseCoord[1]]);\n                    targetShape = makeLineShape(p1[0], p1[1], p2[0], p2[1]);\n                }\n                else {\n                    targetShape = {\n                        cx: polar.cx,\n                        cy: polar.cy,\n                        r: mouseCoord[0]\n                    };\n                }\n\n                var pointerEl = self._getPointerElement(\n                    polar, axisPointerModel, axisType, targetShape\n                );\n\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n\n            /**\n             * @inner\n             */\n            function movePolarShadow(axisType, point, otherExtent) {\n                var axis = polar.getAxis(axisType);\n                var bandWidth = axis.getBandWidth();\n\n                var mouseCoord = polar.pointToCoord(point);\n\n                var targetShape;\n\n                var radian = Math.PI / 180;\n\n                if (axisType === 'angle') {\n                    targetShape = makeSectorShape(\n                        polar.cx, polar.cy,\n                        otherExtent[0], otherExtent[1],\n                        // In ECharts y is negative if angle is positive\n                        (-mouseCoord[1] - bandWidth / 2) * radian,\n                        (-mouseCoord[1] + bandWidth / 2) * radian\n                    );\n                }\n                else {\n                    targetShape = makeSectorShape(\n                        polar.cx, polar.cy,\n                        mouseCoord[0] - bandWidth / 2,\n                        mouseCoord[0] + bandWidth / 2,\n                        0, Math.PI * 2\n                    );\n                }\n\n                var pointerEl = self._getPointerElement(\n                    polar, axisPointerModel, axisType, targetShape\n                );\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n        },\n\n        _updateCrossText: function (coordSys, point, axisPointerModel) {\n            var crossStyleModel = axisPointerModel.getModel('crossStyle');\n            var textStyleModel = crossStyleModel.getModel('textStyle');\n\n            var tooltipModel = this._tooltipModel;\n\n            var text = this._crossText;\n            if (!text) {\n                text = this._crossText = new graphic.Text({\n                    style: {\n                        textAlign: 'left',\n                        textVerticalAlign: 'bottom'\n                    }\n                });\n                this.group.add(text);\n            }\n\n            var value = coordSys.pointToData(point);\n\n            var dims = coordSys.dimensions;\n            value = zrUtil.map(value, function (val, idx) {\n                var axis = coordSys.getAxis(dims[idx]);\n                if (axis.type === 'category' || axis.type === 'time') {\n                    val = axis.scale.getLabel(val);\n                }\n                else {\n                    val = formatUtil.addCommas(\n                        val.toFixed(axis.getPixelPrecision())\n                    );\n                }\n                return val;\n            });\n\n            text.setStyle({\n                fill: textStyleModel.getTextColor() || crossStyleModel.get('color'),\n                textFont: textStyleModel.getFont(),\n                text: value.join(', '),\n                x: point[0] + 5,\n                y: point[1] - 5\n            });\n            text.z = tooltipModel.get('z');\n            text.zlevel = tooltipModel.get('zlevel');\n        },\n\n        _getPointerElement: function (coordSys, pointerModel, axisType, initShape) {\n            var tooltipModel = this._tooltipModel;\n            var z = tooltipModel.get('z');\n            var zlevel = tooltipModel.get('zlevel');\n            var axisPointers = this._axisPointers;\n            var coordSysName = coordSys.name;\n            axisPointers[coordSysName] = axisPointers[coordSysName] || {};\n            if (axisPointers[coordSysName][axisType]) {\n                return axisPointers[coordSysName][axisType];\n            }\n\n            // Create if not exists\n            var pointerType = pointerModel.get('type');\n            var styleModel = pointerModel.getModel(pointerType + 'Style');\n            var isShadow = pointerType === 'shadow';\n            var style = styleModel[isShadow ? 'getAreaStyle' : 'getLineStyle']();\n\n            var elementType = coordSys.type === 'polar'\n                ? (isShadow ? 'Sector' : (axisType === 'radius' ? 'Circle' : 'Line'))\n                : (isShadow ? 'Rect' : 'Line');\n\n            isShadow ? (style.stroke = null) : (style.fill = null);\n\n            var el = axisPointers[coordSysName][axisType] = new graphic[elementType]({\n                style: style,\n                z: z,\n                zlevel: zlevel,\n                silent: true,\n                shape: initShape\n            });\n\n            this.group.add(el);\n            return el;\n        },\n\n        /**\n         * Dispatch actions and show tooltip on series\n         * @param {Array.<module:echarts/model/Series>} seriesList\n         * @param {Array.<number>} point\n         * @param {Array.<number>} value\n         * @param {boolean} contentNotChange\n         * @param {Array.<number>|string|Function} [positionExpr]\n         */\n        _dispatchAndShowSeriesTooltipContent: function (\n            coordSys, seriesList, point, value, contentNotChange, positionExpr\n        ) {\n\n            var rootTooltipModel = this._tooltipModel;\n\n            var baseAxis = coordSys.getBaseAxis();\n            var baseDimIndex = ({x: 1, radius: 1, single: 1})[baseAxis.dim] ? 0 : 1;\n\n            if (!seriesList.length) {\n                return;\n            }\n\n            var payloadBatch = zrUtil.map(seriesList, function (series) {\n                return {\n                    seriesIndex: series.seriesIndex,\n                    dataIndexInside: series.getAxisTooltipDataIndex\n                        ? series.getAxisTooltipDataIndex(series.coordDimToDataDim(baseAxis.dim), value, baseAxis)\n                        : series.getData().indexOfNearest(\n                            series.coordDimToDataDim(baseAxis.dim)[0],\n                            value[baseDimIndex],\n                            // Add a threshold to avoid find the wrong dataIndex when data length is not same\n                            false, baseAxis.type === 'category' ? 0.5 : null\n                        )\n                };\n            });\n            var sampleSeriesIndex;\n            zrUtil.each(payloadBatch, function (payload, idx) {\n                if (seriesList[idx].getData().hasValue(payload.dataIndexInside)) {\n                    sampleSeriesIndex = idx;\n                }\n            });\n            // Fallback to 0.\n            sampleSeriesIndex = sampleSeriesIndex || 0;\n\n            var lastHover = this._lastHover;\n            var api = this._api;\n            // Dispatch downplay action\n            if (lastHover.payloadBatch && !contentNotChange) {\n                api.dispatchAction({\n                    type: 'downplay',\n                    batch: lastHover.payloadBatch\n                });\n            }\n            // Dispatch highlight action\n            if (!contentNotChange) {\n                api.dispatchAction({\n                    type: 'highlight',\n                    batch: payloadBatch\n                });\n                lastHover.payloadBatch = payloadBatch;\n            }\n            // Dispatch showTip action\n            var dataIndex = payloadBatch[sampleSeriesIndex].dataIndexInside;\n            api.dispatchAction({\n                type: 'showTip',\n                dataIndexInside: dataIndex,\n                // expose to user.\n                dataIndex: seriesList[sampleSeriesIndex].getData().getRawIndex(dataIndex),\n                seriesIndex: payloadBatch[sampleSeriesIndex].seriesIndex,\n                from: this.uid\n            });\n\n            if (baseAxis && rootTooltipModel.get('showContent') && rootTooltipModel.get('show')) {\n                var paramsList = zrUtil.map(seriesList, function (series, index) {\n                    return series.getDataParams(payloadBatch[index].dataIndexInside);\n                });\n\n                if (!contentNotChange) {\n                    // Update html content\n                    var firstDataIndex = payloadBatch[sampleSeriesIndex].dataIndexInside;\n\n                    // Default tooltip content\n                    // FIXME\n                    // (1) shold be the first data which has name?\n                    // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n                    var firstLine = baseAxis.type === 'time'\n                        ? baseAxis.scale.getLabel(value[baseDimIndex])\n                        : seriesList[sampleSeriesIndex].getData().getName(firstDataIndex);\n                    var defaultHtml = (firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '')\n                        + zrUtil.map(seriesList, function (series, index) {\n                            return series.formatTooltip(payloadBatch[index].dataIndexInside, true);\n                        }).join('<br />');\n\n                    var asyncTicket = 'axis_' + coordSys.name + '_' + firstDataIndex;\n\n                    this._showTooltipContent(\n                        rootTooltipModel, defaultHtml, paramsList, asyncTicket,\n                        point[0], point[1], positionExpr, null, api\n                    );\n                }\n                else {\n                    updatePosition(\n                        positionExpr || rootTooltipModel.get('position'),\n                        point[0], point[1],\n                        rootTooltipModel.get('confine'),\n                        this._tooltipContent, paramsList, null, api\n                    );\n                }\n            }\n        },\n\n        /**\n         * Show tooltip on item\n         * @param {module:echarts/model/Series} seriesModel\n         * @param {number} dataIndex\n         * @param {string} dataType\n         * @param {Object} e\n         */\n        _showItemTooltipContent: function (seriesModel, dataIndex, dataType, e) {\n            // FIXME Graph data\n            var api = this._api;\n            var data = seriesModel.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var tooltipOpt = itemModel.get('tooltip', true);\n            if (typeof tooltipOpt === 'string') {\n                // In each data item tooltip can be simply write:\n                // {\n                //  value: 10,\n                //  tooltip: 'Something you need to know'\n                // }\n                var tooltipContent = tooltipOpt;\n                tooltipOpt = {\n                    formatter: tooltipContent\n                };\n            }\n            var rootTooltipModel = this._tooltipModel;\n            var seriesTooltipModel = seriesModel.getModel(\n                'tooltip', rootTooltipModel\n            );\n            var tooltipModel = new Model(tooltipOpt, seriesTooltipModel, seriesTooltipModel.ecModel);\n\n            var params = seriesModel.getDataParams(dataIndex, dataType);\n            var defaultHtml = seriesModel.formatTooltip(dataIndex, false, dataType);\n\n            var asyncTicket = 'item_' + seriesModel.name + '_' + dataIndex;\n\n            this._showTooltipContent(\n                tooltipModel, defaultHtml, params, asyncTicket,\n                e.offsetX, e.offsetY, e.position, e.target, api\n            );\n        },\n\n        _showTooltipContent: function (\n            tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, target, api\n        ) {\n            // Reset ticket\n            this._ticket = '';\n\n            if (tooltipModel.get('showContent') && tooltipModel.get('show')) {\n                var tooltipContent = this._tooltipContent;\n                var confine = tooltipModel.get('confine');\n\n                var formatter = tooltipModel.get('formatter');\n                positionExpr = positionExpr || tooltipModel.get('position');\n                var html = defaultHtml;\n\n                if (formatter) {\n                    if (typeof formatter === 'string') {\n                        html = formatUtil.formatTpl(formatter, params, true);\n                    }\n                    else if (typeof formatter === 'function') {\n                        var self = this;\n                        var ticket = asyncTicket;\n                        var callback = function (cbTicket, html) {\n                            if (cbTicket === self._ticket) {\n                                tooltipContent.setContent(html);\n\n                                updatePosition(\n                                    positionExpr, x, y, confine,\n                                    tooltipContent, params, target, api\n                                );\n                            }\n                        };\n                        self._ticket = ticket;\n                        html = formatter(params, ticket, callback);\n                    }\n                }\n\n                tooltipContent.show(tooltipModel);\n                tooltipContent.setContent(html);\n\n                updatePosition(\n                    positionExpr, x, y, confine,\n                    tooltipContent, params, target, api\n                );\n            }\n        },\n\n        /**\n         * Show axis pointer\n         * @param {string} [coordSysName]\n         */\n        _showAxisPointer: function (coordSysName) {\n            if (coordSysName) {\n                var axisPointers = this._axisPointers[coordSysName];\n                axisPointers && zrUtil.each(axisPointers, function (el) {\n                    el.show();\n                });\n            }\n            else {\n                this.group.eachChild(function (child) {\n                    child.show();\n                });\n                this.group.show();\n            }\n        },\n\n        _resetLastHover: function () {\n            var lastHover = this._lastHover;\n            if (lastHover.payloadBatch) {\n                this._api.dispatchAction({\n                    type: 'downplay',\n                    batch: lastHover.payloadBatch\n                });\n            }\n            // Reset lastHover\n            this._lastHover = {};\n        },\n        /**\n         * Hide axis pointer\n         * @param {string} [coordSysName]\n         */\n        _hideAxisPointer: function (coordSysName) {\n            if (coordSysName) {\n                var axisPointers = this._axisPointers[coordSysName];\n                axisPointers && zrUtil.each(axisPointers, function (el) {\n                    el.hide();\n                });\n            }\n            else {\n                if (this.group.children().length) {\n                    this.group.hide();\n                }\n            }\n        },\n\n        _hide: function () {\n            clearTimeout(this._showTimeout);\n\n            this._hideAxisPointer();\n            this._resetLastHover();\n            if (!this._alwaysShowContent) {\n                this._tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n            }\n\n            this._api.dispatchAction({\n                type: 'hideTip',\n                from: this.uid\n            });\n\n            this._lastX = this._lastY = null;\n        },\n\n        dispose: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var zr = api.getZr();\n            this._tooltipContent.hide();\n\n            zr.off('click', this._tryShow);\n            zr.off('mousemove', this._mousemove);\n            zr.off('mouseout', this._hide);\n            zr.off('globalout', this._hide);\n        }\n    });\n\n\n/***/ }),\n/* 390 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var numberUtil = __webpack_require__(320);\n    var linearMap = numberUtil.linearMap;\n    var zrUtil = __webpack_require__(317);\n\n    function fixExtentWithBands(extent, nTick) {\n        var size = extent[1] - extent[0];\n        var len = nTick;\n        var margin = size / len / 2;\n        extent[0] += margin;\n        extent[1] -= margin;\n    }\n\n    var normalizedExtent = [0, 1];\n    /**\n     * @name module:echarts/coord/CartesianAxis\n     * @constructor\n     */\n    var Axis = function (dim, scale, extent) {\n\n        /**\n         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n         * @type {string}\n         */\n        this.dim = dim;\n\n        /**\n         * Axis scale\n         * @type {module:echarts/coord/scale/*}\n         */\n        this.scale = scale;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        this._extent = extent || [0, 0];\n\n        /**\n         * @type {boolean}\n         */\n        this.inverse = false;\n\n        /**\n         * Usually true when axis has a ordinal scale\n         * @type {boolean}\n         */\n        this.onBand = false;\n    };\n\n    Axis.prototype = {\n\n        constructor: Axis,\n\n        /**\n         * If axis extent contain given coord\n         * @param {number} coord\n         * @return {boolean}\n         */\n        contain: function (coord) {\n            var extent = this._extent;\n            var min = Math.min(extent[0], extent[1]);\n            var max = Math.max(extent[0], extent[1]);\n            return coord >= min && coord <= max;\n        },\n\n        /**\n         * If axis extent contain given data\n         * @param {number} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.contain(this.dataToCoord(data));\n        },\n\n        /**\n         * Get coord extent.\n         * @return {Array.<number>}\n         */\n        getExtent: function () {\n            var ret = this._extent.slice();\n            return ret;\n        },\n\n        /**\n         * Get precision used for formatting\n         * @param {Array.<number>} [dataExtent]\n         * @return {number}\n         */\n        getPixelPrecision: function (dataExtent) {\n            return numberUtil.getPixelPrecision(\n                dataExtent || this.scale.getExtent(),\n                this._extent\n            );\n        },\n\n        /**\n         * Set coord extent\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var extent = this._extent;\n            extent[0] = start;\n            extent[1] = end;\n        },\n\n        /**\n         * Convert data to coord. Data is the rank if it has a ordinal scale\n         * @param {number} data\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        dataToCoord: function (data, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n            data = scale.normalize(data);\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            return linearMap(data, normalizedExtent, extent, clamp);\n        },\n\n        /**\n         * Convert coord to data. Data is the rank if it has a ordinal scale\n         * @param {number} coord\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        coordToData: function (coord, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            var t = linearMap(coord, extent, normalizedExtent, clamp);\n\n            return this.scale.scale(t);\n        },\n        /**\n         * @return {Array.<number>}\n         */\n        getTicksCoords: function (alignWithLabel) {\n            if (this.onBand && !alignWithLabel) {\n                var bands = this.getBands();\n                var coords = [];\n                for (var i = 0; i < bands.length; i++) {\n                    coords.push(bands[i][0]);\n                }\n                if (bands[i - 1]) {\n                    coords.push(bands[i - 1][1]);\n                }\n                return coords;\n            }\n            else {\n                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n            }\n        },\n\n        /**\n         * Coords of labels are on the ticks or on the middle of bands\n         * @return {Array.<number>}\n         */\n        getLabelsCoords: function () {\n            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n        },\n\n        /**\n         * Get bands.\n         *\n         * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n         * |---1---|---2---|---3---|---4---|.\n         *\n         * @return {Array}\n         */\n         // FIXME Situation when labels is on ticks\n        getBands: function () {\n            var extent = this.getExtent();\n            var bands = [];\n            var len = this.scale.count();\n            var start = extent[0];\n            var end = extent[1];\n            var span = end - start;\n\n            for (var i = 0; i < len; i++) {\n                bands.push([\n                    span * i / len + start,\n                    span * (i + 1) / len + start\n                ]);\n            }\n            return bands;\n        },\n\n        /**\n         * Get width of band\n         * @return {number}\n         */\n        getBandWidth: function () {\n            var axisExtent = this._extent;\n            var dataExtent = this.scale.getExtent();\n\n            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\n            // Fix #2728, avoid NaN when only one data.\n            len === 0 && (len = 1);\n\n            var size = Math.abs(axisExtent[1] - axisExtent[0]);\n\n            return Math.abs(size) / len;\n        },\n\n        /**\n         * When axis extent depends on data and no data exists,\n         * axis ticks should not be drawn, which is named 'blank'.\n         */\n        isBlank: function () {\n            return this._isBlank;\n        },\n\n        /**\n         * When axis extent depends on data and no data exists,\n         * axis ticks should not be drawn, which is named 'blank'.\n         */\n        setBlank: function (isBlank) {\n            this._isBlank = isBlank;\n        }\n\n    };\n\n    module.exports = Axis;\n\n\n/***/ }),\n/* 391 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(317);\n\n    var defaultOption = {\n        show: true,\n        zlevel: 0,                  // 一级层叠\n        z: 0,                       // 二级层叠\n        // 反向坐标轴\n        inverse: false,\n\n        // 坐标轴名字，默认为空\n        name: '',\n        // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n        nameLocation: 'end',\n        // 坐标轴名字旋转，degree。\n        nameRotate: null, // Adapt to axis rotate, when nameLocation is 'middle'.\n        nameTruncate: {\n            maxWidth: null,\n            ellipsis: '...',\n            placeholder: '.'\n        },\n        // 坐标轴文字样式，默认取全局样式\n        nameTextStyle: {},\n        // 文字与轴线距离\n        nameGap: 15,\n\n        silent: false, // Default false to support tooltip.\n        triggerEvent: false, // Default false to avoid legacy user event listener fail.\n\n        tooltip: {\n            show: false\n        },\n\n        // 坐标轴线\n        axisLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            onZero: true,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                color: '#333',\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // 属性show控制显示与否，默认显示\n            show: true,\n            // 控制小标记是否在grid里\n            inside: false,\n            // 属性length控制线长\n            length: 5,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                width: 1\n            }\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            show: true,\n            // 控制文本标签是否在grid里\n            inside: false,\n            rotate: 0,\n            margin: 8,\n            // formatter: null,\n            // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n            textStyle: {\n                fontSize: 12\n            }\n        },\n        // 分隔线\n        splitLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            // 属性lineStyle（详见lineStyle）控制线条样式\n            lineStyle: {\n                color: ['#ccc'],\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 分隔区域\n        splitArea: {\n            // 默认不显示，属性show控制显示与否\n            show: false,\n            // 属性areaStyle（详见areaStyle）控制区域样式\n            areaStyle: {\n                color: ['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']\n            }\n        }\n    };\n\n    var categoryAxis = zrUtil.merge({\n        // 类目起始和结束两端空白策略\n        boundaryGap: true,\n        // splitArea: {\n            // show: false\n        // },\n        splitLine: {\n            show: false\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // If tick is align with label when boundaryGap is true\n            // Default with axisTick\n            alignWithLabel: false,\n            interval: 'auto'\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            interval: 'auto'\n        }\n    }, defaultOption);\n\n    var valueAxis = zrUtil.merge({\n        // 数值起始和结束两端空白策略\n        boundaryGap: [0, 0],\n        // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n        // min: null,\n        // 最大值，设置成 'dataMax' 则从数据中计算最大值\n        // max: null,\n        // Readonly prop, specifies start value of the range when using data zoom.\n        // rangeStart: null\n        // Readonly prop, specifies end value of the range when using data zoom.\n        // rangeEnd: null\n        // 脱离0值比例，放大聚焦到最终_min，_max区间\n        // scale: false,\n        // 分割段数，默认为5\n        splitNumber: 5\n        // Minimum interval\n        // minInterval: null\n    }, defaultOption);\n\n    // FIXME\n    var timeAxis = zrUtil.defaults({\n        scale: true,\n        min: 'dataMin',\n        max: 'dataMax'\n    }, valueAxis);\n    var logAxis = zrUtil.defaults({\n        logBase: 10\n    }, valueAxis);\n    logAxis.scale = true;\n\n    module.exports = {\n        categoryAxis: categoryAxis,\n        valueAxis: valueAxis,\n        timeAxis: timeAxis,\n        logAxis: logAxis\n    };\n\n\n/***/ }),\n/* 392 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(317);\n    var axisHelper = __webpack_require__(343);\n\n    function getName(obj) {\n        if (zrUtil.isObject(obj) && obj.value != null) {\n            return obj.value;\n        }\n        else {\n            return obj;\n        }\n    }\n\n    module.exports = {\n\n        /**\n         * Format labels\n         * @return {Array.<string>}\n         */\n        getFormattedLabels: function () {\n            return axisHelper.getFormattedLabels(\n                this.axis,\n                this.get('axisLabel.formatter')\n            );\n        },\n\n        /**\n         * Get categories\n         */\n        getCategories: function () {\n            return this.get('type') === 'category'\n                && zrUtil.map(this.get('data'), getName);\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n         */\n        getMin: function (origin) {\n            var option = this.option;\n            var min = (!origin && option.rangeStart != null)\n                ? option.rangeStart : option.min;\n\n            if (min != null && min !== 'dataMin' && !zrUtil.eqNaN(min)) {\n                min = this.axis.scale.parse(min);\n            }\n            return min;\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n         */\n        getMax: function (origin) {\n            var option = this.option;\n            var max = (!origin && option.rangeEnd != null)\n                ? option.rangeEnd : option.max;\n\n            if (max != null && max !== 'dataMax' && !zrUtil.eqNaN(max)) {\n                max = this.axis.scale.parse(max);\n            }\n            return max;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        getNeedCrossZero: function () {\n            var option = this.option;\n            return (option.rangeStart != null || option.rangeEnd != null)\n                ? false : !option.scale;\n        },\n\n        /**\n         * Should be implemented by each axis model if necessary.\n         * @return {module:echarts/model/Component} coordinate system model\n         */\n        getCoordSysModel: zrUtil.noop,\n\n        /**\n         * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n         * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n         */\n        setRange: function (rangeStart, rangeEnd) {\n            this.option.rangeStart = rangeStart;\n            this.option.rangeEnd = rangeEnd;\n        },\n\n        /**\n         * Reset range\n         */\n        resetRange: function () {\n            // rangeStart and rangeEnd is readonly.\n            this.option.rangeStart = this.option.rangeEnd = null;\n        }\n    };\n\n\n/***/ }),\n/* 393 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var axisDefault = __webpack_require__(391);\n    var zrUtil = __webpack_require__(317);\n    var ComponentModel = __webpack_require__(329);\n    var layout = __webpack_require__(330);\n\n    // FIXME axisType is fixed ?\n    var AXIS_TYPES = ['value', 'category', 'time', 'log'];\n\n    /**\n     * Generate sub axis model class\n     * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n     * @param {module:echarts/model/Component} BaseAxisModelClass\n     * @param {Function} axisTypeDefaulter\n     * @param {Object} [extraDefaultOption]\n     */\n    module.exports = function (axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n\n        zrUtil.each(AXIS_TYPES, function (axisType) {\n\n            BaseAxisModelClass.extend({\n\n                type: axisName + 'Axis.' + axisType,\n\n                mergeDefaultAndTheme: function (option, ecModel) {\n                    var layoutMode = this.layoutMode;\n                    var inputPositionParams = layoutMode\n                        ? layout.getLayoutParams(option) : {};\n\n                    var themeModel = ecModel.getTheme();\n                    zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n                    zrUtil.merge(option, this.getDefaultOption());\n\n                    option.type = axisTypeDefaulter(axisName, option);\n\n                    if (layoutMode) {\n                        layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n                    }\n                },\n\n                defaultOption: zrUtil.mergeAll(\n                    [\n                        {},\n                        axisDefault[axisType + 'Axis'],\n                        extraDefaultOption\n                    ],\n                    true\n                )\n            });\n        });\n\n        ComponentModel.registerSubTypeDefaulter(\n            axisName + 'Axis',\n            zrUtil.curry(axisTypeDefaulter, axisName)\n        );\n    };\n\n\n/***/ }),\n/* 394 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(317);\n    var Axis = __webpack_require__(390);\n    var axisLabelInterval = __webpack_require__(398);\n\n    /**\n     * Extend axis 2d\n     * @constructor module:echarts/coord/cartesian/Axis2D\n     * @extends {module:echarts/coord/cartesian/Axis}\n     * @param {string} dim\n     * @param {*} scale\n     * @param {Array.<number>} coordExtent\n     * @param {string} axisType\n     * @param {string} position\n     */\n    var Axis2D = function (dim, scale, coordExtent, axisType, position) {\n        Axis.call(this, dim, scale, coordExtent);\n        /**\n         * Axis type\n         *  - 'category'\n         *  - 'value'\n         *  - 'time'\n         *  - 'log'\n         * @type {string}\n         */\n        this.type = axisType || 'value';\n\n        /**\n         * Axis position\n         *  - 'top'\n         *  - 'bottom'\n         *  - 'left'\n         *  - 'right'\n         */\n        this.position = position || 'bottom';\n    };\n\n    Axis2D.prototype = {\n\n        constructor: Axis2D,\n\n        /**\n         * Index of axis, can be used as key\n         */\n        index: 0,\n        /**\n         * If axis is on the zero position of the other axis\n         * @type {boolean}\n         */\n        onZero: false,\n\n        /**\n         * Axis model\n         * @param {module:echarts/coord/cartesian/AxisModel}\n         */\n        model: null,\n\n        isHorizontal: function () {\n            var position = this.position;\n            return position === 'top' || position === 'bottom';\n        },\n\n        getGlobalExtent: function () {\n            var ret = this.getExtent();\n            ret[0] = this.toGlobalCoord(ret[0]);\n            ret[1] = this.toGlobalCoord(ret[1]);\n            return ret;\n        },\n\n        /**\n         * @return {number}\n         */\n        getLabelInterval: function () {\n            var labelInterval = this._labelInterval;\n            if (!labelInterval) {\n                labelInterval = this._labelInterval = axisLabelInterval(this);\n            }\n            return labelInterval;\n        },\n\n        /**\n         * If label is ignored.\n         * Automatically used when axis is category and label can not be all shown\n         * @param  {number}  idx\n         * @return {boolean}\n         */\n        isLabelIgnored: function (idx) {\n            if (this.type === 'category') {\n                var labelInterval = this.getLabelInterval();\n                return ((typeof labelInterval === 'function')\n                    && !labelInterval(idx, this.scale.getLabel(idx)))\n                    || idx % (labelInterval + 1);\n            }\n        },\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var localCoord = axis.toLocalCoord(80);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toLocalCoord: null,\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var globalCoord = axis.toLocalCoord(40);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toGlobalCoord: null\n\n    };\n    zrUtil.inherits(Axis2D, Axis);\n\n    module.exports = Axis2D;\n\n\n/***/ }),\n/* 395 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\n\n\n    var zrUtil = __webpack_require__(317);\n\n    function dimAxisMapper(dim) {\n        return this._axes[dim];\n    }\n\n    /**\n     * @alias module:echarts/coord/Cartesian\n     * @constructor\n     */\n    var Cartesian = function (name) {\n        this._axes = {};\n\n        this._dimList = [];\n\n        /**\n         * @type {string}\n         */\n        this.name = name || '';\n    };\n\n    Cartesian.prototype = {\n\n        constructor: Cartesian,\n\n        type: 'cartesian',\n\n        /**\n         * Get axis\n         * @param  {number|string} dim\n         * @return {module:echarts/coord/Cartesian~Axis}\n         */\n        getAxis: function (dim) {\n            return this._axes[dim];\n        },\n\n        /**\n         * Get axes list\n         * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n         */\n        getAxes: function () {\n            return zrUtil.map(this._dimList, dimAxisMapper, this);\n        },\n\n        /**\n         * Get axes list by given scale type\n         */\n        getAxesByScale: function (scaleType) {\n            scaleType = scaleType.toLowerCase();\n            return zrUtil.filter(\n                this.getAxes(),\n                function (axis) {\n                    return axis.scale.type === scaleType;\n                }\n            );\n        },\n\n        /**\n         * Add axis\n         * @param {module:echarts/coord/Cartesian.Axis}\n         */\n        addAxis: function (axis) {\n            var dim = axis.dim;\n\n            this._axes[dim] = axis;\n\n            this._dimList.push(dim);\n        },\n\n        /**\n         * Convert data to coord in nd space\n         * @param {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        dataToCoord: function (val) {\n            return this._dataCoordConvert(val, 'dataToCoord');\n        },\n\n        /**\n         * Convert coord in nd space to data\n         * @param  {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        coordToData: function (val) {\n            return this._dataCoordConvert(val, 'coordToData');\n        },\n\n        _dataCoordConvert: function (input, method) {\n            var dimList = this._dimList;\n\n            var output = input instanceof Array ? [] : {};\n\n            for (var i = 0; i < dimList.length; i++) {\n                var dim = dimList[i];\n                var axis = this._axes[dim];\n\n                output[dim] = axis[method](input[dim]);\n            }\n\n            return output;\n        }\n    };\n\n    module.exports = Cartesian;\n\n\n/***/ }),\n/* 396 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(317);\n    var Cartesian = __webpack_require__(395);\n\n    function Cartesian2D(name) {\n\n        Cartesian.call(this, name);\n    }\n\n    Cartesian2D.prototype = {\n\n        constructor: Cartesian2D,\n\n        type: 'cartesian2d',\n\n        /**\n         * @type {Array.<string>}\n         * @readOnly\n         */\n        dimensions: ['x', 'y'],\n\n        /**\n         * Base axis will be used on stacking.\n         *\n         * @return {module:echarts/coord/cartesian/Axis2D}\n         */\n        getBaseAxis: function () {\n            return this.getAxesByScale('ordinal')[0]\n                || this.getAxesByScale('time')[0]\n                || this.getAxis('x');\n        },\n\n        /**\n         * If contain point\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        containPoint: function (point) {\n            var axisX = this.getAxis('x');\n            var axisY = this.getAxis('y');\n            return axisX.contain(axisX.toLocalCoord(point[0]))\n                && axisY.contain(axisY.toLocalCoord(point[1]));\n        },\n\n        /**\n         * If contain data\n         * @param {Array.<number>} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.getAxis('x').containData(data[0])\n                && this.getAxis('y').containData(data[1]);\n        },\n\n        /**\n         * Convert series data to an array of points\n         * @param {module:echarts/data/List} data\n         * @param {boolean} stack\n         * @return {Array}\n         *  Return array of points. For example:\n         *  `[[10, 10], [20, 20], [30, 30]]`\n         */\n        dataToPoints: function (data, stack) {\n            return data.mapArray(['x', 'y'], function (x, y) {\n                return this.dataToPoint([x, y]);\n            }, stack, this);\n        },\n\n        /**\n         * @param {Array.<number>} data\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        dataToPoint: function (data, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)),\n                yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))\n            ];\n        },\n\n        /**\n         * @param {Array.<number>} point\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        pointToData: function (point, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp),\n                yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)\n            ];\n        },\n\n        /**\n         * Get other axis\n         * @param {module:echarts/coord/cartesian/Axis2D} axis\n         */\n        getOtherAxis: function (axis) {\n            return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n        }\n    };\n\n    zrUtil.inherits(Cartesian2D, Cartesian);\n\n    module.exports = Cartesian2D;\n\n\n/***/ }),\n/* 397 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\n\n\n    __webpack_require__(355);\n    var ComponentModel = __webpack_require__(329);\n\n    module.exports = ComponentModel.extend({\n\n        type: 'grid',\n\n        dependencies: ['xAxis', 'yAxis'],\n\n        layoutMode: 'box',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Grid}\n         */\n        coordinateSystem: null,\n\n        defaultOption: {\n            show: false,\n            zlevel: 0,\n            z: 0,\n            left: '10%',\n            top: 60,\n            right: '10%',\n            bottom: 60,\n            // If grid size contain label\n            containLabel: false,\n            // width: {totalWidth} - left - right,\n            // height: {totalHeight} - top - bottom,\n            backgroundColor: 'rgba(0,0,0,0)',\n            borderWidth: 1,\n            borderColor: '#ccc'\n        }\n    });\n\n\n/***/ }),\n/* 398 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Helper function for axisLabelInterval calculation\n */\n\n\n\n    var zrUtil = __webpack_require__(317);\n    var axisHelper = __webpack_require__(343);\n\n    module.exports = function (axis) {\n        var axisModel = axis.model;\n        var labelModel = axisModel.getModel('axisLabel');\n        var labelInterval = labelModel.get('interval');\n        if (!(axis.type === 'category' && labelInterval === 'auto')) {\n            return labelInterval === 'auto' ? 0 : labelInterval;\n        }\n\n        return axisHelper.getAxisLabelInterval(\n            zrUtil.map(axis.scale.getTicks(), axis.dataToCoord, axis),\n            axisModel.getFormattedLabels(),\n            labelModel.getModel('textStyle').getFont(),\n            axis.isHorizontal()\n        );\n    };\n\n\n/***/ }),\n/* 399 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    function defaultKeyGetter(item) {\n        return item;\n    }\n\n    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter) {\n        this._old = oldArr;\n        this._new = newArr;\n\n        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n        this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n    }\n\n    DataDiffer.prototype = {\n\n        constructor: DataDiffer,\n\n        /**\n         * Callback function when add a data\n         */\n        add: function (func) {\n            this._add = func;\n            return this;\n        },\n\n        /**\n         * Callback function when update a data\n         */\n        update: function (func) {\n            this._update = func;\n            return this;\n        },\n\n        /**\n         * Callback function when remove a data\n         */\n        remove: function (func) {\n            this._remove = func;\n            return this;\n        },\n\n        execute: function () {\n            var oldArr = this._old;\n            var newArr = this._new;\n            var oldKeyGetter = this._oldKeyGetter;\n            var newKeyGetter = this._newKeyGetter;\n\n            var oldDataIndexMap = {};\n            var newDataIndexMap = {};\n            var oldDataKeyArr = [];\n            var newDataKeyArr = [];\n            var i;\n\n            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, oldKeyGetter);\n            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, newKeyGetter);\n\n            // Travel by inverted order to make sure order consistency\n            // when duplicate keys exists (consider newDataIndex.pop() below).\n            // For performance consideration, these code below do not look neat.\n            for (i = 0; i < oldArr.length; i++) {\n                var key = oldDataKeyArr[i];\n                var idx = newDataIndexMap[key];\n\n                // idx can never be empty array here. see 'set null' logic below.\n                if (idx != null) {\n                    // Consider there is duplicate key (for example, use dataItem.name as key).\n                    // We should make sure every item in newArr and oldArr can be visited.\n                    var len = idx.length;\n                    if (len) {\n                        len === 1 && (newDataIndexMap[key] = null);\n                        idx = idx.unshift();\n                    }\n                    else {\n                        newDataIndexMap[key] = null;\n                    }\n                    this._update && this._update(idx, i);\n                }\n                else {\n                    this._remove && this._remove(i);\n                }\n            }\n\n            for (var i = 0; i < newDataKeyArr.length; i++) {\n                var key = newDataKeyArr[i];\n                if (newDataIndexMap.hasOwnProperty(key)) {\n                    var idx = newDataIndexMap[key];\n                    if (idx == null) {\n                        continue;\n                    }\n                    // idx can never be empty array here. see 'set null' logic above.\n                    if (!idx.length) {\n                        this._add && this._add(idx);\n                    }\n                    else {\n                        for (var j = 0, len = idx.length; j < len; j++) {\n                            this._add && this._add(idx[j]);\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    function initIndexMap(arr, map, keyArr, keyGetter) {\n        for (var i = 0; i < arr.length; i++) {\n            var key = keyGetter(arr[i], i);\n            var existence = map[key];\n            if (existence == null) {\n                keyArr.push(key);\n                map[key] = i;\n            }\n            else {\n                if (!existence.length) {\n                    map[key] = existence = [existence];\n                }\n                existence.push(i);\n            }\n        }\n    }\n\n    module.exports = DataDiffer;\n\n\n/***/ }),\n/* 400 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Complete dimensions by data (guess dimension).\n */\n\n\n    var zrUtil = __webpack_require__(317);\n\n    /**\n     * Complete the dimensions array guessed from the data structure.\n     * @param  {Array.<string>} dimensions      Necessary dimensions, like ['x', 'y']\n     * @param  {Array} data                     Data list. [[1, 2, 3], [2, 3, 4]]\n     * @param  {Array.<string>} [defaultNames]    Default names to fill not necessary dimensions, like ['value']\n     * @param  {string} [extraPrefix]             Prefix of name when filling the left dimensions.\n     * @return {Array.<string>}\n     */\n    function completeDimensions(dimensions, data, defaultNames, extraPrefix) {\n        if (!data) {\n            return dimensions;\n        }\n\n        var value0 = retrieveValue(data[0]);\n        var dimSize = zrUtil.isArray(value0) && value0.length || 1;\n\n        defaultNames = defaultNames || [];\n        extraPrefix = extraPrefix || 'extra';\n        for (var i = 0; i < dimSize; i++) {\n            if (!dimensions[i]) {\n                var name = defaultNames[i] || (extraPrefix + (i - defaultNames.length));\n                dimensions[i] = guessOrdinal(data, i)\n                    ? {type: 'ordinal', name: name}\n                    : name;\n            }\n        }\n\n        return dimensions;\n    }\n\n    // The rule should not be complex, otherwise user might not\n    // be able to known where the data is wrong.\n    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n        for (var i = 0, len = data.length; i < len; i++) {\n            var value = retrieveValue(data[i]);\n\n            if (!zrUtil.isArray(value)) {\n                return false;\n            }\n\n            var value = value[dimIndex];\n            if (value != null && isFinite(value)) {\n                return false;\n            }\n            else if (zrUtil.isString(value) && value !== '-') {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    function retrieveValue(o) {\n        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;\n    }\n\n    module.exports = completeDimensions;\n\n\n\n/***/ }),\n/* 401 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = function (seriesType, ecModel) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var coordSys = seriesModel.coordinateSystem;\n\n            if (coordSys) {\n                var dims = coordSys.dimensions;\n\n                if (coordSys.type === 'singleAxis') {\n                    data.each(dims[0], function (x, idx) {\n                        // Also {Array.<number>}, not undefined to avoid if...else... statement\n                        data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\n                    });\n                }\n                else {\n                    data.each(dims, function (x, y, idx) {\n                        // Also {Array.<number>}, not undefined to avoid if...else... statement\n                        data.setItemLayout(\n                            idx, (isNaN(x) || isNaN(y)) ? [NaN, NaN] : coordSys.dataToPoint([x, y])\n                        );\n                    }, true);\n                }\n            }\n        });\n    };\n\n\n/***/ }),\n/* 402 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var graphic = __webpack_require__(319);\n    var zrUtil = __webpack_require__(317);\n    var PI = Math.PI;\n    /**\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [opts]\n     * @param {string} [opts.text]\n     * @param {string} [opts.color]\n     * @param {string} [opts.textColor]\n     * @return {module:zrender/Element}\n     */\n    module.exports = function (api, opts) {\n        opts = opts || {};\n        zrUtil.defaults(opts, {\n            text: 'loading',\n            color: '#c23531',\n            textColor: '#000',\n            maskColor: 'rgba(255, 255, 255, 0.8)',\n            zlevel: 0\n        });\n        var mask = new graphic.Rect({\n            style: {\n                fill: opts.maskColor\n            },\n            zlevel: opts.zlevel,\n            z: 10000\n        });\n        var arc = new graphic.Arc({\n            shape: {\n                startAngle: -PI / 2,\n                endAngle: -PI / 2 + 0.1,\n                r: 10\n            },\n            style: {\n                stroke: opts.color,\n                lineCap: 'round',\n                lineWidth: 5\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n        var labelRect = new graphic.Rect({\n            style: {\n                fill: 'none',\n                text: opts.text,\n                textPosition: 'right',\n                textDistance: 10,\n                textFill: opts.textColor\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n\n        arc.animateShape(true)\n            .when(1000, {\n                endAngle: PI * 3 / 2\n            })\n            .start('circularInOut');\n        arc.animateShape(true)\n            .when(1000, {\n                startAngle: PI * 3 / 2\n            })\n            .delay(300)\n            .start('circularInOut');\n\n        var group = new graphic.Group();\n        group.add(arc);\n        group.add(labelRect);\n        group.add(mask);\n        // Inject resize\n        group.resize = function () {\n            var cx = api.getWidth() / 2;\n            var cy = api.getHeight() / 2;\n            arc.setShape({\n                cx: cx,\n                cy: cy\n            });\n            var r = arc.shape.r;\n            labelRect.setShape({\n                x: cx - r,\n                y: cy - r,\n                width: r * 2,\n                height: r * 2\n            });\n\n            mask.setShape({\n                x: 0,\n                y: 0,\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n        };\n        group.resize();\n        return group;\n    };\n\n\n/***/ }),\n/* 403 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n\n\n    /**\n     * Caution: If the mechanism should be changed some day, these cases\n     * should be considered:\n     *\n     * (1) In `merge option` mode, if using the same option to call `setOption`\n     * many times, the result should be the same (try our best to ensure that).\n     * (2) In `merge option` mode, if a component has no id/name specified, it\n     * will be merged by index, and the result sequence of the components is\n     * consistent to the original sequence.\n     * (3) `reset` feature (in toolbox). Find detailed info in comments about\n     * `mergeOption` in module:echarts/model/OptionManager.\n     */\n\n    var zrUtil = __webpack_require__(317);\n    var modelUtil = __webpack_require__(325);\n    var Model = __webpack_require__(327);\n    var each = zrUtil.each;\n    var filter = zrUtil.filter;\n    var map = zrUtil.map;\n    var isArray = zrUtil.isArray;\n    var indexOf = zrUtil.indexOf;\n    var isObject = zrUtil.isObject;\n\n    var ComponentModel = __webpack_require__(329);\n\n    var globalDefault = __webpack_require__(405);\n\n    var OPTION_INNER_KEY = '\\0_ec_inner';\n\n    /**\n     * @alias module:echarts/model/Global\n     *\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {Object} theme\n     */\n    var GlobalModel = Model.extend({\n\n        constructor: GlobalModel,\n\n        init: function (option, parentModel, theme, optionManager) {\n            theme = theme || {};\n\n            this.option = null; // Mark as not initialized.\n\n            /**\n             * @type {module:echarts/model/Model}\n             * @private\n             */\n            this._theme = new Model(theme);\n\n            /**\n             * @type {module:echarts/model/OptionManager}\n             */\n            this._optionManager = optionManager;\n        },\n\n        setOption: function (option, optionPreprocessorFuncs) {\n            zrUtil.assert(\n                !(OPTION_INNER_KEY in option),\n                'please use chart.getOption()'\n            );\n\n            this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n            this.resetOption();\n        },\n\n        /**\n         * @param {string} type null/undefined: reset all.\n         *                      'recreate': force recreate all.\n         *                      'timeline': only reset timeline option\n         *                      'media': only reset media query option\n         * @return {boolean} Whether option changed.\n         */\n        resetOption: function (type) {\n            var optionChanged = false;\n            var optionManager = this._optionManager;\n\n            if (!type || type === 'recreate') {\n                var baseOption = optionManager.mountOption(type === 'recreate');\n\n                if (!this.option || type === 'recreate') {\n                    initBase.call(this, baseOption);\n                }\n                else {\n                    this.restoreData();\n                    this.mergeOption(baseOption);\n                }\n                optionChanged = true;\n            }\n\n            if (type === 'timeline' || type === 'media') {\n                this.restoreData();\n            }\n\n            if (!type || type === 'recreate' || type === 'timeline') {\n                var timelineOption = optionManager.getTimelineOption(this);\n                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n            }\n\n            if (!type || type === 'recreate' || type === 'media') {\n                var mediaOptions = optionManager.getMediaOption(this, this._api);\n                if (mediaOptions.length) {\n                    each(mediaOptions, function (mediaOption) {\n                        this.mergeOption(mediaOption, optionChanged = true);\n                    }, this);\n                }\n            }\n\n            return optionChanged;\n        },\n\n        /**\n         * @protected\n         */\n        mergeOption: function (newOption) {\n            var option = this.option;\n            var componentsMap = this._componentsMap;\n            var newCptTypes = [];\n\n            // 如果不存在对应的 component model 则直接 merge\n            each(newOption, function (componentOption, mainType) {\n                if (componentOption == null) {\n                    return;\n                }\n\n                if (!ComponentModel.hasClass(mainType)) {\n                    option[mainType] = option[mainType] == null\n                        ? zrUtil.clone(componentOption)\n                        : zrUtil.merge(option[mainType], componentOption, true);\n                }\n                else {\n                    newCptTypes.push(mainType);\n                }\n            });\n\n            // FIXME OPTION 同步是否要改回原来的\n            ComponentModel.topologicalTravel(\n                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this\n            );\n\n            this._seriesIndices = this._seriesIndices || [];\n\n            function visitComponent(mainType, dependencies) {\n                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n\n                var mapResult = modelUtil.mappingToExists(\n                    componentsMap[mainType], newCptOptionList\n                );\n\n                modelUtil.makeIdAndName(mapResult);\n\n                // Set mainType and complete subType.\n                each(mapResult, function (item, index) {\n                    var opt = item.option;\n                    if (isObject(opt)) {\n                        item.keyInfo.mainType = mainType;\n                        item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n                    }\n                });\n\n                var dependentModels = getComponentsByTypes(\n                    componentsMap, dependencies\n                );\n\n                option[mainType] = [];\n                componentsMap[mainType] = [];\n\n                each(mapResult, function (resultItem, index) {\n                    var componentModel = resultItem.exist;\n                    var newCptOption = resultItem.option;\n\n                    zrUtil.assert(\n                        isObject(newCptOption) || componentModel,\n                        'Empty component definition'\n                    );\n\n                    // Consider where is no new option and should be merged using {},\n                    // see removeEdgeAndAdd in topologicalTravel and\n                    // ComponentModel.getAllClassMainTypes.\n                    if (!newCptOption) {\n                        componentModel.mergeOption({}, this);\n                        componentModel.optionUpdated({}, false);\n                    }\n                    else {\n                        var ComponentModelClass = ComponentModel.getClass(\n                            mainType, resultItem.keyInfo.subType, true\n                        );\n\n                        if (componentModel && componentModel instanceof ComponentModelClass) {\n                            componentModel.name = resultItem.keyInfo.name;\n                            componentModel.mergeOption(newCptOption, this);\n                            componentModel.optionUpdated(newCptOption, false);\n                        }\n                        else {\n                            // PENDING Global as parent ?\n                            var extraOpt = zrUtil.extend(\n                                {\n                                    dependentModels: dependentModels,\n                                    componentIndex: index\n                                },\n                                resultItem.keyInfo\n                            );\n                            componentModel = new ComponentModelClass(\n                                newCptOption, this, this, extraOpt\n                            );\n                            zrUtil.extend(componentModel, extraOpt);\n                            componentModel.init(newCptOption, this, this, extraOpt);\n                            // Call optionUpdated after init.\n                            // newCptOption has been used as componentModel.option\n                            // and may be merged with theme and default, so pass null\n                            // to avoid confusion.\n                            componentModel.optionUpdated(null, true);\n                        }\n                    }\n\n                    componentsMap[mainType][index] = componentModel;\n                    option[mainType][index] = componentModel.option;\n                }, this);\n\n                // Backup series for filtering.\n                if (mainType === 'series') {\n                    this._seriesIndices = createSeriesIndices(componentsMap.series);\n                }\n            }\n        },\n\n        /**\n         * Get option for output (cloned option and inner info removed)\n         * @public\n         * @return {Object}\n         */\n        getOption: function () {\n            var option = zrUtil.clone(this.option);\n\n            each(option, function (opts, mainType) {\n                if (ComponentModel.hasClass(mainType)) {\n                    var opts = modelUtil.normalizeToArray(opts);\n                    for (var i = opts.length - 1; i >= 0; i--) {\n                        // Remove options with inner id.\n                        if (modelUtil.isIdInner(opts[i])) {\n                            opts.splice(i, 1);\n                        }\n                    }\n                    option[mainType] = opts;\n                }\n            });\n\n            delete option[OPTION_INNER_KEY];\n\n            return option;\n        },\n\n        /**\n         * @return {module:echarts/model/Model}\n         */\n        getTheme: function () {\n            return this._theme;\n        },\n\n        /**\n         * @param {string} mainType\n         * @param {number} [idx=0]\n         * @return {module:echarts/model/Component}\n         */\n        getComponent: function (mainType, idx) {\n            var list = this._componentsMap[mainType];\n            if (list) {\n                return list[idx || 0];\n            }\n        },\n\n        /**\n         * If none of index and id and name used, return all components with mainType.\n         * @param {Object} condition\n         * @param {string} condition.mainType\n         * @param {string} [condition.subType] If ignore, only query by mainType\n         * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        queryComponents: function (condition) {\n            var mainType = condition.mainType;\n            if (!mainType) {\n                return [];\n            }\n\n            var index = condition.index;\n            var id = condition.id;\n            var name = condition.name;\n\n            var cpts = this._componentsMap[mainType];\n\n            if (!cpts || !cpts.length) {\n                return [];\n            }\n\n            var result;\n\n            if (index != null) {\n                if (!isArray(index)) {\n                    index = [index];\n                }\n                result = filter(map(index, function (idx) {\n                    return cpts[idx];\n                }), function (val) {\n                    return !!val;\n                });\n            }\n            else if (id != null) {\n                var isIdArray = isArray(id);\n                result = filter(cpts, function (cpt) {\n                    return (isIdArray && indexOf(id, cpt.id) >= 0)\n                        || (!isIdArray && cpt.id === id);\n                });\n            }\n            else if (name != null) {\n                var isNameArray = isArray(name);\n                result = filter(cpts, function (cpt) {\n                    return (isNameArray && indexOf(name, cpt.name) >= 0)\n                        || (!isNameArray && cpt.name === name);\n                });\n            }\n            else {\n                // Return all components with mainType\n                result = cpts;\n            }\n\n            return filterBySubType(result, condition);\n        },\n\n        /**\n         * The interface is different from queryComponents,\n         * which is convenient for inner usage.\n         *\n         * @usage\n         * var result = findComponents(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series'},\n         *     function (model, index) {...}\n         * );\n         * // result like [component0, componnet1, ...]\n         *\n         * @param {Object} condition\n         * @param {string} condition.mainType Mandatory.\n         * @param {string} [condition.subType] Optional.\n         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n         *        where xxx is mainType.\n         *        If query attribute is null/undefined or has no index/id/name,\n         *        do not filtering by query conditions, which is convenient for\n         *        no-payload situations or when target of action is global.\n         * @param {Function} [condition.filter] parameter: component, return boolean.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        findComponents: function (condition) {\n            var query = condition.query;\n            var mainType = condition.mainType;\n\n            var queryCond = getQueryCond(query);\n            var result = queryCond\n                ? this.queryComponents(queryCond)\n                : this._componentsMap[mainType];\n\n            return doFilter(filterBySubType(result, condition));\n\n            function getQueryCond(q) {\n                var indexAttr = mainType + 'Index';\n                var idAttr = mainType + 'Id';\n                var nameAttr = mainType + 'Name';\n                return q && (\n                        q[indexAttr] != null\n                        || q[idAttr] != null\n                        || q[nameAttr] != null\n                    )\n                    ? {\n                        mainType: mainType,\n                        // subType will be filtered finally.\n                        index: q[indexAttr],\n                        id: q[idAttr],\n                        name: q[nameAttr]\n                    }\n                    : null;\n            }\n\n            function doFilter(res) {\n                return condition.filter\n                     ? filter(res, condition.filter)\n                     : res;\n            }\n        },\n\n        /**\n         * @usage\n         * eachComponent('legend', function (legendModel, index) {\n         *     ...\n         * });\n         * eachComponent(function (componentType, model, index) {\n         *     // componentType does not include subType\n         *     // (componentType is 'xxx' but not 'xxx.aa')\n         * });\n         * eachComponent(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n         *     function (model, index) {...}\n         * );\n         * eachComponent(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n         *     function (model, index) {...}\n         * );\n         *\n         * @param {string|Object=} mainType When mainType is object, the definition\n         *                                  is the same as the method 'findComponents'.\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachComponent: function (mainType, cb, context) {\n            var componentsMap = this._componentsMap;\n\n            if (typeof mainType === 'function') {\n                context = cb;\n                cb = mainType;\n                each(componentsMap, function (components, componentType) {\n                    each(components, function (component, index) {\n                        cb.call(context, componentType, component, index);\n                    });\n                });\n            }\n            else if (zrUtil.isString(mainType)) {\n                each(componentsMap[mainType], cb, context);\n            }\n            else if (isObject(mainType)) {\n                var queryResult = this.findComponents(mainType);\n                each(queryResult, cb, context);\n            }\n        },\n\n        /**\n         * @param {string} name\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByName: function (name) {\n            var series = this._componentsMap.series;\n            return filter(series, function (oneSeries) {\n                return oneSeries.name === name;\n            });\n        },\n\n        /**\n         * @param {number} seriesIndex\n         * @return {module:echarts/model/Series}\n         */\n        getSeriesByIndex: function (seriesIndex) {\n            return this._componentsMap.series[seriesIndex];\n        },\n\n        /**\n         * @param {string} subType\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByType: function (subType) {\n            var series = this._componentsMap.series;\n            return filter(series, function (oneSeries) {\n                return oneSeries.subType === subType;\n            });\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeries: function () {\n            return this._componentsMap.series.slice();\n        },\n\n        /**\n         * After filtering, series may be different\n         * frome raw series.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.series[rawSeriesIndex];\n                cb.call(context, series, rawSeriesIndex);\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeries: function (cb, context) {\n            each(this._componentsMap.series, cb, context);\n        },\n\n        /**\n         * After filtering, series may be different.\n         * frome raw series.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeriesByType: function (subType, cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.series[rawSeriesIndex];\n                if (series.subType === subType) {\n                    cb.call(context, series, rawSeriesIndex);\n                }\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered of given type.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeriesByType: function (subType, cb, context) {\n            return each(this.getSeriesByType(subType), cb, context);\n        },\n\n        /**\n         * @param {module:echarts/model/Series} seriesModel\n         */\n        isSeriesFiltered: function (seriesModel) {\n            assertSeriesInitialized(this);\n            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n        },\n\n        /**\n         * @param {Function} cb\n         * @param {*} context\n         */\n        filterSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            var filteredSeries = filter(\n                this._componentsMap.series, cb, context\n            );\n            this._seriesIndices = createSeriesIndices(filteredSeries);\n        },\n\n        restoreData: function () {\n            var componentsMap = this._componentsMap;\n\n            this._seriesIndices = createSeriesIndices(componentsMap.series);\n\n            var componentTypes = [];\n            each(componentsMap, function (components, componentType) {\n                componentTypes.push(componentType);\n            });\n\n            ComponentModel.topologicalTravel(\n                componentTypes,\n                ComponentModel.getAllClassMainTypes(),\n                function (componentType, dependencies) {\n                    each(componentsMap[componentType], function (component) {\n                        component.restoreData();\n                    });\n                }\n            );\n        }\n\n    });\n\n    /**\n     * @inner\n     */\n    function mergeTheme(option, theme) {\n        zrUtil.each(theme, function (themeItem, name) {\n            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n            if (!ComponentModel.hasClass(name)) {\n                if (typeof themeItem === 'object') {\n                    option[name] = !option[name]\n                        ? zrUtil.clone(themeItem)\n                        : zrUtil.merge(option[name], themeItem, false);\n                }\n                else {\n                    if (option[name] == null) {\n                        option[name] = themeItem;\n                    }\n                }\n            }\n        });\n    }\n\n    function initBase(baseOption) {\n        baseOption = baseOption;\n\n        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n        this.option = {};\n        this.option[OPTION_INNER_KEY] = 1;\n\n        /**\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * Mapping between filtered series list and raw series list.\n         * key: filtered series indices, value: raw series indices.\n         * @type {Array.<nubmer>}\n         * @private\n         */\n        this._seriesIndices = null;\n\n        mergeTheme(baseOption, this._theme.option);\n\n        // TODO Needs clone when merging to the unexisted property\n        zrUtil.merge(baseOption, globalDefault, false);\n\n        this.mergeOption(baseOption);\n    }\n\n    /**\n     * @inner\n     * @param {Array.<string>|string} types model types\n     * @return {Object} key: {string} type, value: {Array.<Object>} models\n     */\n    function getComponentsByTypes(componentsMap, types) {\n        if (!zrUtil.isArray(types)) {\n            types = types ? [types] : [];\n        }\n\n        var ret = {};\n        each(types, function (type) {\n            ret[type] = (componentsMap[type] || []).slice();\n        });\n\n        return ret;\n    }\n\n    /**\n     * @inner\n     */\n    function determineSubType(mainType, newCptOption, existComponent) {\n        var subType = newCptOption.type\n            ? newCptOption.type\n            : existComponent\n            ? existComponent.subType\n            // Use determineSubType only when there is no existComponent.\n            : ComponentModel.determineSubType(mainType, newCptOption);\n\n        // tooltip, markline, markpoint may always has no subType\n        return subType;\n    }\n\n    /**\n     * @inner\n     */\n    function createSeriesIndices(seriesModels) {\n        return map(seriesModels, function (series) {\n            return series.componentIndex;\n        }) || [];\n    }\n\n    /**\n     * @inner\n     */\n    function filterBySubType(components, condition) {\n        // Using hasOwnProperty for restrict. Consider\n        // subType is undefined in user payload.\n        return condition.hasOwnProperty('subType')\n            ? filter(components, function (cpt) {\n                return cpt.subType === condition.subType;\n            })\n            : components;\n    }\n\n    /**\n     * @inner\n     */\n    function assertSeriesInitialized(ecModel) {\n        // Components that use _seriesIndices should depends on series component,\n        // which make sure that their initialization is after series.\n        if (__DEV__) {\n            if (!ecModel._seriesIndices) {\n                throw new Error('Series has not been initialized yet.');\n            }\n        }\n    }\n\n    zrUtil.mixin(GlobalModel, __webpack_require__(356));\n\n    module.exports = GlobalModel;\n\n\n/***/ }),\n/* 404 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\n\n\n\n    var zrUtil = __webpack_require__(317);\n    var modelUtil = __webpack_require__(325);\n    var ComponentModel = __webpack_require__(329);\n    var each = zrUtil.each;\n    var clone = zrUtil.clone;\n    var map = zrUtil.map;\n    var merge = zrUtil.merge;\n\n    var QUERY_REG = /^(min|max)?(.+)$/;\n\n    /**\n     * TERM EXPLANATIONS:\n     *\n     * [option]:\n     *\n     *     An object that contains definitions of components. For example:\n     *     var option = {\n     *         title: {...},\n     *         legend: {...},\n     *         visualMap: {...},\n     *         series: [\n     *             {data: [...]},\n     *             {data: [...]},\n     *             ...\n     *         ]\n     *     };\n     *\n     * [rawOption]:\n     *\n     *     An object input to echarts.setOption. 'rawOption' may be an\n     *     'option', or may be an object contains multi-options. For example:\n     *     var option = {\n     *         baseOption: {\n     *             title: {...},\n     *             legend: {...},\n     *             series: [\n     *                 {data: [...]},\n     *                 {data: [...]},\n     *                 ...\n     *             ]\n     *         },\n     *         timeline: {...},\n     *         options: [\n     *             {title: {...}, series: {data: [...]}},\n     *             {title: {...}, series: {data: [...]}},\n     *             ...\n     *         ],\n     *         media: [\n     *             {\n     *                 query: {maxWidth: 320},\n     *                 option: {series: {x: 20}, visualMap: {show: false}}\n     *             },\n     *             {\n     *                 query: {minWidth: 320, maxWidth: 720},\n     *                 option: {series: {x: 500}, visualMap: {show: true}}\n     *             },\n     *             {\n     *                 option: {series: {x: 1200}, visualMap: {show: true}}\n     *             }\n     *         ]\n     *     };\n     *\n     * @alias module:echarts/model/OptionManager\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function OptionManager(api) {\n\n        /**\n         * @private\n         * @type {module:echarts/ExtensionAPI}\n         */\n        this._api = api;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._timelineOptions = [];\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._mediaList = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._mediaDefault;\n\n        /**\n         * -1, means default.\n         * empty means no media.\n         * @private\n         * @type {Array.<number>}\n         */\n        this._currentMediaIndices = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._optionBackup;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._newBaseOption;\n    }\n\n    // timeline.notMerge is not supported in ec3. Firstly there is rearly\n    // case that notMerge is needed. Secondly supporting 'notMerge' requires\n    // rawOption cloned and backuped when timeline changed, which does no\n    // good to performance. What's more, that both timeline and setOption\n    // method supply 'notMerge' brings complex and some problems.\n    // Consider this case:\n    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n    OptionManager.prototype = {\n\n        constructor: OptionManager,\n\n        /**\n         * @public\n         * @param {Object} rawOption Raw option.\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Array.<Function>} optionPreprocessorFuncs\n         * @return {Object} Init option\n         */\n        setOption: function (rawOption, optionPreprocessorFuncs) {\n            rawOption = clone(rawOption, true);\n\n            // FIXME\n            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n            var oldOptionBackup = this._optionBackup;\n            var newParsedOption = parseRawOption.call(\n                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup\n            );\n            this._newBaseOption = newParsedOption.baseOption;\n\n            // For setOption at second time (using merge mode);\n            if (oldOptionBackup) {\n                // Only baseOption can be merged.\n                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);\n\n                // For simplicity, timeline options and media options do not support merge,\n                // that is, if you `setOption` twice and both has timeline options, the latter\n                // timeline opitons will not be merged to the formers, but just substitude them.\n                if (newParsedOption.timelineOptions.length) {\n                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n                }\n                if (newParsedOption.mediaList.length) {\n                    oldOptionBackup.mediaList = newParsedOption.mediaList;\n                }\n                if (newParsedOption.mediaDefault) {\n                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n                }\n            }\n            else {\n                this._optionBackup = newParsedOption;\n            }\n        },\n\n        /**\n         * @param {boolean} isRecreate\n         * @return {Object}\n         */\n        mountOption: function (isRecreate) {\n            var optionBackup = this._optionBackup;\n\n            // TODO\n            // 如果没有reset功能则不clone。\n\n            this._timelineOptions = map(optionBackup.timelineOptions, clone);\n            this._mediaList = map(optionBackup.mediaList, clone);\n            this._mediaDefault = clone(optionBackup.mediaDefault);\n            this._currentMediaIndices = [];\n\n            return clone(isRecreate\n                // this._optionBackup.baseOption, which is created at the first `setOption`\n                // called, and is merged into every new option by inner method `mergeOption`\n                // each time `setOption` called, can be only used in `isRecreate`, because\n                // its reliability is under suspicion. In other cases option merge is\n                // performed by `model.mergeOption`.\n                ? optionBackup.baseOption : this._newBaseOption\n            );\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object}\n         */\n        getTimelineOption: function (ecModel) {\n            var option;\n            var timelineOptions = this._timelineOptions;\n\n            if (timelineOptions.length) {\n                // getTimelineOption can only be called after ecModel inited,\n                // so we can get currentIndex from timelineModel.\n                var timelineModel = ecModel.getComponent('timeline');\n                if (timelineModel) {\n                    option = clone(\n                        timelineOptions[timelineModel.getCurrentIndex()],\n                        true\n                    );\n                }\n            }\n\n            return option;\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Array.<Object>}\n         */\n        getMediaOption: function (ecModel) {\n            var ecWidth = this._api.getWidth();\n            var ecHeight = this._api.getHeight();\n            var mediaList = this._mediaList;\n            var mediaDefault = this._mediaDefault;\n            var indices = [];\n            var result = [];\n\n            // No media defined.\n            if (!mediaList.length && !mediaDefault) {\n                return result;\n            }\n\n            // Multi media may be applied, the latter defined media has higher priority.\n            for (var i = 0, len = mediaList.length; i < len; i++) {\n                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n                    indices.push(i);\n                }\n            }\n\n            // FIXME\n            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n            if (!indices.length && mediaDefault) {\n                indices = [-1];\n            }\n\n            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n                result = map(indices, function (index) {\n                    return clone(\n                        index === -1 ? mediaDefault.option : mediaList[index].option\n                    );\n                });\n            }\n            // Otherwise return nothing.\n\n            this._currentMediaIndices = indices;\n\n            return result;\n        }\n    };\n\n    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n        var timelineOptions = [];\n        var mediaList = [];\n        var mediaDefault;\n        var baseOption;\n\n        // Compatible with ec2.\n        var timelineOpt = rawOption.timeline;\n\n        if (rawOption.baseOption) {\n            baseOption = rawOption.baseOption;\n        }\n\n        // For timeline\n        if (timelineOpt || rawOption.options) {\n            baseOption = baseOption || {};\n            timelineOptions = (rawOption.options || []).slice();\n        }\n\n        // For media query\n        if (rawOption.media) {\n            baseOption = baseOption || {};\n            var media = rawOption.media;\n            each(media, function (singleMedia) {\n                if (singleMedia && singleMedia.option) {\n                    if (singleMedia.query) {\n                        mediaList.push(singleMedia);\n                    }\n                    else if (!mediaDefault) {\n                        // Use the first media default.\n                        mediaDefault = singleMedia;\n                    }\n                }\n            });\n        }\n\n        // For normal option\n        if (!baseOption) {\n            baseOption = rawOption;\n        }\n\n        // Set timelineOpt to baseOption in ec3,\n        // which is convenient for merge option.\n        if (!baseOption.timeline) {\n            baseOption.timeline = timelineOpt;\n        }\n\n        // Preprocess.\n        each([baseOption].concat(timelineOptions)\n            .concat(zrUtil.map(mediaList, function (media) {\n                return media.option;\n            })),\n            function (option) {\n                each(optionPreprocessorFuncs, function (preProcess) {\n                    preProcess(option, isNew);\n                });\n            }\n        );\n\n        return {\n            baseOption: baseOption,\n            timelineOptions: timelineOptions,\n            mediaDefault: mediaDefault,\n            mediaList: mediaList\n        };\n    }\n\n    /**\n     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n     * Support: width, height, aspectRatio\n     * Can use max or min as prefix.\n     */\n    function applyMediaQuery(query, ecWidth, ecHeight) {\n        var realMap = {\n            width: ecWidth,\n            height: ecHeight,\n            aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n        };\n\n        var applicatable = true;\n\n        zrUtil.each(query, function (value, attr) {\n            var matched = attr.match(QUERY_REG);\n\n            if (!matched || !matched[1] || !matched[2]) {\n                return;\n            }\n\n            var operator = matched[1];\n            var realAttr = matched[2].toLowerCase();\n\n            if (!compare(realMap[realAttr], value, operator)) {\n                applicatable = false;\n            }\n        });\n\n        return applicatable;\n    }\n\n    function compare(real, expect, operator) {\n        if (operator === 'min') {\n            return real >= expect;\n        }\n        else if (operator === 'max') {\n            return real <= expect;\n        }\n        else { // Equals\n            return real === expect;\n        }\n    }\n\n    function indicesEquals(indices1, indices2) {\n        // indices is always order by asc and has only finite number.\n        return indices1.join(',') === indices2.join(',');\n    }\n\n    /**\n     * Consider case:\n     * `chart.setOption(opt1);`\n     * Then user do some interaction like dataZoom, dataView changing.\n     * `chart.setOption(opt2);`\n     * Then user press 'reset button' in toolbox.\n     *\n     * After doing that all of the interaction effects should be reset, the\n     * chart should be the same as the result of invoke\n     * `chart.setOption(opt1); chart.setOption(opt2);`.\n     *\n     * Although it is not able ensure that\n     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n     * `chart.setOption(merge(opt1, opt2));` exactly,\n     * this might be the only simple way to implement that feature.\n     *\n     * MEMO: We've considered some other approaches:\n     * 1. Each model handle its self restoration but not uniform treatment.\n     *     (Too complex in logic and error-prone)\n     * 2. Use a shadow ecModel. (Performace expensive)\n     */\n    function mergeOption(oldOption, newOption) {\n        newOption = newOption || {};\n\n        each(newOption, function (newCptOpt, mainType) {\n            if (newCptOpt == null) {\n                return;\n            }\n\n            var oldCptOpt = oldOption[mainType];\n\n            if (!ComponentModel.hasClass(mainType)) {\n                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n            }\n            else {\n                newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n\n                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n\n                oldOption[mainType] = map(mapResult, function (item) {\n                    return (item.option && item.exist)\n                        ? merge(item.exist, item.option, true)\n                        : (item.exist || item.option);\n                });\n            }\n        });\n    }\n\n    module.exports = OptionManager;\n\n\n/***/ }),\n/* 405 */\n/***/ (function(module, exports) {\n\n\n    var platform = '';\n    // Navigator not exists in node\n    if (typeof navigator !== 'undefined') {\n        platform = navigator.platform || '';\n    }\n    module.exports = {\n        // 全图默认背景\n        // backgroundColor: 'rgba(0,0,0,0)',\n\n        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n        // 浅色\n        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n        // 深色\n        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\n\n        // 默认需要 Grid 配置项\n        // grid: {},\n        // 主题，主题\n        textStyle: {\n            // color: '#000',\n            // decoration: 'none',\n            // PENDING\n            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n            // fontFamily: 'Arial, Verdana, sans-serif',\n            fontSize: 12,\n            fontStyle: 'normal',\n            fontWeight: 'normal'\n        },\n\n        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n        // Default is source-over\n        blendMode: null,\n\n        animation: true,\n        animationDuration: 1000,\n        animationDurationUpdate: 300,\n        animationEasing: 'exponentialOut',\n        animationEasingUpdate: 'cubicOut',\n\n        animationThreshold: 2000,\n        // Configuration for progressive/incremental rendering\n        progressiveThreshold: 3000,\n        progressive: 400,\n\n        // Threshold of if use single hover layer to optimize.\n        // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n        // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n        // which is unexpected.\n        // see example <echarts/test/heatmap-large.html>.\n        hoverLayerThreshold: 3000\n    };\n\n\n/***/ }),\n/* 406 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    module.exports = {\n        getAreaStyle: __webpack_require__(341)(\n            [\n                ['fill', 'color'],\n                ['shadowBlur'],\n                ['shadowOffsetX'],\n                ['shadowOffsetY'],\n                ['opacity'],\n                ['shadowColor']\n            ]\n        )\n    };\n\n\n/***/ }),\n/* 407 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = {\n        getBoxLayoutParams: function () {\n            return {\n                left: this.get('left'),\n                top: this.get('top'),\n                right: this.get('right'),\n                bottom: this.get('bottom'),\n                width: this.get('width'),\n                height: this.get('height')\n            };\n        }\n    };\n\n\n/***/ }),\n/* 408 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var getItemStyle = __webpack_require__(341)(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor'],\n            ['textPosition'],\n            ['textAlign']\n        ]\n    );\n    module.exports = {\n        getItemStyle: function (excludes) {\n            var style = getItemStyle.call(this, excludes);\n            var lineDash = this.getBorderLineDash();\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getBorderLineDash: function () {\n            var lineType = this.get('borderType');\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\n        }\n    };\n\n\n/***/ }),\n/* 409 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var getLineStyle = __webpack_require__(341)(\n        [\n            ['lineWidth', 'width'],\n            ['stroke', 'color'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getLineStyle: function (excludes) {\n            var style = getLineStyle.call(this, excludes);\n            var lineDash = this.getLineDash(style.lineWidth);\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getLineDash: function (lineWidth) {\n            if (lineWidth == null) {\n                lineWidth = 1;\n            }\n            var lineType = this.get('type');\n            var dotSize = Math.max(lineWidth, 2);\n            var dashSize = lineWidth * 4;\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize]);\n        }\n    };\n\n\n/***/ }),\n/* 410 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var textContain = __webpack_require__(334);\n\n    function getShallow(model, path) {\n        return model && model.getShallow(path);\n    }\n\n    module.exports = {\n        /**\n         * Get color property or get color from option.textStyle.color\n         * @return {string}\n         */\n        getTextColor: function () {\n            var ecModel = this.ecModel;\n            return this.getShallow('color')\n                || (ecModel && ecModel.get('textStyle.color'));\n        },\n\n        /**\n         * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n         * @return {string}\n         */\n        getFont: function () {\n            var ecModel = this.ecModel;\n            var gTextStyleModel = ecModel && ecModel.getModel('textStyle');\n            return [\n                // FIXME in node-canvas fontWeight is before fontStyle\n                this.getShallow('fontStyle') || getShallow(gTextStyleModel, 'fontStyle'),\n                this.getShallow('fontWeight') || getShallow(gTextStyleModel, 'fontWeight'),\n                (this.getShallow('fontSize') || getShallow(gTextStyleModel, 'fontSize') || 12) + 'px',\n                this.getShallow('fontFamily') || getShallow(gTextStyleModel, 'fontFamily') || 'sans-serif'\n            ].join(' ');\n        },\n\n        getTextRect: function (text) {\n            return textContain.getBoundingRect(\n                text,\n                this.getFont(),\n                this.getShallow('align'),\n                this.getShallow('baseline')\n            );\n        },\n\n        truncateText: function (text, containerWidth, ellipsis, options) {\n            return textContain.truncateText(\n                text, containerWidth, this.getFont(), ellipsis, options\n            );\n        }\n    };\n\n\n/***/ }),\n/* 411 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// Compatitable with 2.0\n\n\n    var zrUtil = __webpack_require__(317);\n    var compatStyle = __webpack_require__(412);\n\n    function get(opt, path) {\n        path = path.split(',');\n        var obj = opt;\n        for (var i = 0; i < path.length; i++) {\n            obj = obj && obj[path[i]];\n            if (obj == null) {\n                break;\n            }\n        }\n        return obj;\n    }\n\n    function set(opt, path, val, overwrite) {\n        path = path.split(',');\n        var obj = opt;\n        var key;\n        for (var i = 0; i < path.length - 1; i++) {\n            key = path[i];\n            if (obj[key] == null) {\n                obj[key] = {};\n            }\n            obj = obj[key];\n        }\n        if (overwrite || obj[path[i]] == null) {\n            obj[path[i]] = val;\n        }\n    }\n\n    function compatLayoutProperties(option) {\n        each(LAYOUT_PROPERTIES, function (prop) {\n            if (prop[0] in option && !(prop[1] in option)) {\n                option[prop[1]] = option[prop[0]];\n            }\n        });\n    }\n\n    var LAYOUT_PROPERTIES = [\n        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']\n    ];\n\n    var COMPATITABLE_COMPONENTS = [\n        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'\n    ];\n\n    var COMPATITABLE_SERIES = [\n        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',\n        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',\n        'pie', 'radar', 'sankey', 'scatter', 'treemap'\n    ];\n\n    var each = zrUtil.each;\n\n    module.exports = function (option) {\n        each(option.series, function (seriesOpt) {\n            if (!zrUtil.isObject(seriesOpt)) {\n                return;\n            }\n\n            var seriesType = seriesOpt.type;\n\n            compatStyle(seriesOpt);\n\n            if (seriesType === 'pie' || seriesType === 'gauge') {\n                if (seriesOpt.clockWise != null) {\n                    seriesOpt.clockwise = seriesOpt.clockWise;\n                }\n            }\n            if (seriesType === 'gauge') {\n                var pointerColor = get(seriesOpt, 'pointer.color');\n                pointerColor != null\n                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n            }\n\n            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n                    compatLayoutProperties(seriesOpt);\n                    break;\n                }\n            }\n        });\n\n        // dataRange has changed to visualMap\n        if (option.dataRange) {\n            option.visualMap = option.dataRange;\n        }\n\n        each(COMPATITABLE_COMPONENTS, function (componentName) {\n            var options = option[componentName];\n            if (options) {\n                if (!zrUtil.isArray(options)) {\n                    options = [options];\n                }\n                each(options, function (option) {\n                    compatLayoutProperties(option);\n                });\n            }\n        });\n    };\n\n\n/***/ }),\n/* 412 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(317);\n\n    var POSSIBLE_STYLES = [\n        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',\n        'chordStyle', 'label', 'labelLine'\n    ];\n\n    function compatItemStyle(opt) {\n        var itemStyleOpt = opt && opt.itemStyle;\n        if (itemStyleOpt) {\n            zrUtil.each(POSSIBLE_STYLES, function (styleName) {\n                var normalItemStyleOpt = itemStyleOpt.normal;\n                var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n                if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].normal) {\n                        opt[styleName].normal = normalItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n                    }\n                    normalItemStyleOpt[styleName] = null;\n                }\n                if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].emphasis) {\n                        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n                    }\n                    emphasisItemStyleOpt[styleName] = null;\n                }\n            });\n        }\n    }\n\n    module.exports = function (seriesOpt) {\n        if (!seriesOpt) {\n            return;\n        }\n        compatItemStyle(seriesOpt);\n        compatItemStyle(seriesOpt.markPoint);\n        compatItemStyle(seriesOpt.markLine);\n        var data = seriesOpt.data;\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                compatItemStyle(data[i]);\n            }\n            // mark point data\n            var markPoint = seriesOpt.markPoint;\n            if (markPoint && markPoint.data) {\n                var mpData = markPoint.data;\n                for (var i = 0; i < mpData.length; i++) {\n                    compatItemStyle(mpData[i]);\n                }\n            }\n            // mark line data\n            var markLine = seriesOpt.markLine;\n            if (markLine && markLine.data) {\n                var mlData = markLine.data;\n                for (var i = 0; i < mlData.length; i++) {\n                    if (zrUtil.isArray(mlData[i])) {\n                        compatItemStyle(mlData[i][0]);\n                        compatItemStyle(mlData[i][1]);\n                    }\n                    else {\n                        compatItemStyle(mlData[i]);\n                    }\n                }\n            }\n        }\n    };\n\n\n/***/ }),\n/* 413 */\n/***/ (function(module, exports) {\n\n\n    var samplers = {\n        average: function (frame) {\n            var sum = 0;\n            var count = 0;\n            for (var i = 0; i < frame.length; i++) {\n                if (!isNaN(frame[i])) {\n                    sum += frame[i];\n                    count++;\n                }\n            }\n            // Return NaN if count is 0\n            return count === 0 ? NaN : sum / count;\n        },\n        sum: function (frame) {\n            var sum = 0;\n            for (var i = 0; i < frame.length; i++) {\n                // Ignore NaN\n                sum += frame[i] || 0;\n            }\n            return sum;\n        },\n        max: function (frame) {\n            var max = -Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] > max && (max = frame[i]);\n            }\n            return max;\n        },\n        min: function (frame) {\n            var min = Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] < min && (min = frame[i]);\n            }\n            return min;\n        },\n        // TODO\n        // Median\n        nearest: function (frame) {\n            return frame[0];\n        }\n    };\n\n    var indexSampler = function (frame, value) {\n        return Math.round(frame.length / 2);\n    };\n    module.exports = function (seriesType, ecModel, api) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var sampling = seriesModel.get('sampling');\n            var coordSys = seriesModel.coordinateSystem;\n            // Only cartesian2d support down sampling\n            if (coordSys.type === 'cartesian2d' && sampling) {\n                var baseAxis = coordSys.getBaseAxis();\n                var valueAxis = coordSys.getOtherAxis(baseAxis);\n                var extent = baseAxis.getExtent();\n                // Coordinste system has been resized\n                var size = extent[1] - extent[0];\n                var rate = Math.round(data.count() / size);\n                if (rate > 1) {\n                    var sampler;\n                    if (typeof sampling === 'string') {\n                        sampler = samplers[sampling];\n                    }\n                    else if (typeof sampling === 'function') {\n                        sampler = sampling;\n                    }\n                    if (sampler) {\n                        data = data.downSample(\n                            valueAxis.dim, 1 / rate, sampler, indexSampler\n                        );\n                        seriesModel.setData(data);\n                    }\n                }\n            }\n        }, this);\n    };\n\n\n/***/ }),\n/* 414 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n\n\n    var zrUtil = __webpack_require__(317);\n    var Scale = __webpack_require__(337);\n    var numberUtil = __webpack_require__(320);\n\n    // Use some method of IntervalScale\n    var IntervalScale = __webpack_require__(344);\n\n    var scaleProto = Scale.prototype;\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n    var mathPow = Math.pow;\n\n    var mathLog = Math.log;\n\n    var LogScale = Scale.extend({\n\n        type: 'log',\n\n        base: 10,\n\n        $constructor: function () {\n            Scale.apply(this, arguments);\n            this._originalScale = new IntervalScale();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            var originalScale = this._originalScale;\n            var extent = this._extent;\n            var originalExtent = originalScale.getExtent();\n\n            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n                var powVal = numberUtil.round(mathPow(this.base, val));\n\n                // Fix #4158\n                powVal = (val === extent[0] && originalScale.__fixMin)\n                    ? fixRoundingError(powVal, originalExtent[0])\n                    : powVal;\n                powVal = (val === extent[1] && originalScale.__fixMax)\n                    ? fixRoundingError(powVal, originalExtent[1])\n                    : powVal;\n\n                return powVal;\n            }, this);\n        },\n\n        /**\n         * @param {number} val\n         * @return {string}\n         */\n        getLabel: intervalScaleProto.getLabel,\n\n        /**\n         * @param  {number} val\n         * @return {number}\n         */\n        scale: function (val) {\n            val = scaleProto.scale.call(this, val);\n            return mathPow(this.base, val);\n        },\n\n        /**\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var base = this.base;\n            start = mathLog(start) / mathLog(base);\n            end = mathLog(end) / mathLog(base);\n            intervalScaleProto.setExtent.call(this, start, end);\n        },\n\n        /**\n         * @return {number} end\n         */\n        getExtent: function () {\n            var base = this.base;\n            var extent = scaleProto.getExtent.call(this);\n            extent[0] = mathPow(base, extent[0]);\n            extent[1] = mathPow(base, extent[1]);\n\n            // Fix #4158\n            var originalScale = this._originalScale;\n            var originalExtent = originalScale.getExtent();\n            originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n            originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n\n            return extent;\n        },\n\n        /**\n         * @param  {Array.<number>} extent\n         */\n        unionExtent: function (extent) {\n            this._originalScale.unionExtent(extent);\n\n            var base = this.base;\n            extent[0] = mathLog(extent[0]) / mathLog(base);\n            extent[1] = mathLog(extent[1]) / mathLog(base);\n            scaleProto.unionExtent.call(this, extent);\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, true, function (val) {\n                return val > 0;\n            }));\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         * @param  {number} [approxTickNum = 10] Given approx tick number\n         */\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (span === Infinity || span <= 0) {\n                return;\n            }\n\n            var interval = numberUtil.quantity(span);\n            var err = approxTickNum / span * interval;\n\n            // Filter ticks to get closer to the desired count.\n            if (err <= 0.5) {\n                interval *= 10;\n            }\n\n            // Interval should be integer\n            while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n                interval *= 10;\n            }\n\n            var niceExtent = [\n                numberUtil.round(mathCeil(extent[0] / interval) * interval),\n                numberUtil.round(mathFloor(extent[1] / interval) * interval)\n            ];\n\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {number} [approxTickNum = 10] Given approx tick number\n         * @param {boolean} [fixMin=false]\n         * @param {boolean} [fixMax=false]\n         */\n        niceExtent: function (splitNumber, fixMin, fixMax) {\n            intervalScaleProto.niceExtent.call(this, splitNumber, fixMin, fixMax);\n\n            var originalScale = this._originalScale;\n            originalScale.__fixMin = fixMin;\n            originalScale.__fixMax = fixMax;\n        }\n\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        LogScale.prototype[methodName] = function (val) {\n            val = mathLog(val) / mathLog(this.base);\n            return scaleProto[methodName].call(this, val);\n        };\n    });\n\n    LogScale.create = function () {\n        return new LogScale();\n    };\n\n    function fixRoundingError(val, originalVal) {\n        return roundingErrorFix(val, getPrecisionSafe(originalVal));\n    }\n\n    module.exports = LogScale;\n\n\n/***/ }),\n/* 415 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n\n// FIXME only one data\n\n\n    var zrUtil = __webpack_require__(317);\n    var Scale = __webpack_require__(337);\n\n    var scaleProto = Scale.prototype;\n\n    var OrdinalScale = Scale.extend({\n\n        type: 'ordinal',\n\n        init: function (data, extent) {\n            this._data = data;\n            this._extent = extent || [0, data.length - 1];\n        },\n\n        parse: function (val) {\n            return typeof val === 'string'\n                ? zrUtil.indexOf(this._data, val)\n                // val might be float.\n                : Math.round(val);\n        },\n\n        contain: function (rank) {\n            rank = this.parse(rank);\n            return scaleProto.contain.call(this, rank)\n                && this._data[rank] != null;\n        },\n\n        /**\n         * Normalize given rank or name to linear [0, 1]\n         * @param {number|string} [val]\n         * @return {number}\n         */\n        normalize: function (val) {\n            return scaleProto.normalize.call(this, this.parse(val));\n        },\n\n        scale: function (val) {\n            return Math.round(scaleProto.scale.call(this, val));\n        },\n\n        /**\n         * @return {Array}\n         */\n        getTicks: function () {\n            var ticks = [];\n            var extent = this._extent;\n            var rank = extent[0];\n\n            while (rank <= extent[1]) {\n                ticks.push(rank);\n                rank++;\n            }\n\n            return ticks;\n        },\n\n        /**\n         * Get item on rank n\n         * @param {number} n\n         * @return {string}\n         */\n        getLabel: function (n) {\n            return this._data[n];\n        },\n\n        /**\n         * @return {number}\n         */\n        count: function () {\n            return this._extent[1] - this._extent[0] + 1;\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, false));\n        },\n\n        niceTicks: zrUtil.noop,\n        niceExtent: zrUtil.noop\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    OrdinalScale.create = function () {\n        return new OrdinalScale();\n    };\n\n    module.exports = OrdinalScale;\n\n\n/***/ }),\n/* 416 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Interval scale\n * @module echarts/coord/scale/Time\n */\n\n\n\n    var zrUtil = __webpack_require__(317);\n    var numberUtil = __webpack_require__(320);\n    var formatUtil = __webpack_require__(324);\n\n    var IntervalScale = __webpack_require__(344);\n\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var mathCeil = Math.ceil;\n    var mathFloor = Math.floor;\n    var ONE_SECOND = 1000;\n    var ONE_MINUTE = ONE_SECOND * 60;\n    var ONE_HOUR = ONE_MINUTE * 60;\n    var ONE_DAY = ONE_HOUR * 24;\n\n    // FIXME 公用？\n    var bisect = function (a, x, lo, hi) {\n        while (lo < hi) {\n            var mid = lo + hi >>> 1;\n            if (a[mid][2] < x) {\n                lo = mid + 1;\n            }\n            else {\n                hi  = mid;\n            }\n        }\n        return lo;\n    };\n\n    /**\n     * @alias module:echarts/coord/scale/Time\n     * @constructor\n     */\n    var TimeScale = IntervalScale.extend({\n        type: 'time',\n\n        // Overwrite\n        getLabel: function (val) {\n            var stepLvl = this._stepLvl;\n\n            var date = new Date(val);\n\n            return formatUtil.formatTime(stepLvl[0], date);\n        },\n\n        // Overwrite\n        niceExtent: function (approxTickNum, fixMin, fixMax) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                // Expand extent\n                extent[0] -= ONE_DAY;\n                extent[1] += ONE_DAY;\n            }\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (extent[1] === -Infinity && extent[0] === Infinity) {\n                var d = new Date();\n                extent[1] = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                extent[0] = extent[1] - ONE_DAY;\n            }\n\n            this.niceTicks(approxTickNum);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!fixMin) {\n                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!fixMax) {\n                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n            }\n        },\n\n        // Overwrite\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            var approxInterval = span / approxTickNum;\n            var scaleLevelsLen = scaleLevels.length;\n            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n\n            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n            var interval = level[2];\n            // Same with interval scale if span is much larger than 1 year\n            if (level[0] === 'year') {\n                var yearSpan = span / interval;\n\n                // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n                // var niceYearSpan = numberUtil.nice(yearSpan, false);\n                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n\n                interval *= yearStep;\n            }\n\n            var niceExtent = [\n                mathCeil(extent[0] / interval) * interval,\n                mathFloor(extent[1] / interval) * interval\n            ];\n\n            this._stepLvl = level;\n            // Interval will be used in getTicks\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        parse: function (val) {\n            // val might be float.\n            return +numberUtil.parseDate(val);\n        }\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        TimeScale.prototype[methodName] = function (val) {\n            return intervalScaleProto[methodName].call(this, this.parse(val));\n        };\n    });\n\n    // Steps from d3\n    var scaleLevels = [\n        // Format       step    interval\n        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s\n        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s\n        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s\n        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s\n        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s\n        ['hh:mm\\nMM-dd',1,      ONE_MINUTE],          // 1m\n        ['hh:mm\\nMM-dd',5,      ONE_MINUTE * 5],      // 5m\n        ['hh:mm\\nMM-dd',10,     ONE_MINUTE * 10],     // 10m\n        ['hh:mm\\nMM-dd',15,     ONE_MINUTE * 15],     // 15m\n        ['hh:mm\\nMM-dd',30,     ONE_MINUTE * 30],     // 30m\n        ['hh:mm\\nMM-dd',1,      ONE_HOUR],        // 1h\n        ['hh:mm\\nMM-dd',2,      ONE_HOUR * 2],    // 2h\n        ['hh:mm\\nMM-dd',6,      ONE_HOUR * 6],    // 6h\n        ['hh:mm\\nMM-dd',12,     ONE_HOUR * 12],   // 12h\n        ['MM-dd\\nyyyy', 1,      ONE_DAY],   // 1d\n        ['week',        7,      ONE_DAY * 7],        // 7d\n        ['month',       1,      ONE_DAY * 31],       // 1M\n        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M\n        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M\n        ['year',        1,      ONE_DAY * 380]       // 1Y\n    ];\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    TimeScale.create = function () {\n        return new TimeScale();\n    };\n\n    module.exports = TimeScale;\n\n\n/***/ }),\n/* 417 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var Gradient = __webpack_require__(348);\n    module.exports = function (ecModel) {\n        function encodeColor(seriesModel) {\n            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n            var data = seriesModel.getData();\n            var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color\n\n            // FIXME Set color function or use the platte color\n            data.setVisual('color', color);\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof color === 'function' && !(color instanceof Gradient)) {\n                    data.each(function (idx) {\n                        data.setItemVisual(\n                            idx, 'color', color(seriesModel.getDataParams(idx))\n                        );\n                    });\n                }\n\n                // itemStyle in each data item\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var color = itemModel.get(colorAccessPath, true);\n                    if (color != null) {\n                        data.setItemVisual(idx, 'color', color);\n                    }\n                });\n            }\n        }\n        ecModel.eachRawSeries(encodeColor);\n    };\n\n\n/***/ }),\n/* 418 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = function (seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\n\n        // Encoding visual for all series include which is filtered for legend drawing\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n\n            var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n            var symbolSize = seriesModel.get('symbolSize');\n\n            data.setVisual({\n                legendSymbol: legendSymbol || symbolType,\n                symbol: symbolType,\n                symbolSize: symbolSize\n            });\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof symbolSize === 'function') {\n                    data.each(function (idx) {\n                        var rawValue = seriesModel.getRawValue(idx);\n                        // FIXME\n                        var params = seriesModel.getDataParams(idx);\n                        data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n                    });\n                }\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var itemSymbolType = itemModel.getShallow('symbol', true);\n                    var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n                    // If has item symbol\n                    if (itemSymbolType != null) {\n                        data.setItemVisual(idx, 'symbol', itemSymbolType);\n                    }\n                    if (itemSymbolSize != null) {\n                        // PENDING Transform symbolSize ?\n                        data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n                    }\n                });\n            }\n        });\n    };\n\n\n/***/ }),\n/* 419 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\n\n\n    var util = __webpack_require__(317);\n    var Draggable = __webpack_require__(453);\n\n    var Eventful = __webpack_require__(333);\n\n    function makeEventPacket(eveType, target, event) {\n        return {\n            type: eveType,\n            event: event,\n            target: target,\n            cancelBubble: false,\n            offsetX: event.zrX,\n            offsetY: event.zrY,\n            gestureEvent: event.gestureEvent,\n            pinchX: event.pinchX,\n            pinchY: event.pinchY,\n            pinchScale: event.pinchScale,\n            wheelDelta: event.zrDelta,\n            zrByTouch: event.zrByTouch\n        };\n    }\n\n    function EmptyProxy () {}\n    EmptyProxy.prototype.dispose = function () {};\n\n    var handlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n    /**\n     * @alias module:zrender/Handler\n     * @constructor\n     * @extends module:zrender/mixin/Eventful\n     * @param {module:zrender/Storage} storage Storage instance.\n     * @param {module:zrender/Painter} painter Painter instance.\n     * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n     * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n     */\n    var Handler = function(storage, painter, proxy, painterRoot) {\n        Eventful.call(this);\n\n        this.storage = storage;\n\n        this.painter = painter;\n\n        this.painterRoot = painterRoot;\n\n        proxy = proxy || new EmptyProxy();\n\n        /**\n         * Proxy of event. can be Dom, WebGLSurface, etc.\n         */\n        this.proxy = proxy;\n\n        // Attach handler\n        proxy.handler = this;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._hovered;\n\n        /**\n         * @private\n         * @type {Date}\n         */\n        this._lastTouchMoment;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastX;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastY;\n\n\n        Draggable.call(this);\n\n        util.each(handlerNames, function (name) {\n            proxy.on && proxy.on(name, this[name], this);\n        }, this);\n    };\n\n    Handler.prototype = {\n\n        constructor: Handler,\n\n        mousemove: function (event) {\n            var x = event.zrX;\n            var y = event.zrY;\n\n            var hovered = this.findHover(x, y, null);\n            var lastHovered = this._hovered;\n            var proxy = this.proxy;\n\n            this._hovered = hovered;\n\n            proxy.setCursor && proxy.setCursor(hovered ? hovered.cursor : 'default');\n\n            // Mouse out on previous hovered element\n            if (lastHovered && hovered !== lastHovered && lastHovered.__zr) {\n                this.dispatchToElement(lastHovered, 'mouseout', event);\n            }\n\n            // Mouse moving on one element\n            this.dispatchToElement(hovered, 'mousemove', event);\n\n            // Mouse over on a new element\n            if (hovered && hovered !== lastHovered) {\n                this.dispatchToElement(hovered, 'mouseover', event);\n            }\n        },\n\n        mouseout: function (event) {\n            this.dispatchToElement(this._hovered, 'mouseout', event);\n\n            // There might be some doms created by upper layer application\n            // at the same level of painter.getViewportRoot() (e.g., tooltip\n            // dom created by echarts), where 'globalout' event should not\n            // be triggered when mouse enters these doms. (But 'mouseout'\n            // should be triggered at the original hovered element as usual).\n            var element = event.toElement || event.relatedTarget;\n            var innerDom;\n            do {\n                element = element && element.parentNode;\n            }\n            while (element && element.nodeType != 9 && !(\n                innerDom = element === this.painterRoot\n            ));\n\n            !innerDom && this.trigger('globalout', {event: event});\n        },\n\n        /**\n         * Resize\n         */\n        resize: function (event) {\n            this._hovered = null;\n        },\n\n        /**\n         * Dispatch event\n         * @param {string} eventName\n         * @param {event=} eventArgs\n         */\n        dispatch: function (eventName, eventArgs) {\n            var handler = this[eventName];\n            handler && handler.call(this, eventArgs);\n        },\n\n        /**\n         * Dispose\n         */\n        dispose: function () {\n\n            this.proxy.dispose();\n\n            this.storage =\n            this.proxy =\n            this.painter = null;\n        },\n\n        /**\n         * 设置默认的cursor style\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(cursorStyle);\n        },\n\n        /**\n         * 事件分发代理\n         *\n         * @private\n         * @param {Object} targetEl 目标图形元素\n         * @param {string} eventName 事件名称\n         * @param {Object} event 事件对象\n         */\n        dispatchToElement: function (targetEl, eventName, event) {\n            var eventHandler = 'on' + eventName;\n            var eventPacket = makeEventPacket(eventName, targetEl, event);\n\n            var el = targetEl;\n\n            while (el) {\n                el[eventHandler]\n                    && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n\n                el.trigger(eventName, eventPacket);\n\n                el = el.parent;\n\n                if (eventPacket.cancelBubble) {\n                    break;\n                }\n            }\n\n            if (!eventPacket.cancelBubble) {\n                // 冒泡到顶级 zrender 对象\n                this.trigger(eventName, eventPacket);\n                // 分发事件到用户自定义层\n                // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n                this.painter && this.painter.eachOtherLayer(function (layer) {\n                    if (typeof(layer[eventHandler]) == 'function') {\n                        layer[eventHandler].call(layer, eventPacket);\n                    }\n                    if (layer.trigger) {\n                        layer.trigger(eventName, eventPacket);\n                    }\n                });\n            }\n        },\n\n        /**\n         * @private\n         * @param {number} x\n         * @param {number} y\n         * @param {module:zrender/graphic/Displayable} exclude\n         * @method\n         */\n        findHover: function(x, y, exclude) {\n            var list = this.storage.getDisplayList();\n            for (var i = list.length - 1; i >= 0 ; i--) {\n                if (!list[i].silent\n                 && list[i] !== exclude\n                 // getDisplayList may include ignored item in VML mode\n                 && !list[i].ignore\n                 && isHover(list[i], x, y)) {\n                    return list[i];\n                }\n            }\n        }\n    };\n\n    // Common handlers\n    util.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        Handler.prototype[name] = function (event) {\n            // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n            var hovered = this.findHover(event.zrX, event.zrY, null);\n\n            if (name === 'mousedown') {\n                this._downel = hovered;\n                // In case click triggered before mouseup\n                this._upel = hovered;\n            }\n            else if (name === 'mosueup') {\n                this._upel = hovered;\n            }\n            else if (name === 'click') {\n                if (this._downel !== this._upel) {\n                    return;\n                }\n            }\n\n            this.dispatchToElement(hovered, name, event);\n        };\n    });\n\n    function isHover(displayable, x, y) {\n        if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n            var el = displayable;\n            while (el) {\n                // If ancestor is silent or clipped by ancestor\n                if (el.silent || (el.clipPath && !el.clipPath.contain(x, y)))  {\n                    return false;\n                }\n                el = el.parent;\n            }\n            return true;\n        }\n\n        return false;\n    }\n\n    util.mixin(Handler, Eventful);\n    util.mixin(Handler, Draggable);\n\n    module.exports = Handler;\n\n\n/***/ }),\n/* 420 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var util = __webpack_require__(317);\n    var config = __webpack_require__(338);\n    var Style = __webpack_require__(367);\n    var Pattern = __webpack_require__(366);\n\n    function returnFalse() {\n        return false;\n    }\n\n    /**\n     * 创建dom\n     *\n     * @inner\n     * @param {string} id dom id 待用\n     * @param {string} type dom type，such as canvas, div etc.\n     * @param {Painter} painter painter instance\n     * @param {number} number\n     */\n    function createDom(id, type, painter, dpr) {\n        var newDom = document.createElement(type);\n        var width = painter.getWidth();\n        var height = painter.getHeight();\n\n        var newDomStyle = newDom.style;\n        // 没append呢，请原谅我这样写，清晰~\n        newDomStyle.position = 'absolute';\n        newDomStyle.left = 0;\n        newDomStyle.top = 0;\n        newDomStyle.width = width + 'px';\n        newDomStyle.height = height + 'px';\n        newDom.width = width * dpr;\n        newDom.height = height * dpr;\n\n        // id不作为索引用，避免可能造成的重名，定义为私有属性\n        newDom.setAttribute('data-zr-dom-id', id);\n        return newDom;\n    }\n\n    /**\n     * @alias module:zrender/Layer\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @param {string} id\n     * @param {module:zrender/Painter} painter\n     * @param {number} [dpr]\n     */\n    var Layer = function(id, painter, dpr) {\n        var dom;\n        dpr = dpr || config.devicePixelRatio;\n        if (typeof id === 'string') {\n            dom = createDom(id, 'canvas', painter, dpr);\n        }\n        // Not using isDom because in node it will return false\n        else if (util.isObject(id)) {\n            dom = id;\n            id = dom.id;\n        }\n        this.id = id;\n        this.dom = dom;\n\n        var domStyle = dom.style;\n        if (domStyle) { // Not in node\n            dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n            domStyle['-webkit-user-select'] = 'none';\n            domStyle['user-select'] = 'none';\n            domStyle['-webkit-touch-callout'] = 'none';\n            domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n            domStyle['padding'] = 0;\n            domStyle['margin'] = 0;\n            domStyle['border-width'] = 0;\n        }\n\n        this.domBack = null;\n        this.ctxBack = null;\n\n        this.painter = painter;\n\n        this.config = null;\n\n        // Configs\n        /**\n         * 每次清空画布的颜色\n         * @type {string}\n         * @default 0\n         */\n        this.clearColor = 0;\n        /**\n         * 是否开启动态模糊\n         * @type {boolean}\n         * @default false\n         */\n        this.motionBlur = false;\n        /**\n         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         * @type {number}\n         * @default 0.7\n         */\n        this.lastFrameAlpha = 0.7;\n\n        /**\n         * Layer dpr\n         * @type {number}\n         */\n        this.dpr = dpr;\n    };\n\n    Layer.prototype = {\n\n        constructor: Layer,\n\n        elCount: 0,\n\n        __dirty: true,\n\n        initContext: function () {\n            this.ctx = this.dom.getContext('2d');\n\n            this.ctx.dpr = this.dpr;\n        },\n\n        createBackBuffer: function () {\n            var dpr = this.dpr;\n\n            this.domBack = createDom('back-' + this.id, 'canvas', this.painter, dpr);\n            this.ctxBack = this.domBack.getContext('2d');\n\n            if (dpr != 1) {\n                this.ctxBack.scale(dpr, dpr);\n            }\n        },\n\n        /**\n         * @param  {number} width\n         * @param  {number} height\n         */\n        resize: function (width, height) {\n            var dpr = this.dpr;\n\n            var dom = this.dom;\n            var domStyle = dom.style;\n            var domBack = this.domBack;\n\n            domStyle.width = width + 'px';\n            domStyle.height = height + 'px';\n\n            dom.width = width * dpr;\n            dom.height = height * dpr;\n\n            if (domBack) {\n                domBack.width = width * dpr;\n                domBack.height = height * dpr;\n\n                if (dpr != 1) {\n                    this.ctxBack.scale(dpr, dpr);\n                }\n            }\n        },\n\n        /**\n         * 清空该层画布\n         * @param {boolean} clearAll Clear all with out motion blur\n         */\n        clear: function (clearAll) {\n            var dom = this.dom;\n            var ctx = this.ctx;\n            var width = dom.width;\n            var height = dom.height;\n\n            var clearColor = this.clearColor;\n            var haveMotionBLur = this.motionBlur && !clearAll;\n            var lastFrameAlpha = this.lastFrameAlpha;\n\n            var dpr = this.dpr;\n\n            if (haveMotionBLur) {\n                if (!this.domBack) {\n                    this.createBackBuffer();\n                }\n\n                this.ctxBack.globalCompositeOperation = 'copy';\n                this.ctxBack.drawImage(\n                    dom, 0, 0,\n                    width / dpr,\n                    height / dpr\n                );\n            }\n\n            ctx.clearRect(0, 0, width, height);\n            if (clearColor) {\n                var clearColorGradientOrPattern;\n                // Gradient\n                if (clearColor.colorStops) {\n                    // Cache canvas gradient\n                    clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n                        x: 0,\n                        y: 0,\n                        width: width,\n                        height: height\n                    });\n\n                    clearColor.__canvasGradient = clearColorGradientOrPattern;\n                }\n                // Pattern\n                else if (clearColor.image) {\n                    clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n                }\n                ctx.save();\n                ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n                ctx.fillRect(0, 0, width, height);\n                ctx.restore();\n            }\n\n            if (haveMotionBLur) {\n                var domBack = this.domBack;\n                ctx.save();\n                ctx.globalAlpha = lastFrameAlpha;\n                ctx.drawImage(domBack, 0, 0, width, height);\n                ctx.restore();\n            }\n        }\n    };\n\n    module.exports = Layer;\n\n\n/***/ }),\n/* 421 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n \n\n    var config = __webpack_require__(338);\n    var util = __webpack_require__(317);\n    var log = __webpack_require__(364);\n    var BoundingRect = __webpack_require__(326);\n    var timsort = __webpack_require__(346);\n\n    var Layer = __webpack_require__(420);\n\n    var requestAnimationFrame = __webpack_require__(361);\n\n    // PENDIGN\n    // Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n    //\n    // Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\n    var MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\n    function parseInt10(val) {\n        return parseInt(val, 10);\n    }\n\n    function isLayerValid(layer) {\n        if (!layer) {\n            return false;\n        }\n\n        if (layer.isBuildin) {\n            return true;\n        }\n\n        if (typeof(layer.resize) !== 'function'\n            || typeof(layer.refresh) !== 'function'\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    function preProcessLayer(layer) {\n        layer.__unusedCount++;\n    }\n\n    function postProcessLayer(layer) {\n        if (layer.__unusedCount == 1) {\n            layer.clear();\n        }\n    }\n\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var viewRect = new BoundingRect(0, 0, 0, 0);\n    function isDisplayableCulled(el, width, height) {\n        tmpRect.copy(el.getBoundingRect());\n        if (el.transform) {\n            tmpRect.applyTransform(el.transform);\n        }\n        viewRect.width = width;\n        viewRect.height = height;\n        return !tmpRect.intersect(viewRect);\n    }\n\n    function isClipPathChanged(clipPaths, prevClipPaths) {\n        if (clipPaths == prevClipPaths) { // Can both be null or undefined\n            return false;\n        }\n\n        if (!clipPaths || !prevClipPaths || (clipPaths.length !== prevClipPaths.length)) {\n            return true;\n        }\n        for (var i = 0; i < clipPaths.length; i++) {\n            if (clipPaths[i] !== prevClipPaths[i]) {\n                return true;\n            }\n        }\n    }\n\n    function doClip(clipPaths, ctx) {\n        for (var i = 0; i < clipPaths.length; i++) {\n            var clipPath = clipPaths[i];\n            var path = clipPath.path;\n\n            clipPath.setTransform(ctx);\n            path.beginPath(ctx);\n            clipPath.buildPath(path, clipPath.shape);\n            ctx.clip();\n            // Transform back\n            clipPath.restoreTransform(ctx);\n        }\n    }\n\n    function createRoot(width, height) {\n        var domRoot = document.createElement('div');\n\n        // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n        domRoot.style.cssText = [\n            'position:relative',\n            'overflow:hidden',\n            'width:' + width + 'px',\n            'height:' + height + 'px',\n            'padding:0',\n            'margin:0',\n            'border-width:0'\n        ].join(';') + ';';\n\n        return domRoot;\n    }\n\n    /**\n     * @alias module:zrender/Painter\n     * @constructor\n     * @param {HTMLElement} root 绘图容器\n     * @param {module:zrender/Storage} storage\n     * @param {Ojbect} opts\n     */\n    var Painter = function (root, storage, opts) {\n        // In node environment using node-canvas\n        var singleCanvas = !root.nodeName // In node ?\n            || root.nodeName.toUpperCase() === 'CANVAS';\n\n        this._opts = opts = util.extend({}, opts || {});\n\n        /**\n         * @type {number}\n         */\n        this.dpr = opts.devicePixelRatio || config.devicePixelRatio;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._singleCanvas = singleCanvas;\n        /**\n         * 绘图容器\n         * @type {HTMLElement}\n         */\n        this.root = root;\n\n        var rootStyle = root.style;\n\n        if (rootStyle) {\n            rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n            rootStyle['-webkit-user-select'] =\n            rootStyle['user-select'] =\n            rootStyle['-webkit-touch-callout'] = 'none';\n\n            root.innerHTML = '';\n        }\n\n        /**\n         * @type {module:zrender/Storage}\n         */\n        this.storage = storage;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        var zlevelList = this._zlevelList = [];\n\n        /**\n         * @type {Object.<string, module:zrender/Layer>}\n         * @private\n         */\n        var layers = this._layers = {};\n\n        /**\n         * @type {Object.<string, Object>}\n         * @type {private}\n         */\n        this._layerConfig = {};\n\n        if (!singleCanvas) {\n            this._width = this._getSize(0);\n            this._height = this._getSize(1);\n\n            var domRoot = this._domRoot = createRoot(\n                this._width, this._height\n            );\n            root.appendChild(domRoot);\n        }\n        else {\n            // Use canvas width and height directly\n            var width = root.width;\n            var height = root.height;\n            this._width = width;\n            this._height = height;\n\n            // Create layer if only one given canvas\n            // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n            var mainLayer = new Layer(root, this, 1);\n            mainLayer.initContext();\n            // FIXME Use canvas width and height\n            // mainLayer.resize(width, height);\n            layers[0] = mainLayer;\n            zlevelList.push(0);\n\n            this._domRoot = root;\n        }\n\n        this.pathToImage = this._createPathToImage();\n\n        // Layers for progressive rendering\n        this._progressiveLayers = [];\n\n        /**\n         * @type {module:zrender/Layer}\n         * @private\n         */\n        this._hoverlayer;\n\n        this._hoverElements = [];\n    };\n\n    Painter.prototype = {\n\n        constructor: Painter,\n\n        /**\n         * If painter use a single canvas\n         * @return {boolean}\n         */\n        isSingleCanvas: function () {\n            return this._singleCanvas;\n        },\n        /**\n         * @return {HTMLDivElement}\n         */\n        getViewportRoot: function () {\n            return this._domRoot;\n        },\n\n        /**\n         * 刷新\n         * @param {boolean} [paintAll=false] 强制绘制所有displayable\n         */\n        refresh: function (paintAll) {\n\n            var list = this.storage.getDisplayList(true);\n\n            var zlevelList = this._zlevelList;\n\n            this._paintList(list, paintAll);\n\n            // Paint custum layers\n            for (var i = 0; i < zlevelList.length; i++) {\n                var z = zlevelList[i];\n                var layer = this._layers[z];\n                if (!layer.isBuildin && layer.refresh) {\n                    layer.refresh();\n                }\n            }\n\n            this.refreshHover();\n\n            if (this._progressiveLayers.length) {\n                this._startProgessive();\n            }\n\n            return this;\n        },\n\n        addHover: function (el, hoverStyle) {\n            if (el.__hoverMir) {\n                return;\n            }\n            var elMirror = new el.constructor({\n                style: el.style,\n                shape: el.shape\n            });\n            elMirror.__from = el;\n            el.__hoverMir = elMirror;\n            elMirror.setStyle(hoverStyle);\n            this._hoverElements.push(elMirror);\n        },\n\n        removeHover: function (el) {\n            var elMirror = el.__hoverMir;\n            var hoverElements = this._hoverElements;\n            var idx = util.indexOf(hoverElements, elMirror);\n            if (idx >= 0) {\n                hoverElements.splice(idx, 1);\n            }\n            el.__hoverMir = null;\n        },\n\n        clearHover: function (el) {\n            var hoverElements = this._hoverElements;\n            for (var i = 0; i < hoverElements.length; i++) {\n                var from = hoverElements[i].__from;\n                if (from) {\n                    from.__hoverMir = null;\n                }\n            }\n            hoverElements.length = 0;\n        },\n\n        refreshHover: function () {\n            var hoverElements = this._hoverElements;\n            var len = hoverElements.length;\n            var hoverLayer = this._hoverlayer;\n            hoverLayer && hoverLayer.clear();\n\n            if (!len) {\n                return;\n            }\n            timsort(hoverElements, this.storage.displayableSortFunc);\n\n            // Use a extream large zlevel\n            // FIXME?\n            if (!hoverLayer) {\n                hoverLayer = this._hoverlayer = this.getLayer(1e5);\n            }\n\n            var scope = {};\n            hoverLayer.ctx.save();\n            for (var i = 0; i < len;) {\n                var el = hoverElements[i];\n                var originalEl = el.__from;\n                // Original el is removed\n                // PENDING\n                if (!(originalEl && originalEl.__zr)) {\n                    hoverElements.splice(i, 1);\n                    originalEl.__hoverMir = null;\n                    len--;\n                    continue;\n                }\n                i++;\n\n                // Use transform\n                // FIXME style and shape ?\n                if (!originalEl.invisible) {\n                    el.transform = originalEl.transform;\n                    el.invTransform = originalEl.invTransform;\n                    el.__clipPaths = originalEl.__clipPaths;\n                    // el.\n                    this._doPaintEl(el, hoverLayer, true, scope);\n                }\n            }\n            hoverLayer.ctx.restore();\n        },\n\n        _startProgessive: function () {\n            var self = this;\n\n            if (!self._furtherProgressive) {\n                return;\n            }\n\n            // Use a token to stop progress steps triggered by\n            // previous zr.refresh calling.\n            var token = self._progressiveToken = +new Date();\n\n            self._progress++;\n            requestAnimationFrame(step);\n\n            function step() {\n                // In case refreshed or disposed\n                if (token === self._progressiveToken && self.storage) {\n\n                    self._doPaintList(self.storage.getDisplayList());\n\n                    if (self._furtherProgressive) {\n                        self._progress++;\n                        requestAnimationFrame(step);\n                    }\n                    else {\n                        self._progressiveToken = -1;\n                    }\n                }\n            }\n        },\n\n        _clearProgressive: function () {\n            this._progressiveToken = -1;\n            this._progress = 0;\n            util.each(this._progressiveLayers, function (layer) {\n                layer.__dirty && layer.clear();\n            });\n        },\n\n        _paintList: function (list, paintAll) {\n\n            if (paintAll == null) {\n                paintAll = false;\n            }\n\n            this._updateLayerStatus(list);\n\n            this._clearProgressive();\n\n            this.eachBuildinLayer(preProcessLayer);\n\n            this._doPaintList(list, paintAll);\n\n            this.eachBuildinLayer(postProcessLayer);\n        },\n\n        _doPaintList: function (list, paintAll) {\n            var currentLayer;\n            var currentZLevel;\n            var ctx;\n\n            // var invTransform = [];\n            var scope;\n\n            var progressiveLayerIdx = 0;\n            var currentProgressiveLayer;\n\n            var width = this._width;\n            var height = this._height;\n            var layerProgress;\n            var frame = this._progress;\n            function flushProgressiveLayer(layer) {\n                var dpr = ctx.dpr || 1;\n                ctx.save();\n                ctx.globalAlpha = 1;\n                ctx.shadowBlur = 0;\n                // Avoid layer don't clear in next progressive frame\n                currentLayer.__dirty = true;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n                ctx.restore();\n            }\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n\n                var elFrame = el.__frame;\n\n                // Flush at current context\n                // PENDING\n                if (elFrame < 0 && currentProgressiveLayer) {\n                    flushProgressiveLayer(currentProgressiveLayer);\n                    currentProgressiveLayer = null;\n                }\n\n                // Change draw layer\n                if (currentZLevel !== elZLevel) {\n                    if (ctx) {\n                        ctx.restore();\n                    }\n\n                    // Reset scope\n                    scope = {};\n\n                    // Only 0 zlevel if only has one canvas\n                    currentZLevel = elZLevel;\n                    currentLayer = this.getLayer(currentZLevel);\n\n                    if (!currentLayer.isBuildin) {\n                        log(\n                            'ZLevel ' + currentZLevel\n                            + ' has been used by unkown layer ' + currentLayer.id\n                        );\n                    }\n\n                    ctx = currentLayer.ctx;\n                    ctx.save();\n\n                    // Reset the count\n                    currentLayer.__unusedCount = 0;\n\n                    if (currentLayer.__dirty || paintAll) {\n                        currentLayer.clear();\n                    }\n                }\n\n                if (!(currentLayer.__dirty || paintAll)) {\n                    continue;\n                }\n\n                if (elFrame >= 0) {\n                    // Progressive layer changed\n                    if (!currentProgressiveLayer) {\n                        currentProgressiveLayer = this._progressiveLayers[\n                            Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)\n                        ];\n\n                        currentProgressiveLayer.ctx.save();\n                        currentProgressiveLayer.renderScope = {};\n\n                        if (currentProgressiveLayer\n                            && (currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress)\n                        ) {\n                            // flushProgressiveLayer(currentProgressiveLayer);\n                            // Quick jump all progressive elements\n                            // All progressive element are not dirty, jump over and flush directly\n                            i = currentProgressiveLayer.__nextIdxNotProg - 1;\n                            // currentProgressiveLayer = null;\n                            continue;\n                        }\n\n                        layerProgress = currentProgressiveLayer.__progress;\n\n                        if (!currentProgressiveLayer.__dirty) {\n                            // Keep rendering\n                            frame = layerProgress;\n                        }\n\n                        currentProgressiveLayer.__progress = frame + 1;\n                    }\n\n                    if (elFrame === frame) {\n                        this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n                    }\n                }\n                else {\n                    this._doPaintEl(el, currentLayer, paintAll, scope);\n                }\n\n                el.__dirty = false;\n            }\n\n            if (currentProgressiveLayer) {\n                flushProgressiveLayer(currentProgressiveLayer);\n            }\n\n            // Restore the lastLayer ctx\n            ctx && ctx.restore();\n            // If still has clipping state\n            // if (scope.prevElClipPaths) {\n            //     ctx.restore();\n            // }\n\n            this._furtherProgressive = false;\n            util.each(this._progressiveLayers, function (layer) {\n                if (layer.__maxProgress >= layer.__progress) {\n                    this._furtherProgressive = true;\n                }\n            }, this);\n        },\n\n        _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n            var ctx = currentLayer.ctx;\n            var m = el.transform;\n            if (\n                (currentLayer.__dirty || forcePaint)\n                // Ignore invisible element\n                && !el.invisible\n                // Ignore transparent element\n                && el.style.opacity !== 0\n                // Ignore scale 0 element, in some environment like node-canvas\n                // Draw a scale 0 element can cause all following draw wrong\n                // And setTransform with scale 0 will cause set back transform failed.\n                && !(m && !m[0] && !m[3])\n                // Ignore culled element\n                && !(el.culling && isDisplayableCulled(el, this._width, this._height))\n            ) {\n\n                var clipPaths = el.__clipPaths;\n\n                // Optimize when clipping on group with several elements\n                if (scope.prevClipLayer !== currentLayer\n                    || isClipPathChanged(clipPaths, scope.prevElClipPaths)\n                ) {\n                    // If has previous clipping state, restore from it\n                    if (scope.prevElClipPaths) {\n                        scope.prevClipLayer.ctx.restore();\n                        scope.prevClipLayer = scope.prevElClipPaths = null;\n\n                        // Reset prevEl since context has been restored\n                        scope.prevEl = null;\n                    }\n                    // New clipping state\n                    if (clipPaths) {\n                        ctx.save();\n                        doClip(clipPaths, ctx);\n                        scope.prevClipLayer = currentLayer;\n                        scope.prevElClipPaths = clipPaths;\n                    }\n                }\n                el.beforeBrush && el.beforeBrush(ctx);\n\n                el.brush(ctx, scope.prevEl || null);\n                scope.prevEl = el;\n\n                el.afterBrush && el.afterBrush(ctx);\n            }\n        },\n\n        /**\n         * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n         * @param {number} zlevel\n         * @return {module:zrender/Layer}\n         */\n        getLayer: function (zlevel) {\n            if (this._singleCanvas) {\n                return this._layers[0];\n            }\n\n            var layer = this._layers[zlevel];\n            if (!layer) {\n                // Create a new layer\n                layer = new Layer('zr_' + zlevel, this, this.dpr);\n                layer.isBuildin = true;\n\n                if (this._layerConfig[zlevel]) {\n                    util.merge(layer, this._layerConfig[zlevel], true);\n                }\n\n                this.insertLayer(zlevel, layer);\n\n                // Context is created after dom inserted to document\n                // Or excanvas will get 0px clientWidth and clientHeight\n                layer.initContext();\n            }\n\n            return layer;\n        },\n\n        insertLayer: function (zlevel, layer) {\n\n            var layersMap = this._layers;\n            var zlevelList = this._zlevelList;\n            var len = zlevelList.length;\n            var prevLayer = null;\n            var i = -1;\n            var domRoot = this._domRoot;\n\n            if (layersMap[zlevel]) {\n                log('ZLevel ' + zlevel + ' has been used already');\n                return;\n            }\n            // Check if is a valid layer\n            if (!isLayerValid(layer)) {\n                log('Layer of zlevel ' + zlevel + ' is not valid');\n                return;\n            }\n\n            if (len > 0 && zlevel > zlevelList[0]) {\n                for (i = 0; i < len - 1; i++) {\n                    if (\n                        zlevelList[i] < zlevel\n                        && zlevelList[i + 1] > zlevel\n                    ) {\n                        break;\n                    }\n                }\n                prevLayer = layersMap[zlevelList[i]];\n            }\n            zlevelList.splice(i + 1, 0, zlevel);\n\n            if (prevLayer) {\n                var prevDom = prevLayer.dom;\n                if (prevDom.nextSibling) {\n                    domRoot.insertBefore(\n                        layer.dom,\n                        prevDom.nextSibling\n                    );\n                }\n                else {\n                    domRoot.appendChild(layer.dom);\n                }\n            }\n            else {\n                if (domRoot.firstChild) {\n                    domRoot.insertBefore(layer.dom, domRoot.firstChild);\n                }\n                else {\n                    domRoot.appendChild(layer.dom);\n                }\n            }\n\n            layersMap[zlevel] = layer;\n        },\n\n        // Iterate each layer\n        eachLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                cb.call(context, this._layers[z], z);\n            }\n        },\n\n        // Iterate each buildin layer\n        eachBuildinLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (layer.isBuildin) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        // Iterate each other layer except buildin layer\n        eachOtherLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (! layer.isBuildin) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        /**\n         * 获取所有已创建的层\n         * @param {Array.<module:zrender/Layer>} [prevLayer]\n         */\n        getLayers: function () {\n            return this._layers;\n        },\n\n        _updateLayerStatus: function (list) {\n\n            var layers = this._layers;\n            var progressiveLayers = this._progressiveLayers;\n\n            var elCountsLastFrame = {};\n            var progressiveElCountsLastFrame = {};\n\n            this.eachBuildinLayer(function (layer, z) {\n                elCountsLastFrame[z] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            util.each(progressiveLayers, function (layer, idx) {\n                progressiveElCountsLastFrame[idx] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            var progressiveLayerCount = 0;\n            var currentProgressiveLayer;\n            var lastProgressiveKey;\n            var frameCount = 0;\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var zlevel = this._singleCanvas ? 0 : el.zlevel;\n                var layer = layers[zlevel];\n                var elProgress = el.progressive;\n                if (layer) {\n                    layer.elCount++;\n                    layer.__dirty = layer.__dirty || el.__dirty;\n                }\n\n                /////// Update progressive\n                if (elProgress >= 0) {\n                    // Fix wrong progressive sequence problem.\n                    if (lastProgressiveKey !== elProgress) {\n                        lastProgressiveKey = elProgress;\n                        frameCount++;\n                    }\n                    var elFrame = el.__frame = frameCount - 1;\n                    if (!currentProgressiveLayer) {\n                        var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n                        currentProgressiveLayer = progressiveLayers[idx];\n                        if (!currentProgressiveLayer) {\n                            currentProgressiveLayer = progressiveLayers[idx] = new Layer(\n                                'progressive', this, this.dpr\n                            );\n                            currentProgressiveLayer.initContext();\n                        }\n                        currentProgressiveLayer.__maxProgress = 0;\n                    }\n                    currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n                    currentProgressiveLayer.elCount++;\n\n                    currentProgressiveLayer.__maxProgress = Math.max(\n                        currentProgressiveLayer.__maxProgress, elFrame\n                    );\n\n                    if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n                        // Should keep rendering this  layer because progressive rendering is not finished yet\n                        layer.__dirty = true;\n                    }\n                }\n                else {\n                    el.__frame = -1;\n\n                    if (currentProgressiveLayer) {\n                        currentProgressiveLayer.__nextIdxNotProg = i;\n                        progressiveLayerCount++;\n                        currentProgressiveLayer = null;\n                    }\n                }\n            }\n\n            if (currentProgressiveLayer) {\n                progressiveLayerCount++;\n                currentProgressiveLayer.__nextIdxNotProg = i;\n            }\n\n            // 层中的元素数量有发生变化\n            this.eachBuildinLayer(function (layer, z) {\n                if (elCountsLastFrame[z] !== layer.elCount) {\n                    layer.__dirty = true;\n                }\n            });\n\n            progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n            util.each(progressiveLayers, function (layer, idx) {\n                if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n                    el.__dirty = true;\n                }\n                if (layer.__dirty) {\n                    layer.__progress = 0;\n                }\n            });\n        },\n\n        /**\n         * 清除hover层外所有内容\n         */\n        clear: function () {\n            this.eachBuildinLayer(this._clearLayer);\n            return this;\n        },\n\n        _clearLayer: function (layer) {\n            layer.clear();\n        },\n\n        /**\n         * 修改指定zlevel的绘制参数\n         *\n         * @param {string} zlevel\n         * @param {Object} config 配置对象\n         * @param {string} [config.clearColor=0] 每次清空画布的颜色\n         * @param {string} [config.motionBlur=false] 是否开启动态模糊\n         * @param {number} [config.lastFrameAlpha=0.7]\n         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         */\n        configLayer: function (zlevel, config) {\n            if (config) {\n                var layerConfig = this._layerConfig;\n                if (!layerConfig[zlevel]) {\n                    layerConfig[zlevel] = config;\n                }\n                else {\n                    util.merge(layerConfig[zlevel], config, true);\n                }\n\n                var layer = this._layers[zlevel];\n\n                if (layer) {\n                    util.merge(layer, layerConfig[zlevel], true);\n                }\n            }\n        },\n\n        /**\n         * 删除指定层\n         * @param {number} zlevel 层所在的zlevel\n         */\n        delLayer: function (zlevel) {\n            var layers = this._layers;\n            var zlevelList = this._zlevelList;\n            var layer = layers[zlevel];\n            if (!layer) {\n                return;\n            }\n            layer.dom.parentNode.removeChild(layer.dom);\n            delete layers[zlevel];\n\n            zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n        },\n\n        /**\n         * 区域大小变化后重绘\n         */\n        resize: function (width, height) {\n            var domRoot = this._domRoot;\n            // FIXME Why ?\n            domRoot.style.display = 'none';\n\n            // Save input w/h\n            var opts = this._opts;\n            width != null && (opts.width = width);\n            height != null && (opts.height = height);\n\n            width = this._getSize(0);\n            height = this._getSize(1);\n\n            domRoot.style.display = '';\n\n            // 优化没有实际改变的resize\n            if (this._width != width || height != this._height) {\n                domRoot.style.width = width + 'px';\n                domRoot.style.height = height + 'px';\n\n                for (var id in this._layers) {\n                    if (this._layers.hasOwnProperty(id)) {\n                        this._layers[id].resize(width, height);\n                    }\n                }\n                util.each(this._progressiveLayers, function (layer) {\n                    layer.resize(width, height);\n                });\n\n                this.refresh(true);\n            }\n\n            this._width = width;\n            this._height = height;\n\n            return this;\n        },\n\n        /**\n         * 清除单独的一个层\n         * @param {number} zlevel\n         */\n        clearLayer: function (zlevel) {\n            var layer = this._layers[zlevel];\n            if (layer) {\n                layer.clear();\n            }\n        },\n\n        /**\n         * 释放\n         */\n        dispose: function () {\n            this.root.innerHTML = '';\n\n            this.root =\n            this.storage =\n\n            this._domRoot =\n            this._layers = null;\n        },\n\n        /**\n         * Get canvas which has all thing rendered\n         * @param {Object} opts\n         * @param {string} [opts.backgroundColor]\n         */\n        getRenderedCanvas: function (opts) {\n            opts = opts || {};\n            if (this._singleCanvas) {\n                return this._layers[0].dom;\n            }\n\n            var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n            imageLayer.initContext();\n\n            imageLayer.clearColor = opts.backgroundColor;\n            imageLayer.clear();\n\n            var displayList = this.storage.getDisplayList(true);\n\n            var scope = {};\n            for (var i = 0; i < displayList.length; i++) {\n                var el = displayList[i];\n                this._doPaintEl(el, imageLayer, true, scope);\n            }\n\n            return imageLayer.dom;\n        },\n        /**\n         * 获取绘图区域宽度\n         */\n        getWidth: function () {\n            return this._width;\n        },\n\n        /**\n         * 获取绘图区域高度\n         */\n        getHeight: function () {\n            return this._height;\n        },\n\n        _getSize: function (whIdx) {\n            var opts = this._opts;\n            var wh = ['width', 'height'][whIdx];\n            var cwh = ['clientWidth', 'clientHeight'][whIdx];\n            var plt = ['paddingLeft', 'paddingTop'][whIdx];\n            var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n            if (opts[wh] != null && opts[wh] !== 'auto') {\n                return parseFloat(opts[wh]);\n            }\n\n            var root = this.root;\n            var stl = document.defaultView.getComputedStyle(root);\n\n            return (\n                (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\n                - (parseInt10(stl[plt]) || 0)\n                - (parseInt10(stl[prb]) || 0)\n            ) | 0;\n        },\n\n        _pathToImage: function (id, path, width, height, dpr) {\n            var canvas = document.createElement('canvas');\n            var ctx = canvas.getContext('2d');\n\n            canvas.width = width * dpr;\n            canvas.height = height * dpr;\n\n            ctx.clearRect(0, 0, width * dpr, height * dpr);\n\n            var pathTransform = {\n                position: path.position,\n                rotation: path.rotation,\n                scale: path.scale\n            };\n            path.position = [0, 0, 0];\n            path.rotation = 0;\n            path.scale = [1, 1];\n            if (path) {\n                path.brush(ctx);\n            }\n\n            var ImageShape = __webpack_require__(365);\n            var imgShape = new ImageShape({\n                id: id,\n                style: {\n                    x: 0,\n                    y: 0,\n                    image: canvas\n                }\n            });\n\n            if (pathTransform.position != null) {\n                imgShape.position = path.position = pathTransform.position;\n            }\n\n            if (pathTransform.rotation != null) {\n                imgShape.rotation = path.rotation = pathTransform.rotation;\n            }\n\n            if (pathTransform.scale != null) {\n                imgShape.scale = path.scale = pathTransform.scale;\n            }\n\n            return imgShape;\n        },\n\n        _createPathToImage: function () {\n            var me = this;\n\n            return function (id, e, width, height) {\n                return me._pathToImage(\n                    id, e, width, height, me.dpr\n                );\n            };\n        }\n    };\n\n    module.exports = Painter;\n\n\n\n/***/ }),\n/* 422 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n\n\n    var util = __webpack_require__(317);\n    var env = __webpack_require__(323);\n\n    var Group = __webpack_require__(339);\n\n    // Use timsort because in most case elements are partially sorted\n    // https://jsfiddle.net/pissang/jr4x7mdm/8/\n    var timsort = __webpack_require__(346);\n\n    function shapeCompareFunc(a, b) {\n        if (a.zlevel === b.zlevel) {\n            if (a.z === b.z) {\n                // if (a.z2 === b.z2) {\n                //     // FIXME Slow has renderidx compare\n                //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n                //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n                //     return a.__renderidx - b.__renderidx;\n                // }\n                return a.z2 - b.z2;\n            }\n            return a.z - b.z;\n        }\n        return a.zlevel - b.zlevel;\n    }\n    /**\n     * 内容仓库 (M)\n     * @alias module:zrender/Storage\n     * @constructor\n     */\n    var Storage = function () {\n        // 所有常规形状，id索引的map\n        this._elements = {};\n\n        this._roots = [];\n\n        this._displayList = [];\n\n        this._displayListLen = 0;\n    };\n\n    Storage.prototype = {\n\n        constructor: Storage,\n\n        /**\n         * @param  {Function} cb\n         *\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._roots.length; i++) {\n                this._roots[i].traverse(cb, context);\n            }\n        },\n\n        /**\n         * 返回所有图形的绘制队列\n         * @param {boolean} [update=false] 是否在返回前更新该数组\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n         *\n         * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n         * @return {Array.<module:zrender/graphic/Displayable>}\n         */\n        getDisplayList: function (update, includeIgnore) {\n            includeIgnore = includeIgnore || false;\n            if (update) {\n                this.updateDisplayList(includeIgnore);\n            }\n            return this._displayList;\n        },\n\n        /**\n         * 更新图形的绘制队列。\n         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n         */\n        updateDisplayList: function (includeIgnore) {\n            this._displayListLen = 0;\n            var roots = this._roots;\n            var displayList = this._displayList;\n            for (var i = 0, len = roots.length; i < len; i++) {\n                this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n            }\n            displayList.length = this._displayListLen;\n\n            // for (var i = 0, len = displayList.length; i < len; i++) {\n            //     displayList[i].__renderidx = i;\n            // }\n\n            // displayList.sort(shapeCompareFunc);\n            env.canvasSupported && timsort(displayList, shapeCompareFunc);\n        },\n\n        _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n\n            if (el.ignore && !includeIgnore) {\n                return;\n            }\n\n            el.beforeUpdate();\n\n            if (el.__dirty) {\n\n                el.update();\n\n            }\n\n            el.afterUpdate();\n\n            var userSetClipPath = el.clipPath;\n            if (userSetClipPath) {\n\n                // FIXME 效率影响\n                if (clipPaths) {\n                    clipPaths = clipPaths.slice();\n                }\n                else {\n                    clipPaths = [];\n                }\n\n                var currentClipPath = userSetClipPath;\n                var parentClipPath = el;\n                // Recursively add clip path\n                while (currentClipPath) {\n                    // clipPath 的变换是基于使用这个 clipPath 的元素\n                    currentClipPath.parent = parentClipPath;\n                    currentClipPath.updateTransform();\n\n                    clipPaths.push(currentClipPath);\n\n                    parentClipPath = currentClipPath;\n                    currentClipPath = currentClipPath.clipPath;\n                }\n            }\n\n            if (el.isGroup) {\n                var children = el._children;\n\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i];\n\n                    // Force to mark as dirty if group is dirty\n                    // FIXME __dirtyPath ?\n                    if (el.__dirty) {\n                        child.__dirty = true;\n                    }\n\n                    this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n                }\n\n                // Mark group clean here\n                el.__dirty = false;\n\n            }\n            else {\n                el.__clipPaths = clipPaths;\n\n                this._displayList[this._displayListLen++] = el;\n            }\n        },\n\n        /**\n         * 添加图形(Shape)或者组(Group)到根节点\n         * @param {module:zrender/Element} el\n         */\n        addRoot: function (el) {\n            // Element has been added\n            if (this._elements[el.id]) {\n                return;\n            }\n\n            if (el instanceof Group) {\n                el.addChildrenToStorage(this);\n            }\n\n            this.addToMap(el);\n            this._roots.push(el);\n        },\n\n        /**\n         * 删除指定的图形(Shape)或者组(Group)\n         * @param {string|Array.<string>} [elId] 如果为空清空整个Storage\n         */\n        delRoot: function (elId) {\n            if (elId == null) {\n                // 不指定elId清空\n                for (var i = 0; i < this._roots.length; i++) {\n                    var root = this._roots[i];\n                    if (root instanceof Group) {\n                        root.delChildrenFromStorage(this);\n                    }\n                }\n\n                this._elements = {};\n                this._roots = [];\n                this._displayList = [];\n                this._displayListLen = 0;\n\n                return;\n            }\n\n            if (elId instanceof Array) {\n                for (var i = 0, l = elId.length; i < l; i++) {\n                    this.delRoot(elId[i]);\n                }\n                return;\n            }\n\n            var el;\n            if (typeof(elId) == 'string') {\n                el = this._elements[elId];\n            }\n            else {\n                el = elId;\n            }\n\n            var idx = util.indexOf(this._roots, el);\n            if (idx >= 0) {\n                this.delFromMap(el.id);\n                this._roots.splice(idx, 1);\n                if (el instanceof Group) {\n                    el.delChildrenFromStorage(this);\n                }\n            }\n        },\n\n        addToMap: function (el) {\n            if (el instanceof Group) {\n                el.__storage = this;\n            }\n            el.dirty(false);\n\n            this._elements[el.id] = el;\n\n            return this;\n        },\n\n        get: function (elId) {\n            return this._elements[elId];\n        },\n\n        delFromMap: function (elId) {\n            var elements = this._elements;\n            var el = elements[elId];\n            if (el) {\n                delete elements[elId];\n                if (el instanceof Group) {\n                    el.__storage = null;\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * 清空并且释放Storage\n         */\n        dispose: function () {\n            this._elements =\n            this._renderList =\n            this._roots = null;\n        },\n\n        displayableSortFunc: shapeCompareFunc\n    };\n\n    module.exports = Storage;\n\n\n\n/***/ }),\n/* 423 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n\n    var util = __webpack_require__(317);\n    var Dispatcher = __webpack_require__(336).Dispatcher;\n\n    var requestAnimationFrame = __webpack_require__(361);\n\n    var Animator = __webpack_require__(360);\n    /**\n     * @typedef {Object} IZRenderStage\n     * @property {Function} update\n     */\n\n    /**\n     * @alias module:zrender/animation/Animation\n     * @constructor\n     * @param {Object} [options]\n     * @param {Function} [options.onframe]\n     * @param {IZRenderStage} [options.stage]\n     * @example\n     *     var animation = new Animation();\n     *     var obj = {\n     *         x: 100,\n     *         y: 100\n     *     };\n     *     animation.animate(node.position)\n     *         .when(1000, {\n     *             x: 500,\n     *             y: 500\n     *         })\n     *         .when(2000, {\n     *             x: 100,\n     *             y: 100\n     *         })\n     *         .start('spline');\n     */\n    var Animation = function (options) {\n\n        options = options || {};\n\n        this.stage = options.stage || {};\n\n        this.onframe = options.onframe || function() {};\n\n        // private properties\n        this._clips = [];\n\n        this._running = false;\n\n        this._time;\n\n        this._pausedTime;\n\n        this._pauseStart;\n\n        this._paused = false;\n\n        Dispatcher.call(this);\n    };\n\n    Animation.prototype = {\n\n        constructor: Animation,\n        /**\n         * 添加 clip\n         * @param {module:zrender/animation/Clip} clip\n         */\n        addClip: function (clip) {\n            this._clips.push(clip);\n        },\n        /**\n         * 添加 animator\n         * @param {module:zrender/animation/Animator} animator\n         */\n        addAnimator: function (animator) {\n            animator.animation = this;\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.addClip(clips[i]);\n            }\n        },\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Clip} clip\n         */\n        removeClip: function(clip) {\n            var idx = util.indexOf(this._clips, clip);\n            if (idx >= 0) {\n                this._clips.splice(idx, 1);\n            }\n        },\n\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Animator} animator\n         */\n        removeAnimator: function (animator) {\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.removeClip(clips[i]);\n            }\n            animator.animation = null;\n        },\n\n        _update: function() {\n\n            var time = new Date().getTime() - this._pausedTime;\n            var delta = time - this._time;\n            var clips = this._clips;\n            var len = clips.length;\n\n            var deferredEvents = [];\n            var deferredClips = [];\n            for (var i = 0; i < len; i++) {\n                var clip = clips[i];\n                var e = clip.step(time);\n                // Throw out the events need to be called after\n                // stage.update, like destroy\n                if (e) {\n                    deferredEvents.push(e);\n                    deferredClips.push(clip);\n                }\n            }\n\n            // Remove the finished clip\n            for (var i = 0; i < len;) {\n                if (clips[i]._needsRemove) {\n                    clips[i] = clips[len - 1];\n                    clips.pop();\n                    len--;\n                }\n                else {\n                    i++;\n                }\n            }\n\n            len = deferredEvents.length;\n            for (var i = 0; i < len; i++) {\n                deferredClips[i].fire(deferredEvents[i]);\n            }\n\n            this._time = time;\n\n            this.onframe(delta);\n\n            this.trigger('frame', delta);\n\n            if (this.stage.update) {\n                this.stage.update();\n            }\n        },\n\n        _startLoop: function () {\n            var self = this;\n\n            this._running = true;\n\n            function step() {\n                if (self._running) {\n\n                    requestAnimationFrame(step);\n\n                    !self._paused && self._update();\n                }\n            }\n\n            requestAnimationFrame(step);\n        },\n\n        /**\n         * 开始运行动画\n         */\n        start: function () {\n\n            this._time = new Date().getTime();\n            this._pausedTime = 0;\n\n            this._startLoop();\n        },\n        /**\n         * 停止运行动画\n         */\n        stop: function () {\n            this._running = false;\n        },\n\n        /**\n         * Pause\n         */\n        pause: function () {\n            if (!this._paused) {\n                this._pauseStart = new Date().getTime();\n                this._paused = true;\n            }\n        },\n\n        /**\n         * Resume\n         */\n        resume: function () {\n            if (this._paused) {\n                this._pausedTime += (new Date().getTime()) - this._pauseStart;\n                this._paused = false;\n            }\n        },\n\n        /**\n         * 清除所有动画片段\n         */\n        clear: function () {\n            this._clips = [];\n        },\n        /**\n         * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n         * @param  {Object} target\n         * @param  {Object} options\n         * @param  {boolean} [options.loop=false] 是否循环播放动画\n         * @param  {Function} [options.getter=null]\n         *         如果指定getter函数，会通过getter函数取属性值\n         * @param  {Function} [options.setter=null]\n         *         如果指定setter函数，会通过setter函数设置属性值\n         * @return {module:zrender/animation/Animation~Animator}\n         */\n        // TODO Gap\n        animate: function (target, options) {\n            options = options || {};\n\n            var animator = new Animator(\n                target,\n                options.loop,\n                options.getter,\n                options.setter\n            );\n\n            this.addAnimator(animator);\n\n            return animator;\n        }\n    };\n\n    util.mixin(Animation, Dispatcher);\n\n    module.exports = Animation;\n\n\n\n/***/ }),\n/* 424 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\n\n\n    var easingFuncs = __webpack_require__(425);\n\n    function Clip(options) {\n\n        this._target = options.target;\n\n        // 生命周期\n        this._life = options.life || 1000;\n        // 延时\n        this._delay = options.delay || 0;\n        // 开始时间\n        // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n        this._initialized = false;\n\n        // 是否循环\n        this.loop = options.loop == null ? false : options.loop;\n\n        this.gap = options.gap || 0;\n\n        this.easing = options.easing || 'Linear';\n\n        this.onframe = options.onframe;\n        this.ondestroy = options.ondestroy;\n        this.onrestart = options.onrestart;\n    }\n\n    Clip.prototype = {\n\n        constructor: Clip,\n\n        step: function (globalTime) {\n            // Set startTime on first step, or _startTime may has milleseconds different between clips\n            // PENDING\n            if (!this._initialized) {\n                this._startTime = globalTime + this._delay;\n                this._initialized = true;\n            }\n\n            var percent = (globalTime - this._startTime) / this._life;\n\n            // 还没开始\n            if (percent < 0) {\n                return;\n            }\n\n            percent = Math.min(percent, 1);\n\n            var easing = this.easing;\n            var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n            var schedule = typeof easingFunc === 'function'\n                ? easingFunc(percent)\n                : percent;\n\n            this.fire('frame', schedule);\n\n            // 结束\n            if (percent == 1) {\n                if (this.loop) {\n                    this.restart (globalTime);\n                    // 重新开始周期\n                    // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n                    return 'restart';\n                }\n\n                // 动画完成将这个控制器标识为待删除\n                // 在Animation.update中进行批量删除\n                this._needsRemove = true;\n                return 'destroy';\n            }\n\n            return null;\n        },\n\n        restart: function (globalTime) {\n            var remainder = (globalTime - this._startTime) % this._life;\n            this._startTime = globalTime - remainder + this.gap;\n\n            this._needsRemove = false;\n        },\n\n        fire: function(eventType, arg) {\n            eventType = 'on' + eventType;\n            if (this[eventType]) {\n                this[eventType](this._target, arg);\n            }\n        }\n    };\n\n    module.exports = Clip;\n\n\n\n/***/ }),\n/* 425 */\n/***/ (function(module, exports) {\n\n/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\n\n    var easing = {\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        linear: function (k) {\n            return k;\n        },\n\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticIn: function (k) {\n            return k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticOut: function (k) {\n            return k * (2 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k;\n            }\n            return -0.5 * (--k * (k - 2) - 1);\n        },\n\n        // 三次方的缓动（t^3）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicIn: function (k) {\n            return k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicOut: function (k) {\n            return --k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k + 2);\n        },\n\n        // 四次方的缓动（t^4）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticIn: function (k) {\n            return k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticOut: function (k) {\n            return 1 - (--k * k * k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k;\n            }\n            return -0.5 * ((k -= 2) * k * k * k - 2);\n        },\n\n        // 五次方的缓动（t^5）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticIn: function (k) {\n            return k * k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticOut: function (k) {\n            return --k * k * k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k * k * k + 2);\n        },\n\n        // 正弦曲线的缓动（sin(t)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalIn: function (k) {\n            return 1 - Math.cos(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalOut: function (k) {\n            return Math.sin(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalInOut: function (k) {\n            return 0.5 * (1 - Math.cos(Math.PI * k));\n        },\n\n        // 指数曲线的缓动（2^t）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialIn: function (k) {\n            return k === 0 ? 0 : Math.pow(1024, k - 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialOut: function (k) {\n            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialInOut: function (k) {\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if ((k *= 2) < 1) {\n                return 0.5 * Math.pow(1024, k - 1);\n            }\n            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n        },\n\n        // 圆形曲线的缓动（sqrt(1-t^2)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularIn: function (k) {\n            return 1 - Math.sqrt(1 - k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularOut: function (k) {\n            return Math.sqrt(1 - (--k * k));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return -0.5 * (Math.sqrt(1 - k * k) - 1);\n            }\n            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n        },\n\n        // 创建类似于弹簧在停止前来回振荡的动画\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticIn: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return -(a * Math.pow(2, 10 * (k -= 1)) *\n                        Math.sin((k - s) * (2 * Math.PI) / p));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return (a * Math.pow(2, -10 * k) *\n                    Math.sin((k - s) * (2 * Math.PI) / p) + 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticInOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            if ((k *= 2) < 1) {\n                return -0.5 * (a * Math.pow(2, 10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p));\n            }\n            return a * Math.pow(2, -10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\n        },\n\n        // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backIn: function (k) {\n            var s = 1.70158;\n            return k * k * ((s + 1) * k - s);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backOut: function (k) {\n            var s = 1.70158;\n            return --k * k * ((s + 1) * k + s) + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backInOut: function (k) {\n            var s = 1.70158 * 1.525;\n            if ((k *= 2) < 1) {\n                return 0.5 * (k * k * ((s + 1) * k - s));\n            }\n            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n        },\n\n        // 创建弹跳效果\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceIn: function (k) {\n            return 1 - easing.bounceOut(1 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceOut: function (k) {\n            if (k < (1 / 2.75)) {\n                return 7.5625 * k * k;\n            }\n            else if (k < (2 / 2.75)) {\n                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n            }\n            else if (k < (2.5 / 2.75)) {\n                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n            }\n            else {\n                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n            }\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceInOut: function (k) {\n            if (k < 0.5) {\n                return easing.bounceIn(k * 2) * 0.5;\n            }\n            return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n        }\n    };\n\n    module.exports = easing;\n\n\n\n\n/***/ }),\n/* 426 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var normalizeRadian = __webpack_require__(362).normalizeRadian;\n    var PI2 = Math.PI * 2;\n\n    module.exports = {\n        /**\n         * 圆弧描边包含判断\n         * @param  {number}  cx\n         * @param  {number}  cy\n         * @param  {number}  r\n         * @param  {number}  startAngle\n         * @param  {number}  endAngle\n         * @param  {boolean}  anticlockwise\n         * @param  {number} lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {Boolean}\n         */\n        containStroke: function (\n            cx, cy, r, startAngle, endAngle, anticlockwise,\n            lineWidth, x, y\n        ) {\n\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n\n            x -= cx;\n            y -= cy;\n            var d = Math.sqrt(x * x + y * y);\n\n            if ((d - _l > r) || (d + _l < r)) {\n                return false;\n            }\n            if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n                // Is a circle\n                return true;\n            }\n            if (anticlockwise) {\n                var tmp = startAngle;\n                startAngle = normalizeRadian(endAngle);\n                endAngle = normalizeRadian(tmp);\n            } else {\n                startAngle = normalizeRadian(startAngle);\n                endAngle = normalizeRadian(endAngle);\n            }\n            if (startAngle > endAngle) {\n                endAngle += PI2;\n            }\n\n            var angle = Math.atan2(y, x);\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return (angle >= startAngle && angle <= endAngle)\n                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\n        }\n    };\n\n\n/***/ }),\n/* 427 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var curve = __webpack_require__(331);\n\n    module.exports = {\n        /**\n         * 三次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  x3\n         * @param  {number}  y3\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.cubicProjectPoint(\n                x0, y0, x1, y1, x2, y2, x3, y3,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n/***/ }),\n/* 428 */\n/***/ (function(module, exports) {\n\n\n    module.exports = {\n        /**\n         * 线段包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            var _a = 0;\n            var _b = x0;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l)\n                || (y < y0 - _l && y < y1 - _l)\n                || (x > x0 + _l && x > x1 + _l)\n                || (x < x0 - _l && x < x1 - _l)\n            ) {\n                return false;\n            }\n\n            if (x0 !== x1) {\n                _a = (y0 - y1) / (x0 - x1);\n                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;\n            }\n            else {\n                return Math.abs(x - x0) <= _l / 2;\n            }\n            var tmp = _a * x - y + _b;\n            var _s = tmp * tmp / (_a * _a + 1);\n            return _s <= _l / 2 * _l / 2;\n        }\n    };\n\n\n/***/ }),\n/* 429 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var CMD = __webpack_require__(340).CMD;\n    var line = __webpack_require__(428);\n    var cubic = __webpack_require__(427);\n    var quadratic = __webpack_require__(430);\n    var arc = __webpack_require__(426);\n    var normalizeRadian = __webpack_require__(362).normalizeRadian;\n    var curve = __webpack_require__(331);\n\n    var windingLine = __webpack_require__(431);\n\n    var containStroke = line.containStroke;\n\n    var PI2 = Math.PI * 2;\n\n    var EPSILON = 1e-4;\n\n    function isAroundEqual(a, b) {\n        return Math.abs(a - b) < EPSILON;\n    }\n\n    // 临时数组\n    var roots = [-1, -1, -1];\n    var extrema = [-1, -1];\n\n    function swapExtrema() {\n        var tmp = extrema[0];\n        extrema[0] = extrema[1];\n        extrema[1] = tmp;\n    }\n\n    function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2 && y > y3)\n            || (y < y0 && y < y1 && y < y2 && y < y3)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var w = 0;\n            var nExtrema = -1;\n            var y0_, y1_;\n            for (var i = 0; i < nRoots; i++) {\n                var t = roots[i];\n\n                // Avoid winding error when intersection point is the connect point of two line of polygon\n                var unit = (t === 0 || t === 1) ? 0.5 : 1;\n\n                var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n                if (x_ < x) { // Quick reject\n                    continue;\n                }\n                if (nExtrema < 0) {\n                    nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n                    if (extrema[1] < extrema[0] && nExtrema > 1) {\n                        swapExtrema();\n                    }\n                    y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n                    if (nExtrema > 1) {\n                        y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n                    }\n                }\n                if (nExtrema == 2) {\n                    // 分成三段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else if (t < extrema[1]) {\n                        w += y1_ < y0_ ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y1_ ? unit : -unit;\n                    }\n                }\n                else {\n                    // 分成两段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y0_ ? unit : -unit;\n                    }\n                }\n            }\n            return w;\n        }\n    }\n\n    function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2)\n            || (y < y0 && y < y1 && y < y2)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var t = curve.quadraticExtremum(y0, y1, y2);\n            if (t >= 0 && t <= 1) {\n                var w = 0;\n                var y_ = curve.quadraticAt(y0, y1, y2, t);\n                for (var i = 0; i < nRoots; i++) {\n                    // Remove one endpoint.\n                    var unit = (roots[i] === 0 || roots[i] === 1) ? 0.5 : 1;\n\n                    var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n                    if (x_ < x) {   // Quick reject\n                        continue;\n                    }\n                    if (roots[i] < t) {\n                        w += y_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y2 < y_ ? unit : -unit;\n                    }\n                }\n                return w;\n            }\n            else {\n                // Remove one endpoint.\n                var unit = (roots[0] === 0 || roots[0] === 1) ? 0.5 : 1;\n\n                var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n                if (x_ < x) {   // Quick reject\n                    return 0;\n                }\n                return y2 < y0 ? unit : -unit;\n            }\n        }\n    }\n\n    // TODO\n    // Arc 旋转\n    function windingArc(\n        cx, cy, r, startAngle, endAngle, anticlockwise, x, y\n    ) {\n        y -= cy;\n        if (y > r || y < -r) {\n            return 0;\n        }\n        var tmp = Math.sqrt(r * r - y * y);\n        roots[0] = -tmp;\n        roots[1] = tmp;\n\n        var diff = Math.abs(startAngle - endAngle);\n        if (diff < 1e-4) {\n            return 0;\n        }\n        if (diff % PI2 < 1e-4) {\n            // Is a circle\n            startAngle = 0;\n            endAngle = PI2;\n            var dir = anticlockwise ? 1 : -1;\n            if (x >= roots[0] + cx && x <= roots[1] + cx) {\n                return dir;\n            } else {\n                return 0;\n            }\n        }\n\n        if (anticlockwise) {\n            var tmp = startAngle;\n            startAngle = normalizeRadian(endAngle);\n            endAngle = normalizeRadian(tmp);\n        }\n        else {\n            startAngle = normalizeRadian(startAngle);\n            endAngle = normalizeRadian(endAngle);\n        }\n        if (startAngle > endAngle) {\n            endAngle += PI2;\n        }\n\n        var w = 0;\n        for (var i = 0; i < 2; i++) {\n            var x_ = roots[i];\n            if (x_ + cx > x) {\n                var angle = Math.atan2(y, x_);\n                var dir = anticlockwise ? 1 : -1;\n                if (angle < 0) {\n                    angle = PI2 + angle;\n                }\n                if (\n                    (angle >= startAngle && angle <= endAngle)\n                    || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)\n                ) {\n                    if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n                        dir = -dir;\n                    }\n                    w += dir;\n                }\n            }\n        }\n        return w;\n    }\n\n    function containPath(data, lineWidth, isStroke, x, y) {\n        var w = 0;\n        var xi = 0;\n        var yi = 0;\n        var x0 = 0;\n        var y0 = 0;\n\n        for (var i = 0; i < data.length;) {\n            var cmd = data[i++];\n            // Begin a new subpath\n            if (cmd === CMD.M && i > 1) {\n                // Close previous subpath\n                if (!isStroke) {\n                    w += windingLine(xi, yi, x0, y0, x, y);\n                }\n                // 如果被任何一个 subpath 包含\n                // if (w !== 0) {\n                //     return true;\n                // }\n            }\n\n            if (i == 1) {\n                // 如果第一个命令是 L, C, Q\n                // 则 previous point 同绘制命令的第一个 point\n                //\n                // 第一个命令为 Arc 的情况下会在后面特殊处理\n                xi = data[i];\n                yi = data[i + 1];\n\n                x0 = xi;\n                y0 = yi;\n            }\n\n            switch (cmd) {\n                case CMD.M:\n                    // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                    // 在 closePath 的时候使用\n                    x0 = data[i++];\n                    y0 = data[i++];\n                    xi = x0;\n                    yi = y0;\n                    break;\n                case CMD.L:\n                    if (isStroke) {\n                        if (containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n                        w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.C:\n                    if (isStroke) {\n                        if (cubic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingCubic(\n                            xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.Q:\n                    if (isStroke) {\n                        if (quadratic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingQuadratic(\n                            xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.A:\n                    // TODO Arc 判断的开销比较大\n                    var cx = data[i++];\n                    var cy = data[i++];\n                    var rx = data[i++];\n                    var ry = data[i++];\n                    var theta = data[i++];\n                    var dTheta = data[i++];\n                    // TODO Arc 旋转\n                    var psi = data[i++];\n                    var anticlockwise = 1 - data[i++];\n                    var x1 = Math.cos(theta) * rx + cx;\n                    var y1 = Math.sin(theta) * ry + cy;\n                    // 不是直接使用 arc 命令\n                    if (i > 1) {\n                        w += windingLine(xi, yi, x1, y1, x, y);\n                    }\n                    else {\n                        // 第一个命令起点还未定义\n                        x0 = x1;\n                        y0 = y1;\n                    }\n                    // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n                    var _x = (x - cx) * ry / rx + cx;\n                    if (isStroke) {\n                        if (arc.containStroke(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            lineWidth, _x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingArc(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            _x, y\n                        );\n                    }\n                    xi = Math.cos(theta + dTheta) * rx + cx;\n                    yi = Math.sin(theta + dTheta) * ry + cy;\n                    break;\n                case CMD.R:\n                    x0 = xi = data[i++];\n                    y0 = yi = data[i++];\n                    var width = data[i++];\n                    var height = data[i++];\n                    var x1 = x0 + width;\n                    var y1 = y0 + height;\n                    if (isStroke) {\n                        if (containStroke(x0, y0, x1, y0, lineWidth, x, y)\n                          || containStroke(x1, y0, x1, y1, lineWidth, x, y)\n                          || containStroke(x1, y1, x0, y1, lineWidth, x, y)\n                          || containStroke(x0, y1, x0, y0, lineWidth, x, y)\n                        ) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // FIXME Clockwise ?\n                        w += windingLine(x1, y0, x1, y1, x, y);\n                        w += windingLine(x0, y1, x0, y0, x, y);\n                    }\n                    break;\n                case CMD.Z:\n                    if (isStroke) {\n                        if (containStroke(\n                            xi, yi, x0, y0, lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // Close a subpath\n                        w += windingLine(xi, yi, x0, y0, x, y);\n                        // 如果被任何一个 subpath 包含\n                        // FIXME subpaths may overlap\n                        // if (w !== 0) {\n                        //     return true;\n                        // }\n                    }\n                    xi = x0;\n                    yi = y0;\n                    break;\n            }\n        }\n        if (!isStroke && !isAroundEqual(yi, y0)) {\n            w += windingLine(xi, yi, x0, y0, x, y) || 0;\n        }\n        return w !== 0;\n    }\n\n    module.exports = {\n        contain: function (pathData, x, y) {\n            return containPath(pathData, 0, false, x, y);\n        },\n\n        containStroke: function (pathData, lineWidth, x, y) {\n            return containPath(pathData, lineWidth, true, x, y);\n        }\n    };\n\n\n/***/ }),\n/* 430 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var curve = __webpack_require__(331);\n\n    module.exports = {\n        /**\n         * 二次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.quadraticProjectPoint(\n                x0, y0, x1, y1, x2, y2,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n/***/ }),\n/* 431 */\n/***/ (function(module, exports) {\n\n\n    module.exports = function windingLine(x0, y0, x1, y1, x, y) {\n        if ((y > y0 && y > y1) || (y < y0 && y < y1)) {\n            return 0;\n        }\n        // Ignore horizontal line\n        if (y1 === y0) {\n            return 0;\n        }\n        var dir = y1 < y0 ? 1 : -1;\n        var t = (y - y0) / (y1 - y0);\n\n        // Avoid winding error when intersection point is the connect point of two line of polygon\n        if (t === 1 || t === 0) {\n            dir = y1 < y0 ? 0.5 : -0.5;\n        }\n\n        var x_ = t * (x1 - x0) + x0;\n\n        return x_ > x ? dir : 0;\n    };\n\n\n/***/ }),\n/* 432 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Only implements needed gestures for mobile.\n */\n\n\n    var eventUtil = __webpack_require__(336);\n\n    var GestureMgr = function () {\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._track = [];\n    };\n\n    GestureMgr.prototype = {\n\n        constructor: GestureMgr,\n\n        recognize: function (event, target, root) {\n            this._doTrack(event, target, root);\n            return this._recognize(event);\n        },\n\n        clear: function () {\n            this._track.length = 0;\n            return this;\n        },\n\n        _doTrack: function (event, target, root) {\n            var touches = event.touches;\n\n            if (!touches) {\n                return;\n            }\n\n            var trackItem = {\n                points: [],\n                touches: [],\n                target: target,\n                event: event\n            };\n\n            for (var i = 0, len = touches.length; i < len; i++) {\n                var touch = touches[i];\n                var pos = eventUtil.clientToLocal(root, touch, {});\n                trackItem.points.push([pos.zrX, pos.zrY]);\n                trackItem.touches.push(touch);\n            }\n\n            this._track.push(trackItem);\n        },\n\n        _recognize: function (event) {\n            for (var eventName in recognizers) {\n                if (recognizers.hasOwnProperty(eventName)) {\n                    var gestureInfo = recognizers[eventName](this._track, event);\n                    if (gestureInfo) {\n                        return gestureInfo;\n                    }\n                }\n            }\n        }\n    };\n\n    function dist(pointPair) {\n        var dx = pointPair[1][0] - pointPair[0][0];\n        var dy = pointPair[1][1] - pointPair[0][1];\n\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    function center(pointPair) {\n        return [\n            (pointPair[0][0] + pointPair[1][0]) / 2,\n            (pointPair[0][1] + pointPair[1][1]) / 2\n        ];\n    }\n\n    var recognizers = {\n\n        pinch: function (track, event) {\n            var trackLen = track.length;\n\n            if (!trackLen) {\n                return;\n            }\n\n            var pinchEnd = (track[trackLen - 1] || {}).points;\n            var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n            if (pinchPre\n                && pinchPre.length > 1\n                && pinchEnd\n                && pinchEnd.length > 1\n            ) {\n                var pinchScale = dist(pinchEnd) / dist(pinchPre);\n                !isFinite(pinchScale) && (pinchScale = 1);\n\n                event.pinchScale = pinchScale;\n\n                var pinchCenter = center(pinchEnd);\n                event.pinchX = pinchCenter[0];\n                event.pinchY = pinchCenter[1];\n\n                return {\n                    type: 'pinch',\n                    target: track[0].target,\n                    event: event\n                };\n            }\n        }\n\n        // Only pinch currently.\n    };\n\n    module.exports = GestureMgr;\n\n\n\n/***/ }),\n/* 433 */\n/***/ (function(module, exports) {\n\n// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n\n    /**\n     * Simple double linked list. Compared with array, it has O(1) remove operation.\n     * @constructor\n     */\n    var LinkedList = function() {\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.head = null;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.tail = null;\n\n        this._len = 0;\n    };\n\n    var linkedListProto = LinkedList.prototype;\n    /**\n     * Insert a new value at the tail\n     * @param  {} val\n     * @return {module:zrender/core/LRU~Entry}\n     */\n    linkedListProto.insert = function(val) {\n        var entry = new Entry(val);\n        this.insertEntry(entry);\n        return entry;\n    };\n\n    /**\n     * Insert an entry at the tail\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.insertEntry = function(entry) {\n        if (!this.head) {\n            this.head = this.tail = entry;\n        }\n        else {\n            this.tail.next = entry;\n            entry.prev = this.tail;\n            this.tail = entry;\n        }\n        this._len++;\n    };\n\n    /**\n     * Remove entry.\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.remove = function(entry) {\n        var prev = entry.prev;\n        var next = entry.next;\n        if (prev) {\n            prev.next = next;\n        }\n        else {\n            // Is head\n            this.head = next;\n        }\n        if (next) {\n            next.prev = prev;\n        }\n        else {\n            // Is tail\n            this.tail = prev;\n        }\n        entry.next = entry.prev = null;\n        this._len--;\n    };\n\n    /**\n     * @return {number}\n     */\n    linkedListProto.len = function() {\n        return this._len;\n    };\n\n    /**\n     * @constructor\n     * @param {} val\n     */\n    var Entry = function(val) {\n        /**\n         * @type {}\n         */\n        this.value = val;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.next;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.prev;\n    };\n\n    /**\n     * LRU Cache\n     * @constructor\n     * @alias module:zrender/core/LRU\n     */\n    var LRU = function(maxSize) {\n\n        this._list = new LinkedList();\n\n        this._map = {};\n\n        this._maxSize = maxSize || 10;\n    };\n\n    var LRUProto = LRU.prototype;\n\n    /**\n     * @param  {string} key\n     * @param  {} value\n     */\n    LRUProto.put = function(key, value) {\n        var list = this._list;\n        var map = this._map;\n        if (map[key] == null) {\n            var len = list.len();\n            if (len >= this._maxSize && len > 0) {\n                // Remove the least recently used\n                var leastUsedEntry = list.head;\n                list.remove(leastUsedEntry);\n                delete map[leastUsedEntry.key];\n            }\n\n            var entry = list.insert(value);\n            entry.key = key;\n            map[key] = entry;\n        }\n    };\n\n    /**\n     * @param  {string} key\n     * @return {}\n     */\n    LRUProto.get = function(key) {\n        var entry = this._map[key];\n        var list = this._list;\n        if (entry != null) {\n            // Put the latest used entry in the tail\n            if (entry !== list.tail) {\n                list.remove(entry);\n                list.insertEntry(entry);\n            }\n\n            return entry.value;\n        }\n    };\n\n    /**\n     * Clear the cache\n     */\n    LRUProto.clear = function() {\n        this._list.clear();\n        this._map = {};\n    };\n\n    module.exports = LRU;\n\n\n/***/ }),\n/* 434 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\n\n\n    var vec2 = __webpack_require__(321);\n    var curve = __webpack_require__(331);\n\n    var bbox = {};\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n\n    var start = vec2.create();\n    var end = vec2.create();\n    var extremity = vec2.create();\n\n    var PI2 = Math.PI * 2;\n    /**\n     * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n     * @module zrender/core/bbox\n     * @param {Array<Object>} points 顶点数组\n     * @param {number} min\n     * @param {number} max\n     */\n    bbox.fromPoints = function(points, min, max) {\n        if (points.length === 0) {\n            return;\n        }\n        var p = points[0];\n        var left = p[0];\n        var right = p[0];\n        var top = p[1];\n        var bottom = p[1];\n        var i;\n\n        for (i = 1; i < points.length; i++) {\n            p = points[i];\n            left = mathMin(left, p[0]);\n            right = mathMax(right, p[0]);\n            top = mathMin(top, p[1]);\n            bottom = mathMax(bottom, p[1]);\n        }\n\n        min[0] = left;\n        min[1] = top;\n        max[0] = right;\n        max[1] = bottom;\n    };\n\n    /**\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromLine = function (x0, y0, x1, y1, min, max) {\n        min[0] = mathMin(x0, x1);\n        min[1] = mathMin(y0, y1);\n        max[0] = mathMax(x0, x1);\n        max[1] = mathMax(y0, y1);\n    };\n\n    var xDim = [];\n    var yDim = [];\n    /**\n     * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromCubic = function(\n        x0, y0, x1, y1, x2, y2, x3, y3, min, max\n    ) {\n        var cubicExtrema = curve.cubicExtrema;\n        var cubicAt = curve.cubicAt;\n        var i;\n        var n = cubicExtrema(x0, x1, x2, x3, xDim);\n        min[0] = Infinity;\n        min[1] = Infinity;\n        max[0] = -Infinity;\n        max[1] = -Infinity;\n\n        for (i = 0; i < n; i++) {\n            var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n            min[0] = mathMin(x, min[0]);\n            max[0] = mathMax(x, max[0]);\n        }\n        n = cubicExtrema(y0, y1, y2, y3, yDim);\n        for (i = 0; i < n; i++) {\n            var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n            min[1] = mathMin(y, min[1]);\n            max[1] = mathMax(y, max[1]);\n        }\n\n        min[0] = mathMin(x0, min[0]);\n        max[0] = mathMax(x0, max[0]);\n        min[0] = mathMin(x3, min[0]);\n        max[0] = mathMax(x3, max[0]);\n\n        min[1] = mathMin(y0, min[1]);\n        max[1] = mathMax(y0, max[1]);\n        min[1] = mathMin(y3, min[1]);\n        max[1] = mathMax(y3, max[1]);\n    };\n\n    /**\n     * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromQuadratic = function(x0, y0, x1, y1, x2, y2, min, max) {\n        var quadraticExtremum = curve.quadraticExtremum;\n        var quadraticAt = curve.quadraticAt;\n        // Find extremities, where derivative in x dim or y dim is zero\n        var tx =\n            mathMax(\n                mathMin(quadraticExtremum(x0, x1, x2), 1), 0\n            );\n        var ty =\n            mathMax(\n                mathMin(quadraticExtremum(y0, y1, y2), 1), 0\n            );\n\n        var x = quadraticAt(x0, x1, x2, tx);\n        var y = quadraticAt(y0, y1, y2, ty);\n\n        min[0] = mathMin(x0, x2, x);\n        min[1] = mathMin(y0, y2, y);\n        max[0] = mathMax(x0, x2, x);\n        max[1] = mathMax(y0, y2, y);\n    };\n\n    /**\n     * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n     * @method\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x\n     * @param {number} y\n     * @param {number} rx\n     * @param {number} ry\n     * @param {number} startAngle\n     * @param {number} endAngle\n     * @param {number} anticlockwise\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromArc = function (\n        x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max\n    ) {\n        var vec2Min = vec2.min;\n        var vec2Max = vec2.max;\n\n        var diff = Math.abs(startAngle - endAngle);\n\n\n        if (diff % PI2 < 1e-4 && diff > 1e-4) {\n            // Is a circle\n            min[0] = x - rx;\n            min[1] = y - ry;\n            max[0] = x + rx;\n            max[1] = y + ry;\n            return;\n        }\n\n        start[0] = mathCos(startAngle) * rx + x;\n        start[1] = mathSin(startAngle) * ry + y;\n\n        end[0] = mathCos(endAngle) * rx + x;\n        end[1] = mathSin(endAngle) * ry + y;\n\n        vec2Min(min, start, end);\n        vec2Max(max, start, end);\n\n        // Thresh to [0, Math.PI * 2]\n        startAngle = startAngle % (PI2);\n        if (startAngle < 0) {\n            startAngle = startAngle + PI2;\n        }\n        endAngle = endAngle % (PI2);\n        if (endAngle < 0) {\n            endAngle = endAngle + PI2;\n        }\n\n        if (startAngle > endAngle && !anticlockwise) {\n            endAngle += PI2;\n        }\n        else if (startAngle < endAngle && anticlockwise) {\n            startAngle += PI2;\n        }\n        if (anticlockwise) {\n            var tmp = endAngle;\n            endAngle = startAngle;\n            startAngle = tmp;\n        }\n\n        // var number = 0;\n        // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n        for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n            if (angle > startAngle) {\n                extremity[0] = mathCos(angle) * rx + x;\n                extremity[1] = mathSin(angle) * ry + y;\n\n                vec2Min(min, extremity, min);\n                vec2Max(max, extremity, max);\n            }\n        }\n    };\n\n    module.exports = bbox;\n\n\n\n/***/ }),\n/* 435 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var eventTool = __webpack_require__(336);\n    var zrUtil = __webpack_require__(317);\n    var Eventful = __webpack_require__(333);\n    var env = __webpack_require__(323);\n    var GestureMgr = __webpack_require__(432);\n\n    var addEventListener = eventTool.addEventListener;\n    var removeEventListener = eventTool.removeEventListener;\n    var normalizeEvent = eventTool.normalizeEvent;\n\n    var TOUCH_CLICK_DELAY = 300;\n\n    var mouseHandlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n\n    var touchHandlerNames = [\n        'touchstart', 'touchend', 'touchmove'\n    ];\n\n    var pointerEventNames = {\n        pointerdown: 1, pointerup: 1, pointermove: 1, pointerout: 1\n    };\n\n    var pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n        var nm = name.replace('mouse', 'pointer');\n        return pointerEventNames[nm] ? nm : name;\n    });\n\n    function eventNameFix(name) {\n        return (name === 'mousewheel' && env.browser.firefox) ? 'DOMMouseScroll' : name;\n    }\n\n    function processGesture(proxy, event, stage) {\n        var gestureMgr = proxy._gestureMgr;\n\n        stage === 'start' && gestureMgr.clear();\n\n        var gestureInfo = gestureMgr.recognize(\n            event,\n            proxy.handler.findHover(event.zrX, event.zrY, null),\n            proxy.dom\n        );\n\n        stage === 'end' && gestureMgr.clear();\n\n        // Do not do any preventDefault here. Upper application do that if necessary.\n        if (gestureInfo) {\n            var type = gestureInfo.type;\n            event.gestureEvent = type;\n\n            proxy.handler.dispatchToElement(gestureInfo.target, type, gestureInfo.event);\n        }\n    }\n\n    // function onMSGestureChange(proxy, event) {\n    //     if (event.translationX || event.translationY) {\n    //         // mousemove is carried by MSGesture to reduce the sensitivity.\n    //         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n    //     }\n    //     if (event.scale !== 1) {\n    //         event.pinchX = event.offsetX;\n    //         event.pinchY = event.offsetY;\n    //         event.pinchScale = event.scale;\n    //         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n    //     }\n    // }\n\n    /**\n     * Prevent mouse event from being dispatched after Touch Events action\n     * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n     * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n     * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n     * Result: Blocking Mouse Events for 700ms.\n     */\n    function setTouchTimer(instance) {\n        instance._touching = true;\n        clearTimeout(instance._touchTimer);\n        instance._touchTimer = setTimeout(function () {\n            instance._touching = false;\n        }, 700);\n    }\n\n\n    var domHandlers = {\n        /**\n         * Mouse move handler\n         * @inner\n         * @param {Event} event\n         */\n        mousemove: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            this.trigger('mousemove', event);\n        },\n\n        /**\n         * Mouse out handler\n         * @inner\n         * @param {Event} event\n         */\n        mouseout: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            var element = event.toElement || event.relatedTarget;\n            if (element != this.dom) {\n                while (element && element.nodeType != 9) {\n                    // 忽略包含在root中的dom引起的mouseOut\n                    if (element === this.dom) {\n                        return;\n                    }\n\n                    element = element.parentNode;\n                }\n            }\n\n            this.trigger('mouseout', event);\n        },\n\n        /**\n         * Touch开始响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchstart: function (event) {\n            // Default mouse behaviour should not be disabled here.\n            // For example, page may needs to be slided.\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            this._lastTouchMoment = new Date();\n\n            processGesture(this, event, 'start');\n\n            // In touch device, trigger `mousemove`(`mouseover`) should\n            // be triggered, and must before `mousedown` triggered.\n            domHandlers.mousemove.call(this, event);\n\n            domHandlers.mousedown.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch移动响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchmove: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'change');\n\n            // Mouse move should always be triggered no matter whether\n            // there is gestrue event, because mouse move and pinch may\n            // be used at the same time.\n            domHandlers.mousemove.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch结束响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchend: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'end');\n\n            domHandlers.mouseup.call(this, event);\n\n            // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n            // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n            // we can conveniently implement \"hover style\" in both PC and touch device just\n            // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n            // to remove \"hover style\" on an element, without any additional code for\n            // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n            // style\" will remain for user view)\n\n            // click event should always be triggered no matter whether\n            // there is gestrue event. System click can not be prevented.\n            if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n                domHandlers.click.call(this, event);\n            }\n\n            setTouchTimer(this);\n        },\n\n        pointerdown: function (event) {\n            domHandlers.mousedown.call(this, event);\n\n            // if (useMSGuesture(this, event)) {\n            //     this._msGesture.addPointer(event.pointerId);\n            // }\n        },\n\n        pointermove: function (event) {\n            // FIXME\n            // pointermove is so sensitive that it always triggered when\n            // tap(click) on touch screen, which affect some judgement in\n            // upper application. So, we dont support mousemove on MS touch\n            // device yet.\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mousemove.call(this, event);\n            }\n        },\n\n        pointerup: function (event) {\n            domHandlers.mouseup.call(this, event);\n        },\n\n        pointerout: function (event) {\n            // pointerout will be triggered when tap on touch screen\n            // (IE11+/Edge on MS Surface) after click event triggered,\n            // which is inconsistent with the mousout behavior we defined\n            // in touchend. So we unify them.\n            // (check domHandlers.touchend for detailed explanation)\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mouseout.call(this, event);\n            }\n        }\n    };\n\n    function isPointerFromTouch(event) {\n        var pointerType = event.pointerType;\n        return pointerType === 'pen' || pointerType === 'touch';\n    }\n\n    // function useMSGuesture(handlerProxy, event) {\n    //     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n    // }\n\n    // Common handlers\n    zrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        domHandlers[name] = function (event) {\n            event = normalizeEvent(this.dom, event);\n            this.trigger(name, event);\n        };\n    });\n\n    /**\n     * 为控制类实例初始化dom 事件处理函数\n     *\n     * @inner\n     * @param {module:zrender/Handler} instance 控制类实例\n     */\n    function initDomHandler(instance) {\n        zrUtil.each(touchHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(pointerHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(mouseHandlerNames, function (name) {\n            instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n        });\n\n        function makeMouseHandler(fn, instance) {\n            return function () {\n                if (instance._touching) {\n                    return;\n                }\n                return fn.apply(instance, arguments);\n            };\n        }\n    }\n\n\n    function HandlerDomProxy(dom) {\n        Eventful.call(this);\n\n        this.dom = dom;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._touching = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._touchTimer;\n\n        /**\n         * @private\n         * @type {module:zrender/core/GestureMgr}\n         */\n        this._gestureMgr = new GestureMgr();\n\n        this._handlers = {};\n\n        initDomHandler(this);\n\n        if (env.pointerEventsSupported) { // Only IE11+/Edge\n            // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n            // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n            // at the same time.\n            // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n            // screen, which do not occurs in pointer event.\n            // So we use pointer event to both detect touch gesture and mouse behavior.\n            mountHandlers(pointerHandlerNames, this);\n\n            // FIXME\n            // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n            // which does not prevent defuault behavior occasionally (which may cause view port\n            // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n            // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n            // touch screen. And we only support click behavior on MS touch screen now.\n\n            // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n            // We dont support touch on IE on win7.\n            // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n            // if (typeof MSGesture === 'function') {\n            //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n            //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n            // }\n        }\n        else {\n            if (env.touchEventsSupported) {\n                mountHandlers(touchHandlerNames, this);\n                // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n                // addEventListener(root, 'mouseout', this._mouseoutHandler);\n            }\n\n            // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n            // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n            // mouse event can not be handle in those devices.\n            // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n            // mouseevent after touch event triggered, see `setTouchTimer`.\n            mountHandlers(mouseHandlerNames, this);\n        }\n\n        function mountHandlers(handlerNames, instance) {\n            zrUtil.each(handlerNames, function (name) {\n                addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n            }, instance);\n        }\n    }\n\n    var handlerDomProxyProto = HandlerDomProxy.prototype;\n    handlerDomProxyProto.dispose = function () {\n        var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n        for (var i = 0; i < handlerNames.length; i++) {\n            var name = handlerNames[i];\n            removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n        }\n    };\n\n    handlerDomProxyProto.setCursor = function (cursorStyle) {\n        this.dom.style.cursor = cursorStyle || 'default';\n    };\n\n    zrUtil.mixin(HandlerDomProxy, Eventful);\n\n    module.exports = HandlerDomProxy;\n\n\n/***/ }),\n/* 436 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// CompoundPath to improve performance\n\n\n    var Path = __webpack_require__(322);\n    module.exports = Path.extend({\n\n        type: 'compound',\n\n        shape: {\n\n            paths: null\n        },\n\n        _updatePathDirty: function () {\n            var dirtyPath = this.__dirtyPath;\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                // Mark as dirty if any subpath is dirty\n                dirtyPath = dirtyPath || paths[i].__dirtyPath;\n            }\n            this.__dirtyPath = dirtyPath;\n            this.__dirty = this.__dirty || dirtyPath;\n        },\n\n        beforeBrush: function () {\n            this._updatePathDirty();\n            var paths = this.shape.paths || [];\n            var scale = this.getGlobalScale();\n            // Update path scale\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].path.setScale(scale[0], scale[1]);\n            }\n        },\n\n        buildPath: function (ctx, shape) {\n            var paths = shape.paths || [];\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].buildPath(ctx, paths[i].shape, true);\n            }\n        },\n\n        afterBrush: function () {\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].__dirtyPath = false;\n            }\n        },\n\n        getBoundingRect: function () {\n            this._updatePathDirty();\n            return Path.prototype.getBoundingRect.call(this);\n        }\n    });\n\n\n/***/ }),\n/* 437 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(317);\n\n    var Gradient = __webpack_require__(348);\n\n    /**\n     * x, y, r are all percent from 0 to 1\n     * @param {number} [x=0.5]\n     * @param {number} [y=0.5]\n     * @param {number} [r=0.5]\n     * @param {Array.<Object>} [colorStops]\n     * @param {boolean} [globalCoord=false]\n     */\n    var RadialGradient = function (x, y, r, colorStops, globalCoord) {\n        this.x = x == null ? 0.5 : x;\n\n        this.y = y == null ? 0.5 : y;\n\n        this.r = r == null ? 0.5 : r;\n\n        // Can be cloned\n        this.type = 'radial';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    RadialGradient.prototype = {\n\n        constructor: RadialGradient\n    };\n\n    zrUtil.inherits(RadialGradient, Gradient);\n\n    module.exports = RadialGradient;\n\n\n/***/ }),\n/* 438 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Text element\n * @module zrender/graphic/Text\n *\n * TODO Wrapping\n *\n * Text not support gradient\n */\n\n\n\n    var Displayable = __webpack_require__(347);\n    var zrUtil = __webpack_require__(317);\n    var textContain = __webpack_require__(334);\n\n    /**\n     * @alias zrender/graphic/Text\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    var Text = function (opts) {\n        Displayable.call(this, opts);\n    };\n\n    Text.prototype = {\n\n        constructor: Text,\n\n        type: 'text',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var x = style.x || 0;\n            var y = style.y || 0;\n            // Convert to string\n            var text = style.text;\n\n            // Convert to string\n            text != null && (text += '');\n\n            // Always bind style\n            style.bind(ctx, this, prevEl);\n\n            if (text) {\n\n                this.setTransform(ctx);\n\n                var textBaseline;\n                var textAlign = style.textAlign;\n                var font = style.textFont || style.font;\n                if (style.textVerticalAlign) {\n                    var rect = textContain.getBoundingRect(\n                        text, font, style.textAlign, 'top'\n                    );\n                    // Ignore textBaseline\n                    textBaseline = 'middle';\n                    switch (style.textVerticalAlign) {\n                        case 'middle':\n                            y -= rect.height / 2 - rect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= rect.height - rect.lineHeight / 2;\n                            break;\n                        default:\n                            y += rect.lineHeight / 2;\n                    }\n                }\n                else {\n                    textBaseline = style.textBaseline;\n                }\n\n                // TODO Invalid font\n                ctx.font = font || '12px sans-serif';\n                ctx.textAlign = textAlign || 'left';\n                // Use canvas default left textAlign. Giving invalid value will cause state not change\n                if (ctx.textAlign !== textAlign) {\n                    ctx.textAlign = 'left';\n                }\n                ctx.textBaseline = textBaseline || 'alphabetic';\n                // Use canvas default alphabetic baseline\n                if (ctx.textBaseline !== textBaseline) {\n                    ctx.textBaseline = 'alphabetic';\n                }\n\n                var lineHeight = textContain.measureText('国', ctx.font).width;\n\n                var textLines = text.split('\\n');\n                for (var i = 0; i < textLines.length; i++) {\n                    style.hasFill() && ctx.fillText(textLines[i], x, y);\n                    style.hasStroke() && ctx.strokeText(textLines[i], x, y);\n                    y += lineHeight;\n                }\n\n                this.restoreTransform(ctx);\n            }\n        },\n\n        getBoundingRect: function () {\n            if (!this._rect) {\n                var style = this.style;\n                var textVerticalAlign = style.textVerticalAlign;\n                var rect = textContain.getBoundingRect(\n                    style.text + '', style.textFont || style.font, style.textAlign,\n                    textVerticalAlign ? 'top' : style.textBaseline\n                );\n                switch (textVerticalAlign) {\n                    case 'middle':\n                        rect.y -= rect.height / 2;\n                        break;\n                    case 'bottom':\n                        rect.y -= rect.height;\n                        break;\n                }\n                rect.x += style.x || 0;\n                rect.y += style.y || 0;\n                this._rect = rect;\n            }\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(Text, Displayable);\n\n    module.exports = Text;\n\n\n/***/ }),\n/* 439 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = {\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            var r = shape.r;\n            var r1;\n            var r2;\n            var r3;\n            var r4;\n\n            // Convert width and height to positive for better borderRadius\n            if (width < 0) {\n                x = x + width;\n                width = -width;\n            }\n            if (height < 0) {\n                y = y + height;\n                height = -height;\n            }\n\n            if (typeof r === 'number') {\n                r1 = r2 = r3 = r4 = r;\n            }\n            else if (r instanceof Array) {\n                if (r.length === 1) {\n                    r1 = r2 = r3 = r4 = r[0];\n                }\n                else if (r.length === 2) {\n                    r1 = r3 = r[0];\n                    r2 = r4 = r[1];\n                }\n                else if (r.length === 3) {\n                    r1 = r[0];\n                    r2 = r4 = r[1];\n                    r3 = r[2];\n                }\n                else {\n                    r1 = r[0];\n                    r2 = r[1];\n                    r3 = r[2];\n                    r4 = r[3];\n                }\n            }\n            else {\n                r1 = r2 = r3 = r4 = 0;\n            }\n\n            var total;\n            if (r1 + r2 > width) {\n                total = r1 + r2;\n                r1 *= width / total;\n                r2 *= width / total;\n            }\n            if (r3 + r4 > width) {\n                total = r3 + r4;\n                r3 *= width / total;\n                r4 *= width / total;\n            }\n            if (r2 + r3 > height) {\n                total = r2 + r3;\n                r2 *= height / total;\n                r3 *= height / total;\n            }\n            if (r1 + r4 > height) {\n                total = r1 + r4;\n                r1 *= height / total;\n                r4 *= height / total;\n            }\n            ctx.moveTo(x + r1, y);\n            ctx.lineTo(x + width - r2, y);\n            r2 !== 0 && ctx.quadraticCurveTo(\n                x + width, y, x + width, y + r2\n            );\n            ctx.lineTo(x + width, y + height - r3);\n            r3 !== 0 && ctx.quadraticCurveTo(\n                x + width, y + height, x + width - r3, y + height\n            );\n            ctx.lineTo(x + r4, y + height);\n            r4 !== 0 && ctx.quadraticCurveTo(\n                x, y + height, x, y + height - r4\n            );\n            ctx.lineTo(x, y + r1);\n            r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n        }\n    };\n\n\n/***/ }),\n/* 440 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n\n    var vec2 = __webpack_require__(321);\n    var v2Min = vec2.min;\n    var v2Max = vec2.max;\n    var v2Scale = vec2.scale;\n    var v2Distance = vec2.distance;\n    var v2Add = vec2.add;\n\n    /**\n     * 贝塞尔平滑曲线\n     * @alias module:zrender/shape/util/smoothBezier\n     * @param {Array} points 线段顶点数组\n     * @param {number} smooth 平滑等级, 0-1\n     * @param {boolean} isLoop\n     * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n     *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n     *                           整个折线的包围盒做一个并集用来约束控制点。\n     * @param {Array} 计算出来的控制点数组\n     */\n    module.exports = function (points, smooth, isLoop, constraint) {\n        var cps = [];\n\n        var v = [];\n        var v1 = [];\n        var v2 = [];\n        var prevPoint;\n        var nextPoint;\n\n        var min, max;\n        if (constraint) {\n            min = [Infinity, Infinity];\n            max = [-Infinity, -Infinity];\n            for (var i = 0, len = points.length; i < len; i++) {\n                v2Min(min, min, points[i]);\n                v2Max(max, max, points[i]);\n            }\n            // 与指定的包围盒做并集\n            v2Min(min, min, constraint[0]);\n            v2Max(max, max, constraint[1]);\n        }\n\n        for (var i = 0, len = points.length; i < len; i++) {\n            var point = points[i];\n\n            if (isLoop) {\n                prevPoint = points[i ? i - 1 : len - 1];\n                nextPoint = points[(i + 1) % len];\n            }\n            else {\n                if (i === 0 || i === len - 1) {\n                    cps.push(vec2.clone(points[i]));\n                    continue;\n                }\n                else {\n                    prevPoint = points[i - 1];\n                    nextPoint = points[i + 1];\n                }\n            }\n\n            vec2.sub(v, nextPoint, prevPoint);\n\n            // use degree to scale the handle length\n            v2Scale(v, v, smooth);\n\n            var d0 = v2Distance(point, prevPoint);\n            var d1 = v2Distance(point, nextPoint);\n            var sum = d0 + d1;\n            if (sum !== 0) {\n                d0 /= sum;\n                d1 /= sum;\n            }\n\n            v2Scale(v1, v, -d0);\n            v2Scale(v2, v, d1);\n            var cp0 = v2Add([], point, v1);\n            var cp1 = v2Add([], point, v2);\n            if (constraint) {\n                v2Max(cp0, cp0, min);\n                v2Min(cp0, cp0, max);\n                v2Max(cp1, cp1, min);\n                v2Min(cp1, cp1, max);\n            }\n            cps.push(cp0);\n            cps.push(cp1);\n        }\n\n        if (isLoop) {\n            cps.push(cps.shift());\n        }\n\n        return cps;\n    };\n\n\n\n/***/ }),\n/* 441 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n    var vec2 = __webpack_require__(321);\n\n    /**\n     * @inner\n     */\n    function interpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    /**\n     * @alias module:zrender/shape/util/smoothSpline\n     * @param {Array} points 线段顶点数组\n     * @param {boolean} isLoop\n     * @return {Array}\n     */\n    module.exports = function (points, isLoop) {\n        var len = points.length;\n        var ret = [];\n\n        var distance = 0;\n        for (var i = 1; i < len; i++) {\n            distance += vec2.distance(points[i - 1], points[i]);\n        }\n\n        var segs = distance / 2;\n        segs = segs < len ? len : segs;\n        for (var i = 0; i < segs; i++) {\n            var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n            var idx = Math.floor(pos);\n\n            var w = pos - idx;\n\n            var p0;\n            var p1 = points[idx % len];\n            var p2;\n            var p3;\n            if (!isLoop) {\n                p0 = points[idx === 0 ? idx : idx - 1];\n                p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n                p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n            }\n            else {\n                p0 = points[(idx - 1 + len) % len];\n                p2 = points[(idx + 1) % len];\n                p3 = points[(idx + 2) % len];\n            }\n\n            var w2 = w * w;\n            var w3 = w * w2;\n\n            ret.push([\n                interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3),\n                interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)\n            ]);\n        }\n        return ret;\n    };\n\n\n\n/***/ }),\n/* 442 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\n\n\n\n    var textContain = __webpack_require__(334);\n    var BoundingRect = __webpack_require__(326);\n\n    var tmpRect = new BoundingRect();\n\n    var RectText = function () {};\n\n    function parsePercent(value, maxValue) {\n        if (typeof value === 'string') {\n            if (value.lastIndexOf('%') >= 0) {\n                return parseFloat(value) / 100 * maxValue;\n            }\n            return parseFloat(value);\n        }\n        return value;\n    }\n\n    RectText.prototype = {\n\n        constructor: RectText,\n\n        /**\n         * Draw text in a rect with specified position.\n         * @param  {CanvasRenderingContext} ctx\n         * @param  {Object} rect Displayable rect\n         * @return {Object} textRect Alternative precalculated text bounding rect\n         */\n        drawRectText: function (ctx, rect, textRect) {\n            var style = this.style;\n            var text = style.text;\n            // Convert to string\n            text != null && (text += '');\n            if (!text) {\n                return;\n            }\n\n            // FIXME\n            ctx.save();\n\n            var x;\n            var y;\n            var textPosition = style.textPosition;\n            var textOffset = style.textOffset;\n            var distance = style.textDistance;\n            var align = style.textAlign;\n            var font = style.textFont || style.font;\n            var baseline = style.textBaseline;\n            var verticalAlign = style.textVerticalAlign;\n\n            textRect = textRect || textContain.getBoundingRect(text, font, align, baseline);\n\n            // Transform rect to view space\n            var transform = this.transform;\n            if (!style.textTransform) {\n                if (transform) {\n                    tmpRect.copy(rect);\n                    tmpRect.applyTransform(transform);\n                    rect = tmpRect;\n                }\n            }\n            else {\n                this.setTransform(ctx);\n            }\n\n            // Text position represented by coord\n            if (textPosition instanceof Array) {\n                // Percent\n                x = rect.x + parsePercent(textPosition[0], rect.width);\n                y = rect.y + parsePercent(textPosition[1], rect.height);\n                align = align || 'left';\n                baseline = baseline || 'top';\n\n                if (verticalAlign) {\n                    switch (verticalAlign) {\n                        case 'middle':\n                            y -= textRect.height / 2 - textRect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= textRect.height - textRect.lineHeight / 2;\n                            break;\n                        default:\n                            y += textRect.lineHeight / 2;\n                    }\n                    // Force bseline to be middle\n                    baseline = 'middle';\n                }\n            }\n            else {\n                var res = textContain.adjustTextPositionOnRect(\n                    textPosition, rect, textRect, distance\n                );\n                x = res.x;\n                y = res.y;\n                // Default align and baseline when has textPosition\n                align = align || res.textAlign;\n                baseline = baseline || res.textBaseline;\n            }\n\n            if (textOffset) {\n                x += textOffset[0];\n                y += textOffset[1];\n            }\n\n            // Use canvas default left textAlign. Giving invalid value will cause state not change\n            ctx.textAlign = align || 'left';\n            // Use canvas default alphabetic baseline\n            ctx.textBaseline = baseline || 'alphabetic';\n\n            var textFill = style.textFill;\n            var textStroke = style.textStroke;\n            textFill && (ctx.fillStyle = textFill);\n            textStroke && (ctx.strokeStyle = textStroke);\n\n            // TODO Invalid font\n            ctx.font = font || '12px sans-serif';\n\n            // Text shadow\n            // Always set shadowBlur and shadowOffset to avoid leak from displayable\n            ctx.shadowBlur = style.textShadowBlur;\n            ctx.shadowColor = style.textShadowColor || 'transparent';\n            ctx.shadowOffsetX = style.textShadowOffsetX;\n            ctx.shadowOffsetY = style.textShadowOffsetY;\n\n            var textLines = text.split('\\n');\n\n            if (style.textRotation) {\n                transform && ctx.translate(transform[4], transform[5]);\n                ctx.rotate(style.textRotation);\n                transform && ctx.translate(-transform[4], -transform[5]);\n            }\n\n            for (var i = 0; i < textLines.length; i++) {\n                textFill && ctx.fillText(textLines[i], x, y);\n                textStroke && ctx.strokeText(textLines[i], x, y);\n                y += textRect.lineHeight;\n            }\n\n            ctx.restore();\n        }\n    };\n\n    module.exports = RectText;\n\n\n/***/ }),\n/* 443 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\n \n\n    module.exports = __webpack_require__(322).extend({\n\n        type: 'arc',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        style: {\n\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r + x, unitY * r + y);\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n        }\n    });\n\n\n/***/ }),\n/* 444 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\n\n\n    var curveTool = __webpack_require__(331);\n    var vec2 = __webpack_require__(321);\n    var quadraticSubdivide = curveTool.quadraticSubdivide;\n    var cubicSubdivide = curveTool.cubicSubdivide;\n    var quadraticAt = curveTool.quadraticAt;\n    var cubicAt = curveTool.cubicAt;\n    var quadraticDerivativeAt = curveTool.quadraticDerivativeAt;\n    var cubicDerivativeAt = curveTool.cubicDerivativeAt;\n\n    var out = [];\n\n    function someVectorAt(shape, t, isTangent) {\n        var cpx2 = shape.cpx2;\n        var cpy2 = shape.cpy2;\n        if (cpx2 === null || cpy2 === null) {\n            return [\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t),\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)\n            ];\n        }\n        else {\n            return [\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t),\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)\n            ];\n        }\n    }\n    module.exports = __webpack_require__(322).extend({\n\n        type: 'bezier-curve',\n\n        shape: {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n            cpx1: 0,\n            cpy1: 0,\n            // cpx2: 0,\n            // cpy2: 0\n\n            // Curve show percent, for animating\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var cpx1 = shape.cpx1;\n            var cpy1 = shape.cpy1;\n            var cpx2 = shape.cpx2;\n            var cpy2 = shape.cpy2;\n            var percent = shape.percent;\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (cpx2 == null || cpy2 == null) {\n                if (percent < 1) {\n                    quadraticSubdivide(\n                        x1, cpx1, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    x2 = out[2];\n                    quadraticSubdivide(\n                        y1, cpy1, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    y2 = out[2];\n                }\n\n                ctx.quadraticCurveTo(\n                    cpx1, cpy1,\n                    x2, y2\n                );\n            }\n            else {\n                if (percent < 1) {\n                    cubicSubdivide(\n                        x1, cpx1, cpx2, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    cpx2 = out[2];\n                    x2 = out[3];\n                    cubicSubdivide(\n                        y1, cpy1, cpy2, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    cpy2 = out[2];\n                    y2 = out[3];\n                }\n                ctx.bezierCurveTo(\n                    cpx1, cpy1,\n                    cpx2, cpy2,\n                    x2, y2\n                );\n            }\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        pointAt: function (t) {\n            return someVectorAt(this.shape, t, false);\n        },\n\n        /**\n         * Get tangent at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        tangentAt: function (t) {\n            var p = someVectorAt(this.shape, t, true);\n            return vec2.normalize(p, p);\n        }\n    });\n\n\n\n/***/ }),\n/* 445 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\n\n\n\n    module.exports = __webpack_require__(322).extend({\n\n        type: 'circle',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0\n        },\n\n\n        buildPath : function (ctx, shape, inBundle) {\n            // Better stroking in ShapeBundle\n            // Always do it may have performence issue ( fill may be 2x more cost)\n            if (inBundle) {\n                ctx.moveTo(shape.cx + shape.r, shape.cy);\n            }\n            // Better stroking in ShapeBundle\n            // ctx.moveTo(shape.cx + shape.r, shape.cy);\n            ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n        }\n    });\n\n\n\n/***/ }),\n/* 446 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\n\n    module.exports = __webpack_require__(322).extend({\n\n        type: 'line',\n\n        shape: {\n            // Start point\n            x1: 0,\n            y1: 0,\n            // End point\n            x2: 0,\n            y2: 0,\n\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var percent = shape.percent;\n\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (percent < 1) {\n                x2 = x1 * (1 - percent) + x2 * percent;\n                y2 = y1 * (1 - percent) + y2 * percent;\n            }\n            ctx.lineTo(x2, y2);\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} percent\n         * @return {Array.<number>}\n         */\n        pointAt: function (p) {\n            var shape = this.shape;\n            return [\n                shape.x1 * (1 - p) + shape.x2 * p,\n                shape.y1 * (1 - p) + shape.y2 * p\n            ];\n        }\n    });\n\n\n\n/***/ }),\n/* 447 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\n\n\n    var polyHelper = __webpack_require__(368);\n\n    module.exports = __webpack_require__(322).extend({\n        \n        type: 'polygon',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, true);\n        }\n    });\n\n\n/***/ }),\n/* 448 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\n\n\n    var polyHelper = __webpack_require__(368);\n\n    module.exports = __webpack_require__(322).extend({\n        \n        type: 'polyline',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        style: {\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, false);\n        }\n    });\n\n\n/***/ }),\n/* 449 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\n\n\n    var roundRectHelper = __webpack_require__(439);\n\n    module.exports = __webpack_require__(322).extend({\n\n        type: 'rect',\n\n        shape: {\n            // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n            // r缩写为1         相当于 [1, 1, 1, 1]\n            // r缩写为[1]       相当于 [1, 1, 1, 1]\n            // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n            // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n            r: 0,\n\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            if (!shape.r) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, shape);\n            }\n            ctx.closePath();\n            return;\n        }\n    });\n\n\n\n/***/ }),\n/* 450 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\n\n\n    module.exports = __webpack_require__(322).extend({\n\n        type: 'ring',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0,\n            r0: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.cx;\n            var y = shape.cy;\n            var PI2 = Math.PI * 2;\n            ctx.moveTo(x + shape.r, y);\n            ctx.arc(x, y, shape.r, 0, PI2, false);\n            ctx.moveTo(x + shape.r0, y);\n            ctx.arc(x, y, shape.r0, 0, PI2, true);\n        }\n    });\n\n\n\n/***/ }),\n/* 451 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\n\n\n\n    var env = __webpack_require__(323);\n    var Path = __webpack_require__(322);\n\n    var shadowTemp = [\n        ['shadowBlur', 0],\n        ['shadowColor', '#000'],\n        ['shadowOffsetX', 0],\n        ['shadowOffsetY', 0]\n    ];\n\n    module.exports = Path.extend({\n\n        type: 'sector',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r0: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        brush: (env.browser.ie && env.browser.version >= 11) // version: '11.0'\n            // Fix weird bug in some version of IE11 (like 11.0.9600.17801),\n            // where exception \"unexpected call to method or property access\"\n            // might be thrown when calling ctx.fill after a path whose area size\n            // is zero is drawn and ctx.clip() is called and shadowBlur is set.\n            // (e.g.,\n            //  ctx.moveTo(10, 10);\n            //  ctx.lineTo(20, 10);\n            //  ctx.closePath();\n            //  ctx.clip();\n            //  ctx.shadowBlur = 10;\n            //  ...\n            //  ctx.fill();\n            // )\n            ? function () {\n                var clipPaths = this.__clipPaths;\n                var style = this.style;\n                var modified;\n\n                if (clipPaths) {\n                    for (var i = 0; i < clipPaths.length; i++) {\n                        var shape = clipPaths[i] && clipPaths[i].shape;\n                        if (shape && shape.startAngle === shape.endAngle) {\n                            for (var j = 0; j < shadowTemp.length; j++) {\n                                shadowTemp[j][2] = style[shadowTemp[j][0]];\n                                style[shadowTemp[j][0]] = shadowTemp[j][1];\n                            }\n                            modified = true;\n                            break;\n                        }\n                    }\n                }\n\n                Path.prototype.brush.apply(this, arguments);\n\n                if (modified) {\n                    for (var j = 0; j < shadowTemp.length; j++) {\n                        style[shadowTemp[j][0]] = shadowTemp[j][2];\n                    }\n                }\n            }\n            : Path.prototype.brush,\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r0 = Math.max(shape.r0 || 0, 0);\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n\n            ctx.lineTo(unitX * r + x, unitY * r + y);\n\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n\n            ctx.lineTo(\n                Math.cos(endAngle) * r0 + x,\n                Math.sin(endAngle) * r0 + y\n            );\n\n            if (r0 !== 0) {\n                ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n            }\n\n            ctx.closePath();\n        }\n    });\n\n\n\n/***/ }),\n/* 452 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module zrender/mixin/Animatable\n */\n\n\n    var Animator = __webpack_require__(360);\n    var util = __webpack_require__(317);\n    var isString = util.isString;\n    var isFunction = util.isFunction;\n    var isObject = util.isObject;\n    var log = __webpack_require__(364);\n\n    /**\n     * @alias modue:zrender/mixin/Animatable\n     * @constructor\n     */\n    var Animatable = function () {\n\n        /**\n         * @type {Array.<module:zrender/animation/Animator>}\n         * @readOnly\n         */\n        this.animators = [];\n    };\n\n    Animatable.prototype = {\n\n        constructor: Animatable,\n\n        /**\n         * 动画\n         *\n         * @param {string} path 需要添加动画的属性获取路径，可以通过a.b.c来获取深层的属性\n         * @param {boolean} [loop] 动画是否循环\n         * @return {module:zrender/animation/Animator}\n         * @example:\n         *     el.animate('style', false)\n         *         .when(1000, {x: 10} )\n         *         .done(function(){ // Animation done })\n         *         .start()\n         */\n        animate: function (path, loop) {\n            var target;\n            var animatingShape = false;\n            var el = this;\n            var zr = this.__zr;\n            if (path) {\n                var pathSplitted = path.split('.');\n                var prop = el;\n                // If animating shape\n                animatingShape = pathSplitted[0] === 'shape';\n                for (var i = 0, l = pathSplitted.length; i < l; i++) {\n                    if (!prop) {\n                        continue;\n                    }\n                    prop = prop[pathSplitted[i]];\n                }\n                if (prop) {\n                    target = prop;\n                }\n            }\n            else {\n                target = el;\n            }\n\n            if (!target) {\n                log(\n                    'Property \"'\n                    + path\n                    + '\" is not existed in element '\n                    + el.id\n                );\n                return;\n            }\n\n            var animators = el.animators;\n\n            var animator = new Animator(target, loop);\n\n            animator.during(function (target) {\n                el.dirty(animatingShape);\n            })\n            .done(function () {\n                // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n                animators.splice(util.indexOf(animators, animator), 1);\n            });\n\n            animators.push(animator);\n\n            // If animate after added to the zrender\n            if (zr) {\n                zr.animation.addAnimator(animator);\n            }\n\n            return animator;\n        },\n\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stopAnimation: function (forwardToLast) {\n            var animators = this.animators;\n            var len = animators.length;\n            for (var i = 0; i < len; i++) {\n                animators[i].stop(forwardToLast);\n            }\n            animators.length = 0;\n\n            return this;\n        },\n\n        /**\n         * @param {Object} target\n         * @param {number} [time=500] Time in ms\n         * @param {string} [easing='linear']\n         * @param {number} [delay=0]\n         * @param {Function} [callback]\n         *\n         * @example\n         *  // Animate position\n         *  el.animateTo({\n         *      position: [10, 10]\n         *  }, function () { // done })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n         *  el.animateTo({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100, 'cubicOut', function () { // done })\n         */\n         // TODO Return animation key\n        animateTo: function (target, time, delay, easing, callback) {\n            // animateTo(target, time, easing, callback);\n            if (isString(delay)) {\n                callback = easing;\n                easing = delay;\n                delay = 0;\n            }\n            // animateTo(target, time, delay, callback);\n            else if (isFunction(easing)) {\n                callback = easing;\n                easing = 'linear';\n                delay = 0;\n            }\n            // animateTo(target, time, callback);\n            else if (isFunction(delay)) {\n                callback = delay;\n                delay = 0;\n            }\n            // animateTo(target, callback)\n            else if (isFunction(time)) {\n                callback = time;\n                time = 500;\n            }\n            // animateTo(target)\n            else if (!time) {\n                time = 500;\n            }\n            // Stop all previous animations\n            this.stopAnimation();\n            this._animateToShallow('', this, target, time, delay, easing, callback);\n\n            // Animators may be removed immediately after start\n            // if there is nothing to animate\n            var animators = this.animators.slice();\n            var count = animators.length;\n            function done() {\n                count--;\n                if (!count) {\n                    callback && callback();\n                }\n            }\n\n            // No animators. This should be checked before animators[i].start(),\n            // because 'done' may be executed immediately if no need to animate.\n            if (!count) {\n                callback && callback();\n            }\n            // Start after all animators created\n            // Incase any animator is done immediately when all animation properties are not changed\n            for (var i = 0; i < animators.length; i++) {\n                animators[i]\n                    .done(done)\n                    .start(easing);\n            }\n        },\n\n        /**\n         * @private\n         * @param {string} path=''\n         * @param {Object} source=this\n         * @param {Object} target\n         * @param {number} [time=500]\n         * @param {number} [delay=0]\n         *\n         * @example\n         *  // Animate position\n         *  el._animateToShallow({\n         *      position: [10, 10]\n         *  })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms\n         *  el._animateToShallow({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100)\n         */\n        _animateToShallow: function (path, source, target, time, delay) {\n            var objShallow = {};\n            var propertyCount = 0;\n            for (var name in target) {\n                if (!target.hasOwnProperty(name)) {\n                    continue;\n                }\n\n                if (source[name] != null) {\n                    if (isObject(target[name]) && !util.isArrayLike(target[name])) {\n                        this._animateToShallow(\n                            path ? path + '.' + name : name,\n                            source[name],\n                            target[name],\n                            time,\n                            delay\n                        );\n                    }\n                    else {\n                        objShallow[name] = target[name];\n                        propertyCount++;\n                    }\n                }\n                else if (target[name] != null) {\n                    // Attr directly if not has property\n                    // FIXME, if some property not needed for element ?\n                    if (!path) {\n                        this.attr(name, target[name]);\n                    }\n                    else {  // Shape or style\n                        var props = {};\n                        props[path] = {};\n                        props[path][name] = target[name];\n                        this.attr(props);\n                    }\n                }\n            }\n\n            if (propertyCount > 0) {\n                this.animate(path, false)\n                    .when(time == null ? 500 : time, objShallow)\n                    .delay(delay || 0);\n            }\n\n            return this;\n        }\n    };\n\n    module.exports = Animatable;\n\n\n/***/ }),\n/* 453 */\n/***/ (function(module, exports) {\n\n// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\n\n    function Draggable() {\n\n        this.on('mousedown', this._dragStart, this);\n        this.on('mousemove', this._drag, this);\n        this.on('mouseup', this._dragEnd, this);\n        this.on('globalout', this._dragEnd, this);\n        // this._dropTarget = null;\n        // this._draggingTarget = null;\n\n        // this._x = 0;\n        // this._y = 0;\n    }\n\n    Draggable.prototype = {\n\n        constructor: Draggable,\n\n        _dragStart: function (e) {\n            var draggingTarget = e.target;\n            if (draggingTarget && draggingTarget.draggable) {\n                this._draggingTarget = draggingTarget;\n                draggingTarget.dragging = true;\n                this._x = e.offsetX;\n                this._y = e.offsetY;\n\n                this.dispatchToElement(draggingTarget, 'dragstart', e.event);\n            }\n        },\n\n        _drag: function (e) {\n            var draggingTarget = this._draggingTarget;\n            if (draggingTarget) {\n\n                var x = e.offsetX;\n                var y = e.offsetY;\n\n                var dx = x - this._x;\n                var dy = y - this._y;\n                this._x = x;\n                this._y = y;\n\n                draggingTarget.drift(dx, dy, e);\n                this.dispatchToElement(draggingTarget, 'drag', e.event);\n\n                var dropTarget = this.findHover(x, y, draggingTarget);\n                var lastDropTarget = this._dropTarget;\n                this._dropTarget = dropTarget;\n\n                if (draggingTarget !== dropTarget) {\n                    if (lastDropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(lastDropTarget, 'dragleave', e.event);\n                    }\n                    if (dropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(dropTarget, 'dragenter', e.event);\n                    }\n                }\n            }\n        },\n\n        _dragEnd: function (e) {\n            var draggingTarget = this._draggingTarget;\n\n            if (draggingTarget) {\n                draggingTarget.dragging = false;\n            }\n\n            this.dispatchToElement(draggingTarget, 'dragend', e.event);\n\n            if (this._dropTarget) {\n                this.dispatchToElement(this._dropTarget, 'drop', e.event);\n            }\n\n            this._draggingTarget = null;\n            this._dropTarget = null;\n        }\n\n    };\n\n    module.exports = Draggable;\n\n\n/***/ }),\n/* 454 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\n\n\n    var matrix = __webpack_require__(335);\n    var vector = __webpack_require__(321);\n    var mIdentity = matrix.identity;\n\n    var EPSILON = 5e-5;\n\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n\n    /**\n     * @alias module:zrender/mixin/Transformable\n     * @constructor\n     */\n    var Transformable = function (opts) {\n        opts = opts || {};\n        // If there are no given position, rotation, scale\n        if (!opts.position) {\n            /**\n             * 平移\n             * @type {Array.<number>}\n             * @default [0, 0]\n             */\n            this.position = [0, 0];\n        }\n        if (opts.rotation == null) {\n            /**\n             * 旋转\n             * @type {Array.<number>}\n             * @default 0\n             */\n            this.rotation = 0;\n        }\n        if (!opts.scale) {\n            /**\n             * 缩放\n             * @type {Array.<number>}\n             * @default [1, 1]\n             */\n            this.scale = [1, 1];\n        }\n        /**\n         * 旋转和缩放的原点\n         * @type {Array.<number>}\n         * @default null\n         */\n        this.origin = this.origin || null;\n    };\n\n    var transformableProto = Transformable.prototype;\n    transformableProto.transform = null;\n\n    /**\n     * 判断是否需要有坐标变换\n     * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n     */\n    transformableProto.needLocalTransform = function () {\n        return isNotAroundZero(this.rotation)\n            || isNotAroundZero(this.position[0])\n            || isNotAroundZero(this.position[1])\n            || isNotAroundZero(this.scale[0] - 1)\n            || isNotAroundZero(this.scale[1] - 1);\n    };\n\n    transformableProto.updateTransform = function () {\n        var parent = this.parent;\n        var parentHasTransform = parent && parent.transform;\n        var needLocalTransform = this.needLocalTransform();\n\n        var m = this.transform;\n        if (!(needLocalTransform || parentHasTransform)) {\n            m && mIdentity(m);\n            return;\n        }\n\n        m = m || matrix.create();\n\n        if (needLocalTransform) {\n            this.getLocalTransform(m);\n        }\n        else {\n            mIdentity(m);\n        }\n\n        // 应用父节点变换\n        if (parentHasTransform) {\n            if (needLocalTransform) {\n                matrix.mul(m, parent.transform, m);\n            }\n            else {\n                matrix.copy(m, parent.transform);\n            }\n        }\n        // 保存这个变换矩阵\n        this.transform = m;\n\n        this.invTransform = this.invTransform || matrix.create();\n        matrix.invert(this.invTransform, m);\n    };\n\n    transformableProto.getLocalTransform = function (m) {\n        m = m || [];\n        mIdentity(m);\n\n        var origin = this.origin;\n\n        var scale = this.scale;\n        var rotation = this.rotation;\n        var position = this.position;\n        if (origin) {\n            // Translate to origin\n            m[4] -= origin[0];\n            m[5] -= origin[1];\n        }\n        matrix.scale(m, m, scale);\n        if (rotation) {\n            matrix.rotate(m, m, rotation);\n        }\n        if (origin) {\n            // Translate back from origin\n            m[4] += origin[0];\n            m[5] += origin[1];\n        }\n\n        m[4] += position[0];\n        m[5] += position[1];\n\n        return m;\n    };\n    /**\n     * 将自己的transform应用到context上\n     * @param {Context2D} ctx\n     */\n    transformableProto.setTransform = function (ctx) {\n        var m = this.transform;\n        var dpr = ctx.dpr || 1;\n        if (m) {\n            ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n        }\n        else {\n            ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n        }\n    };\n\n    transformableProto.restoreTransform = function (ctx) {\n        var m = this.transform;\n        var dpr = ctx.dpr || 1;\n        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n    }\n\n    var tmpTransform = [];\n\n    /**\n     * 分解`transform`矩阵到`position`, `rotation`, `scale`\n     */\n    transformableProto.decomposeTransform = function () {\n        if (!this.transform) {\n            return;\n        }\n        var parent = this.parent;\n        var m = this.transform;\n        if (parent && parent.transform) {\n            // Get local transform and decompose them to position, scale, rotation\n            matrix.mul(tmpTransform, parent.invTransform, m);\n            m = tmpTransform;\n        }\n        var sx = m[0] * m[0] + m[1] * m[1];\n        var sy = m[2] * m[2] + m[3] * m[3];\n        var position = this.position;\n        var scale = this.scale;\n        if (isNotAroundZero(sx - 1)) {\n            sx = Math.sqrt(sx);\n        }\n        if (isNotAroundZero(sy - 1)) {\n            sy = Math.sqrt(sy);\n        }\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        position[0] = m[4];\n        position[1] = m[5];\n        scale[0] = sx;\n        scale[1] = sy;\n        this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n    };\n\n    /**\n     * Get global scale\n     * @return {Array.<number>}\n     */\n    transformableProto.getGlobalScale = function () {\n        var m = this.transform;\n        if (!m) {\n            return [1, 1];\n        }\n        var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        return [sx, sy];\n    };\n    /**\n     * 变换坐标位置到 shape 的局部坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToLocal = function (x, y) {\n        var v2 = [x, y];\n        var invTransform = this.invTransform;\n        if (invTransform) {\n            vector.applyTransform(v2, v2, invTransform);\n        }\n        return v2;\n    };\n\n    /**\n     * 变换局部坐标位置到全局坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToGlobal = function (x, y) {\n        var v2 = [x, y];\n        var transform = this.transform;\n        if (transform) {\n            vector.applyTransform(v2, v2, transform);\n        }\n        return v2;\n    };\n\n    module.exports = Transformable;\n\n\n\n/***/ }),\n/* 455 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Path = __webpack_require__(322);\n    var PathProxy = __webpack_require__(340);\n    var transformPath = __webpack_require__(456);\n    var matrix = __webpack_require__(335);\n\n    // command chars\n    var cc = [\n        'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',\n        'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'\n    ];\n\n    var mathSqrt = Math.sqrt;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n    var PI = Math.PI;\n\n    var vMag = function(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n    };\n    var vRatio = function(u, v) {\n        return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n    };\n    var vAngle = function(u, v) {\n        return (u[0] * v[1] < u[1] * v[0] ? -1 : 1)\n                * Math.acos(vRatio(u, v));\n    };\n\n    function processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n        var psi = psiDeg * (PI / 180.0);\n        var xp = mathCos(psi) * (x1 - x2) / 2.0\n                 + mathSin(psi) * (y1 - y2) / 2.0;\n        var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0\n                 + mathCos(psi) * (y1 - y2) / 2.0;\n\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n\n        if (lambda > 1) {\n            rx *= mathSqrt(lambda);\n            ry *= mathSqrt(lambda);\n        }\n\n        var f = (fa === fs ? -1 : 1)\n            * mathSqrt((((rx * rx) * (ry * ry))\n                    - ((rx * rx) * (yp * yp))\n                    - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp)\n                    + (ry * ry) * (xp * xp))\n                ) || 0;\n\n        var cxp = f * rx * yp / ry;\n        var cyp = f * -ry * xp / rx;\n\n        var cx = (x1 + x2) / 2.0\n                 + mathCos(psi) * cxp\n                 - mathSin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0\n                + mathSin(psi) * cxp\n                + mathCos(psi) * cyp;\n\n        var theta = vAngle([ 1, 0 ], [ (xp - cxp) / rx, (yp - cyp) / ry ]);\n        var u = [ (xp - cxp) / rx, (yp - cyp) / ry ];\n        var v = [ (-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry ];\n        var dTheta = vAngle(u, v);\n\n        if (vRatio(u, v) <= -1) {\n            dTheta = PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * PI;\n        }\n\n        path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n    }\n\n    function createPathProxyFromString(data) {\n        if (!data) {\n            return [];\n        }\n\n        // command string\n        var cs = data.replace(/-/g, ' -')\n            .replace(/  /g, ' ')\n            .replace(/ /g, ',')\n            .replace(/,,/g, ',');\n\n        var n;\n        // create pipes so that we can split the data\n        for (n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n\n        // create array\n        var arr = cs.split('|');\n        // init context point\n        var cpx = 0;\n        var cpy = 0;\n\n        var path = new PathProxy();\n        var CMD = PathProxy.CMD;\n\n        var prevCmd;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            var off = 0;\n            var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n            var cmd;\n\n            if (p.length > 0 && p[0] === '') {\n                p.shift();\n            }\n\n            for (var i = 0; i < p.length; i++) {\n                p[i] = parseFloat(p[i]);\n            }\n            while (off < p.length && !isNaN(p[off])) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var ctlPtx;\n                var ctlPty;\n\n                var rx;\n                var ry;\n                var psi;\n                var fa;\n                var fs;\n\n                var x1 = cpx;\n                var y1 = cpy;\n\n                // convert l, H, h, V, and v to L\n                switch (c) {\n                    case 'l':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'm':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'C':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]\n                        );\n                        cpx = p[off - 2];\n                        cpy = p[off - 1];\n                        break;\n                    case 'c':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy\n                        );\n                        cpx += p[off - 2];\n                        cpy += p[off - 1];\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = cpx + p[off++];\n                        y1 = cpy + p[off++];\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 'Q':\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'q':\n                        x1 = p[off++] + cpx;\n                        y1 = p[off++] + cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                    case 'a':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                }\n            }\n\n            if (c === 'z' || c === 'Z') {\n                cmd = CMD.Z;\n                path.addData(cmd);\n            }\n\n            prevCmd = cmd;\n        }\n\n        path.toStatic();\n\n        return path;\n    }\n\n    // TODO Optimize double memory cost problem\n    function createPathOptions(str, opts) {\n        var pathProxy = createPathProxyFromString(str);\n        var transform;\n        opts = opts || {};\n        opts.buildPath = function (path) {\n            path.setData(pathProxy.data);\n            transform && transformPath(path, transform);\n            // Svg and vml renderer don't have context\n            var ctx = path.getContext();\n            if (ctx) {\n                path.rebuildPath(ctx);\n            }\n        };\n\n        opts.applyTransform = function (m) {\n            if (!transform) {\n                transform = matrix.create();\n            }\n            matrix.mul(transform, m, transform);\n            this.dirty(true);\n        };\n\n        return opts;\n    }\n\n    module.exports = {\n        /**\n         * Create a Path object from path string data\n         * http://www.w3.org/TR/SVG/paths.html#PathData\n         * @param  {Object} opts Other options\n         */\n        createFromString: function (str, opts) {\n            return new Path(createPathOptions(str, opts));\n        },\n\n        /**\n         * Create a Path class from path string data\n         * @param  {string} str\n         * @param  {Object} opts Other options\n         */\n        extendFromString: function (str, opts) {\n            return Path.extend(createPathOptions(str, opts));\n        },\n\n        /**\n         * Merge multiple paths\n         */\n        // TODO Apply transform\n        // TODO stroke dash\n        // TODO Optimize double memory cost problem\n        mergePath: function (pathEls, opts) {\n            var pathList = [];\n            var len = pathEls.length;\n            for (var i = 0; i < len; i++) {\n                var pathEl = pathEls[i];\n                if (pathEl.__dirty) {\n                    pathEl.buildPath(pathEl.path, pathEl.shape, true);\n                }\n                pathList.push(pathEl.path);\n            }\n\n            var pathBundle = new Path(opts);\n            pathBundle.buildPath = function (path) {\n                path.appendPath(pathList);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            };\n\n            return pathBundle;\n        }\n    };\n\n\n/***/ }),\n/* 456 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var CMD = __webpack_require__(340).CMD;\n    var vec2 = __webpack_require__(321);\n    var v2ApplyTransform = vec2.applyTransform;\n\n    var points = [[], [], []];\n    var mathSqrt = Math.sqrt;\n    var mathAtan2 = Math.atan2;\n    function transformPath(path, m) {\n        var data = path.data;\n        var cmd;\n        var nPoint;\n        var i;\n        var j;\n        var k;\n        var p;\n\n        var M = CMD.M;\n        var C = CMD.C;\n        var L = CMD.L;\n        var R = CMD.R;\n        var A = CMD.A;\n        var Q = CMD.Q;\n\n        for (i = 0, j = 0; i < data.length;) {\n            cmd = data[i++];\n            j = i;\n            nPoint = 0;\n\n            switch (cmd) {\n                case M:\n                    nPoint = 1;\n                    break;\n                case L:\n                    nPoint = 1;\n                    break;\n                case C:\n                    nPoint = 3;\n                    break;\n                case Q:\n                    nPoint = 2;\n                    break;\n                case A:\n                    var x = m[4];\n                    var y = m[5];\n                    var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n                    var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n                    var angle = mathAtan2(-m[1] / sy, m[0] / sx);\n                    // cx\n                    data[i++] += x;\n                    // cy\n                    data[i++] += y;\n                    // Scale rx and ry\n                    // FIXME Assume psi is 0 here\n                    data[i++] *= sx;\n                    data[i++] *= sy;\n\n                    // Start angle\n                    data[i++] += angle;\n                    // end angle\n                    data[i++] += angle;\n                    // FIXME psi\n                    i += 2;\n                    j = i;\n                    break;\n                case R:\n                    // x0, y0\n                    p[0] = data[i++];\n                    p[1] = data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n                    // x1, y1\n                    p[0] += data[i++];\n                    p[1] += data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n            }\n\n            for (k = 0; k < nPoint; k++) {\n                var p = points[k];\n                p[0] = data[i++];\n                p[1] = data[i++];\n\n                v2ApplyTransform(p, p, m);\n                // Write back\n                data[j++] = p[0];\n                data[j++] = p[1];\n            }\n        }\n    }\n\n    module.exports = transformPath;\n\n\n/***/ }),\n/* 457 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*!\n * ZRender, a high performance 2d drawing library.\n *\n * Copyright (c) 2013, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n */\n// Global defines\n\n    var guid = __webpack_require__(363);\n    var env = __webpack_require__(323);\n    var zrUtil = __webpack_require__(317);\n\n    var Handler = __webpack_require__(419);\n    var Storage = __webpack_require__(422);\n    var Animation = __webpack_require__(423);\n    var HandlerProxy = __webpack_require__(435);\n\n    var useVML = !env.canvasSupported;\n\n    var painterCtors = {\n        canvas: __webpack_require__(421)\n    };\n\n    var instances = {};    // ZRender实例map索引\n\n    var zrender = {};\n\n    /**\n     * @type {string}\n     */\n    zrender.version = '3.3.0';\n\n    /**\n     * Initializing a zrender instance\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @return {module:zrender/ZRender}\n     */\n    zrender.init = function(dom, opts) {\n        var zr = new ZRender(guid(), dom, opts);\n        instances[zr.id] = zr;\n        return zr;\n    };\n\n    /**\n     * Dispose zrender instance\n     * @param {module:zrender/ZRender} zr\n     */\n    zrender.dispose = function (zr) {\n        if (zr) {\n            zr.dispose();\n        }\n        else {\n            for (var key in instances) {\n                if (instances.hasOwnProperty(key)) {\n                    instances[key].dispose();\n                }\n            }\n            instances = {};\n        }\n\n        return zrender;\n    };\n\n    /**\n     * Get zrender instance by id\n     * @param {string} id zrender instance id\n     * @return {module:zrender/ZRender}\n     */\n    zrender.getInstance = function (id) {\n        return instances[id];\n    };\n\n    zrender.registerPainter = function (name, Ctor) {\n        painterCtors[name] = Ctor;\n    };\n\n    function delInstance(id) {\n        delete instances[id];\n    }\n\n    /**\n     * @module zrender/ZRender\n     */\n    /**\n     * @constructor\n     * @alias module:zrender/ZRender\n     * @param {string} id\n     * @param {HTMLDomElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     */\n    var ZRender = function(id, dom, opts) {\n\n        opts = opts || {};\n\n        /**\n         * @type {HTMLDomElement}\n         */\n        this.dom = dom;\n\n        /**\n         * @type {string}\n         */\n        this.id = id;\n\n        var self = this;\n        var storage = new Storage();\n\n        var rendererType = opts.renderer;\n        if (useVML) {\n            if (!painterCtors.vml) {\n                throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n            }\n            rendererType = 'vml';\n        }\n        else if (!rendererType || !painterCtors[rendererType]) {\n            rendererType = 'canvas';\n        }\n        var painter = new painterCtors[rendererType](dom, storage, opts);\n\n        this.storage = storage;\n        this.painter = painter;\n\n        var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n        this.handler = new Handler(storage, painter, handerProxy, painter.root);\n\n        /**\n         * @type {module:zrender/animation/Animation}\n         */\n        this.animation = new Animation({\n            stage: {\n                update: zrUtil.bind(this.flush, this)\n            }\n        });\n        this.animation.start();\n\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._needsRefresh;\n\n        // 修改 storage.delFromMap, 每次删除元素之前删除动画\n        // FIXME 有点ugly\n        var oldDelFromMap = storage.delFromMap;\n        var oldAddToMap = storage.addToMap;\n\n        storage.delFromMap = function (elId) {\n            var el = storage.get(elId);\n\n            oldDelFromMap.call(storage, elId);\n\n            el && el.removeSelfFromZr(self);\n        };\n\n        storage.addToMap = function (el) {\n            oldAddToMap.call(storage, el);\n\n            el.addSelfToZr(self);\n        };\n    };\n\n    ZRender.prototype = {\n\n        constructor: ZRender,\n        /**\n         * 获取实例唯一标识\n         * @return {string}\n         */\n        getId: function () {\n            return this.id;\n        },\n\n        /**\n         * 添加元素\n         * @param  {module:zrender/Element} el\n         */\n        add: function (el) {\n            this.storage.addRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * 删除元素\n         * @param  {module:zrender/Element} el\n         */\n        remove: function (el) {\n            this.storage.delRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Change configuration of layer\n         * @param {string} zLevel\n         * @param {Object} config\n         * @param {string} [config.clearColor=0] Clear color\n         * @param {string} [config.motionBlur=false] If enable motion blur\n         * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n        */\n        configLayer: function (zLevel, config) {\n            this.painter.configLayer(zLevel, config);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Repaint the canvas immediately\n         */\n        refreshImmediately: function () {\n            // Clear needsRefresh ahead to avoid something wrong happens in refresh\n            // Or it will cause zrender refreshes again and again.\n            this._needsRefresh = false;\n            this.painter.refresh();\n            /**\n             * Avoid trigger zr.refresh in Element#beforeUpdate hook\n             */\n            this._needsRefresh = false;\n        },\n\n        /**\n         * Mark and repaint the canvas in the next frame of browser\n         */\n        refresh: function() {\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Perform all refresh\n         */\n        flush: function () {\n            if (this._needsRefresh) {\n                this.refreshImmediately();\n            }\n            if (this._needsRefreshHover) {\n                this.refreshHoverImmediately();\n            }\n        },\n\n        /**\n         * Add element to hover layer\n         * @param  {module:zrender/Element} el\n         * @param {Object} style\n         */\n        addHover: function (el, style) {\n            if (this.painter.addHover) {\n                this.painter.addHover(el, style);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Add element from hover layer\n         * @param  {module:zrender/Element} el\n         */\n        removeHover: function (el) {\n            if (this.painter.removeHover) {\n                this.painter.removeHover(el);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Clear all hover elements in hover layer\n         * @param  {module:zrender/Element} el\n         */\n        clearHover: function () {\n            if (this.painter.clearHover) {\n                this.painter.clearHover();\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Refresh hover in next frame\n         */\n        refreshHover: function () {\n            this._needsRefreshHover = true;\n        },\n\n        /**\n         * Refresh hover immediately\n         */\n        refreshHoverImmediately: function () {\n            this._needsRefreshHover = false;\n            this.painter.refreshHover && this.painter.refreshHover();\n        },\n\n        /**\n         * Resize the canvas.\n         * Should be invoked when container size is changed\n         * @param {Object} [opts]\n         * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n         * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n         */\n        resize: function(opts) {\n            opts = opts || {};\n            this.painter.resize(opts.width, opts.height);\n            this.handler.resize();\n        },\n\n        /**\n         * Stop and clear all animation immediately\n         */\n        clearAnimation: function () {\n            this.animation.clear();\n        },\n\n        /**\n         * Get container width\n         */\n        getWidth: function() {\n            return this.painter.getWidth();\n        },\n\n        /**\n         * Get container height\n         */\n        getHeight: function() {\n            return this.painter.getHeight();\n        },\n\n        /**\n         * Export the canvas as Base64 URL\n         * @param {string} type\n         * @param {string} [backgroundColor='#fff']\n         * @return {string} Base64 URL\n         */\n        // toDataURL: function(type, backgroundColor) {\n        //     return this.painter.getRenderedCanvas({\n        //         backgroundColor: backgroundColor\n        //     }).toDataURL(type);\n        // },\n\n        /**\n         * Converting a path to image.\n         * It has much better performance of drawing image rather than drawing a vector path.\n         * @param {module:zrender/graphic/Path} e\n         * @param {number} width\n         * @param {number} height\n         */\n        pathToImage: function(e, width, height) {\n            var id = guid();\n            return this.painter.pathToImage(id, e, width, height);\n        },\n\n        /**\n         * Set default cursor\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            this.handler.setCursorStyle(cursorStyle);\n        },\n\n        /**\n         * Bind event\n         *\n         * @param {string} eventName Event name\n         * @param {Function} eventHandler Handler function\n         * @param {Object} [context] Context object\n         */\n        on: function(eventName, eventHandler, context) {\n            this.handler.on(eventName, eventHandler, context);\n        },\n\n        /**\n         * Unbind event\n         * @param {string} eventName Event name\n         * @param {Function} [eventHandler] Handler function\n         */\n        off: function(eventName, eventHandler) {\n            this.handler.off(eventName, eventHandler);\n        },\n\n        /**\n         * Trigger event manually\n         *\n         * @param {string} eventName Event name\n         * @param {event=} event Event object\n         */\n        trigger: function (eventName, event) {\n            this.handler.trigger(eventName, event);\n        },\n\n\n        /**\n         * Clear all objects and the canvas.\n         */\n        clear: function () {\n            this.storage.delRoot();\n            this.painter.clear();\n        },\n\n        /**\n         * Dispose self.\n         */\n        dispose: function () {\n            this.animation.stop();\n\n            this.clear();\n            this.storage.dispose();\n            this.painter.dispose();\n            this.handler.dispose();\n\n            this.animation =\n            this.storage =\n            this.painter =\n            this.handler = null;\n\n            delInstance(this.id);\n        }\n    };\n\n    module.exports = zrender;\n\n\n\n/***/ }),\n/* 458 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getList = getList;\nexports.getArticle = getArticle;\n\nvar _fetch = __webpack_require__(352);\n\nfunction getList() {\n  return (0, _fetch.fetch)({\n    url: '/article/list',\n    method: 'get'\n  });\n}\n\nfunction getArticle() {\n  return (0, _fetch.fetch)({\n    url: '/article/detail',\n    method: 'get'\n  });\n}\n\n/***/ }),\n/* 459 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(317);\n\n    __webpack_require__(371);\n\n    __webpack_require__(460);\n    __webpack_require__(461);\n\n    var barLayoutGrid = __webpack_require__(466);\n    var echarts = __webpack_require__(318);\n\n    echarts.registerLayout(zrUtil.curry(barLayoutGrid, 'bar'));\n    // Visual coding for legend\n    echarts.registerVisual(function (ecModel) {\n        ecModel.eachSeriesByType('bar', function (seriesModel) {\n            var data = seriesModel.getData();\n            data.setVisual('legendSymbol', 'roundRect');\n        });\n    });\n\n    // In case developer forget to include grid component\n    __webpack_require__(370);\n\n\n/***/ }),\n/* 460 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    module.exports = __webpack_require__(462).extend({\n\n        type: 'series.bar',\n\n        dependencies: ['grid', 'polar'],\n\n        brushSelector: 'rect'\n    });\n\n\n/***/ }),\n/* 461 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(317);\n    var graphic = __webpack_require__(319);\n    var helper = __webpack_require__(464);\n\n    var BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'normal', 'barBorderWidth'];\n\n    // FIXME\n    // Just for compatible with ec2.\n    zrUtil.extend(__webpack_require__(327).prototype, __webpack_require__(463));\n\n    var BarView = __webpack_require__(318).extendChartView({\n\n        type: 'bar',\n\n        render: function (seriesModel, ecModel, api) {\n            var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n            if (coordinateSystemType === 'cartesian2d') {\n                this._renderOnCartesian(seriesModel, ecModel, api);\n            }\n\n            return this.group;\n        },\n\n        dispose: zrUtil.noop,\n\n        _renderOnCartesian: function (seriesModel, ecModel, api) {\n            var group = this.group;\n            var data = seriesModel.getData();\n            var oldData = this._data;\n\n            var cartesian = seriesModel.coordinateSystem;\n            var baseAxis = cartesian.getBaseAxis();\n            var isHorizontal = baseAxis.isHorizontal();\n            var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n\n            data.diff(oldData)\n                .add(function (dataIndex) {\n                    if (!data.hasValue(dataIndex)) {\n                        return;\n                    }\n\n                    var itemModel = data.getItemModel(dataIndex);\n                    var layout = getRectItemLayout(data, dataIndex, itemModel);\n                    var el = createRect(data, dataIndex, itemModel, layout, isHorizontal, animationModel);\n                    data.setItemGraphicEl(dataIndex, el);\n                    group.add(el);\n\n                    updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal);\n                })\n                .update(function (newIndex, oldIndex) {\n                    var el = oldData.getItemGraphicEl(oldIndex);\n\n                    if (!data.hasValue(newIndex)) {\n                        group.remove(el);\n                        return;\n                    }\n\n                    var itemModel = data.getItemModel(newIndex);\n                    var layout = getRectItemLayout(data, newIndex, itemModel);\n\n                    if (el) {\n                        graphic.updateProps(el, {shape: layout}, animationModel, newIndex);\n                    }\n                    else {\n                        el = createRect(data, newIndex, itemModel, layout, isHorizontal, animationModel, true);\n                    }\n\n                    data.setItemGraphicEl(newIndex, el);\n                    // Add back\n                    group.add(el);\n\n                    updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontal);\n                })\n                .remove(function (dataIndex) {\n                    var el = oldData.getItemGraphicEl(dataIndex);\n                    el && removeRect(dataIndex, animationModel, el);\n                })\n                .execute();\n\n            this._data = data;\n        },\n\n        remove: function (ecModel, api) {\n            var group = this.group;\n            var data = this._data;\n            if (ecModel.get('animation')) {\n                if (data) {\n                    data.eachItemGraphicEl(function (el) {\n                        removeRect(el.dataIndex, ecModel, el);\n                    });\n                }\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    });\n\n    function createRect(data, dataIndex, itemModel, layout, isHorizontal, animationModel, isUpdate) {\n        var rect = new graphic.Rect({shape: zrUtil.extend({}, layout)});\n\n        // Animation\n        if (animationModel) {\n            var rectShape = rect.shape;\n            var animateProperty = isHorizontal ? 'height' : 'width';\n            var animateTarget = {};\n            rectShape[animateProperty] = 0;\n            animateTarget[animateProperty] = layout[animateProperty];\n            graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n                shape: animateTarget\n            }, animationModel, dataIndex);\n        }\n\n        return rect;\n    }\n\n    function removeRect(dataIndex, animationModel, el) {\n        // Not show text when animating\n        el.style.text = '';\n        graphic.updateProps(el, {\n            shape: {\n                width: 0\n            }\n        }, animationModel, dataIndex, function () {\n            el.parent && el.parent.remove(el);\n        });\n    }\n\n    function getRectItemLayout(data, dataIndex, itemModel) {\n        var layout = data.getItemLayout(dataIndex);\n        var fixedLineWidth = getLineWidth(itemModel, layout);\n\n        // fix layout with lineWidth\n        var signX = layout.width > 0 ? 1 : -1;\n        var signY = layout.height > 0 ? 1 : -1;\n        return {\n            x: layout.x + signX * fixedLineWidth / 2,\n            y: layout.y + signY * fixedLineWidth / 2,\n            width: layout.width - signX * fixedLineWidth,\n            height: layout.height - signY * fixedLineWidth\n        };\n    }\n\n    function updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal) {\n        var color = data.getItemVisual(dataIndex, 'color');\n        var opacity = data.getItemVisual(dataIndex, 'opacity');\n        var itemStyleModel = itemModel.getModel('itemStyle.normal');\n        var hoverStyle = itemModel.getModel('itemStyle.emphasis').getBarItemStyle();\n\n        el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n\n        el.useStyle(zrUtil.defaults(\n            {\n                fill: color,\n                opacity: opacity\n            },\n            itemStyleModel.getBarItemStyle()\n        ));\n\n        var labelPositionOutside = isHorizontal\n            ? (layout.height > 0 ? 'bottom' : 'top')\n            : (layout.width > 0 ? 'left' : 'right');\n\n        helper.setLabel(\n            el.style, hoverStyle, itemModel, color,\n            seriesModel, dataIndex, labelPositionOutside\n        );\n\n        graphic.setHoverStyle(el, hoverStyle);\n    }\n\n    // In case width or height are too small.\n    function getLineWidth(itemModel, rawLayout) {\n        var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n        return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n    }\n\n    module.exports = BarView;\n\n\n/***/ }),\n/* 462 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var SeriesModel = __webpack_require__(349);\n    var createListFromArray = __webpack_require__(369);\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.__base_bar__',\n\n        getInitialData: function (option, ecModel) {\n            if (__DEV__) {\n                var coordSys = option.coordinateSystem;\n                if (coordSys !== 'cartesian2d') {\n                    throw new Error('Bar only support cartesian2d coordinateSystem');\n                }\n            }\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        getMarkerPosition: function (value) {\n            var coordSys = this.coordinateSystem;\n            if (coordSys) {\n                // PENDING if clamp ?\n                var pt = coordSys.dataToPoint(value, true);\n                var data = this.getData();\n                var offset = data.getLayout('offset');\n                var size = data.getLayout('size');\n                var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n                pt[offsetIndex] += offset + size / 2;\n                return pt;\n            }\n            return [NaN, NaN];\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n            // stack: null\n\n            // Cartesian coordinate system\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // 最小高度改为0\n            barMinHeight: 0,\n\n            // barMaxWidth: null,\n            // 默认自适应\n            // barWidth: null,\n            // 柱间距离，默认为柱形宽度的30%，可设固定值\n            // barGap: '30%',\n            // 类目间柱形距离，默认为类目间距的20%，可设固定值\n            // barCategoryGap: '20%',\n            // label: {\n            //     normal: {\n            //         show: false\n            //     }\n            // },\n            itemStyle: {\n                normal: {\n                    // color: '各异'\n                },\n                emphasis: {}\n            }\n        }\n    });\n\n\n/***/ }),\n/* 463 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n\n    var getBarItemStyle = __webpack_require__(341)(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            // Compatitable with 2\n            ['stroke', 'barBorderColor'],\n            ['lineWidth', 'barBorderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getBarItemStyle: function (excludes) {\n            var style = getBarItemStyle.call(this, excludes);\n            if (this.getBorderLineDash) {\n                var lineDash = this.getBorderLineDash();\n                lineDash && (style.lineDash = lineDash);\n            }\n            return style;\n        }\n    };\n\n\n/***/ }),\n/* 464 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(317);\n    var graphic = __webpack_require__(319);\n\n    var helper = {};\n\n    helper.setLabel = function (\n        normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside\n    ) {\n        var labelModel = itemModel.getModel('label.normal');\n        var hoverLabelModel = itemModel.getModel('label.emphasis');\n\n        if (labelModel.get('show')) {\n            setLabel(\n                normalStyle, labelModel, color,\n                zrUtil.retrieve(\n                    seriesModel.getFormattedLabel(dataIndex, 'normal'),\n                    seriesModel.getRawValue(dataIndex)\n                ),\n                labelPositionOutside\n            );\n        }\n        else {\n            normalStyle.text = '';\n        }\n\n        if (hoverLabelModel.get('show')) {\n            setLabel(\n                hoverStyle, hoverLabelModel, color,\n                zrUtil.retrieve(\n                    seriesModel.getFormattedLabel(dataIndex, 'emphasis'),\n                    seriesModel.getRawValue(dataIndex)\n                ),\n                labelPositionOutside\n            );\n        }\n        else {\n            hoverStyle.text = '';\n        }\n    };\n\n    function setLabel(style, model, color, labelText, labelPositionOutside) {\n        graphic.setText(style, model, color);\n        style.text = labelText;\n        if (style.textPosition === 'outside') {\n            style.textPosition = labelPositionOutside;\n        }\n    }\n\n    module.exports = helper;\n\n\n/***/ }),\n/* 465 */,\n/* 466 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(317);\n    var numberUtil = __webpack_require__(320);\n    var parsePercent = numberUtil.parsePercent;\n\n    function getSeriesStackId(seriesModel) {\n        return seriesModel.get('stack') || '__ec_stack_' + seriesModel.seriesIndex;\n    }\n\n    function getAxisKey(axis) {\n        return axis.dim + axis.index;\n    }\n\n    function calBarWidthAndOffset(barSeries, api) {\n        // Columns info on each category axis. Key is cartesian name\n        var columnsMap = {};\n\n        zrUtil.each(barSeries, function (seriesModel, idx) {\n            var data = seriesModel.getData();\n            var cartesian = seriesModel.coordinateSystem;\n\n            var baseAxis = cartesian.getBaseAxis();\n            var axisExtent = baseAxis.getExtent();\n            var bandWidth = baseAxis.type === 'category'\n                ? baseAxis.getBandWidth()\n                : (Math.abs(axisExtent[1] - axisExtent[0]) / data.count());\n\n            var columnsOnAxis = columnsMap[getAxisKey(baseAxis)] || {\n                bandWidth: bandWidth,\n                remainedWidth: bandWidth,\n                autoWidthCount: 0,\n                categoryGap: '20%',\n                gap: '30%',\n                stacks: {}\n            };\n            var stacks = columnsOnAxis.stacks;\n            columnsMap[getAxisKey(baseAxis)] = columnsOnAxis;\n\n            var stackId = getSeriesStackId(seriesModel);\n\n            if (!stacks[stackId]) {\n                columnsOnAxis.autoWidthCount++;\n            }\n            stacks[stackId] = stacks[stackId] || {\n                width: 0,\n                maxWidth: 0\n            };\n\n            var barWidth = parsePercent(\n                seriesModel.get('barWidth'), bandWidth\n            );\n            var barMaxWidth = parsePercent(\n                seriesModel.get('barMaxWidth'), bandWidth\n            );\n            var barGap = seriesModel.get('barGap');\n            var barCategoryGap = seriesModel.get('barCategoryGap');\n\n            // Caution: In a single coordinate system, these barGrid attributes\n            // will be shared by series. Consider that they have default values,\n            // only the attributes set on the last series will work.\n            // Do not change this fact unless there will be a break change.\n\n            // TODO\n            if (barWidth && !stacks[stackId].width) {\n                barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n                stacks[stackId].width = barWidth;\n                columnsOnAxis.remainedWidth -= barWidth;\n            }\n\n            barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n            (barGap != null) && (columnsOnAxis.gap = barGap);\n            (barCategoryGap != null) && (columnsOnAxis.categoryGap = barCategoryGap);\n        });\n\n        var result = {};\n\n        zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n\n            result[coordSysName] = {};\n\n            var stacks = columnsOnAxis.stacks;\n            var bandWidth = columnsOnAxis.bandWidth;\n            var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n            var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n\n            var remainedWidth = columnsOnAxis.remainedWidth;\n            var autoWidthCount = columnsOnAxis.autoWidthCount;\n            var autoWidth = (remainedWidth - categoryGap)\n                / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n            autoWidth = Math.max(autoWidth, 0);\n\n            // Find if any auto calculated bar exceeded maxBarWidth\n            zrUtil.each(stacks, function (column, stack) {\n                var maxWidth = column.maxWidth;\n                if (!column.width && maxWidth && maxWidth < autoWidth) {\n                    maxWidth = Math.min(maxWidth, remainedWidth);\n                    remainedWidth -= maxWidth;\n                    column.width = maxWidth;\n                    autoWidthCount--;\n                }\n            });\n\n            // Recalculate width again\n            autoWidth = (remainedWidth - categoryGap)\n                / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n            autoWidth = Math.max(autoWidth, 0);\n\n            var widthSum = 0;\n            var lastColumn;\n            zrUtil.each(stacks, function (column, idx) {\n                if (!column.width) {\n                    column.width = autoWidth;\n                }\n                lastColumn = column;\n                widthSum += column.width * (1 + barGapPercent);\n            });\n            if (lastColumn) {\n                widthSum -= lastColumn.width * barGapPercent;\n            }\n\n            var offset = -widthSum / 2;\n            zrUtil.each(stacks, function (column, stackId) {\n                result[coordSysName][stackId] = result[coordSysName][stackId] || {\n                    offset: offset,\n                    width: column.width\n                };\n\n                offset += column.width * (1 + barGapPercent);\n            });\n        });\n\n        return result;\n    }\n\n    /**\n     * @param {string} seriesType\n     * @param {module:echarts/model/Global} ecModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function barLayoutGrid(seriesType, ecModel, api) {\n\n        var barWidthAndOffset = calBarWidthAndOffset(\n            zrUtil.filter(\n                ecModel.getSeriesByType(seriesType),\n                function (seriesModel) {\n                    return !ecModel.isSeriesFiltered(seriesModel)\n                        && seriesModel.coordinateSystem\n                        && seriesModel.coordinateSystem.type === 'cartesian2d';\n                }\n            )\n        );\n\n        var lastStackCoords = {};\n        var lastStackCoordsOrigin = {};\n\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n\n            var data = seriesModel.getData();\n            var cartesian = seriesModel.coordinateSystem;\n            var baseAxis = cartesian.getBaseAxis();\n\n            var stackId = getSeriesStackId(seriesModel);\n            var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n            var columnOffset = columnLayoutInfo.offset;\n            var columnWidth = columnLayoutInfo.width;\n            var valueAxis = cartesian.getOtherAxis(baseAxis);\n\n            var barMinHeight = seriesModel.get('barMinHeight') || 0;\n\n            var valueAxisStart = baseAxis.onZero\n                ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0))\n                : valueAxis.getGlobalExtent()[0];\n\n            var coords = cartesian.dataToPoints(data, true);\n            lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n            lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n            data.setLayout({\n                offset: columnOffset,\n                size: columnWidth\n            });\n\n            data.each(valueAxis.dim, function (value, idx) {\n                if (isNaN(value)) {\n                    return;\n                }\n\n                if (!lastStackCoords[stackId][idx]) {\n                    lastStackCoords[stackId][idx] = {\n                        p: valueAxisStart, // Positive stack\n                        n: valueAxisStart  // Negative stack\n                    };\n                    lastStackCoordsOrigin[stackId][idx] = {\n                        p: valueAxisStart, // Positive stack\n                        n: valueAxisStart  // Negative stack\n                    };\n                }\n                var sign = value >= 0 ? 'p' : 'n';\n                var coord = coords[idx];\n                var lastCoord = lastStackCoords[stackId][idx][sign];\n                var lastCoordOrigin = lastStackCoordsOrigin[stackId][idx][sign];\n                var x;\n                var y;\n                var width;\n                var height;\n\n                if (valueAxis.isHorizontal()) {\n                    x = lastCoord;\n                    y = coord[1] + columnOffset;\n                    width = coord[0] - lastCoordOrigin;\n                    height = columnWidth;\n\n                    lastStackCoordsOrigin[stackId][idx][sign] += width;\n                    if (Math.abs(width) < barMinHeight) {\n                        width = (width < 0 ? -1 : 1) * barMinHeight;\n                    }\n                    lastStackCoords[stackId][idx][sign] += width;\n                }\n                else {\n                    x = coord[0] + columnOffset;\n                    y = lastCoord;\n                    width = columnWidth;\n                    height = coord[1] - lastCoordOrigin;\n\n                    lastStackCoordsOrigin[stackId][idx][sign] += height;\n                    if (Math.abs(height) < barMinHeight) {\n                        // Include zero to has a positive bar\n                        height = (height <= 0 ? -1 : 1) * barMinHeight;\n                    }\n                    lastStackCoords[stackId][idx][sign] += height;\n                }\n\n                data.setItemLayout(idx, {\n                    x: x,\n                    y: y,\n                    width: width,\n                    height: height\n                });\n            }, true);\n\n        }, this);\n    }\n\n    module.exports = barLayoutGrid;\n\n\n/***/ }),\n/* 467 */,\n/* 468 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(480)\n\nvar Component = __webpack_require__(1)(\n  /* script */\n  __webpack_require__(469),\n  /* template */\n  __webpack_require__(482),\n  /* scopeId */\n  \"data-v-33891d58\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 469 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  name: 'PanThumb',\n  props: {\n    image: {\n      type: String,\n      required: true\n    },\n    zIndex: {\n      type: Number,\n      default: 100\n    },\n    width: {\n      type: String,\n      default: '150px'\n    },\n    height: {\n      type: String,\n      default: '150px'\n    }\n  },\n  data: function data() {\n    return {};\n  }\n};\n\n/***/ }),\n/* 470 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(289)();\n// imports\n\n\n// module\nexports.push([module.i, \".pan-item[data-v-33891d58]{width:200px;height:200px;border-radius:50%;display:inline-block;position:relative;cursor:default;box-shadow:0 1px 3px rgba(0,0,0,.2)}.pan-info-roles-container[data-v-33891d58]{padding:20px;text-align:center}.pan-thumb[data-v-33891d58]{width:100%;height:100%;background-size:100%;border-radius:50%;overflow:hidden;position:absolute;transform-origin:95% 40%;transition:all .3s ease-in-out}.pan-thumb[data-v-33891d58]:after{content:\\\"\\\";width:8px;height:8px;position:absolute;border-radius:50%;top:40%;left:95%;margin:-4px 0 0 -4px;background:radial-gradient(ellipse at center,#0e0e0e 0,#7d7e7d 100%);box-shadow:0 0 1px hsla(0,0%,100%,.9)}.pan-info[data-v-33891d58]{position:absolute;width:inherit;height:inherit;border-radius:50%;overflow:hidden;box-shadow:inset 0 0 0 5px rgba(0,0,0,.05)}.pan-info h3[data-v-33891d58]{color:#fff;text-transform:uppercase;position:relative;letter-spacing:2px;font-size:18px;margin:0 60px;padding:22px 0 0;height:85px;font-family:Open Sans,Arial,sans-serif;text-shadow:0 0 1px #fff,0 1px 2px rgba(0,0,0,.3)}.pan-info p[data-v-33891d58]{color:#fff;padding:10px 5px;font-style:italic;margin:0 30px;font-size:12px;border-top:1px solid hsla(0,0%,100%,.5)}.pan-info p a[data-v-33891d58]{display:block;color:#333;width:80px;height:80px;background:hsla(0,0%,100%,.3);border-radius:50%;color:#fff;font-style:normal;font-weight:700;text-transform:uppercase;font-size:9px;letter-spacing:1px;padding-top:24px;margin:7px auto 0;font-family:Open Sans,Arial,sans-serif;opacity:0;transition:transform .3s ease-in-out .2s,opacity .3s ease-in-out .2s,background .2s linear 0s;transform:translateX(60px) rotate(90deg)}.pan-info p a[data-v-33891d58]:hover{background:hsla(0,0%,100%,.5)}.pan-item:hover .pan-thumb[data-v-33891d58]{transform:rotate(-110deg)}.pan-item:hover .pan-info p a[data-v-33891d58]{opacity:1;transform:translateX(0) rotate(0deg)}\", \"\", {\"version\":3,\"sources\":[\"/./src/components/PanThumb/index.vue\"],\"names\":[],\"mappings\":\"AACA,2BACI,YAAa,AACb,aAAc,AACd,kBAAmB,AACnB,qBAAsB,AACtB,kBAAmB,AACnB,eAAgB,AAChB,mCAAyC,CAC5C,AACD,2CACI,aAAc,AACd,iBAAmB,CACtB,AACD,4BACI,WAAY,AACZ,YAAa,AACb,qBAAsB,AACtB,kBAAmB,AACnB,gBAAiB,AACjB,kBAAmB,AACnB,yBAA0B,AAC1B,8BAAiC,CACpC,AACD,kCACI,WAAY,AACZ,UAAW,AACX,WAAY,AACZ,kBAAmB,AACnB,kBAAmB,AACnB,QAAS,AACT,SAAU,AACV,qBAAsB,AACtB,qEAAoG,AACpG,qCAA6C,CAChD,AACD,2BACI,kBAAmB,AACnB,cAAe,AACf,eAAgB,AAChB,kBAAmB,AACnB,gBAAiB,AACjB,0CAAgD,CACnD,AACD,8BACI,WAAY,AACZ,yBAA0B,AAC1B,kBAAmB,AACnB,mBAAoB,AACpB,eAAgB,AAChB,cAAe,AACf,iBAAoB,AACpB,YAAa,AACb,uCAA4C,AAC5C,iDAC6B,CAChC,AACD,6BACI,WAAY,AACZ,iBAAkB,AAClB,kBAAmB,AACnB,cAAe,AACf,eAAgB,AAChB,uCAA+C,CAClD,AACD,+BACI,cAAe,AACf,WAAY,AACZ,WAAY,AACZ,YAAa,AACb,8BAAqC,AACrC,kBAAmB,AACnB,WAAY,AACZ,kBAAmB,AACnB,gBAAiB,AACjB,yBAA0B,AAC1B,cAAe,AACf,mBAAoB,AACpB,iBAAkB,AAClB,kBAAmB,AACnB,uCAA4C,AAC5C,UAAW,AACX,8FAE0B,AAC1B,wCAA0C,CAC7C,AACD,qCACI,6BAAqC,CACxC,AACD,4CACI,yBAA2B,CAC9B,AACD,+CACI,UAAW,AACX,oCAAwC,CAC3C\",\"file\":\"index.vue\",\"sourcesContent\":[\"\\n.pan-item[data-v-33891d58] {\\n    width: 200px;\\n    height: 200px;\\n    border-radius: 50%;\\n    display: inline-block;\\n    position: relative;\\n    cursor: default;\\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);\\n}\\n.pan-info-roles-container[data-v-33891d58] {\\n    padding: 20px;\\n    text-align: center;\\n}\\n.pan-thumb[data-v-33891d58] {\\n    width: 100%;\\n    height: 100%;\\n    background-size: 100%;\\n    border-radius: 50%;\\n    overflow: hidden;\\n    position: absolute;\\n    transform-origin: 95% 40%;\\n    transition: all 0.3s ease-in-out;\\n}\\n.pan-thumb[data-v-33891d58]:after {\\n    content: '';\\n    width: 8px;\\n    height: 8px;\\n    position: absolute;\\n    border-radius: 50%;\\n    top: 40%;\\n    left: 95%;\\n    margin: -4px 0 0 -4px;\\n    background: radial-gradient(ellipse at center, rgba(14, 14, 14, 1) 0%, rgba(125, 126, 125, 1) 100%);\\n    box-shadow: 0 0 1px rgba(255, 255, 255, 0.9);\\n}\\n.pan-info[data-v-33891d58] {\\n    position: absolute;\\n    width: inherit;\\n    height: inherit;\\n    border-radius: 50%;\\n    overflow: hidden;\\n    box-shadow: inset 0 0 0 5px rgba(0, 0, 0, 0.05);\\n}\\n.pan-info h3[data-v-33891d58] {\\n    color: #fff;\\n    text-transform: uppercase;\\n    position: relative;\\n    letter-spacing: 2px;\\n    font-size: 18px;\\n    margin: 0 60px;\\n    padding: 22px 0 0 0;\\n    height: 85px;\\n    font-family: 'Open Sans', Arial, sans-serif;\\n    text-shadow: 0 0 1px #fff,\\n    0 1px 2px rgba(0, 0, 0, 0.3);\\n}\\n.pan-info p[data-v-33891d58] {\\n    color: #fff;\\n    padding: 10px 5px;\\n    font-style: italic;\\n    margin: 0 30px;\\n    font-size: 12px;\\n    border-top: 1px solid rgba(255, 255, 255, 0.5);\\n}\\n.pan-info p a[data-v-33891d58] {\\n    display: block;\\n    color: #333;\\n    width: 80px;\\n    height: 80px;\\n    background: rgba(255, 255, 255, 0.3);\\n    border-radius: 50%;\\n    color: #fff;\\n    font-style: normal;\\n    font-weight: 700;\\n    text-transform: uppercase;\\n    font-size: 9px;\\n    letter-spacing: 1px;\\n    padding-top: 24px;\\n    margin: 7px auto 0;\\n    font-family: 'Open Sans', Arial, sans-serif;\\n    opacity: 0;\\n    transition: transform 0.3s ease-in-out 0.2s,\\n    opacity 0.3s ease-in-out 0.2s,\\n    background 0.2s linear 0s;\\n    transform: translateX(60px) rotate(90deg);\\n}\\n.pan-info p a[data-v-33891d58]:hover {\\n    background: rgba(255, 255, 255, 0.5);\\n}\\n.pan-item:hover .pan-thumb[data-v-33891d58] {\\n    transform: rotate(-110deg);\\n}\\n.pan-item:hover .pan-info p a[data-v-33891d58] {\\n    opacity: 1;\\n    transform: translateX(0px) rotate(0deg);\\n}\\n\"],\"sourceRoot\":\"webpack://\"}]);\n\n// exports\n\n\n/***/ }),\n/* 471 */,\n/* 472 */,\n/* 473 */,\n/* 474 */,\n/* 475 */,\n/* 476 */,\n/* 477 */,\n/* 478 */,\n/* 479 */,\n/* 480 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(470);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(290)(\"9deb0e08\", content, true);\n// Hot Module Replacement\nif(false) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-33891d58\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./index.vue\", function() {\n     var newContent = require(\"!!../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-33891d58\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./index.vue\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}\n\n/***/ }),\n/* 481 */,\n/* 482 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"pan-item\",\n    style: ({\n      zIndex: _vm.zIndex,\n      height: _vm.height,\n      width: _vm.width\n    })\n  }, [_c('div', {\n    staticClass: \"pan-info\"\n  }, [_c('div', {\n    staticClass: \"pan-info-roles-container\"\n  }, [_vm._t(\"default\", [_vm._v(\"pan\")])], 2)]), _vm._v(\" \"), _c('img', {\n    staticClass: \"pan-thumb\",\n    attrs: {\n      \"src\": _vm.image\n    }\n  })])\n},staticRenderFns: []}\n\n/***/ }),\n/* 483 */,\n/* 484 */,\n/* 485 */,\n/* 486 */,\n/* 487 */,\n/* 488 */,\n/* 489 */,\n/* 490 */,\n/* 491 */,\n/* 492 */,\n/* 493 */,\n/* 494 */,\n/* 495 */,\n/* 496 */,\n/* 497 */,\n/* 498 */,\n/* 499 */,\n/* 500 */,\n/* 501 */,\n/* 502 */,\n/* 503 */,\n/* 504 */,\n/* 505 */,\n/* 506 */,\n/* 507 */,\n/* 508 */,\n/* 509 */,\n/* 510 */,\n/* 511 */,\n/* 512 */,\n/* 513 */,\n/* 514 */,\n/* 515 */,\n/* 516 */,\n/* 517 */,\n/* 518 */,\n/* 519 */,\n/* 520 */,\n/* 521 */\n/***/ (function(module, exports, __webpack_require__) {\n\n!function(t,e){ true?module.exports=e():\"function\"==typeof define&&define.amd?define(\"CountTo\",[],e):\"object\"==typeof exports?exports.CountTo=e():t.CountTo=e()}(this,function(){return function(t){function e(n){if(i[n])return i[n].exports;var a=i[n]={i:n,l:!1,exports:{}};return t[n].call(a.exports,a,a.exports,e),a.l=!0,a.exports}var i={};return e.m=t,e.c=i,e.i=function(t){return t},e.d=function(t,i,n){e.o(t,i)||Object.defineProperty(t,i,{configurable:!1,enumerable:!0,get:n})},e.n=function(t){var i=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(i,\"a\",i),i},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p=\"/dist/\",e(e.s=5)}([function(t,e,i){var n=i(3)(i(1),i(4),null,null);t.exports=n.exports},function(t,e,i){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var n=i(2);e.default={props:{startVal:{type:Number,required:!1,default:0},endVal:{type:Number,required:!1,default:2017},duration:{type:Number,required:!1,default:3e3},autoplay:{type:Boolean,required:!1,default:!0},decimals:{type:Number,required:!1,default:0,validator:function(t){return t>=0}},decimal:{type:String,required:!1,default:\".\"},separator:{type:String,required:!1,default:\",\"},prefix:{type:String,required:!1,default:\"\"},suffix:{type:String,required:!1,default:\"\"},useEasing:{type:Boolean,required:!1,default:!0},easingFn:{type:Function,default:function(t,e,i,n){return i*(1-Math.pow(2,-10*t/n))*1024/1023+e}}},data:function(){return{localStartVal:this.startVal,displayValue:this.formatNumber(this.startVal),printVal:null,paused:!1,localDuration:this.duration,startTime:null,timestamp:null,remaining:null,rAF:null}},computed:{countDown:function(){return this.startVal>this.endVal}},mounted:function(){this.autoplay&&this.start(),this.$emit(\"mountedCallback\")},methods:{start:function(){this.localStartVal=this.startVal,this.startTime=null,this.localDuration=this.duration,this.paused=!1,this.rAF=(0,n.requestAnimationFrame)(this.count)},pauseResume:function(){this.paused?(this.resume(),this.paused=!1):(this.pause(),this.paused=!0)},pause:function(){(0,n.cancelAnimationFrame)(this.rAF)},resume:function(){this.startTime=null,this.localDuration=+this.remaining,this.localStartVal=+this.printVal,(0,n.requestAnimationFrame)(this.count)},reset:function(){this.startTime=null,(0,n.cancelAnimationFrame)(this.rAF),this.displayValue=this.formatNumber(this.startVal)},count:function(t){this.startTime||(this.startTime=t),this.timestamp=t;var e=t-this.startTime;this.remaining=this.localDuration-e,this.useEasing?this.countDown?this.printVal=this.localStartVal-this.easingFn(e,0,this.localStartVal-this.endVal,this.localDuration):this.printVal=this.easingFn(e,this.localStartVal,this.endVal-this.localStartVal,this.localDuration):this.countDown?this.printVal=this.localStartVal-(this.localStartVal-this.endVal)*(e/this.localDuration):this.printVal=this.localStartVal+(this.localStartVal-this.startVal)*(e/this.localDuration),this.countDown?this.printVal=this.printVal<this.endVal?this.endVal:this.printVal:this.printVal=this.printVal>this.endVal?this.endVal:this.printVal,this.displayValue=this.formatNumber(this.printVal),e<this.localDuration?this.rAF=(0,n.requestAnimationFrame)(this.count):this.callback&&this.$emit(\"callback\")},isNumber:function(t){return!isNaN(parseFloat(t))},formatNumber:function(t){t=t.toFixed(this.decimals),t+=\"\";var e=t.split(\".\"),i=e[0],n=e.length>1?this.decimal+e[1]:\"\",a=/(\\d+)(\\d{3})/;if(this.separator&&!this.isNumber(this.separator))for(;a.test(i);)i=i.replace(a,\"$1\"+this.separator+\"$2\");return this.prefix+i+n+this.suffix}},destroyed:function(){(0,n.cancelAnimationFrame)(this.rAF)}}},function(t,e,i){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});for(var n=0,a=\"webkit moz ms o\".split(\" \"),r=window.requestAnimationFrame,s=window.cancelAnimationFrame,o=void 0,u=0;u<a.length&&(!r||!s);u++)o=a[u],e.requestAnimationFrame=r=r||window[o+\"RequestAnimationFrame\"],e.cancelAnimationFrame=s=s||window[o+\"CancelAnimationFrame\"]||window[o+\"CancelRequestAnimationFrame\"];r&&s||(e.requestAnimationFrame=r=function(t){var e=(new Date).getTime(),i=Math.max(0,16-(e-n)),a=window.setTimeout(function(){t(e+i)},i);return n=e+i,a},e.cancelAnimationFrame=s=function(t){window.clearTimeout(t)}),e.requestAnimationFrame=r,e.cancelAnimationFrame=s},function(t,e){t.exports=function(t,e,i,n){var a,r=t=t||{},s=typeof t.default;\"object\"!==s&&\"function\"!==s||(a=t,r=t.default);var o=\"function\"==typeof r?r.options:r;if(e&&(o.render=e.render,o.staticRenderFns=e.staticRenderFns),i&&(o._scopeId=i),n){var u=Object.create(o.computed||null);Object.keys(n).forEach(function(t){var e=n[t];u[t]=function(){return e}}),o.computed=u}return{esModule:a,exports:r,options:o}}},function(t,e){t.exports={render:function(){var t=this,e=t.$createElement;return(t._self._c||e)(\"span\",[t._v(\"\\n  \"+t._s(t.displayValue)+\"\\n\")])},staticRenderFns:[]}},function(t,e,i){\"use strict\";function n(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(e,\"__esModule\",{value:!0});var a=i(0),r=n(a);e.default=r.default,\"undefined\"!=typeof window&&window.Vue&&window.Vue.component(\"count-to\",r.default)}])});\n//# sourceMappingURL=vue-count-to.min.js.map\n\n/***/ }),\n/* 522 */,\n/* 523 */,\n/* 524 */,\n/* 525 */,\n/* 526 */,\n/* 527 */,\n/* 528 */,\n/* 529 */,\n/* 530 */,\n/* 531 */,\n/* 532 */,\n/* 533 */,\n/* 534 */,\n/* 535 */,\n/* 536 */,\n/* 537 */,\n/* 538 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var modelUtil = __webpack_require__(325);\n    var zrUtil = __webpack_require__(317);\n    var env = __webpack_require__(323);\n\n    var formatUtil = __webpack_require__(324);\n    var addCommas = formatUtil.addCommas;\n    var encodeHTML = formatUtil.encodeHTML;\n\n    function fillLabel(opt) {\n        modelUtil.defaultEmphasis(\n            opt.label,\n            modelUtil.LABEL_OPTIONS\n        );\n    }\n    var MarkerModel = __webpack_require__(318).extendComponentModel({\n\n        type: 'marker',\n\n        dependencies: ['series', 'grid', 'polar', 'geo'],\n        /**\n         * @overrite\n         */\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            if (__DEV__) {\n                if (this.type === 'marker') {\n                    throw new Error('Marker component is abstract component. Use markLine, markPoint, markArea instead.');\n                }\n            }\n            this.mergeDefaultAndTheme(option, ecModel);\n            this.mergeOption(option, ecModel, extraOpt.createdBySelf, true);\n        },\n\n        /**\n         * @return {boolean}\n         */\n        isAnimationEnabled: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var hostSeries = this.__hostSeries;\n            return this.getShallow('animation') && hostSeries && hostSeries.isAnimationEnabled();\n        },\n\n        mergeOption: function (newOpt, ecModel, createdBySelf, isInit) {\n            var MarkerModel = this.constructor;\n            var modelPropName = this.mainType + 'Model';\n            if (!createdBySelf) {\n                ecModel.eachSeries(function (seriesModel) {\n\n                    var markerOpt = seriesModel.get(this.mainType);\n\n                    var markerModel = seriesModel[modelPropName];\n                    if (!markerOpt || !markerOpt.data) {\n                        seriesModel[modelPropName] = null;\n                        return;\n                    }\n                    if (!markerModel) {\n                        if (isInit) {\n                            // Default label emphasis `position` and `show`\n                            fillLabel(markerOpt);\n                        }\n                        zrUtil.each(markerOpt.data, function (item) {\n                            // FIXME Overwrite fillLabel method ?\n                            if (item instanceof Array) {\n                                fillLabel(item[0]);\n                                fillLabel(item[1]);\n                            }\n                            else {\n                                fillLabel(item);\n                            }\n                        });\n\n                        markerModel = new MarkerModel(\n                            markerOpt, this, ecModel\n                        );\n\n                        zrUtil.extend(markerModel, {\n                            mainType: this.mainType,\n                            // Use the same series index and name\n                            seriesIndex: seriesModel.seriesIndex,\n                            name: seriesModel.name,\n                            createdBySelf: true\n                        });\n\n                        markerModel.__hostSeries = seriesModel;\n                    }\n                    else {\n                        markerModel.mergeOption(markerOpt, ecModel, true);\n                    }\n                    seriesModel[modelPropName] = markerModel;\n                }, this);\n            }\n        },\n\n        formatTooltip: function (dataIndex) {\n            var data = this.getData();\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = zrUtil.isArray(value)\n                ? zrUtil.map(value, addCommas).join(', ') : addCommas(value);\n            var name = data.getName(dataIndex);\n            var html = encodeHTML(this.name);\n            if (value != null || name) {\n                html += '<br />';\n            }\n            if (name) {\n                html += encodeHTML(name);\n                if (value != null) {\n                    html += ' : ';\n                }\n            }\n            if (value != null) {\n                html += encodeHTML(formattedValue);\n            }\n            return html;\n        },\n\n        getData: function () {\n            return this._data;\n        },\n\n        setData: function (data) {\n            this._data = data;\n        }\n    });\n\n    zrUtil.mixin(MarkerModel, modelUtil.dataFormatMixin);\n\n    module.exports = MarkerModel;\n\n\n/***/ }),\n/* 539 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    module.exports = __webpack_require__(318).extendComponentView({\n\n        type: 'marker',\n\n        init: function () {\n            /**\n             * Markline grouped by series\n             * @private\n             * @type {Object}\n             */\n            this.markerGroupMap = {};\n        },\n\n        render: function (markerModel, ecModel, api) {\n            var markerGroupMap = this.markerGroupMap;\n            for (var name in markerGroupMap) {\n                if (markerGroupMap.hasOwnProperty(name)) {\n                    markerGroupMap[name].__keep = false;\n                }\n            }\n\n            var markerModelKey = this.type + 'Model';\n            ecModel.eachSeries(function (seriesModel) {\n                var markerModel = seriesModel[markerModelKey];\n                markerModel && this.renderSeries(seriesModel, markerModel, ecModel, api);\n            }, this);\n\n            for (var name in markerGroupMap) {\n                if (markerGroupMap.hasOwnProperty(name) && !markerGroupMap[name].__keep) {\n                    this.group.remove(markerGroupMap[name].group);\n                }\n            }\n        },\n\n        renderSeries: function () {}\n    });\n\n\n/***/ }),\n/* 540 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(317);\n    var numberUtil = __webpack_require__(320);\n    var indexOf = zrUtil.indexOf;\n\n    function hasXOrY(item) {\n        return !(isNaN(parseFloat(item.x)) && isNaN(parseFloat(item.y)));\n    }\n\n    function hasXAndY(item) {\n        return !isNaN(parseFloat(item.x)) && !isNaN(parseFloat(item.y));\n    }\n\n    function getPrecision(data, valueAxisDim, dataIndex) {\n        var precision = -1;\n        do {\n            precision = Math.max(\n                numberUtil.getPrecision(data.get(\n                    valueAxisDim, dataIndex\n                )),\n                precision\n            );\n            data = data.stackedOn;\n        } while (data);\n\n        return precision;\n    }\n\n    function markerTypeCalculatorWithExtent(\n        mlType, data, otherDataDim, targetDataDim, otherCoordIndex, targetCoordIndex\n    ) {\n        var coordArr = [];\n        var value = numCalculate(data, targetDataDim, mlType);\n\n        var dataIndex = data.indexOfNearest(targetDataDim, value, true);\n        coordArr[otherCoordIndex] = data.get(otherDataDim, dataIndex, true);\n        coordArr[targetCoordIndex] = data.get(targetDataDim, dataIndex, true);\n\n        var precision = getPrecision(data, targetDataDim, dataIndex);\n        if (precision >= 0) {\n            coordArr[targetCoordIndex] = +coordArr[targetCoordIndex].toFixed(precision);\n        }\n\n        return coordArr;\n    }\n\n    var curry = zrUtil.curry;\n    // TODO Specified percent\n    var markerTypeCalculator = {\n        /**\n         * @method\n         * @param {module:echarts/data/List} data\n         * @param {string} baseAxisDim\n         * @param {string} valueAxisDim\n         */\n        min: curry(markerTypeCalculatorWithExtent, 'min'),\n        /**\n         * @method\n         * @param {module:echarts/data/List} data\n         * @param {string} baseAxisDim\n         * @param {string} valueAxisDim\n         */\n        max: curry(markerTypeCalculatorWithExtent, 'max'),\n\n        /**\n         * @method\n         * @param {module:echarts/data/List} data\n         * @param {string} baseAxisDim\n         * @param {string} valueAxisDim\n         */\n        average: curry(markerTypeCalculatorWithExtent, 'average')\n    };\n\n    /**\n     * Transform markPoint data item to format used in List by do the following\n     * 1. Calculate statistic like `max`, `min`, `average`\n     * 2. Convert `item.xAxis`, `item.yAxis` to `item.coord` array\n     * @param  {module:echarts/model/Series} seriesModel\n     * @param  {module:echarts/coord/*} [coordSys]\n     * @param  {Object} item\n     * @return {Object}\n     */\n    var dataTransform = function (seriesModel, item) {\n        var data = seriesModel.getData();\n        var coordSys = seriesModel.coordinateSystem;\n\n        // 1. If not specify the position with pixel directly\n        // 2. If `coord` is not a data array. Which uses `xAxis`,\n        // `yAxis` to specify the coord on each dimension\n\n        // parseFloat first because item.x and item.y can be percent string like '20%'\n        if (item && !hasXAndY(item) && !zrUtil.isArray(item.coord) && coordSys) {\n            var dims = coordSys.dimensions;\n            var axisInfo = getAxisInfo(item, data, coordSys, seriesModel);\n\n            // Clone the option\n            // Transform the properties xAxis, yAxis, radiusAxis, angleAxis, geoCoord to value\n            item = zrUtil.clone(item);\n\n            if (item.type\n                && markerTypeCalculator[item.type]\n                && axisInfo.baseAxis && axisInfo.valueAxis\n            ) {\n                var otherCoordIndex = indexOf(dims, axisInfo.baseAxis.dim);\n                var targetCoordIndex = indexOf(dims, axisInfo.valueAxis.dim);\n\n                item.coord = markerTypeCalculator[item.type](\n                    data, axisInfo.baseDataDim, axisInfo.valueDataDim,\n                    otherCoordIndex, targetCoordIndex\n                );\n                // Force to use the value of calculated value.\n                item.value = item.coord[targetCoordIndex];\n            }\n            else {\n                // FIXME Only has one of xAxis and yAxis.\n                var coord = [\n                    item.xAxis != null ? item.xAxis : item.radiusAxis,\n                    item.yAxis != null ? item.yAxis : item.angleAxis\n                ];\n                // Each coord support max, min, average\n                for (var i = 0; i < 2; i++) {\n                    if (markerTypeCalculator[coord[i]]) {\n                        var dataDim = seriesModel.coordDimToDataDim(dims[i])[0];\n                        coord[i] = numCalculate(data, dataDim, coord[i]);\n                    }\n                }\n                item.coord = coord;\n            }\n        }\n        return item;\n    };\n\n    var getAxisInfo = function (item, data, coordSys, seriesModel) {\n        var ret = {};\n\n        if (item.valueIndex != null || item.valueDim != null) {\n            ret.valueDataDim = item.valueIndex != null\n                ? data.getDimension(item.valueIndex) : item.valueDim;\n            ret.valueAxis = coordSys.getAxis(seriesModel.dataDimToCoordDim(ret.valueDataDim));\n            ret.baseAxis = coordSys.getOtherAxis(ret.valueAxis);\n            ret.baseDataDim = seriesModel.coordDimToDataDim(ret.baseAxis.dim)[0];\n        }\n        else {\n            ret.baseAxis = seriesModel.getBaseAxis();\n            ret.valueAxis = coordSys.getOtherAxis(ret.baseAxis);\n            ret.baseDataDim = seriesModel.coordDimToDataDim(ret.baseAxis.dim)[0];\n            ret.valueDataDim = seriesModel.coordDimToDataDim(ret.valueAxis.dim)[0];\n        }\n\n        return ret;\n    };\n\n    /**\n     * Filter data which is out of coordinateSystem range\n     * [dataFilter description]\n     * @param  {module:echarts/coord/*} [coordSys]\n     * @param  {Object} item\n     * @return {boolean}\n     */\n    var dataFilter = function (coordSys, item) {\n        // Alwalys return true if there is no coordSys\n        return (coordSys && coordSys.containData && item.coord && !hasXOrY(item))\n            ? coordSys.containData(item.coord) : true;\n    };\n\n    var dimValueGetter = function (item, dimName, dataIndex, dimIndex) {\n        // x, y, radius, angle\n        if (dimIndex < 2) {\n            return item.coord && item.coord[dimIndex];\n        }\n        return item.value;\n    };\n\n    var numCalculate = function (data, valueDataDim, type) {\n        if (type === 'average') {\n            var sum = 0;\n            var count = 0;\n            data.each(valueDataDim, function (val, idx) {\n                if (!isNaN(val)) {\n                    sum += val;\n                    count++;\n                }\n            }, true);\n            return sum / count;\n        }\n        else {\n            return data.getDataExtent(valueDataDim, true)[type === 'max' ? 1 : 0];\n        }\n    };\n\n    module.exports = {\n        dataTransform: dataTransform,\n        dataFilter: dataFilter,\n        dimValueGetter: dimValueGetter,\n        getAxisInfo: getAxisInfo,\n        numCalculate: numCalculate\n    };\n\n\n/***/ }),\n/* 541 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar echarts = __webpack_require__(318);\n\n__webpack_require__(459);\n\n__webpack_require__(376);\nexports.default = {\n  name: 'barPercent',\n  props: {\n    className: {\n      type: String,\n      default: 'bar-percent-chart'\n    },\n    id: {\n      type: String,\n      default: 'bar-percent-chart'\n    },\n    width: {\n      type: String,\n      default: '100px'\n    },\n    height: {\n      type: String,\n      default: '80px'\n    },\n    dataNum: {\n      type: Number,\n      default: 0\n    }\n  },\n  data: function data() {\n    return {\n      chart: null\n    };\n  },\n\n  watch: {\n    dataNum: function dataNum() {\n      this.setOptions();\n    }\n  },\n  mounted: function mounted() {\n    this.initBar();\n  },\n\n  methods: {\n    initBar: function initBar() {\n      this.chart = echarts.init(document.getElementById(this.id));\n      this.setOptions();\n    },\n    setOptions: function setOptions() {\n      this.chart.setOption({\n        tooltip: {\n          show: true,\n          formatter: function formatter(params) {\n            return '已完成' + params.value + '篇<br/>目标90篇<br/>完成进度' + Math.round(params.value / 90 * 100) + '%';\n          }\n        },\n        grid: {\n          left: 0,\n          right: 0,\n          bottom: 0,\n          top: 0,\n          containLabel: false\n        },\n        xAxis: [{\n          type: 'category',\n          data: ['文章完成比例']\n        }],\n        yAxis: [{\n          type: 'value',\n          data: [],\n          show: false\n        }],\n        animationDelay: 1000,\n        series: [{\n          type: 'bar',\n          name: '初诊',\n          itemStyle: {\n            normal: {\n              color: '#e5e5e5'\n            }\n          },\n          silent: true,\n          barGap: '-100%',\n          data: [150]\n        }, {\n          type: 'bar',\n          name: 'app',\n          itemStyle: {\n            normal: {\n              color: '#30b08f'\n            }\n          },\n          z: 10,\n          data: [this.dataNum]\n        }]\n      });\n    }\n  }\n};\n\n/***/ }),\n/* 542 */,\n/* 543 */,\n/* 544 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar echarts = __webpack_require__(318);\n\n__webpack_require__(379);\n\n__webpack_require__(648);\n__webpack_require__(649);\n__webpack_require__(376);\nexports.default = {\n  name: 'lineChart',\n  props: {\n    className: {\n      type: String,\n      default: 'line-chart'\n    },\n    id: {\n      type: String,\n      default: 'line-chart'\n    },\n    width: {\n      type: String,\n      default: '100%'\n    },\n    height: {\n      type: String,\n      default: '280px'\n    },\n    listData: {\n      type: Array,\n      require: true\n    }\n  },\n  data: function data() {\n    return {\n      chart: null\n    };\n  },\n\n  watch: {\n    listData: function listData(dataList) {\n      this.setLine(dataList);\n    }\n  },\n  mounted: function mounted() {\n    this.chart = echarts.init(document.getElementById(this.id));\n    this.setLine(this.listData);\n  },\n\n  methods: {\n    setLine: function setLine(dataList) {\n      var xAxisData = [];\n      var data = [];\n      for (var i = 0; i < dataList.length; i++) {\n        var item = dataList[i];\n        xAxisData.push(item.week.substring(item.week.length - 2) + '周');\n        data.push(item.count);\n      }\n      var markLineData = [];\n      for (var _i = 1; _i < data.length; _i++) {\n        markLineData.push([{\n          xAxis: _i - 1,\n          yAxis: data[_i - 1],\n          value: data[_i] - data[_i - 1]\n        }, {\n          xAxis: _i,\n          yAxis: data[_i]\n        }]);\n      }\n      this.chart.setOption({\n        title: {\n          text: 'Awesome Chart'\n        },\n        grid: {\n          left: 0,\n          right: 0,\n          bottom: 20,\n\n          containLabel: true\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        animationDelay: 1000,\n        xAxis: {\n          data: xAxisData,\n          axisLine: {\n            show: false\n          },\n          axisTick: {\n            show: false\n          }\n        },\n\n        yAxis: {\n          splitLine: {\n            show: false\n          },\n          show: false\n        },\n        series: [{\n          name: '撸文数',\n          type: 'line',\n          data: data,\n          markPoint: {\n            data: [{ type: 'max', name: '最大值' }, { type: 'min', name: '最小值' }]\n          },\n          itemStyle: {\n            normal: {\n              color: '#30b08f'\n            }\n          },\n          markLine: {\n            silent: true,\n            smooth: true,\n            effect: {\n              show: true\n            },\n            animationDuration: function animationDuration(idx) {\n              return idx * 100;\n            },\n\n            animationDelay: 1000,\n            animationEasing: 'quadraticInOut',\n            distance: 1,\n            label: {\n              normal: {\n                position: 'middle'\n              }\n            },\n            symbol: ['none', 'none'],\n            data: markLineData\n          }\n        }]\n      });\n    }\n  }\n};\n\n/***/ }),\n/* 545 */,\n/* 546 */,\n/* 547 */,\n/* 548 */,\n/* 549 */,\n/* 550 */,\n/* 551 */,\n/* 552 */,\n/* 553 */,\n/* 554 */,\n/* 555 */,\n/* 556 */,\n/* 557 */,\n/* 558 */,\n/* 559 */,\n/* 560 */,\n/* 561 */,\n/* 562 */,\n/* 563 */,\n/* 564 */,\n/* 565 */,\n/* 566 */,\n/* 567 */,\n/* 568 */,\n/* 569 */,\n/* 570 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = __webpack_require__(61);\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _vuex = __webpack_require__(33);\n\nvar _PanThumb = __webpack_require__(468);\n\nvar _PanThumb2 = _interopRequireDefault(_PanThumb);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  name: 'dashboard-default',\n  components: { PanThumb: _PanThumb2.default },\n  data: function data() {\n    return {\n      emptyGif: 'https://wpimg.wallstcn.com/0e03b7da-db9e-4819-ba10-9016ddfdaed3'\n    };\n  },\n\n  computed: (0, _extends3.default)({}, (0, _vuex.mapGetters)(['name', 'avatar', 'email', 'uid', 'introduction', 'roles']))\n};\n\n/***/ }),\n/* 571 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _line = __webpack_require__(708);\n\nvar _line2 = _interopRequireDefault(_line);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  name: 'articlesChart',\n  components: { LineChart: _line2.default },\n  props: {\n    listData: {\n      type: Array,\n      default: [],\n      require: true\n    }\n  },\n  data: function data() {\n    return {};\n  }\n};\n\n/***/ }),\n/* 572 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = __webpack_require__(61);\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _vuex = __webpack_require__(33);\n\nvar _PanThumb = __webpack_require__(468);\n\nvar _PanThumb2 = _interopRequireDefault(_PanThumb);\n\nvar _monthKpi = __webpack_require__(723);\n\nvar _monthKpi2 = _interopRequireDefault(_monthKpi);\n\nvar _articlesChart = __webpack_require__(721);\n\nvar _articlesChart2 = _interopRequireDefault(_articlesChart);\n\nvar _article = __webpack_require__(458);\n\nvar _compbig = __webpack_require__(704);\n\nvar _compbig2 = _interopRequireDefault(_compbig);\n\nvar _vueCountTo = __webpack_require__(521);\n\nvar _vueCountTo2 = _interopRequireDefault(_vueCountTo);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  name: 'dashboard-editor',\n  components: { PanThumb: _PanThumb2.default, MonthKpi: _monthKpi2.default, ArticlesChart: _articlesChart2.default, countTo: _vueCountTo2.default },\n  data: function data() {\n    return {\n      chart: null,\n      statisticsData: {\n        article_count: 1024,\n        comment_count: 102400,\n        latest_article: [],\n        month_article_count: 28,\n        pageviews_count: 1024,\n        week_article: [{ count: 30, week: '201716' }, { count: 26, week: '201715' }, { count: 31, week: '201714' }, { count: 28, week: '201713' }, { count: 40, week: '201712' }, { count: 41, week: '201711' }, { count: 50, week: '201710' }, { count: 42, week: '201709' }, { count: 36, week: '201708' }, { count: 32, week: '201707' }, { count: 40, week: '201706' }, { count: 41, week: '201705' }]\n      },\n      list: [],\n      emptyGif: _compbig2.default\n    };\n  },\n  created: function created() {\n    this.fetchData();\n  },\n\n  computed: (0, _extends3.default)({}, (0, _vuex.mapGetters)(['name', 'avatar', 'email', 'uid', 'introduction', 'roles']), {\n    recentArticles: function recentArticles() {\n      return this.list.slice(0, 7);\n    }\n  }),\n  methods: {\n    fetchData: function fetchData() {\n      var _this = this;\n\n      (0, _article.getList)(this.listQuery).then(function (response) {\n        console.log(response.data);\n        _this.list = response.data;\n      });\n    }\n  },\n  filters: {\n    statusFilter: function statusFilter(status) {\n      var statusMap = {\n        published: '已发布',\n        draft: '草稿中',\n        deleted: '已删除'\n      };\n      return statusMap[status];\n    }\n  }\n};\n\n/***/ }),\n/* 573 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _barPercent = __webpack_require__(705);\n\nvar _barPercent2 = _interopRequireDefault(_barPercent);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  name: 'monthKpi',\n  components: { BarPercent: _barPercent2.default },\n  props: {\n    articlesComplete: {\n      type: Number\n    }\n  },\n  data: function data() {\n    return {\n      month: new Date().getMonth() + 1\n    };\n  }\n};\n\n/***/ }),\n/* 574 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = __webpack_require__(61);\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _vuex = __webpack_require__(33);\n\nvar _index = __webpack_require__(722);\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _index3 = __webpack_require__(720);\n\nvar _index4 = _interopRequireDefault(_index3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  name: 'dashboard',\n  components: { EditorDashboard: _index2.default, DefaultDashboard: _index4.default },\n  data: function data() {\n    return {\n      currentRole: 'EditorDashboard'\n    };\n  },\n\n  computed: (0, _extends3.default)({}, (0, _vuex.mapGetters)(['name', 'avatar', 'email', 'introduction', 'roles'])),\n  created: function created() {\n    if (this.roles.indexOf('admin') >= 0) {\n      return;\n    }\n    var isEditor = this.roles.some(function (v) {\n      return v.indexOf('editor') >= 0;\n    });\n    if (!isEditor) {\n      this.currentRole = 'DefaultDashboard';\n    }\n  }\n};\n\n/***/ }),\n/* 575 */,\n/* 576 */,\n/* 577 */,\n/* 578 */,\n/* 579 */,\n/* 580 */,\n/* 581 */,\n/* 582 */,\n/* 583 */,\n/* 584 */,\n/* 585 */,\n/* 586 */,\n/* 587 */,\n/* 588 */,\n/* 589 */,\n/* 590 */,\n/* 591 */,\n/* 592 */,\n/* 593 */,\n/* 594 */,\n/* 595 */,\n/* 596 */,\n/* 597 */,\n/* 598 */,\n/* 599 */,\n/* 600 */,\n/* 601 */,\n/* 602 */,\n/* 603 */,\n/* 604 */,\n/* 605 */,\n/* 606 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(289)();\n// imports\n\n\n// module\nexports.push([module.i, \".emptyGif[data-v-086af447]{display:block;width:45%;margin:0 auto}.dashboard-editor-container[data-v-086af447]{background-color:#e3e3e3;min-height:100vh;margin-top:-50px;padding:100px 60px 0}.dashboard-editor-container .pan-info-roles[data-v-086af447]{font-size:12px;font-weight:700;color:#333;display:block}.dashboard-editor-container .info-container[data-v-086af447]{position:relative;margin-left:190px;height:150px;line-height:200px}.dashboard-editor-container .info-container .display_name[data-v-086af447]{font-size:48px;line-height:48px;color:#212121;position:absolute;top:25px}\", \"\", {\"version\":3,\"sources\":[\"/./src/views/dashboard/default/index.vue\"],\"names\":[],\"mappings\":\"AACA,2BACE,cAAe,AACf,UAAW,AACX,aAAe,CAChB,AACD,6CACE,yBAA0B,AAC1B,iBAAkB,AAClB,iBAAkB,AAClB,oBAAwB,CACzB,AACD,6DACI,eAAgB,AAChB,gBAAiB,AACjB,WAAY,AACZ,aAAe,CAClB,AACD,6DACI,kBAAmB,AACnB,kBAAmB,AACnB,aAAc,AACd,iBAAmB,CACtB,AACD,2EACM,eAAgB,AAChB,iBAAkB,AAClB,cAAe,AACf,kBAAmB,AACnB,QAAU,CACf\",\"file\":\"index.vue\",\"sourcesContent\":[\"\\n.emptyGif[data-v-086af447] {\\n  display: block;\\n  width: 45%;\\n  margin: 0 auto;\\n}\\n.dashboard-editor-container[data-v-086af447] {\\n  background-color: #e3e3e3;\\n  min-height: 100vh;\\n  margin-top: -50px;\\n  padding: 100px 60px 0px;\\n}\\n.dashboard-editor-container .pan-info-roles[data-v-086af447] {\\n    font-size: 12px;\\n    font-weight: 700;\\n    color: #333;\\n    display: block;\\n}\\n.dashboard-editor-container .info-container[data-v-086af447] {\\n    position: relative;\\n    margin-left: 190px;\\n    height: 150px;\\n    line-height: 200px;\\n}\\n.dashboard-editor-container .info-container .display_name[data-v-086af447] {\\n      font-size: 48px;\\n      line-height: 48px;\\n      color: #212121;\\n      position: absolute;\\n      top: 25px;\\n}\\n\"],\"sourceRoot\":\"webpack://\"}]);\n\n// exports\n\n\n/***/ }),\n/* 607 */,\n/* 608 */,\n/* 609 */,\n/* 610 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(289)();\n// imports\n\n\n// module\nexports.push([module.i, \".emptyGif[data-v-2b4edebd]{width:100%;height:100%}.recent-articles-emptyTitle[data-v-2b4edebd]{font-size:16px;color:#95a5a6;padding-top:20px;text-align:center}.dashboard-editor-container[data-v-2b4edebd]{padding:30px 50px}.dashboard-editor-container .pan-info-roles[data-v-2b4edebd]{font-size:12px;font-weight:700;color:#333;display:block}.dashboard-editor-container .info-container[data-v-2b4edebd]{position:relative;margin-left:190px;height:150px;line-height:200px}.dashboard-editor-container .info-container .display_name[data-v-2b4edebd]{font-size:48px;line-height:48px;color:#212121;position:absolute;top:25px}.dashboard-editor-container .info-container .info-wrapper[data-v-2b4edebd]{line-height:40px;position:absolute;bottom:0}.dashboard-editor-container .info-container .info-wrapper .info-item[data-v-2b4edebd]{cursor:pointer;display:inline-block;margin-right:95px}.dashboard-editor-container .info-container .info-wrapper .info-item .info-item-num[data-v-2b4edebd]{color:#212121;font-size:24px;display:inline-block;padding-right:5px}.dashboard-editor-container .info-container .info-wrapper .info-item .info-item-text[data-v-2b4edebd]{color:#727272;font-size:14px;padding-right:5px;display:inline-block}.dashboard-editor-container .info-container .dashboard-editor-icon[data-v-2b4edebd]{width:22px;height:22px}.dashboard-editor-container .btn-group[data-v-2b4edebd]{margin:30px 36px 30px 0}.dashboard-editor-container .main-dashboard-container[data-v-2b4edebd]{width:100%;position:relative;border:1px solid #dee1e2;padding:0 10px}.dashboard-editor-container .chart-container[data-v-2b4edebd]{float:left;position:relative;padding-right:10px;width:40%;border-right:1px solid #dee1e2}.dashboard-editor-container .recent-articles-container[data-v-2b4edebd]{padding:12px 12px 0;float:left;width:60%;position:relative}.dashboard-editor-container .recent-articles-container .recent-articles-title[data-v-2b4edebd]{font-size:16px;color:#95a5a6;letter-spacing:1px;padding-left:15px;padding-bottom:10px;border-bottom:1px solid #dee1e2}.dashboard-editor-container .recent-articles-container .recent-articles-more[data-v-2b4edebd]{color:#2c3e50;font-size:12px;float:right;margin-right:25px;line-height:40px}.dashboard-editor-container .recent-articles-container .recent-articles-more[data-v-2b4edebd]:hover{color:#3a71a8}.dashboard-editor-container .recent-articles-container .recent-articles-wrapper[data-v-2b4edebd]{padding:0 20px 0 22px}.dashboard-editor-container .recent-articles-container .recent-articles-wrapper .recent-articles-item[data-v-2b4edebd]{cursor:pointer;padding:16px 100px 16px 16px;border-bottom:1px solid #dee1e2;position:relative}.dashboard-editor-container .recent-articles-container .recent-articles-wrapper .recent-articles-item[data-v-2b4edebd]:before{content:\\\"\\\";height:104%;width:0;background:#30b08f;display:inline-block;position:absolute;opacity:0;left:0;top:-2px;transition:all .3s ease}.dashboard-editor-container .recent-articles-container .recent-articles-wrapper .recent-articles-item[data-v-2b4edebd]:hover:before{opacity:1;width:3px}.dashboard-editor-container .recent-articles-container .recent-articles-wrapper .recent-articles-status[data-v-2b4edebd]{font-size:12px;display:inline-block;color:#9b9b9b;padding-right:6px}.dashboard-editor-container .recent-articles-container .recent-articles-wrapper .recent-articles-content[data-v-2b4edebd]{font-size:13px;color:#2c3e50}.dashboard-editor-container .recent-articles-container .recent-articles-wrapper .recent-articles-content[data-v-2b4edebd]:hover{color:#3a71a8}.dashboard-editor-container .recent-articles-container .recent-articles-wrapper .recent-articles-time[data-v-2b4edebd]{position:absolute;right:16px;top:16px;color:#9b9b9b}\", \"\", {\"version\":3,\"sources\":[\"/./src/views/dashboard/editor/index.vue\"],\"names\":[],\"mappings\":\"AACA,2BACE,WAAY,AACZ,WAAa,CACd,AACD,6CACE,eAAgB,AAChB,cAAe,AACf,iBAAkB,AAClB,iBAAmB,CACpB,AACD,6CACE,iBAAmB,CACpB,AACD,6DACI,eAAgB,AAChB,gBAAiB,AACjB,WAAY,AACZ,aAAe,CAClB,AACD,6DACI,kBAAmB,AACnB,kBAAmB,AACnB,aAAc,AACd,iBAAmB,CACtB,AACD,2EACM,eAAgB,AAChB,iBAAkB,AAClB,cAAe,AACf,kBAAmB,AACnB,QAAU,CACf,AACD,2EACM,iBAAkB,AAClB,kBAAmB,AACnB,QAAY,CACjB,AACD,sFACQ,eAAgB,AAChB,qBAAsB,AACtB,iBAAmB,CAC1B,AACD,qGACU,cAAe,AACf,eAAgB,AAChB,qBAAsB,AACtB,iBAAmB,CAC5B,AACD,sGACU,cAAe,AACf,eAAgB,AAChB,kBAAmB,AACnB,oBAAsB,CAC/B,AACD,oFACM,WAAY,AACZ,WAAa,CAClB,AACD,wDACI,uBAAyB,CAC5B,AACD,uEACI,WAAY,AACZ,kBAAmB,AACnB,yBAA0B,AAC1B,cAAgB,CACnB,AACD,8DACI,WAAY,AACZ,kBAAmB,AACnB,mBAAoB,AACpB,UAAW,AACX,8BAAgC,CACnC,AACD,wEACI,oBAAuB,AACvB,WAAY,AACZ,UAAW,AACX,iBAAmB,CACtB,AACD,+FACM,eAAgB,AAChB,cAAe,AACf,mBAAoB,AACpB,kBAAmB,AACnB,oBAAqB,AACrB,+BAAiC,CACtC,AACD,8FACM,cAAe,AACf,eAAgB,AAChB,YAAa,AACb,kBAAmB,AACnB,gBAAkB,CACvB,AACD,oGACQ,aAAe,CACtB,AACD,iGACM,qBAAuB,CAC5B,AACD,uHACQ,eAAgB,AAChB,6BAA8B,AAC9B,gCAAiC,AACjC,iBAAmB,CAC1B,AACD,8HACU,WAAY,AACZ,YAAa,AACb,QAAW,AACX,mBAAoB,AACpB,qBAAsB,AACtB,kBAAmB,AACnB,UAAW,AACX,OAAU,AACV,SAAU,AACV,uBAA0B,CACnC,AACD,oIACU,UAAW,AACX,SAAW,CACpB,AACD,yHACQ,eAAgB,AAChB,qBAAsB,AACtB,cAAe,AACf,iBAAmB,CAC1B,AACD,0HACQ,eAAgB,AAChB,aAAe,CACtB,AACD,gIACU,aAAe,CACxB,AACD,uHACQ,kBAAmB,AACnB,WAAY,AACZ,SAAU,AACV,aAAe,CACtB\",\"file\":\"index.vue\",\"sourcesContent\":[\"\\n.emptyGif[data-v-2b4edebd] {\\n  width: 100%;\\n  height: 100%;\\n}\\n.recent-articles-emptyTitle[data-v-2b4edebd] {\\n  font-size: 16px;\\n  color: #95A5A6;\\n  padding-top: 20px;\\n  text-align: center;\\n}\\n.dashboard-editor-container[data-v-2b4edebd] {\\n  padding: 30px 50px;\\n}\\n.dashboard-editor-container .pan-info-roles[data-v-2b4edebd] {\\n    font-size: 12px;\\n    font-weight: 700;\\n    color: #333;\\n    display: block;\\n}\\n.dashboard-editor-container .info-container[data-v-2b4edebd] {\\n    position: relative;\\n    margin-left: 190px;\\n    height: 150px;\\n    line-height: 200px;\\n}\\n.dashboard-editor-container .info-container .display_name[data-v-2b4edebd] {\\n      font-size: 48px;\\n      line-height: 48px;\\n      color: #212121;\\n      position: absolute;\\n      top: 25px;\\n}\\n.dashboard-editor-container .info-container .info-wrapper[data-v-2b4edebd] {\\n      line-height: 40px;\\n      position: absolute;\\n      bottom: 0px;\\n}\\n.dashboard-editor-container .info-container .info-wrapper .info-item[data-v-2b4edebd] {\\n        cursor: pointer;\\n        display: inline-block;\\n        margin-right: 95px;\\n}\\n.dashboard-editor-container .info-container .info-wrapper .info-item .info-item-num[data-v-2b4edebd] {\\n          color: #212121;\\n          font-size: 24px;\\n          display: inline-block;\\n          padding-right: 5px;\\n}\\n.dashboard-editor-container .info-container .info-wrapper .info-item .info-item-text[data-v-2b4edebd] {\\n          color: #727272;\\n          font-size: 14px;\\n          padding-right: 5px;\\n          display: inline-block;\\n}\\n.dashboard-editor-container .info-container .dashboard-editor-icon[data-v-2b4edebd] {\\n      width: 22px;\\n      height: 22px;\\n}\\n.dashboard-editor-container .btn-group[data-v-2b4edebd] {\\n    margin: 30px 36px 30px 0;\\n}\\n.dashboard-editor-container .main-dashboard-container[data-v-2b4edebd] {\\n    width: 100%;\\n    position: relative;\\n    border: 1px solid #DEE1E2;\\n    padding: 0 10px;\\n}\\n.dashboard-editor-container .chart-container[data-v-2b4edebd] {\\n    float: left;\\n    position: relative;\\n    padding-right: 10px;\\n    width: 40%;\\n    border-right: 1px solid #DEE1E2;\\n}\\n.dashboard-editor-container .recent-articles-container[data-v-2b4edebd] {\\n    padding: 12px 12px 0px;\\n    float: left;\\n    width: 60%;\\n    position: relative;\\n}\\n.dashboard-editor-container .recent-articles-container .recent-articles-title[data-v-2b4edebd] {\\n      font-size: 16px;\\n      color: #95A5A6;\\n      letter-spacing: 1px;\\n      padding-left: 15px;\\n      padding-bottom: 10px;\\n      border-bottom: 1px solid #DEE1E2;\\n}\\n.dashboard-editor-container .recent-articles-container .recent-articles-more[data-v-2b4edebd] {\\n      color: #2C3E50;\\n      font-size: 12px;\\n      float: right;\\n      margin-right: 25px;\\n      line-height: 40px;\\n}\\n.dashboard-editor-container .recent-articles-container .recent-articles-more[data-v-2b4edebd]:hover {\\n        color: #3A71A8;\\n}\\n.dashboard-editor-container .recent-articles-container .recent-articles-wrapper[data-v-2b4edebd] {\\n      padding: 0 20px 0 22px;\\n}\\n.dashboard-editor-container .recent-articles-container .recent-articles-wrapper .recent-articles-item[data-v-2b4edebd] {\\n        cursor: pointer;\\n        padding: 16px 100px 16px 16px;\\n        border-bottom: 1px solid #DEE1E2;\\n        position: relative;\\n}\\n.dashboard-editor-container .recent-articles-container .recent-articles-wrapper .recent-articles-item[data-v-2b4edebd]:before {\\n          content: \\\"\\\";\\n          height: 104%;\\n          width: 0px;\\n          background: #30B08F;\\n          display: inline-block;\\n          position: absolute;\\n          opacity: 0;\\n          left: 0px;\\n          top: -2px;\\n          transition: 0.3s ease all;\\n}\\n.dashboard-editor-container .recent-articles-container .recent-articles-wrapper .recent-articles-item[data-v-2b4edebd]:hover:before {\\n          opacity: 1;\\n          width: 3px;\\n}\\n.dashboard-editor-container .recent-articles-container .recent-articles-wrapper .recent-articles-status[data-v-2b4edebd] {\\n        font-size: 12px;\\n        display: inline-block;\\n        color: #9B9B9B;\\n        padding-right: 6px;\\n}\\n.dashboard-editor-container .recent-articles-container .recent-articles-wrapper .recent-articles-content[data-v-2b4edebd] {\\n        font-size: 13px;\\n        color: #2C3E50;\\n}\\n.dashboard-editor-container .recent-articles-container .recent-articles-wrapper .recent-articles-content[data-v-2b4edebd]:hover {\\n          color: #3A71A8;\\n}\\n.dashboard-editor-container .recent-articles-container .recent-articles-wrapper .recent-articles-time[data-v-2b4edebd] {\\n        position: absolute;\\n        right: 16px;\\n        top: 16px;\\n        color: #9B9B9B;\\n}\\n\"],\"sourceRoot\":\"webpack://\"}]);\n\n// exports\n\n\n/***/ }),\n/* 611 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(289)();\n// imports\n\n\n// module\nexports.push([module.i, \".monthKpi-container[data-v-32c30469]{width:100%}.monthKpi-container-title[data-v-32c30469]{color:#7f8c8d;font-size:16px;display:inline-block;margin-top:10px}.monthKpi-container-chart[data-v-32c30469]{margin-left:100px;margin-bottom:4px}.monthKpi-container-text[data-v-32c30469]{margin-left:112px;color:#9ea7b3;font-size:12px}.monthKpi-container-count[data-v-32c30469]{color:#30b08f;font-size:34px;position:absolute;left:260px;top:60px}.monthKpi-container-count b[data-v-32c30469]{padding-left:10px;color:#9ea7b3;font-size:12px}\", \"\", {\"version\":3,\"sources\":[\"/./src/views/dashboard/editor/monthKpi.vue\"],\"names\":[],\"mappings\":\"AACA,qCACE,UAAY,CACb,AACD,2CACE,cAAe,AACf,eAAgB,AAChB,qBAAsB,AACtB,eAAiB,CAClB,AACD,2CACE,kBAAmB,AACnB,iBAAmB,CACpB,AACD,0CACE,kBAAmB,AACnB,cAAe,AACf,cAAgB,CACjB,AACD,2CACE,cAAe,AACf,eAAgB,AAChB,kBAAmB,AACnB,WAAY,AACZ,QAAU,CACX,AACD,6CACI,kBAAmB,AACnB,cAAe,AACf,cAAgB,CACnB\",\"file\":\"monthKpi.vue\",\"sourcesContent\":[\"\\n.monthKpi-container[data-v-32c30469] {\\n  width: 100%;\\n}\\n.monthKpi-container-title[data-v-32c30469] {\\n  color: #7F8C8D;\\n  font-size: 16px;\\n  display: inline-block;\\n  margin-top: 10px;\\n}\\n.monthKpi-container-chart[data-v-32c30469] {\\n  margin-left: 100px;\\n  margin-bottom: 4px;\\n}\\n.monthKpi-container-text[data-v-32c30469] {\\n  margin-left: 112px;\\n  color: #9EA7B3;\\n  font-size: 12px;\\n}\\n.monthKpi-container-count[data-v-32c30469] {\\n  color: #30B08F;\\n  font-size: 34px;\\n  position: absolute;\\n  left: 260px;\\n  top: 60px;\\n}\\n.monthKpi-container-count b[data-v-32c30469] {\\n    padding-left: 10px;\\n    color: #9EA7B3;\\n    font-size: 12px;\\n}\\n\"],\"sourceRoot\":\"webpack://\"}]);\n\n// exports\n\n\n/***/ }),\n/* 612 */,\n/* 613 */,\n/* 614 */,\n/* 615 */,\n/* 616 */,\n/* 617 */,\n/* 618 */,\n/* 619 */,\n/* 620 */,\n/* 621 */,\n/* 622 */,\n/* 623 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(289)();\n// imports\n\n\n// module\nexports.push([module.i, \".articlesChart-container{width:100%}.articlesChart-container-title{color:#7f8c8d;font-size:16px;display:inline-block;margin-top:10px}\", \"\", {\"version\":3,\"sources\":[\"/./src/views/dashboard/editor/articlesChart.vue\"],\"names\":[],\"mappings\":\"AACA,yBACI,UAAY,CACf,AACD,+BACI,cAAe,AACf,eAAgB,AAChB,qBAAsB,AACtB,eAAiB,CACpB\",\"file\":\"articlesChart.vue\",\"sourcesContent\":[\"\\n.articlesChart-container {\\n    width: 100%;\\n}\\n.articlesChart-container-title {\\n    color: #7F8C8D;\\n    font-size: 16px;\\n    display: inline-block;\\n    margin-top: 10px;\\n}\\n\"],\"sourceRoot\":\"webpack://\"}]);\n\n// exports\n\n\n/***/ }),\n/* 624 */,\n/* 625 */,\n/* 626 */,\n/* 627 */,\n/* 628 */,\n/* 629 */,\n/* 630 */,\n/* 631 */,\n/* 632 */,\n/* 633 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/chart/helper/Line\n */\n\n\n    var symbolUtil = __webpack_require__(357);\n    var vector = __webpack_require__(321);\n    // var matrix = require('zrender/lib/core/matrix');\n    var LinePath = __webpack_require__(635);\n    var graphic = __webpack_require__(319);\n    var zrUtil = __webpack_require__(317);\n    var numberUtil = __webpack_require__(320);\n\n    var SYMBOL_CATEGORIES = ['fromSymbol', 'toSymbol'];\n    function makeSymbolTypeKey(symbolCategory) {\n        return '_' + symbolCategory + 'Type';\n    }\n    /**\n     * @inner\n     */\n    function createSymbol(name, lineData, idx) {\n        var color = lineData.getItemVisual(idx, 'color');\n        var symbolType = lineData.getItemVisual(idx, name);\n        var symbolSize = lineData.getItemVisual(idx, name + 'Size');\n\n        if (!symbolType || symbolType === 'none') {\n            return;\n        }\n\n        if (!zrUtil.isArray(symbolSize)) {\n            symbolSize = [symbolSize, symbolSize];\n        }\n        var symbolPath = symbolUtil.createSymbol(\n            symbolType, -symbolSize[0] / 2, -symbolSize[1] / 2,\n            symbolSize[0], symbolSize[1], color\n        );\n\n        symbolPath.name = name;\n\n        return symbolPath;\n    }\n\n    function createLine(points) {\n        var line = new LinePath({\n            name: 'line'\n        });\n        setLinePoints(line.shape, points);\n        return line;\n    }\n\n    function setLinePoints(targetShape, points) {\n        var p1 = points[0];\n        var p2 = points[1];\n        var cp1 = points[2];\n        targetShape.x1 = p1[0];\n        targetShape.y1 = p1[1];\n        targetShape.x2 = p2[0];\n        targetShape.y2 = p2[1];\n        targetShape.percent = 1;\n\n        if (cp1) {\n            targetShape.cpx1 = cp1[0];\n            targetShape.cpy1 = cp1[1];\n        }\n        else {\n            targetShape.cpx1 = NaN;\n            targetShape.cpy1 = NaN;\n        }\n    }\n\n    function updateSymbolAndLabelBeforeLineUpdate () {\n        var lineGroup = this;\n        var symbolFrom = lineGroup.childOfName('fromSymbol');\n        var symbolTo = lineGroup.childOfName('toSymbol');\n        var label = lineGroup.childOfName('label');\n        // Quick reject\n        if (!symbolFrom && !symbolTo && label.ignore) {\n            return;\n        }\n\n        var invScale = 1;\n        var parentNode = this.parent;\n        while (parentNode) {\n            if (parentNode.scale) {\n                invScale /= parentNode.scale[0];\n            }\n            parentNode = parentNode.parent;\n        }\n\n        var line = lineGroup.childOfName('line');\n        // If line not changed\n        // FIXME Parent scale changed\n        if (!this.__dirty && !line.__dirty) {\n            return;\n        }\n\n        var percent = line.shape.percent;\n        var fromPos = line.pointAt(0);\n        var toPos = line.pointAt(percent);\n\n        var d = vector.sub([], toPos, fromPos);\n        vector.normalize(d, d);\n\n        if (symbolFrom) {\n            symbolFrom.attr('position', fromPos);\n            var tangent = line.tangentAt(0);\n            symbolFrom.attr('rotation', Math.PI / 2 - Math.atan2(\n                tangent[1], tangent[0]\n            ));\n            symbolFrom.attr('scale', [invScale * percent, invScale * percent]);\n        }\n        if (symbolTo) {\n            symbolTo.attr('position', toPos);\n            var tangent = line.tangentAt(1);\n            symbolTo.attr('rotation', -Math.PI / 2 - Math.atan2(\n                tangent[1], tangent[0]\n            ));\n            symbolTo.attr('scale', [invScale * percent, invScale * percent]);\n        }\n\n        if (!label.ignore) {\n            label.attr('position', toPos);\n\n            var textPosition;\n            var textAlign;\n            var textVerticalAlign;\n\n            var distance = 5 * invScale;\n            // End\n            if (label.__position === 'end') {\n                textPosition = [d[0] * distance + toPos[0], d[1] * distance + toPos[1]];\n                textAlign = d[0] > 0.8 ? 'left' : (d[0] < -0.8 ? 'right' : 'center');\n                textVerticalAlign = d[1] > 0.8 ? 'top' : (d[1] < -0.8 ? 'bottom' : 'middle');\n            }\n            // Middle\n            else if (label.__position === 'middle') {\n                var halfPercent = percent / 2;\n                var tangent = line.tangentAt(halfPercent);\n                var n = [tangent[1], -tangent[0]];\n                var cp = line.pointAt(halfPercent);\n                if (n[1] > 0) {\n                    n[0] = -n[0];\n                    n[1] = -n[1];\n                }\n                textPosition = [cp[0] + n[0] * distance, cp[1] + n[1] * distance];\n                textAlign = 'center';\n                textVerticalAlign = 'bottom';\n                var rotation = -Math.atan2(tangent[1], tangent[0]);\n                if (toPos[0] < fromPos[0]) {\n                    rotation = Math.PI + rotation;\n                }\n                label.attr('rotation', rotation);\n            }\n            // Start\n            else {\n                textPosition = [-d[0] * distance + fromPos[0], -d[1] * distance + fromPos[1]];\n                textAlign = d[0] > 0.8 ? 'right' : (d[0] < -0.8 ? 'left' : 'center');\n                textVerticalAlign = d[1] > 0.8 ? 'bottom' : (d[1] < -0.8 ? 'top' : 'middle');\n            }\n            label.attr({\n                style: {\n                    // Use the user specified text align and baseline first\n                    textVerticalAlign: label.__verticalAlign || textVerticalAlign,\n                    textAlign: label.__textAlign || textAlign\n                },\n                position: textPosition,\n                scale: [invScale, invScale]\n            });\n        }\n    }\n\n    /**\n     * @constructor\n     * @extends {module:zrender/graphic/Group}\n     * @alias {module:echarts/chart/helper/Line}\n     */\n    function Line(lineData, idx, seriesScope) {\n        graphic.Group.call(this);\n\n        this._createLine(lineData, idx, seriesScope);\n    }\n\n    var lineProto = Line.prototype;\n\n    // Update symbol position and rotation\n    lineProto.beforeUpdate = updateSymbolAndLabelBeforeLineUpdate;\n\n    lineProto._createLine = function (lineData, idx, seriesScope) {\n        var seriesModel = lineData.hostModel;\n        var linePoints = lineData.getItemLayout(idx);\n\n        var line = createLine(linePoints);\n        line.shape.percent = 0;\n        graphic.initProps(line, {\n            shape: {\n                percent: 1\n            }\n        }, seriesModel, idx);\n\n        this.add(line);\n\n        var label = new graphic.Text({\n            name: 'label'\n        });\n        this.add(label);\n\n        zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n            var symbol = createSymbol(symbolCategory, lineData, idx);\n            // symbols must added after line to make sure\n            // it will be updated after line#update.\n            // Or symbol position and rotation update in line#beforeUpdate will be one frame slow\n            this.add(symbol);\n            this[makeSymbolTypeKey(symbolCategory)] = lineData.getItemVisual(idx, symbolCategory);\n        }, this);\n\n        this._updateCommonStl(lineData, idx, seriesScope);\n    };\n\n    lineProto.updateData = function (lineData, idx, seriesScope) {\n        var seriesModel = lineData.hostModel;\n\n        var line = this.childOfName('line');\n        var linePoints = lineData.getItemLayout(idx);\n        var target = {\n            shape: {}\n        };\n        setLinePoints(target.shape, linePoints);\n        graphic.updateProps(line, target, seriesModel, idx);\n\n        zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n            var symbolType = lineData.getItemVisual(idx, symbolCategory);\n            var key = makeSymbolTypeKey(symbolCategory);\n            // Symbol changed\n            if (this[key] !== symbolType) {\n                this.remove(this.childOfName(symbolCategory));\n                var symbol = createSymbol(symbolCategory, lineData, idx);\n                this.add(symbol);\n            }\n            this[key] = symbolType;\n        }, this);\n\n        this._updateCommonStl(lineData, idx, seriesScope);\n    };\n\n    lineProto._updateCommonStl = function (lineData, idx, seriesScope) {\n        var seriesModel = lineData.hostModel;\n\n        var line = this.childOfName('line');\n\n        var lineStyle = seriesScope && seriesScope.lineStyle;\n        var hoverLineStyle = seriesScope && seriesScope.hoverLineStyle;\n        var labelModel = seriesScope && seriesScope.labelModel;\n        var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n\n        // Optimization for large dataset\n        if (!seriesScope || lineData.hasItemOption) {\n            var itemModel = lineData.getItemModel(idx);\n\n            lineStyle = itemModel.getModel('lineStyle.normal').getLineStyle();\n            hoverLineStyle = itemModel.getModel('lineStyle.emphasis').getLineStyle();\n\n            labelModel = itemModel.getModel('label.normal');\n            hoverLabelModel = itemModel.getModel('label.emphasis');\n        }\n\n        var visualColor = lineData.getItemVisual(idx, 'color');\n        var visualOpacity = zrUtil.retrieve(\n            lineData.getItemVisual(idx, 'opacity'),\n            lineStyle.opacity,\n            1\n        );\n\n        line.useStyle(zrUtil.defaults(\n            {\n                strokeNoScale: true,\n                fill: 'none',\n                stroke: visualColor,\n                opacity: visualOpacity\n            },\n            lineStyle\n        ));\n        line.hoverStyle = hoverLineStyle;\n\n        // Update symbol\n        zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n            var symbol = this.childOfName(symbolCategory);\n            if (symbol) {\n                symbol.setColor(visualColor);\n                symbol.setStyle({\n                    opacity: visualOpacity\n                });\n            }\n        }, this);\n\n        var showLabel = labelModel.getShallow('show');\n        var hoverShowLabel = hoverLabelModel.getShallow('show');\n\n        var label = this.childOfName('label');\n        var defaultLabelColor;\n        var defaultText;\n\n        if (showLabel || hoverShowLabel) {\n            var rawVal = seriesModel.getRawValue(idx);\n            defaultText = rawVal == null\n                ? defaultText = lineData.getName(idx)\n                : isFinite(rawVal)\n                ? numberUtil.round(rawVal)\n                : rawVal;\n            defaultLabelColor = visualColor || '#000';\n        }\n\n        // label.afterUpdate = lineAfterUpdate;\n        if (showLabel) {\n            var textStyleModel = labelModel.getModel('textStyle');\n            label.setStyle({\n                text: zrUtil.retrieve(\n                    seriesModel.getFormattedLabel(idx, 'normal', lineData.dataType),\n                    defaultText\n                ),\n                textFont: textStyleModel.getFont(),\n                fill: textStyleModel.getTextColor() || defaultLabelColor\n            });\n\n            label.__textAlign = textStyleModel.get('align');\n            label.__verticalAlign = textStyleModel.get('baseline');\n            label.__position = labelModel.get('position');\n        }\n        else {\n            label.setStyle('text', '');\n        }\n        if (hoverShowLabel) {\n            var textStyleHoverModel = hoverLabelModel.getModel('textStyle');\n\n            label.hoverStyle = {\n                text: zrUtil.retrieve(\n                    seriesModel.getFormattedLabel(idx, 'emphasis', lineData.dataType),\n                    defaultText\n                ),\n                textFont: textStyleHoverModel.getFont(),\n                fill: textStyleHoverModel.getTextColor() || defaultLabelColor\n            };\n        }\n        else {\n            label.hoverStyle = {\n                text: ''\n            };\n        }\n\n        label.ignore = !showLabel && !hoverShowLabel;\n\n        graphic.setHoverStyle(this);\n    };\n\n    lineProto.updateLayout = function (lineData, idx) {\n        this.setLinePoints(lineData.getItemLayout(idx));\n    };\n\n    lineProto.setLinePoints = function (points) {\n        var linePath = this.childOfName('line');\n        setLinePoints(linePath.shape, points);\n        linePath.dirty();\n    };\n\n    zrUtil.inherits(Line, graphic.Group);\n\n    module.exports = Line;\n\n\n/***/ }),\n/* 634 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/chart/helper/LineDraw\n */\n\n\n    var graphic = __webpack_require__(319);\n    var LineGroup = __webpack_require__(633);\n\n\n    function isPointNaN(pt) {\n        return isNaN(pt[0]) || isNaN(pt[1]);\n    }\n    function lineNeedsDraw(pts) {\n        return !isPointNaN(pts[0]) && !isPointNaN(pts[1]);\n    }\n    /**\n     * @alias module:echarts/component/marker/LineDraw\n     * @constructor\n     */\n    function LineDraw(ctor) {\n        this._ctor = ctor || LineGroup;\n        this.group = new graphic.Group();\n    }\n\n    var lineDrawProto = LineDraw.prototype;\n\n    /**\n     * @param {module:echarts/data/List} lineData\n     */\n    lineDrawProto.updateData = function (lineData) {\n\n        var oldLineData = this._lineData;\n        var group = this.group;\n        var LineCtor = this._ctor;\n\n        var hostModel = lineData.hostModel;\n\n        var seriesScope = {\n            lineStyle: hostModel.getModel('lineStyle.normal').getLineStyle(),\n            hoverLineStyle: hostModel.getModel('lineStyle.emphasis').getLineStyle(),\n            labelModel: hostModel.getModel('label.normal'),\n            hoverLabelModel: hostModel.getModel('label.emphasis')\n        };\n\n        lineData.diff(oldLineData)\n            .add(function (idx) {\n                if (!lineNeedsDraw(lineData.getItemLayout(idx))) {\n                    return;\n                }\n                var lineGroup = new LineCtor(lineData, idx, seriesScope);\n\n                lineData.setItemGraphicEl(idx, lineGroup);\n\n                group.add(lineGroup);\n            })\n            .update(function (newIdx, oldIdx) {\n                var lineGroup = oldLineData.getItemGraphicEl(oldIdx);\n                if (!lineNeedsDraw(lineData.getItemLayout(newIdx))) {\n                    group.remove(lineGroup);\n                    return;\n                }\n\n                if (!lineGroup) {\n                    lineGroup = new LineCtor(lineData, newIdx, seriesScope);\n                }\n                else {\n                    lineGroup.updateData(lineData, newIdx, seriesScope);\n                }\n\n                lineData.setItemGraphicEl(newIdx, lineGroup);\n\n                group.add(lineGroup);\n            })\n            .remove(function (idx) {\n                group.remove(oldLineData.getItemGraphicEl(idx));\n            })\n            .execute();\n\n        this._lineData = lineData;\n    };\n\n    lineDrawProto.updateLayout = function () {\n        var lineData = this._lineData;\n        lineData.eachItemGraphicEl(function (el, idx) {\n            el.updateLayout(lineData, idx);\n        }, this);\n    };\n\n    lineDrawProto.remove = function () {\n        this.group.removeAll();\n    };\n\n    module.exports = LineDraw;\n\n\n/***/ }),\n/* 635 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Line path for bezier and straight line draw\n */\n\n    var graphic = __webpack_require__(319);\n    var vec2 = __webpack_require__(321);\n\n    var straightLineProto = graphic.Line.prototype;\n    var bezierCurveProto = graphic.BezierCurve.prototype;\n\n    function isLine(shape) {\n        return isNaN(+shape.cpx1) || isNaN(+shape.cpy1);\n    }\n\n    module.exports = graphic.extendShape({\n\n        type: 'ec-line',\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        shape: {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n            percent: 1,\n            cpx1: null,\n            cpy1: null\n        },\n\n        buildPath: function (ctx, shape) {\n            (isLine(shape) ? straightLineProto : bezierCurveProto).buildPath(ctx, shape);\n        },\n\n        pointAt: function (t) {\n            return isLine(this.shape)\n                ? straightLineProto.pointAt.call(this, t)\n                : bezierCurveProto.pointAt.call(this, t);\n        },\n\n        tangentAt: function (t) {\n            var shape = this.shape;\n            var p = isLine(shape)\n                ? [shape.x2 - shape.x1, shape.y2 - shape.y1]\n                : bezierCurveProto.tangentAt.call(this, t);\n            return vec2.normalize(p, p);\n        }\n    });\n\n\n/***/ }),\n/* 636 */,\n/* 637 */,\n/* 638 */,\n/* 639 */,\n/* 640 */,\n/* 641 */,\n/* 642 */,\n/* 643 */,\n/* 644 */,\n/* 645 */,\n/* 646 */,\n/* 647 */,\n/* 648 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    __webpack_require__(650);\n    __webpack_require__(651);\n\n    __webpack_require__(318).registerPreprocessor(function (opt) {\n        // Make sure markLine component is enabled\n        opt.markLine = opt.markLine || {};\n    });\n\n\n/***/ }),\n/* 649 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// HINT Markpoint can't be used too much\n\n\n    __webpack_require__(652);\n    __webpack_require__(653);\n\n    __webpack_require__(318).registerPreprocessor(function (opt) {\n        // Make sure markPoint component is enabled\n        opt.markPoint = opt.markPoint || {};\n    });\n\n\n/***/ }),\n/* 650 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    module.exports = __webpack_require__(538).extend({\n\n        type: 'markLine',\n\n        defaultOption: {\n            zlevel: 0,\n            z: 5,\n\n            symbol: ['circle', 'arrow'],\n            symbolSize: [8, 16],\n\n            //symbolRotate: 0,\n\n            precision: 2,\n            tooltip: {\n                trigger: 'item'\n            },\n            label: {\n                normal: {\n                    show: true,\n                    position: 'end'\n                },\n                emphasis: {\n                    show: true\n                }\n            },\n            lineStyle: {\n                normal: {\n                    type: 'dashed'\n                },\n                emphasis: {\n                    width: 3\n                }\n            },\n            animationEasing: 'linear'\n        }\n    });\n\n\n/***/ }),\n/* 651 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(317);\n    var List = __webpack_require__(351);\n    var numberUtil = __webpack_require__(320);\n\n    var markerHelper = __webpack_require__(540);\n\n    var LineDraw = __webpack_require__(634);\n\n    var markLineTransform = function (seriesModel, coordSys, mlModel, item) {\n        var data = seriesModel.getData();\n        // Special type markLine like 'min', 'max', 'average'\n        var mlType = item.type;\n\n        if (!zrUtil.isArray(item)\n            && (\n                mlType === 'min' || mlType === 'max' || mlType === 'average'\n                // In case\n                // data: [{\n                //   yAxis: 10\n                // }]\n                || (item.xAxis != null || item.yAxis != null)\n            )\n        ) {\n            var valueAxis;\n            var valueDataDim;\n            var value;\n\n            if (item.yAxis != null || item.xAxis != null) {\n                valueDataDim = item.yAxis != null ? 'y' : 'x';\n                valueAxis = coordSys.getAxis(valueDataDim);\n\n                value = zrUtil.retrieve(item.yAxis, item.xAxis);\n            }\n            else {\n                var axisInfo = markerHelper.getAxisInfo(item, data, coordSys, seriesModel);\n                valueDataDim = axisInfo.valueDataDim;\n                valueAxis = axisInfo.valueAxis;\n                value = markerHelper.numCalculate(data, valueDataDim, mlType);\n            }\n            var valueIndex = valueDataDim === 'x' ? 0 : 1;\n            var baseIndex = 1 - valueIndex;\n\n            var mlFrom = zrUtil.clone(item);\n            var mlTo = {};\n\n            mlFrom.type = null;\n\n            mlFrom.coord = [];\n            mlTo.coord = [];\n            mlFrom.coord[baseIndex] = -Infinity;\n            mlTo.coord[baseIndex] = Infinity;\n\n            var precision = mlModel.get('precision');\n            if (precision >= 0 && typeof value === 'number') {\n                value = +value.toFixed(precision);\n            }\n\n            mlFrom.coord[valueIndex] = mlTo.coord[valueIndex] = value;\n\n            item = [mlFrom, mlTo, { // Extra option for tooltip and label\n                type: mlType,\n                valueIndex: item.valueIndex,\n                // Force to use the value of calculated value.\n                value: value\n            }];\n        }\n\n        item = [\n            markerHelper.dataTransform(seriesModel, item[0]),\n            markerHelper.dataTransform(seriesModel, item[1]),\n            zrUtil.extend({}, item[2])\n        ];\n\n        // Avoid line data type is extended by from(to) data type\n        item[2].type = item[2].type || '';\n\n        // Merge from option and to option into line option\n        zrUtil.merge(item[2], item[0]);\n        zrUtil.merge(item[2], item[1]);\n\n        return item;\n    };\n\n    function isInifinity(val) {\n        return !isNaN(val) && !isFinite(val);\n    }\n\n    // If a markLine has one dim\n    function ifMarkLineHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\n        var otherDimIndex = 1 - dimIndex;\n        var dimName = coordSys.dimensions[dimIndex];\n        return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex])\n            && fromCoord[dimIndex] === toCoord[dimIndex] && coordSys.getAxis(dimName).containData(fromCoord[dimIndex]);\n    }\n\n    function markLineFilter(coordSys, item) {\n        if (coordSys.type === 'cartesian2d') {\n            var fromCoord = item[0].coord;\n            var toCoord = item[1].coord;\n            // In case\n            // {\n            //  markLine: {\n            //    data: [{ yAxis: 2 }]\n            //  }\n            // }\n            if (\n                fromCoord && toCoord &&\n                (ifMarkLineHasOnlyDim(1, fromCoord, toCoord, coordSys)\n                || ifMarkLineHasOnlyDim(0, fromCoord, toCoord, coordSys))\n            ) {\n                return true;\n            }\n        }\n        return markerHelper.dataFilter(coordSys, item[0])\n            && markerHelper.dataFilter(coordSys, item[1]);\n    }\n\n    function updateSingleMarkerEndLayout(\n        data, idx, isFrom, seriesModel, api\n    ) {\n        var coordSys = seriesModel.coordinateSystem;\n        var itemModel = data.getItemModel(idx);\n\n        var point;\n        var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\n        var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\n        if (!isNaN(xPx) && !isNaN(yPx)) {\n            point = [xPx, yPx];\n        }\n        else {\n            // Chart like bar may have there own marker positioning logic\n            if (seriesModel.getMarkerPosition) {\n                // Use the getMarkerPoisition\n                point = seriesModel.getMarkerPosition(\n                    data.getValues(data.dimensions, idx)\n                );\n            }\n            else {\n                var dims = coordSys.dimensions;\n                var x = data.get(dims[0], idx);\n                var y = data.get(dims[1], idx);\n                point = coordSys.dataToPoint([x, y]);\n            }\n            // Expand line to the edge of grid if value on one axis is Inifnity\n            // In case\n            //  markLine: {\n            //    data: [{\n            //      yAxis: 2\n            //      // or\n            //      type: 'average'\n            //    }]\n            //  }\n            if (coordSys.type === 'cartesian2d') {\n                var xAxis = coordSys.getAxis('x');\n                var yAxis = coordSys.getAxis('y');\n                var dims = coordSys.dimensions;\n                if (isInifinity(data.get(dims[0], idx))) {\n                    point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[isFrom ? 0 : 1]);\n                }\n                else if (isInifinity(data.get(dims[1], idx))) {\n                    point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[isFrom ? 0 : 1]);\n                }\n            }\n\n            // Use x, y if has any\n            if (!isNaN(xPx)) {\n                point[0] = xPx;\n            }\n            if (!isNaN(yPx)) {\n                point[1] = yPx;\n            }\n        }\n\n        data.setItemLayout(idx, point);\n    }\n\n    __webpack_require__(539).extend({\n\n        type: 'markLine',\n\n        updateLayout: function (markLineModel, ecModel, api) {\n            ecModel.eachSeries(function (seriesModel) {\n                var mlModel = seriesModel.markLineModel;\n                if (mlModel) {\n                    var mlData = mlModel.getData();\n                    var fromData = mlModel.__from;\n                    var toData = mlModel.__to;\n                    // Update visual and layout of from symbol and to symbol\n                    fromData.each(function (idx) {\n                        updateSingleMarkerEndLayout(fromData, idx, true, seriesModel, api);\n                        updateSingleMarkerEndLayout(toData, idx, false, seriesModel, api);\n                    });\n                    // Update layout of line\n                    mlData.each(function (idx) {\n                        mlData.setItemLayout(idx, [\n                            fromData.getItemLayout(idx),\n                            toData.getItemLayout(idx)\n                        ]);\n                    });\n\n                    this.markerGroupMap[seriesModel.name].updateLayout();\n\n                }\n            }, this);\n        },\n\n        renderSeries: function (seriesModel, mlModel, ecModel, api) {\n            var coordSys = seriesModel.coordinateSystem;\n            var seriesName = seriesModel.name;\n            var seriesData = seriesModel.getData();\n\n            var lineDrawMap = this.markerGroupMap;\n            var lineDraw = lineDrawMap[seriesName];\n            if (!lineDraw) {\n                lineDraw = lineDrawMap[seriesName] = new LineDraw();\n            }\n            this.group.add(lineDraw.group);\n\n            var mlData = createList(coordSys, seriesModel, mlModel);\n\n            var fromData = mlData.from;\n            var toData = mlData.to;\n            var lineData = mlData.line;\n\n            mlModel.__from = fromData;\n            mlModel.__to = toData;\n            // Line data for tooltip and formatter\n            mlModel.setData(lineData);\n\n            var symbolType = mlModel.get('symbol');\n            var symbolSize = mlModel.get('symbolSize');\n            if (!zrUtil.isArray(symbolType)) {\n                symbolType = [symbolType, symbolType];\n            }\n            if (typeof symbolSize === 'number') {\n                symbolSize = [symbolSize, symbolSize];\n            }\n\n            // Update visual and layout of from symbol and to symbol\n            mlData.from.each(function (idx) {\n                updateDataVisualAndLayout(fromData, idx, true);\n                updateDataVisualAndLayout(toData, idx, false);\n            });\n\n            // Update visual and layout of line\n            lineData.each(function (idx) {\n                var lineColor = lineData.getItemModel(idx).get('lineStyle.normal.color');\n                lineData.setItemVisual(idx, {\n                    color: lineColor || fromData.getItemVisual(idx, 'color')\n                });\n                lineData.setItemLayout(idx, [\n                    fromData.getItemLayout(idx),\n                    toData.getItemLayout(idx)\n                ]);\n\n                lineData.setItemVisual(idx, {\n                    'fromSymbolSize': fromData.getItemVisual(idx, 'symbolSize'),\n                    'fromSymbol': fromData.getItemVisual(idx, 'symbol'),\n                    'toSymbolSize': toData.getItemVisual(idx, 'symbolSize'),\n                    'toSymbol': toData.getItemVisual(idx, 'symbol')\n                });\n            });\n\n            lineDraw.updateData(lineData);\n\n            // Set host model for tooltip\n            // FIXME\n            mlData.line.eachItemGraphicEl(function (el, idx) {\n                el.traverse(function (child) {\n                    child.dataModel = mlModel;\n                });\n            });\n\n            function updateDataVisualAndLayout(data, idx, isFrom) {\n                var itemModel = data.getItemModel(idx);\n\n                updateSingleMarkerEndLayout(\n                    data, idx, isFrom, seriesModel, api\n                );\n\n                data.setItemVisual(idx, {\n                    symbolSize: itemModel.get('symbolSize') || symbolSize[isFrom ? 0 : 1],\n                    symbol: itemModel.get('symbol', true) || symbolType[isFrom ? 0 : 1],\n                    color: itemModel.get('itemStyle.normal.color') || seriesData.getVisual('color')\n                });\n            }\n\n            lineDraw.__keep = true;\n\n            lineDraw.group.silent = mlModel.get('silent') || seriesModel.get('silent');\n        }\n    });\n\n    /**\n     * @inner\n     * @param {module:echarts/coord/*} coordSys\n     * @param {module:echarts/model/Series} seriesModel\n     * @param {module:echarts/model/Model} mpModel\n     */\n    function createList(coordSys, seriesModel, mlModel) {\n\n        var coordDimsInfos;\n        if (coordSys) {\n            coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n                var info = seriesModel.getData().getDimensionInfo(\n                    seriesModel.coordDimToDataDim(coordDim)[0]\n                ) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n                info.name = coordDim;\n                return info;\n            });\n        }\n        else {\n            coordDimsInfos =[{\n                name: 'value',\n                type: 'float'\n            }];\n        }\n\n        var fromData = new List(coordDimsInfos, mlModel);\n        var toData = new List(coordDimsInfos, mlModel);\n        // No dimensions\n        var lineData = new List([], mlModel);\n\n        var optData = zrUtil.map(mlModel.get('data'), zrUtil.curry(\n            markLineTransform, seriesModel, coordSys, mlModel\n        ));\n        if (coordSys) {\n            optData = zrUtil.filter(\n                optData, zrUtil.curry(markLineFilter, coordSys)\n            );\n        }\n        var dimValueGetter = coordSys ? markerHelper.dimValueGetter : function (item) {\n            return item.value;\n        };\n        fromData.initData(\n            zrUtil.map(optData, function (item) { return item[0]; }),\n            null, dimValueGetter\n        );\n        toData.initData(\n            zrUtil.map(optData, function (item) { return item[1]; }),\n            null, dimValueGetter\n        );\n        lineData.initData(\n            zrUtil.map(optData, function (item) { return item[2]; })\n        );\n        lineData.hasItemOption = true;\n        return {\n            from: fromData,\n            to: toData,\n            line: lineData\n        };\n    }\n\n\n/***/ }),\n/* 652 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    module.exports = __webpack_require__(538).extend({\n\n        type: 'markPoint',\n\n        defaultOption: {\n            zlevel: 0,\n            z: 5,\n            symbol: 'pin',\n            symbolSize: 50,\n            //symbolRotate: 0,\n            //symbolOffset: [0, 0]\n            tooltip: {\n                trigger: 'item'\n            },\n            label: {\n                normal: {\n                    show: true,\n                    position: 'inside'\n                },\n                emphasis: {\n                    show: true\n                }\n            },\n            itemStyle: {\n                normal: {\n                    borderWidth: 2\n                }\n            }\n        }\n    });\n\n\n/***/ }),\n/* 653 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var SymbolDraw = __webpack_require__(375);\n    var zrUtil = __webpack_require__(317);\n    var numberUtil = __webpack_require__(320);\n\n    var List = __webpack_require__(351);\n\n    var markerHelper = __webpack_require__(540);\n\n    function updateMarkerLayout(mpData, seriesModel, api) {\n        var coordSys = seriesModel.coordinateSystem;\n        mpData.each(function (idx) {\n            var itemModel = mpData.getItemModel(idx);\n            var point;\n            var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\n            var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                point = [xPx, yPx];\n            }\n            // Chart like bar may have there own marker positioning logic\n            else if (seriesModel.getMarkerPosition) {\n                // Use the getMarkerPoisition\n                point = seriesModel.getMarkerPosition(\n                    mpData.getValues(mpData.dimensions, idx)\n                );\n            }\n            else if (coordSys) {\n                var x = mpData.get(coordSys.dimensions[0], idx);\n                var y = mpData.get(coordSys.dimensions[1], idx);\n                point = coordSys.dataToPoint([x, y]);\n\n            }\n\n            // Use x, y if has any\n            if (!isNaN(xPx)) {\n                point[0] = xPx;\n            }\n            if (!isNaN(yPx)) {\n                point[1] = yPx;\n            }\n\n            mpData.setItemLayout(idx, point);\n        });\n    }\n\n    __webpack_require__(539).extend({\n\n        type: 'markPoint',\n\n        updateLayout: function (markPointModel, ecModel, api) {\n            ecModel.eachSeries(function (seriesModel) {\n                var mpModel = seriesModel.markPointModel;\n                if (mpModel) {\n                    updateMarkerLayout(mpModel.getData(), seriesModel, api);\n                    this.markerGroupMap[seriesModel.name].updateLayout(mpModel);\n                }\n            }, this);\n        },\n\n        renderSeries: function (seriesModel, mpModel, ecModel, api) {\n            var coordSys = seriesModel.coordinateSystem;\n            var seriesName = seriesModel.name;\n            var seriesData = seriesModel.getData();\n\n            var symbolDrawMap = this.markerGroupMap;\n            var symbolDraw = symbolDrawMap[seriesName];\n            if (!symbolDraw) {\n                symbolDraw = symbolDrawMap[seriesName] = new SymbolDraw();\n            }\n\n            var mpData = createList(coordSys, seriesModel, mpModel);\n\n            // FIXME\n            mpModel.setData(mpData);\n\n            updateMarkerLayout(mpModel.getData(), seriesModel, api);\n\n            mpData.each(function (idx) {\n                var itemModel = mpData.getItemModel(idx);\n                var symbolSize = itemModel.getShallow('symbolSize');\n                if (typeof symbolSize === 'function') {\n                    // FIXME 这里不兼容 ECharts 2.x，2.x 貌似参数是整个数据？\n                    symbolSize = symbolSize(\n                        mpModel.getRawValue(idx), mpModel.getDataParams(idx)\n                    );\n                }\n                mpData.setItemVisual(idx, {\n                    symbolSize: symbolSize,\n                    color: itemModel.get('itemStyle.normal.color')\n                        || seriesData.getVisual('color'),\n                    symbol: itemModel.getShallow('symbol')\n                });\n            });\n\n            // TODO Text are wrong\n            symbolDraw.updateData(mpData);\n            this.group.add(symbolDraw.group);\n\n            // Set host model for tooltip\n            // FIXME\n            mpData.eachItemGraphicEl(function (el) {\n                el.traverse(function (child) {\n                    child.dataModel = mpModel;\n                });\n            });\n\n            symbolDraw.__keep = true;\n\n            symbolDraw.group.silent = mpModel.get('silent') || seriesModel.get('silent');\n        }\n    });\n\n    /**\n     * @inner\n     * @param {module:echarts/coord/*} [coordSys]\n     * @param {module:echarts/model/Series} seriesModel\n     * @param {module:echarts/model/Model} mpModel\n     */\n    function createList(coordSys, seriesModel, mpModel) {\n        var coordDimsInfos;\n        if (coordSys) {\n            coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n                var info = seriesModel.getData().getDimensionInfo(\n                    seriesModel.coordDimToDataDim(coordDim)[0]\n                ) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n                info.name = coordDim;\n                return info;\n            });\n        }\n        else {\n            coordDimsInfos =[{\n                name: 'value',\n                type: 'float'\n            }];\n        }\n\n        var mpData = new List(coordDimsInfos, mpModel);\n        var dataOpt = zrUtil.map(mpModel.get('data'), zrUtil.curry(\n                markerHelper.dataTransform, seriesModel\n            ));\n        if (coordSys) {\n            dataOpt = zrUtil.filter(\n                dataOpt, zrUtil.curry(markerHelper.dataFilter, coordSys)\n            );\n        }\n\n        mpData.initData(dataOpt, null,\n            coordSys ? markerHelper.dimValueGetter : function (item) {\n                return item.value;\n            }\n        );\n        return mpData;\n    }\n\n\n\n/***/ }),\n/* 654 */,\n/* 655 */,\n/* 656 */,\n/* 657 */,\n/* 658 */,\n/* 659 */,\n/* 660 */,\n/* 661 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(606);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(290)(\"0dfdc4dc\", content, true);\n// Hot Module Replacement\nif(false) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-086af447\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../node_modules/sass-loader/index.js?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./index.vue\", function() {\n     var newContent = require(\"!!../../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-086af447\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../node_modules/sass-loader/index.js?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./index.vue\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}\n\n/***/ }),\n/* 662 */,\n/* 663 */,\n/* 664 */,\n/* 665 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(610);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(290)(\"f51c7688\", content, true);\n// Hot Module Replacement\nif(false) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-2b4edebd\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../node_modules/sass-loader/index.js?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./index.vue\", function() {\n     var newContent = require(\"!!../../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-2b4edebd\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../node_modules/sass-loader/index.js?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./index.vue\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}\n\n/***/ }),\n/* 666 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(611);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(290)(\"565f29b4\", content, true);\n// Hot Module Replacement\nif(false) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-32c30469\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../node_modules/sass-loader/index.js?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./monthKpi.vue\", function() {\n     var newContent = require(\"!!../../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-32c30469\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../node_modules/sass-loader/index.js?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./monthKpi.vue\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}\n\n/***/ }),\n/* 667 */,\n/* 668 */,\n/* 669 */,\n/* 670 */,\n/* 671 */,\n/* 672 */,\n/* 673 */,\n/* 674 */,\n/* 675 */,\n/* 676 */,\n/* 677 */,\n/* 678 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(623);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(290)(\"26205cbc\", content, true);\n// Hot Module Replacement\nif(false) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-6d3ab1e8\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./articlesChart.vue\", function() {\n     var newContent = require(\"!!../../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-6d3ab1e8\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./articlesChart.vue\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}\n\n/***/ }),\n/* 679 */,\n/* 680 */,\n/* 681 */,\n/* 682 */,\n/* 683 */,\n/* 684 */,\n/* 685 */,\n/* 686 */,\n/* 687 */,\n/* 688 */,\n/* 689 */,\n/* 690 */,\n/* 691 */,\n/* 692 */,\n/* 693 */,\n/* 694 */,\n/* 695 */,\n/* 696 */,\n/* 697 */,\n/* 698 */,\n/* 699 */,\n/* 700 */,\n/* 701 */,\n/* 702 */,\n/* 703 */,\n/* 704 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"img/compbig.167fe5e.gif\";\n\n/***/ }),\n/* 705 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(1)(\n  /* script */\n  __webpack_require__(541),\n  /* template */\n  __webpack_require__(768),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 706 */,\n/* 707 */,\n/* 708 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(1)(\n  /* script */\n  __webpack_require__(544),\n  /* template */\n  __webpack_require__(766),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 709 */,\n/* 710 */,\n/* 711 */,\n/* 712 */,\n/* 713 */,\n/* 714 */,\n/* 715 */,\n/* 716 */,\n/* 717 */,\n/* 718 */,\n/* 719 */,\n/* 720 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(661)\n\nvar Component = __webpack_require__(1)(\n  /* script */\n  __webpack_require__(570),\n  /* template */\n  __webpack_require__(728),\n  /* scopeId */\n  \"data-v-086af447\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 721 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(678)\n\nvar Component = __webpack_require__(1)(\n  /* script */\n  __webpack_require__(571),\n  /* template */\n  __webpack_require__(754),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 722 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(665)\n\nvar Component = __webpack_require__(1)(\n  /* script */\n  __webpack_require__(572),\n  /* template */\n  __webpack_require__(733),\n  /* scopeId */\n  \"data-v-2b4edebd\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 723 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(666)\n\nvar Component = __webpack_require__(1)(\n  /* script */\n  __webpack_require__(573),\n  /* template */\n  __webpack_require__(735),\n  /* scopeId */\n  \"data-v-32c30469\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 724 */,\n/* 725 */,\n/* 726 */,\n/* 727 */,\n/* 728 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"dashboard-editor-container\"\n  }, [_c('div', {\n    staticClass: \" clearfix\"\n  }, [_c('PanThumb', {\n    staticStyle: {\n      \"float\": \"left\"\n    },\n    attrs: {\n      \"image\": _vm.avatar\n    }\n  }, [_vm._v(\" 你的权限:\\n            \"), _vm._l((_vm.roles), function(item) {\n    return _c('span', {\n      staticClass: \"pan-info-roles\"\n    }, [_vm._v(_vm._s(item))])\n  })], 2), _vm._v(\" \"), _c('div', {\n    staticClass: \"info-container\"\n  }, [_c('span', {\n    staticClass: \"display_name\"\n  }, [_vm._v(_vm._s(_vm.name))]), _vm._v(\" \"), _c('span', {\n    staticStyle: {\n      \"font-size\": \"20px\",\n      \"padding-top\": \"20px\",\n      \"display\": \"inline-block\"\n    }\n  }, [_vm._v(\"赶紧把你们想要的快捷键报给产品锦鲤!\")])])], 1), _vm._v(\" \"), _c('div', [_c('img', {\n    staticClass: \"emptyGif\",\n    attrs: {\n      \"src\": _vm.emptyGif\n    }\n  })])])\n},staticRenderFns: []}\n\n/***/ }),\n/* 729 */,\n/* 730 */,\n/* 731 */,\n/* 732 */,\n/* 733 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"dashboard-editor-container\"\n  }, [_c('div', {\n    staticClass: \" clearfix\"\n  }, [_c('PanThumb', {\n    staticStyle: {\n      \"float\": \"left\"\n    },\n    attrs: {\n      \"image\": _vm.avatar\n    }\n  }, [_vm._v(\" 你的权限:\\n            \"), _vm._l((_vm.roles), function(item) {\n    return _c('span', {\n      staticClass: \"pan-info-roles\"\n    }, [_vm._v(_vm._s(item))])\n  })], 2), _vm._v(\" \"), _c('div', {\n    staticClass: \"info-container\"\n  }, [_c('span', {\n    staticClass: \"display_name\"\n  }, [_vm._v(_vm._s(_vm.name))]), _vm._v(\" \"), _c('div', {\n    staticClass: \"info-wrapper\"\n  }, [_c('div', {\n    staticClass: \"info-item\",\n    attrs: {\n      \"to\": '/article/wscnlist?uid=' + _vm.uid\n    }\n  }, [_c('countTo', {\n    staticClass: \"info-item-num\",\n    attrs: {\n      \"startVal\": 0,\n      \"endVal\": _vm.statisticsData.article_count,\n      \"duration\": 3400\n    }\n  }), _vm._v(\" \"), _c('span', {\n    staticClass: \"info-item-text\"\n  }, [_vm._v(\"文章\")]), _vm._v(\" \"), _c('wscn-icon-svg', {\n    staticClass: \"dashboard-editor-icon\",\n    attrs: {\n      \"icon-class\": \"a\"\n    }\n  })], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"info-item\",\n    staticStyle: {\n      \"cursor\": \"auto\"\n    }\n  }, [_c('countTo', {\n    staticClass: \"info-item-num\",\n    attrs: {\n      \"startVal\": 0,\n      \"endVal\": _vm.statisticsData.pageviews_count,\n      \"duration\": 3600\n    }\n  }), _vm._v(\" \"), _c('span', {\n    staticClass: \"info-item-text\"\n  }, [_vm._v(\"浏览量\")]), _vm._v(\" \"), _c('wscn-icon-svg', {\n    staticClass: \"dashboard-editor-icon\",\n    attrs: {\n      \"icon-class\": \"b\"\n    }\n  })], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"info-item\",\n    attrs: {\n      \"to\": '/comment/commentslist?res_author_id=' + _vm.uid\n    }\n  }, [_c('countTo', {\n    ref: \"countTo3\",\n    staticClass: \"info-item-num\",\n    attrs: {\n      \"startVal\": 0,\n      \"endVal\": _vm.statisticsData.comment_count,\n      \"duration\": 3800\n    }\n  }), _vm._v(\" \"), _c('span', {\n    staticClass: \"info-item-text\"\n  }, [_vm._v(\"评论\")]), _vm._v(\" \"), _c('wscn-icon-svg', {\n    staticClass: \"dashboard-editor-icon\",\n    attrs: {\n      \"icon-class\": \"c\"\n    }\n  })], 1)])])], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"btn-group\"\n  }, [_c('router-link', {\n    staticClass: \"pan-btn blue-btn\",\n    attrs: {\n      \"to\": \"/components/index\"\n    }\n  }, [_vm._v(\"组价\")]), _vm._v(\" \"), _c('router-link', {\n    staticClass: \"pan-btn light-blue-btn\",\n    attrs: {\n      \"to\": \"/charts/index\"\n    }\n  }, [_vm._v(\"图表\")]), _vm._v(\" \"), _c('router-link', {\n    staticClass: \"pan-btn red-btn\",\n    attrs: {\n      \"to\": \"/errorpage/404\"\n    }\n  }, [_vm._v(\"错误页面\")]), _vm._v(\" \"), _c('router-link', {\n    staticClass: \"pan-btn pink-btn\",\n    attrs: {\n      \"to\": \"/errlog/log\"\n    }\n  }, [_vm._v(\"错误日志\")]), _vm._v(\" \"), _c('router-link', {\n    staticClass: \"pan-btn green-btn\",\n    attrs: {\n      \"to\": \"/article/wscnlist\"\n    }\n  }, [_vm._v(\"导出excel\")]), _vm._v(\" \"), _c('router-link', {\n    staticClass: \"pan-btn tiffany-btn\",\n    attrs: {\n      \"to\": \"/excel/download\"\n    }\n  }, [_vm._v(\"实时列表\")])], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"clearfix main-dashboard-container\"\n  }, [_c('div', {\n    staticClass: \"chart-container\"\n  }, [_c('MonthKpi', {\n    staticStyle: {\n      \"border-bottom\": \"1px solid #DEE1E2\"\n    },\n    attrs: {\n      \"articlesComplete\": _vm.statisticsData.month_article_count\n    }\n  }), _vm._v(\" \"), _c('ArticlesChart', {\n    attrs: {\n      \"listData\": _vm.statisticsData.week_article\n    }\n  })], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"recent-articles-container\"\n  }, [_c('div', {\n    staticClass: \"recent-articles-title\"\n  }, [_vm._v(\"最近撸了\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"recent-articles-wrapper\"\n  }, [(_vm.recentArticles.length != 0) ? _vm._l((_vm.recentArticles), function(item) {\n    return _c('div', {\n      staticClass: \"recent-articles-item\"\n    }, [_c('span', {\n      staticClass: \"recent-articles-status\"\n    }, [_vm._v(_vm._s(_vm._f(\"statusFilter\")(item.status)))]), _vm._v(\" \"), _c('span', {\n      staticClass: \"recent-articles-content\",\n      attrs: {\n        \"to\": '/article/edit/' + item.id\n      }\n    }, [_vm._v(\"\\n                            \" + _vm._s(item.title) + \"\\n                        \")]), _vm._v(\" \"), _c('span', {\n      staticClass: \"recent-articles-time\"\n    }, [_vm._v(_vm._s(item.author))])])\n  }) : [_c('div', {\n    staticClass: \"recent-articles-emptyTitle\"\n  }, [_vm._v(\"你太懒了最近都没有撸\")])]], 2)])])])\n},staticRenderFns: []}\n\n/***/ }),\n/* 734 */,\n/* 735 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"monthKpi-container\"\n  }, [_c('span', {\n    staticClass: \"monthKpi-container-title\"\n  }, [_vm._v(_vm._s(_vm.month) + \"月\")]), _vm._v(\" \"), _c('BarPercent', {\n    staticClass: \"monthKpi-container-chart\",\n    attrs: {\n      \"dataNum\": _vm.articlesComplete\n    }\n  }), _vm._v(\" \"), _c('span', {\n    staticClass: \"monthKpi-container-text\"\n  }, [_vm._v(\"文章完成比例\")]), _vm._v(\" \"), _c('span', {\n    staticClass: \"monthKpi-container-count\"\n  }, [_vm._v(_vm._s(_vm.articlesComplete)), _c('b', [_vm._v(\"篇\")])])], 1)\n},staticRenderFns: []}\n\n/***/ }),\n/* 736 */,\n/* 737 */,\n/* 738 */,\n/* 739 */,\n/* 740 */,\n/* 741 */,\n/* 742 */,\n/* 743 */,\n/* 744 */,\n/* 745 */,\n/* 746 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"dashboard-container\"\n  }, [_c(_vm.currentRole, {\n    tag: \"component\"\n  })], 1)\n},staticRenderFns: []}\n\n/***/ }),\n/* 747 */,\n/* 748 */,\n/* 749 */,\n/* 750 */,\n/* 751 */,\n/* 752 */,\n/* 753 */,\n/* 754 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"articlesChart-container\"\n  }, [_c('span', {\n    staticClass: \"articlesChart-container-title\"\n  }, [_vm._v(\"每天撸文\")]), _vm._v(\" \"), _c('line-chart', {\n    attrs: {\n      \"listData\": _vm.listData\n    }\n  })], 1)\n},staticRenderFns: []}\n\n/***/ }),\n/* 755 */,\n/* 756 */,\n/* 757 */,\n/* 758 */,\n/* 759 */,\n/* 760 */,\n/* 761 */,\n/* 762 */,\n/* 763 */,\n/* 764 */,\n/* 765 */,\n/* 766 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    class: _vm.className,\n    style: ({\n      height: _vm.height,\n      width: _vm.width\n    }),\n    attrs: {\n      \"id\": _vm.id\n    }\n  })\n},staticRenderFns: []}\n\n/***/ }),\n/* 767 */,\n/* 768 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    class: _vm.className,\n    style: ({\n      height: _vm.height,\n      width: _vm.width\n    }),\n    attrs: {\n      \"id\": _vm.id\n    }\n  })\n},staticRenderFns: []}\n\n/***/ })\n]));\n\n\n// WEBPACK FOOTER //\n// js/0.b446077e46d7b02c5f57.js","var Component = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"),\n  /* template */\n  require(\"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-58845cd6\\\"}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/dashboard/index.vue\n// module id = 307\n// module chunks = 0","/**\n * @module zrender/core/util\n */\n\n\n    // 用于处理merge时无法遍历Date等对象的问题\n    var BUILTIN_OBJECT = {\n        '[object Function]': 1,\n        '[object RegExp]': 1,\n        '[object Date]': 1,\n        '[object Error]': 1,\n        '[object CanvasGradient]': 1,\n        '[object CanvasPattern]': 1,\n        // For node-canvas\n        '[object Image]': 1,\n        '[object Canvas]': 1\n    };\n\n    var TYPED_ARRAY = {\n        '[object Int8Array]': 1,\n        '[object Uint8Array]': 1,\n        '[object Uint8ClampedArray]': 1,\n        '[object Int16Array]': 1,\n        '[object Uint16Array]': 1,\n        '[object Int32Array]': 1,\n        '[object Uint32Array]': 1,\n        '[object Float32Array]': 1,\n        '[object Float64Array]': 1\n    };\n\n    var objToString = Object.prototype.toString;\n\n    var arrayProto = Array.prototype;\n    var nativeForEach = arrayProto.forEach;\n    var nativeFilter = arrayProto.filter;\n    var nativeSlice = arrayProto.slice;\n    var nativeMap = arrayProto.map;\n    var nativeReduce = arrayProto.reduce;\n\n    /**\n     * Those data types can be cloned:\n     *     Plain object, Array, TypedArray, number, string, null, undefined.\n     * Those data types will be assgined using the orginal data:\n     *     BUILTIN_OBJECT\n     * Instance of user defined class will be cloned to a plain object, without\n     * properties in prototype.\n     * Other data types is not supported (not sure what will happen).\n     *\n     * Caution: do not support clone Date, for performance consideration.\n     * (There might be a large number of date in `series.data`).\n     * So date should not be modified in and out of echarts.\n     *\n     * @param {*} source\n     * @return {*} new\n     */\n    function clone(source) {\n        if (source == null || typeof source != 'object') {\n            return source;\n        }\n\n        var result = source;\n        var typeStr = objToString.call(source);\n\n        if (typeStr === '[object Array]') {\n            result = [];\n            for (var i = 0, len = source.length; i < len; i++) {\n                result[i] = clone(source[i]);\n            }\n        }\n        else if (TYPED_ARRAY[typeStr]) {\n            result = source.constructor.from(source);\n        }\n        else if (!BUILTIN_OBJECT[typeStr] && !isDom(source)) {\n            result = {};\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    result[key] = clone(source[key]);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overwrite=false]\n     */\n    function merge(target, source, overwrite) {\n        // We should escapse that source is string\n        // and enter for ... in ...\n        if (!isObject(source) || !isObject(target)) {\n            return overwrite ? clone(source) : target;\n        }\n\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                var targetProp = target[key];\n                var sourceProp = source[key];\n\n                if (isObject(sourceProp)\n                    && isObject(targetProp)\n                    && !isArray(sourceProp)\n                    && !isArray(targetProp)\n                    && !isDom(sourceProp)\n                    && !isDom(targetProp)\n                    && !isBuildInObject(sourceProp)\n                    && !isBuildInObject(targetProp)\n                ) {\n                    // 如果需要递归覆盖，就递归调用merge\n                    merge(targetProp, sourceProp, overwrite);\n                }\n                else if (overwrite || !(key in target)) {\n                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n                    // NOTE，在 target[key] 不存在的时候也是直接覆盖\n                    target[key] = clone(source[key], true);\n                }\n            }\n        }\n\n        return target;\n    }\n\n    /**\n     * @param {Array} targetAndSources The first item is target, and the rests are source.\n     * @param {boolean} [overwrite=false]\n     * @return {*} target\n     */\n    function mergeAll(targetAndSources, overwrite) {\n        var result = targetAndSources[0];\n        for (var i = 1, len = targetAndSources.length; i < len; i++) {\n            result = merge(result, targetAndSources[i], overwrite);\n        }\n        return result;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @memberOf module:zrender/core/util\n     */\n    function extend(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @param {boolen} [overlay=false]\n     * @memberOf module:zrender/core/util\n     */\n    function defaults(target, source, overlay) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)\n                && (overlay ? source[key] != null : target[key] == null)\n            ) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    function createCanvas() {\n        return document.createElement('canvas');\n    }\n    // FIXME\n    var _ctx;\n    function getContext() {\n        if (!_ctx) {\n            // Use util.createCanvas instead of createCanvas\n            // because createCanvas may be overwritten in different environment\n            _ctx = util.createCanvas().getContext('2d');\n        }\n        return _ctx;\n    }\n\n    /**\n     * 查询数组中元素的index\n     * @memberOf module:zrender/core/util\n     */\n    function indexOf(array, value) {\n        if (array) {\n            if (array.indexOf) {\n                return array.indexOf(value);\n            }\n            for (var i = 0, len = array.length; i < len; i++) {\n                if (array[i] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * 构造类继承关系\n     *\n     * @memberOf module:zrender/core/util\n     * @param {Function} clazz 源类\n     * @param {Function} baseClazz 基类\n     */\n    function inherits(clazz, baseClazz) {\n        var clazzPrototype = clazz.prototype;\n        function F() {}\n        F.prototype = baseClazz.prototype;\n        clazz.prototype = new F();\n\n        for (var prop in clazzPrototype) {\n            clazz.prototype[prop] = clazzPrototype[prop];\n        }\n        clazz.prototype.constructor = clazz;\n        clazz.superClass = baseClazz;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Object|Function} target\n     * @param {Object|Function} sorce\n     * @param {boolean} overlay\n     */\n    function mixin(target, source, overlay) {\n        target = 'prototype' in target ? target.prototype : target;\n        source = 'prototype' in source ? source.prototype : source;\n\n        defaults(target, source, overlay);\n    }\n\n    /**\n     * @param {Array|TypedArray} data\n     */\n    function isArrayLike(data) {\n        if (! data) {\n            return;\n        }\n        if (typeof data == 'string') {\n            return false;\n        }\n        return typeof data.length == 'number';\n    }\n\n    /**\n     * 数组或对象遍历\n     * @memberOf module:zrender/core/util\n     * @param {Object|Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     */\n    function each(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.forEach && obj.forEach === nativeForEach) {\n            obj.forEach(cb, context);\n        }\n        else if (obj.length === +obj.length) {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                cb.call(context, obj[i], i, obj);\n            }\n        }\n        else {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    cb.call(context, obj[key], key, obj);\n                }\n            }\n        }\n    }\n\n    /**\n     * 数组映射\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function map(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.map && obj.map === nativeMap) {\n            return obj.map(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                result.push(cb.call(context, obj[i], i, obj));\n            }\n            return result;\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {Object} [memo]\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function reduce(obj, cb, memo, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.reduce && obj.reduce === nativeReduce) {\n            return obj.reduce(cb, memo, context);\n        }\n        else {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                memo = cb.call(context, memo, obj[i], i, obj);\n            }\n            return memo;\n        }\n    }\n\n    /**\n     * 数组过滤\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function filter(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.filter && obj.filter === nativeFilter) {\n            return obj.filter(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                if (cb.call(context, obj[i], i, obj)) {\n                    result.push(obj[i]);\n                }\n            }\n            return result;\n        }\n    }\n\n    /**\n     * 数组项查找\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function find(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        for (var i = 0, len = obj.length; i < len; i++) {\n            if (cb.call(context, obj[i], i, obj)) {\n                return obj[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @param {*} context\n     * @return {Function}\n     */\n    function bind(func, context) {\n        var args = nativeSlice.call(arguments, 2);\n        return function () {\n            return func.apply(context, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @return {Function}\n     */\n    function curry(func) {\n        var args = nativeSlice.call(arguments, 1);\n        return function () {\n            return func.apply(this, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isArray(value) {\n        return objToString.call(value) === '[object Array]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isString(value) {\n        return objToString.call(value) === '[object String]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isObject(value) {\n        // Avoid a V8 JIT bug in Chrome 19-20.\n        // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n        var type = typeof value;\n        return type === 'function' || (!!value && type == 'object');\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isBuildInObject(value) {\n        return !!BUILTIN_OBJECT[objToString.call(value)];\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isDom(value) {\n        return typeof value === 'object'\n            && typeof value.nodeType === 'number'\n            && typeof value.ownerDocument === 'object';\n    }\n\n    /**\n     * Whether is exactly NaN. Notice isNaN('a') returns true.\n     * @param {*} value\n     * @return {boolean}\n     */\n    function eqNaN(value) {\n        return value !== value;\n    }\n\n    /**\n     * If value1 is not null, then return value1, otherwise judget rest of values.\n     * @memberOf module:zrender/core/util\n     * @return {*} Final value\n     */\n    function retrieve(values) {\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            if (arguments[i] != null) {\n                return arguments[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} arr\n     * @param {number} startIndex\n     * @param {number} endIndex\n     * @return {Array}\n     */\n    function slice() {\n        return Function.call.apply(nativeSlice, arguments);\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {boolean} condition\n     * @param {string} message\n     */\n    function assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n\n    var util = {\n        inherits: inherits,\n        mixin: mixin,\n        clone: clone,\n        merge: merge,\n        mergeAll: mergeAll,\n        extend: extend,\n        defaults: defaults,\n        getContext: getContext,\n        createCanvas: createCanvas,\n        indexOf: indexOf,\n        slice: slice,\n        find: find,\n        isArrayLike: isArrayLike,\n        each: each,\n        map: map,\n        reduce: reduce,\n        filter: filter,\n        bind: bind,\n        curry: curry,\n        isArray: isArray,\n        isString: isString,\n        isObject: isObject,\n        isFunction: isFunction,\n        isBuildInObject: isBuildInObject,\n        isDom: isDom,\n        eqNaN: eqNaN,\n        retrieve: retrieve,\n        assert: assert,\n        noop: function () {}\n    };\n    module.exports = util;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/util.js\n// module id = 317\n// module chunks = 0 1 2 3 4","// Enable DEV mode when using source code without build. which has no __DEV__ variable\n// In build process 'typeof __DEV__' will be replace with 'boolean'\n// So this code will be removed or disabled anyway after built.\nif (typeof __DEV__ === 'undefined') {\n    // In browser\n    if (typeof window !== 'undefined') {\n        window.__DEV__ = true;\n    }\n    // In node\n    else if (typeof global !== 'undefined') {\n        global.__DEV__ = true;\n    }\n}\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\n\n/**\n * @module echarts\n */\n\n\n    var env = require('zrender/lib/core/env');\n\n    var GlobalModel = require('./model/Global');\n    var ExtensionAPI = require('./ExtensionAPI');\n    var CoordinateSystemManager = require('./CoordinateSystem');\n    var OptionManager = require('./model/OptionManager');\n\n    var ComponentModel = require('./model/Component');\n    var SeriesModel = require('./model/Series');\n\n    var ComponentView = require('./view/Component');\n    var ChartView = require('./view/Chart');\n    var graphic = require('./util/graphic');\n    var modelUtil = require('./util/model');\n    var throttle = require('./util/throttle');\n\n    var zrender = require('zrender');\n    var zrUtil = require('zrender/lib/core/util');\n    var colorTool = require('zrender/lib/tool/color');\n    var Eventful = require('zrender/lib/mixin/Eventful');\n    var timsort = require('zrender/lib/core/timsort');\n\n    var each = zrUtil.each;\n    var parseClassType = ComponentModel.parseClassType;\n\n    var PRIORITY_PROCESSOR_FILTER = 1000;\n    var PRIORITY_PROCESSOR_STATISTIC = 5000;\n\n\n    var PRIORITY_VISUAL_LAYOUT = 1000;\n    var PRIORITY_VISUAL_GLOBAL = 2000;\n    var PRIORITY_VISUAL_CHART = 3000;\n    var PRIORITY_VISUAL_COMPONENT = 4000;\n    // FIXME\n    // necessary?\n    var PRIORITY_VISUAL_BRUSH = 5000;\n\n    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n    // where they must not be invoked nestedly, except the only case: invoke\n    // dispatchAction with updateMethod \"none\" in main process.\n    // This flag is used to carry out this rule.\n    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n    var IN_MAIN_PROCESS = '__flagInMainProcess';\n    var HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\n    var OPTION_UPDATED = '__optionUpdated';\n    var ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\n    function createRegisterEventWithLowercaseName(method) {\n        return function (eventName, handler, context) {\n            // Event name is all lowercase\n            eventName = eventName && eventName.toLowerCase();\n            Eventful.prototype[method].call(this, eventName, handler, context);\n        };\n    }\n\n    /**\n     * @module echarts~MessageCenter\n     */\n    function MessageCenter() {\n        Eventful.call(this);\n    }\n    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\n    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\n    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\n    zrUtil.mixin(MessageCenter, Eventful);\n\n    /**\n     * @module echarts~ECharts\n     */\n    function ECharts (dom, theme, opts) {\n        opts = opts || {};\n\n        // Get theme by name\n        if (typeof theme === 'string') {\n            theme = themeStorage[theme];\n        }\n\n        /**\n         * @type {string}\n         */\n        this.id;\n        /**\n         * Group id\n         * @type {string}\n         */\n        this.group;\n        /**\n         * @type {HTMLDomElement}\n         * @private\n         */\n        this._dom = dom;\n        /**\n         * @type {module:zrender/ZRender}\n         * @private\n         */\n        var zr = this._zr = zrender.init(dom, {\n            renderer: opts.renderer || 'canvas',\n            devicePixelRatio: opts.devicePixelRatio,\n            width: opts.width,\n            height: opts.height\n        });\n\n        /**\n         * Expect 60 pfs.\n         * @type {Function}\n         * @private\n         */\n        this._throttledZrFlush = throttle.throttle(zrUtil.bind(zr.flush, zr), 17);\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._theme = zrUtil.clone(theme);\n\n        /**\n         * @type {Array.<module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * @type {module:echarts/ExtensionAPI}\n         * @private\n         */\n        this._api = new ExtensionAPI(this);\n\n        /**\n         * @type {module:echarts/CoordinateSystem}\n         * @private\n         */\n        this._coordSysMgr = new CoordinateSystemManager();\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:echarts~MessageCenter}\n         * @private\n         */\n        this._messageCenter = new MessageCenter();\n\n        // Init mouse events\n        this._initEvents();\n\n        // In case some people write `window.onresize = chart.resize`\n        this.resize = zrUtil.bind(this.resize, this);\n\n        // Can't dispatch action during rendering procedure\n        this._pendingActions = [];\n        // Sort on demand\n        function prioritySortFunc(a, b) {\n            return a.prio - b.prio;\n        }\n        timsort(visualFuncs, prioritySortFunc);\n        timsort(dataProcessorFuncs, prioritySortFunc);\n\n        zr.animation.on('frame', this._onframe, this);\n    }\n\n    var echartsProto = ECharts.prototype;\n\n    echartsProto._onframe = function () {\n        // Lazy update\n        if (this[OPTION_UPDATED]) {\n            var silent = this[OPTION_UPDATED].silent;\n\n            this[IN_MAIN_PROCESS] = true;\n\n            updateMethods.prepareAndUpdate.call(this);\n\n            this[IN_MAIN_PROCESS] = false;\n\n            this[OPTION_UPDATED] = false;\n\n            flushPendingActions.call(this, silent);\n\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n    /**\n     * @return {HTMLDomElement}\n     */\n    echartsProto.getDom = function () {\n        return this._dom;\n    };\n\n    /**\n     * @return {module:zrender~ZRender}\n     */\n    echartsProto.getZr = function () {\n        return this._zr;\n    };\n\n    /**\n     * Usage:\n     * chart.setOption(option, notMerge, lazyUpdate);\n     * chart.setOption(option, {\n     *     notMerge: ...,\n     *     lazyUpdate: ...,\n     *     silent: ...\n     * });\n     *\n     * @param {Object} option\n     * @param {Object|boolean} [opts] opts or notMerge.\n     * @param {boolean} [opts.notMerge=false]\n     * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n     */\n    echartsProto.setOption = function (option, notMerge, lazyUpdate) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');\n        }\n\n        var silent;\n        if (zrUtil.isObject(notMerge)) {\n            lazyUpdate = notMerge.lazyUpdate;\n            silent = notMerge.silent;\n            notMerge = notMerge.notMerge;\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        if (!this._model || notMerge) {\n            var optionManager = new OptionManager(this._api);\n            var theme = this._theme;\n            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n            ecModel.init(null, null, theme, optionManager);\n        }\n\n        // FIXME\n        // ugly\n        this.__lastOnlyGraphic = !!(option && option.graphic);\n        zrUtil.each(option, function (o, mainType) {\n            mainType !== 'graphic' && (this.__lastOnlyGraphic = false);\n        }, this);\n\n        this._model.setOption(option, optionPreprocessorFuncs);\n\n        if (lazyUpdate) {\n            this[OPTION_UPDATED] = {silent: silent};\n            this[IN_MAIN_PROCESS] = false;\n        }\n        else {\n            updateMethods.prepareAndUpdate.call(this);\n            // Ensure zr refresh sychronously, and then pixel in canvas can be\n            // fetched after `setOption`.\n            this._zr.flush();\n\n            this[OPTION_UPDATED] = false;\n            this[IN_MAIN_PROCESS] = false;\n\n            flushPendingActions.call(this, silent);\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n\n    /**\n     * @DEPRECATED\n     */\n    echartsProto.setTheme = function () {\n        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n    };\n\n    /**\n     * @return {module:echarts/model/Global}\n     */\n    echartsProto.getModel = function () {\n        return this._model;\n    };\n\n    /**\n     * @return {Object}\n     */\n    echartsProto.getOption = function () {\n        return this._model && this._model.getOption();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getWidth = function () {\n        return this._zr.getWidth();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getHeight = function () {\n        return this._zr.getHeight();\n    };\n\n    /**\n     * Get canvas which has all thing rendered\n     * @param {Object} opts\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getRenderedCanvas = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        opts = opts || {};\n        opts.pixelRatio = opts.pixelRatio || 1;\n        opts.backgroundColor = opts.backgroundColor\n            || this._model.get('backgroundColor');\n        var zr = this._zr;\n        var list = zr.storage.getDisplayList();\n        // Stop animations\n        zrUtil.each(list, function (el) {\n            el.stopAnimation(true);\n        });\n        return zr.painter.getRenderedCanvas(opts);\n    };\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     * @param {string} [opts.excludeComponents]\n     */\n    echartsProto.getDataURL = function (opts) {\n        opts = opts || {};\n        var excludeComponents = opts.excludeComponents;\n        var ecModel = this._model;\n        var excludesComponentViews = [];\n        var self = this;\n\n        each(excludeComponents, function (componentType) {\n            ecModel.eachComponent({\n                mainType: componentType\n            }, function (component) {\n                var view = self._componentsMap[component.__viewId];\n                if (!view.group.ignore) {\n                    excludesComponentViews.push(view);\n                    view.group.ignore = true;\n                }\n            });\n        });\n\n        var url = this.getRenderedCanvas(opts).toDataURL(\n            'image/' + (opts && opts.type || 'png')\n        );\n\n        each(excludesComponentViews, function (view) {\n            view.group.ignore = false;\n        });\n        return url;\n    };\n\n\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getConnectedDataURL = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        var groupId = this.group;\n        var mathMin = Math.min;\n        var mathMax = Math.max;\n        var MAX_NUMBER = Infinity;\n        if (connectedGroups[groupId]) {\n            var left = MAX_NUMBER;\n            var top = MAX_NUMBER;\n            var right = -MAX_NUMBER;\n            var bottom = -MAX_NUMBER;\n            var canvasList = [];\n            var dpr = (opts && opts.pixelRatio) || 1;\n\n            zrUtil.each(instances, function (chart, id) {\n                if (chart.group === groupId) {\n                    var canvas = chart.getRenderedCanvas(\n                        zrUtil.clone(opts)\n                    );\n                    var boundingRect = chart.getDom().getBoundingClientRect();\n                    left = mathMin(boundingRect.left, left);\n                    top = mathMin(boundingRect.top, top);\n                    right = mathMax(boundingRect.right, right);\n                    bottom = mathMax(boundingRect.bottom, bottom);\n                    canvasList.push({\n                        dom: canvas,\n                        left: boundingRect.left,\n                        top: boundingRect.top\n                    });\n                }\n            });\n\n            left *= dpr;\n            top *= dpr;\n            right *= dpr;\n            bottom *= dpr;\n            var width = right - left;\n            var height = bottom - top;\n            var targetCanvas = zrUtil.createCanvas();\n            targetCanvas.width = width;\n            targetCanvas.height = height;\n            var zr = zrender.init(targetCanvas);\n\n            each(canvasList, function (item) {\n                var img = new graphic.Image({\n                    style: {\n                        x: item.left * dpr - left,\n                        y: item.top * dpr - top,\n                        image: item.dom\n                    }\n                });\n                zr.add(img);\n            });\n            zr.refreshImmediately();\n\n            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n        }\n        else {\n            return this.getDataURL(opts);\n        }\n    };\n\n    /**\n     * Convert from logical coordinate system to pixel coordinate system.\n     * See CoordinateSystem#convertToPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId, geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n\n    /**\n     * Convert from pixel coordinate system to logical coordinate system.\n     * See CoordinateSystem#convertFromPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\n    function doConvertPixel(methodName, finder, value) {\n        var ecModel = this._model;\n        var coordSysList = this._coordSysMgr.getCoordinateSystems();\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        for (var i = 0; i < coordSysList.length; i++) {\n            var coordSys = coordSysList[i];\n            if (coordSys[methodName]\n                && (result = coordSys[methodName](ecModel, finder, value)) != null\n            ) {\n                return result;\n            }\n        }\n\n        if (__DEV__) {\n            console.warn(\n                'No coordinate system that supports ' + methodName + ' found by the given finder.'\n            );\n        }\n    }\n\n    /**\n     * Is the specified coordinate systems or components contain the given pixel point.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {boolean} result\n     */\n    echartsProto.containPixel = function (finder, value) {\n        var ecModel = this._model;\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        zrUtil.each(finder, function (models, key) {\n            key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n                var coordSys = model.coordinateSystem;\n                if (coordSys && coordSys.containPoint) {\n                    result |= !!coordSys.containPoint(value);\n                }\n                else if (key === 'seriesModels') {\n                    var view = this._chartsMap[model.__viewId];\n                    if (view && view.containPoint) {\n                        result |= view.containPoint(value, model);\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.warn(key + ': ' + (view\n                                ? 'The found component do not support containPoint.'\n                                : 'No view mapping to the found component.'\n                            ));\n                        }\n                    }\n                }\n                else {\n                    if (__DEV__) {\n                        console.warn(key + ': containPoint is not supported');\n                    }\n                }\n            }, this);\n        }, this);\n\n        return !!result;\n    };\n\n    /**\n     * Get visual from series or data.\n     * @param {string|Object} finder\n     *        If string, e.g., 'series', means {seriesIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            dataIndex / dataIndexInside\n     *        }\n     *        If dataIndex is not specified, series visual will be fetched,\n     *        but not data item visual.\n     *        If all of seriesIndex, seriesId, seriesName are not specified,\n     *        visual will be fetched from first series.\n     * @param {string} visualType 'color', 'symbol', 'symbolSize'\n     */\n    echartsProto.getVisual = function (finder, visualType) {\n        var ecModel = this._model;\n\n        finder = modelUtil.parseFinder(ecModel, finder, {defaultMainType: 'series'});\n\n        var seriesModel = finder.seriesModel;\n\n        if (__DEV__) {\n            if (!seriesModel) {\n                console.warn('There is no specified seires model');\n            }\n        }\n\n        var data = seriesModel.getData();\n\n        var dataIndexInside = finder.hasOwnProperty('dataIndexInside')\n            ? finder.dataIndexInside\n            : finder.hasOwnProperty('dataIndex')\n            ? data.indexOfRawIndex(finder.dataIndex)\n            : null;\n\n        return dataIndexInside != null\n            ? data.getItemVisual(dataIndexInside, visualType)\n            : data.getVisual(visualType);\n    };\n\n\n    var updateMethods = {\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        update: function (payload) {\n            // console.time && console.time('update');\n\n            var ecModel = this._model;\n            var api = this._api;\n            var coordSysMgr = this._coordSysMgr;\n            var zr = this._zr;\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            // Fixme First time update ?\n            ecModel.restoreData();\n\n            // TODO\n            // Save total ecModel here for undo/redo (after restoring data and before processing data).\n            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n\n            // Create new coordinate system each update\n            // In LineView may save the old coordinate system and use it to get the orignal point\n            coordSysMgr.create(this._model, this._api);\n\n            processData.call(this, ecModel, api);\n\n            stackSeriesData.call(this, ecModel);\n\n            coordSysMgr.update(ecModel, api);\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            doRender.call(this, ecModel, payload);\n\n            // Set background\n            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n\n            var painter = zr.painter;\n            // TODO all use clearColor ?\n            if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n                zr.configLayer(0, {\n                    clearColor: backgroundColor\n                });\n            }\n            else {\n                // In IE8\n                if (!env.canvasSupported) {\n                    var colorArr = colorTool.parse(backgroundColor);\n                    backgroundColor = colorTool.stringify(colorArr, 'rgb');\n                    if (colorArr[3] === 0) {\n                        backgroundColor = 'transparent';\n                    }\n                }\n                if (backgroundColor.colorStops || backgroundColor.image) {\n                    // Gradient background\n                    // FIXME Fixed layer？\n                    zr.configLayer(0, {\n                        clearColor: backgroundColor\n                    });\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n\n                    this._dom.style.background = 'transparent';\n                }\n                else {\n                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n                        zr.configLayer(0, {\n                            clearColor: null\n                        });\n                    }\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n\n                    this._dom.style.background = backgroundColor;\n                }\n            }\n\n            // console.time && console.timeEnd('update');\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateView: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateVisual: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload, true);\n\n            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateLayout: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            doLayout.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        prepareAndUpdate: function (payload) {\n            var ecModel = this._model;\n\n            prepareView.call(this, 'component', ecModel);\n\n            prepareView.call(this, 'chart', ecModel);\n\n            // FIXME\n            // ugly\n            if (this.__lastOnlyGraphic) {\n                each(this._componentsViews, function (componentView) {\n                    var componentModel = componentView.__model;\n                    if (componentModel && componentModel.mainType === 'graphic') {\n                        componentView.render(componentModel, ecModel, this._api, payload);\n                        updateZ(componentModel, componentView);\n                    }\n                }, this);\n                this.__lastOnlyGraphic = false;\n            }\n            else {\n                updateMethods.update.call(this, payload);\n            }\n        }\n    };\n\n    /**\n     * @private\n     */\n    function updateDirectly(ecIns, method, payload, mainType, subType) {\n        var ecModel = ecIns._model;\n        var query = {};\n        query[mainType + 'Id'] = payload[mainType + 'Id'];\n        query[mainType + 'Index'] = payload[mainType + 'Index'];\n        query[mainType + 'Name'] = payload[mainType + 'Name'];\n\n        var condition = {mainType: mainType, query: query};\n        subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n        // If dispatchAction before setOption, do nothing.\n        ecModel && ecModel.eachComponent(condition, function (model, index) {\n            var view = ecIns[\n                mainType === 'series' ? '_chartsMap' : '_componentsMap'\n            ][model.__viewId];\n            if (view && view.__alive) {\n                view[method](model, ecModel, ecIns._api, payload);\n            }\n        }, ecIns);\n    }\n\n    /**\n     * Resize the chart\n     * @param {Object} opts\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @param {boolean} [opts.silent=false]\n     */\n    echartsProto.resize = function (opts) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        this._zr.resize(opts);\n\n        var optionChanged = this._model && this._model.resetOption('media');\n        var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n\n        updateMethods[updateMethod].call(this);\n\n        // Resize loading effect\n        this._loadingFX && this._loadingFX.resize();\n\n        this[IN_MAIN_PROCESS] = false;\n\n        var silent = opts && opts.silent;\n\n        flushPendingActions.call(this, silent);\n\n        triggerUpdatedEvent.call(this, silent);\n    };\n\n    /**\n     * Show loading effect\n     * @param  {string} [name='default']\n     * @param  {Object} [cfg]\n     */\n    echartsProto.showLoading = function (name, cfg) {\n        if (zrUtil.isObject(name)) {\n            cfg = name;\n            name = '';\n        }\n        name = name || 'default';\n\n        this.hideLoading();\n        if (!loadingEffects[name]) {\n            if (__DEV__) {\n                console.warn('Loading effects ' + name + ' not exists.');\n            }\n            return;\n        }\n        var el = loadingEffects[name](this._api, cfg);\n        var zr = this._zr;\n        this._loadingFX = el;\n\n        zr.add(el);\n    };\n\n    /**\n     * Hide loading effect\n     */\n    echartsProto.hideLoading = function () {\n        this._loadingFX && this._zr.remove(this._loadingFX);\n        this._loadingFX = null;\n    };\n\n    /**\n     * @param {Object} eventObj\n     * @return {Object}\n     */\n    echartsProto.makeActionFromEvent = function (eventObj) {\n        var payload = zrUtil.extend({}, eventObj);\n        payload.type = eventActionMap[eventObj.type];\n        return payload;\n    };\n\n    /**\n     * @pubilc\n     * @param {Object} payload\n     * @param {string} [payload.type] Action type\n     * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n     * @param {boolean} [opt.silent=false] Whether trigger events.\n     * @param {boolean} [opt.flush=undefined]\n     *                  true: Flush immediately, and then pixel in canvas can be fetched\n     *                      immediately. Caution: it might affect performance.\n     *                  false: Not not flush.\n     *                  undefined: Auto decide whether perform flush.\n     */\n    echartsProto.dispatchAction = function (payload, opt) {\n        if (!zrUtil.isObject(opt)) {\n            opt = {silent: !!opt};\n        }\n\n        if (!actions[payload.type]) {\n            return;\n        }\n\n        // if (__DEV__) {\n        //     zrUtil.assert(\n        //         !this[IN_MAIN_PROCESS],\n        //         '`dispatchAction` should not be called during main process.'\n        //         + 'unless updateMathod is \"none\".'\n        //     );\n        // }\n\n        // May dispatchAction in rendering procedure\n        if (this[IN_MAIN_PROCESS]) {\n            this._pendingActions.push(payload);\n            return;\n        }\n\n        doDispatchAction.call(this, payload, opt.silent);\n\n        if (opt.flush) {\n            this._zr.flush(true);\n        }\n        else if (opt.flush !== false && env.browser.weChat) {\n            // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n            // hang when sliding page (on touch event), which cause that zr does not\n            // refresh util user interaction finished, which is not expected.\n            // But `dispatchAction` may be called too frequently when pan on touch\n            // screen, which impacts performance if do not throttle them.\n            this._throttledZrFlush();\n        }\n\n        flushPendingActions.call(this, opt.silent);\n\n        triggerUpdatedEvent.call(this, opt.silent);\n    };\n\n    function doDispatchAction(payload, silent) {\n        var payloadType = payload.type;\n        var actionWrap = actions[payloadType];\n        var actionInfo = actionWrap.actionInfo;\n\n        var cptType = (actionInfo.update || 'update').split(':');\n        var updateMethod = cptType.pop();\n        cptType = cptType[0] && parseClassType(cptType[0]);\n\n        this[IN_MAIN_PROCESS] = true;\n\n        var payloads = [payload];\n        var batched = false;\n        // Batch action\n        if (payload.batch) {\n            batched = true;\n            payloads = zrUtil.map(payload.batch, function (item) {\n                item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n                item.batch = null;\n                return item;\n            });\n        }\n\n        var eventObjBatch = [];\n        var eventObj;\n        var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n\n        for (var i = 0; i < payloads.length; i++) {\n            var batchItem = payloads[i];\n            // Action can specify the event by return it.\n            eventObj = actionWrap.action(batchItem, this._model);\n            // Emit event outside\n            eventObj = eventObj || zrUtil.extend({}, batchItem);\n            // Convert type to eventType\n            eventObj.type = actionInfo.event || eventObj.type;\n            eventObjBatch.push(eventObj);\n\n            // light update does not perform data process, layout and visual.\n            if (isHighDown) {\n                // method, payload, mainType, subType\n                updateDirectly(this, updateMethod, batchItem, 'series');\n            }\n            else if (cptType) {\n                updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n            }\n        }\n\n        if (updateMethod !== 'none' && !isHighDown && !cptType) {\n            // Still dirty\n            if (this[OPTION_UPDATED]) {\n                // FIXME Pass payload ?\n                updateMethods.prepareAndUpdate.call(this, payload);\n                this[OPTION_UPDATED] = false;\n            }\n            else {\n                updateMethods[updateMethod].call(this, payload);\n            }\n        }\n\n        // Follow the rule of action batch\n        if (batched) {\n            eventObj = {\n                type: actionInfo.event || payloadType,\n                batch: eventObjBatch\n            };\n        }\n        else {\n            eventObj = eventObjBatch[0];\n        }\n\n        this[IN_MAIN_PROCESS] = false;\n\n        !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n    }\n\n    function flushPendingActions(silent) {\n        var pendingActions = this._pendingActions;\n        while (pendingActions.length) {\n            var payload = pendingActions.shift();\n            doDispatchAction.call(this, payload, silent);\n        }\n    }\n\n    function triggerUpdatedEvent(silent) {\n        !silent && this.trigger('updated');\n    }\n\n    /**\n     * Register event\n     * @method\n     */\n    echartsProto.on = createRegisterEventWithLowercaseName('on');\n    echartsProto.off = createRegisterEventWithLowercaseName('off');\n    echartsProto.one = createRegisterEventWithLowercaseName('one');\n\n    /**\n     * @param {string} methodName\n     * @private\n     */\n    function invokeUpdateMethod(methodName, ecModel, payload) {\n        var api = this._api;\n\n        // Update all components\n        each(this._componentsViews, function (component) {\n            var componentModel = component.__model;\n            component[methodName](componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, component);\n        }, this);\n\n        // Upate all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chart = this._chartsMap[seriesModel.__viewId];\n            chart[methodName](seriesModel, ecModel, api, payload);\n\n            updateZ(seriesModel, chart);\n\n            updateProgressiveAndBlend(seriesModel, chart);\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n    }\n\n    /**\n     * Prepare view instances of charts and components\n     * @param  {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function prepareView(type, ecModel) {\n        var isComponent = type === 'component';\n        var viewList = isComponent ? this._componentsViews : this._chartsViews;\n        var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n        var zr = this._zr;\n\n        for (var i = 0; i < viewList.length; i++) {\n            viewList[i].__alive = false;\n        }\n\n        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n            if (isComponent) {\n                if (componentType === 'series') {\n                    return;\n                }\n            }\n            else {\n                model = componentType;\n            }\n\n            // Consider: id same and type changed.\n            var viewId = model.id + '_' + model.type;\n            var view = viewMap[viewId];\n            if (!view) {\n                var classType = parseClassType(model.type);\n                var Clazz = isComponent\n                    ? ComponentView.getClass(classType.main, classType.sub)\n                    : ChartView.getClass(classType.sub);\n                if (Clazz) {\n                    view = new Clazz();\n                    view.init(ecModel, this._api);\n                    viewMap[viewId] = view;\n                    viewList.push(view);\n                    zr.add(view.group);\n                }\n                else {\n                    // Error\n                    return;\n                }\n            }\n\n            model.__viewId = viewId;\n            view.__alive = true;\n            view.__id = viewId;\n            view.__model = model;\n        }, this);\n\n        for (var i = 0; i < viewList.length;) {\n            var view = viewList[i];\n            if (!view.__alive) {\n                zr.remove(view.group);\n                view.dispose(ecModel, this._api);\n                viewList.splice(i, 1);\n                delete viewMap[view.__id];\n            }\n            else {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * Processor data in each series\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function processData(ecModel, api) {\n        each(dataProcessorFuncs, function (process) {\n            process.func(ecModel, api);\n        });\n    }\n\n    /**\n     * @private\n     */\n    function stackSeriesData(ecModel) {\n        var stackedDataMap = {};\n        ecModel.eachSeries(function (series) {\n            var stack = series.get('stack');\n            var data = series.getData();\n            if (stack && data.type === 'list') {\n                var previousStack = stackedDataMap[stack];\n                if (previousStack) {\n                    data.stackedOn = previousStack;\n                }\n                stackedDataMap[stack] = data;\n            }\n        });\n    }\n\n    /**\n     * Layout before each chart render there series, special visual encoding stage\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function doLayout(ecModel, payload) {\n        var api = this._api;\n        each(visualFuncs, function (visual) {\n            if (visual.isLayout) {\n                visual.func(ecModel, api, payload);\n            }\n        });\n    }\n\n    /**\n     * Encode visual infomation from data after data processing\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @param {object} layout\n     * @param {boolean} [excludesLayout]\n     * @private\n     */\n    function doVisualEncoding(ecModel, payload, excludesLayout) {\n        var api = this._api;\n        ecModel.clearColorPalette();\n        ecModel.eachSeries(function (seriesModel) {\n            seriesModel.clearColorPalette();\n        });\n        each(visualFuncs, function (visual) {\n            (!excludesLayout || !visual.isLayout)\n                && visual.func(ecModel, api, payload);\n        });\n    }\n\n    /**\n     * Render each chart and component\n     * @private\n     */\n    function doRender(ecModel, payload) {\n        var api = this._api;\n        // Render all components\n        each(this._componentsViews, function (componentView) {\n            var componentModel = componentView.__model;\n            componentView.render(componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, componentView);\n        }, this);\n\n        each(this._chartsViews, function (chart) {\n            chart.__alive = false;\n        }, this);\n\n        // Render all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chartView = this._chartsMap[seriesModel.__viewId];\n            chartView.__alive = true;\n            chartView.render(seriesModel, ecModel, api, payload);\n\n            chartView.group.silent = !!seriesModel.get('silent');\n\n            updateZ(seriesModel, chartView);\n\n            updateProgressiveAndBlend(seriesModel, chartView);\n\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Remove groups of unrendered charts\n        each(this._chartsViews, function (chart) {\n            if (!chart.__alive) {\n                chart.remove(ecModel, api);\n            }\n        }, this);\n    }\n\n    var MOUSE_EVENT_NAMES = [\n        'click', 'dblclick', 'mouseover', 'mouseout', 'mousemove',\n        'mousedown', 'mouseup', 'globalout', 'contextmenu'\n    ];\n    /**\n     * @private\n     */\n    echartsProto._initEvents = function () {\n        each(MOUSE_EVENT_NAMES, function (eveName) {\n            this._zr.on(eveName, function (e) {\n                var ecModel = this.getModel();\n                var el = e.target;\n                var params;\n\n                // no e.target when 'globalout'.\n                if (eveName === 'globalout') {\n                    params = {};\n                }\n                else if (el && el.dataIndex != null) {\n                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                    params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n                }\n                // If element has custom eventData of components\n                else if (el && el.eventData) {\n                    params = zrUtil.extend({}, el.eventData);\n                }\n\n                if (params) {\n                    params.event = e;\n                    params.type = eveName;\n                    this.trigger(eveName, params);\n                }\n\n            }, this);\n        }, this);\n\n        each(eventActionMap, function (actionType, eventType) {\n            this._messageCenter.on(eventType, function (event) {\n                this.trigger(eventType, event);\n            }, this);\n        }, this);\n    };\n\n    /**\n     * @return {boolean}\n     */\n    echartsProto.isDisposed = function () {\n        return this._disposed;\n    };\n\n    /**\n     * Clear\n     */\n    echartsProto.clear = function () {\n        this.setOption({ series: [] }, true);\n    };\n    /**\n     * Dispose instance\n     */\n    echartsProto.dispose = function () {\n        if (this._disposed) {\n            if (__DEV__) {\n                console.warn('Instance ' + this.id + ' has been disposed');\n            }\n            return;\n        }\n        this._disposed = true;\n\n        var api = this._api;\n        var ecModel = this._model;\n\n        each(this._componentsViews, function (component) {\n            component.dispose(ecModel, api);\n        });\n        each(this._chartsViews, function (chart) {\n            chart.dispose(ecModel, api);\n        });\n\n        // Dispose after all views disposed\n        this._zr.dispose();\n\n        delete instances[this.id];\n    };\n\n    zrUtil.mixin(ECharts, Eventful);\n\n    function updateHoverLayerStatus(zr, ecModel) {\n        var storage = zr.storage;\n        var elCount = 0;\n        storage.traverse(function (el) {\n            if (!el.isGroup) {\n                elCount++;\n            }\n        });\n        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n            storage.traverse(function (el) {\n                if (!el.isGroup) {\n                    el.useHoverLayer = true;\n                }\n            });\n        }\n    }\n    /**\n     * Update chart progressive and blend.\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateProgressiveAndBlend(seriesModel, chartView) {\n        // Progressive configuration\n        var elCount = 0;\n        chartView.group.traverse(function (el) {\n            if (el.type !== 'group' && !el.ignore) {\n                elCount++;\n            }\n        });\n        var frameDrawNum = +seriesModel.get('progressive');\n        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n        if (needProgressive) {\n            chartView.group.traverse(function (el) {\n                // FIXME marker and other components\n                if (!el.isGroup) {\n                    el.progressive = needProgressive ?\n                        Math.floor(elCount++ / frameDrawNum) : -1;\n                    if (needProgressive) {\n                        el.stopAnimation(true);\n                    }\n                }\n            });\n        }\n\n        // Blend configration\n        var blendMode = seriesModel.get('blendMode') || null;\n        if (__DEV__) {\n            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n                console.warn('Only canvas support blendMode');\n            }\n        }\n        chartView.group.traverse(function (el) {\n            // FIXME marker and other components\n            if (!el.isGroup) {\n                el.setStyle('blend', blendMode);\n            }\n        });\n    }\n    /**\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateZ(model, view) {\n        var z = model.get('z');\n        var zlevel = model.get('zlevel');\n        // Set z and zlevel\n        view.group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n            }\n        });\n    }\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var actions = [];\n\n    /**\n     * Map eventType to actionType\n     * @type {Object}\n     */\n    var eventActionMap = {};\n\n    /**\n     * Data processor functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var dataProcessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var optionPreprocessorFuncs = [];\n\n    /**\n     * Visual encoding functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var visualFuncs = [];\n    /**\n     * Theme storage\n     * @type {Object.<key, Object>}\n     */\n    var themeStorage = {};\n    /**\n     * Loading effects\n     */\n    var loadingEffects = {};\n\n\n    var instances = {};\n    var connectedGroups = {};\n\n    var idBase = new Date() - 0;\n    var groupIdBase = new Date() - 0;\n    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n    /**\n     * @alias module:echarts\n     */\n    var echarts = {\n        /**\n         * @type {number}\n         */\n        version: '3.4.0',\n        dependencies: {\n            zrender: '3.3.0'\n        }\n    };\n\n    function enableConnect(chart) {\n\n        var STATUS_PENDING = 0;\n        var STATUS_UPDATING = 1;\n        var STATUS_UPDATED = 2;\n        var STATUS_KEY = '__connectUpdateStatus';\n        function updateConnectedChartsStatus(charts, status) {\n            for (var i = 0; i < charts.length; i++) {\n                var otherChart = charts[i];\n                otherChart[STATUS_KEY] = status;\n            }\n        }\n        zrUtil.each(eventActionMap, function (actionType, eventType) {\n            chart._messageCenter.on(eventType, function (event) {\n                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n                    var action = chart.makeActionFromEvent(event);\n                    var otherCharts = [];\n\n                    zrUtil.each(instances, function (otherChart) {\n                        if (otherChart !== chart && otherChart.group === chart.group) {\n                            otherCharts.push(otherChart);\n                        }\n                    });\n\n                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n                    each(otherCharts, function (otherChart) {\n                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n                            otherChart.dispatchAction(action);\n                        }\n                    });\n                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n                }\n            });\n        });\n\n    }\n    /**\n     * @param {HTMLDomElement} dom\n     * @param {Object} [theme]\n     * @param {Object} opts\n     * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n     * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n     * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n     *                              Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n     *                               Can be 'auto' (the same as null/undefined)\n     */\n    echarts.init = function (dom, theme, opts) {\n        if (__DEV__) {\n            // Check version\n            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {\n                throw new Error(\n                    'ZRender ' + zrender.version\n                    + ' is too old for ECharts ' + echarts.version\n                    + '. Current version need ZRender '\n                    + echarts.dependencies.zrender + '+'\n                );\n            }\n            if (!dom) {\n                throw new Error('Initialize failed: invalid dom.');\n            }\n            if (zrUtil.isDom(dom) && dom.nodeName.toUpperCase() !== 'CANVAS' && (!dom.clientWidth || !dom.clientHeight)) {\n                console.warn('Can\\'t get dom width or height');\n            }\n        }\n\n        var chart = new ECharts(dom, theme, opts);\n        chart.id = 'ec_' + idBase++;\n        instances[chart.id] = chart;\n\n        dom.setAttribute &&\n            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n\n        enableConnect(chart);\n\n        return chart;\n    };\n\n    /**\n     * @return {string|Array.<module:echarts~ECharts>} groupId\n     */\n    echarts.connect = function (groupId) {\n        // Is array of charts\n        if (zrUtil.isArray(groupId)) {\n            var charts = groupId;\n            groupId = null;\n            // If any chart has group\n            zrUtil.each(charts, function (chart) {\n                if (chart.group != null) {\n                    groupId = chart.group;\n                }\n            });\n            groupId = groupId || ('g_' + groupIdBase++);\n            zrUtil.each(charts, function (chart) {\n                chart.group = groupId;\n            });\n        }\n        connectedGroups[groupId] = true;\n        return groupId;\n    };\n\n    /**\n     * @return {string} groupId\n     */\n    echarts.disConnect = function (groupId) {\n        connectedGroups[groupId] = false;\n    };\n\n    /**\n     * Dispose a chart instance\n     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n     */\n    echarts.dispose = function (chart) {\n        if (zrUtil.isDom(chart)) {\n            chart = echarts.getInstanceByDom(chart);\n        }\n        else if (typeof chart === 'string') {\n            chart = instances[chart];\n        }\n        if ((chart instanceof ECharts) && !chart.isDisposed()) {\n            chart.dispose();\n        }\n    };\n\n    /**\n     * @param  {HTMLDomElement} dom\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceByDom = function (dom) {\n        var key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n        return instances[key];\n    };\n    /**\n     * @param {string} key\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceById = function (key) {\n        return instances[key];\n    };\n\n    /**\n     * Register theme\n     */\n    echarts.registerTheme = function (name, theme) {\n        themeStorage[name] = theme;\n    };\n\n    /**\n     * Register option preprocessor\n     * @param {Function} preprocessorFunc\n     */\n    echarts.registerPreprocessor = function (preprocessorFunc) {\n        optionPreprocessorFuncs.push(preprocessorFunc);\n    };\n\n    /**\n     * @param {number} [priority=1000]\n     * @param {Function} processorFunc\n     */\n    echarts.registerProcessor = function (priority, processorFunc) {\n        if (typeof priority === 'function') {\n            processorFunc = priority;\n            priority = PRIORITY_PROCESSOR_FILTER;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown processor priority');\n            }\n        }\n        dataProcessorFuncs.push({\n            prio: priority,\n            func: processorFunc\n        });\n    };\n\n    /**\n     * Usage:\n     * registerAction('someAction', 'someEvent', function () { ... });\n     * registerAction('someAction', function () { ... });\n     * registerAction(\n     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n     *     function () { ... }\n     * );\n     *\n     * @param {(string|Object)} actionInfo\n     * @param {string} actionInfo.type\n     * @param {string} [actionInfo.event]\n     * @param {string} [actionInfo.update]\n     * @param {string} [eventName]\n     * @param {Function} action\n     */\n    echarts.registerAction = function (actionInfo, eventName, action) {\n        if (typeof eventName === 'function') {\n            action = eventName;\n            eventName = '';\n        }\n        var actionType = zrUtil.isObject(actionInfo)\n            ? actionInfo.type\n            : ([actionInfo, actionInfo = {\n                event: eventName\n            }][0]);\n\n        // Event name is all lowercase\n        actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n        eventName = actionInfo.event;\n\n        // Validate action type and event name.\n        zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n        if (!actions[actionType]) {\n            actions[actionType] = {action: action, actionInfo: actionInfo};\n        }\n        eventActionMap[eventName] = actionType;\n    };\n\n    /**\n     * @param {string} type\n     * @param {*} CoordinateSystem\n     */\n    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {\n        CoordinateSystemManager.register(type, CoordinateSystem);\n    };\n\n    /**\n     * Layout is a special stage of visual encoding\n     * Most visual encoding like color are common for different chart\n     * But each chart has it's own layout algorithm\n     *\n     * @param {number} [priority=1000]\n     * @param {Function} layoutFunc\n     */\n    echarts.registerLayout = function (priority, layoutFunc) {\n        if (typeof priority === 'function') {\n            layoutFunc = priority;\n            priority = PRIORITY_VISUAL_LAYOUT;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown layout priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: layoutFunc,\n            isLayout: true\n        });\n    };\n\n    /**\n     * @param {number} [priority=3000]\n     * @param {Function} visualFunc\n     */\n    echarts.registerVisual = function (priority, visualFunc) {\n        if (typeof priority === 'function') {\n            visualFunc = priority;\n            priority = PRIORITY_VISUAL_CHART;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown visual priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: visualFunc\n        });\n    };\n\n    /**\n     * @param {string} name\n     */\n    echarts.registerLoading = function (name, loadingFx) {\n        loadingEffects[name] = loadingFx;\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentModel = function (opts/*, superClass*/) {\n        // var Clazz = ComponentModel;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentView = function (opts/*, superClass*/) {\n        // var Clazz = ComponentView;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentView.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendSeriesModel = function (opts/*, superClass*/) {\n        // var Clazz = SeriesModel;\n        // if (superClass) {\n        //     superClass = 'series.' + superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return SeriesModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendChartView = function (opts/*, superClass*/) {\n        // var Clazz = ChartView;\n        // if (superClass) {\n        //     superClass = superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ChartView.getClass(classType.main, true);\n        // }\n        return ChartView.extend(opts);\n    };\n\n    /**\n     * ZRender need a canvas context to do measureText.\n     * But in node environment canvas may be created by node-canvas.\n     * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n     *\n     * Be careful of using it in the browser.\n     *\n     * @param {Function} creator\n     * @example\n     *     var Canvas = require('canvas');\n     *     var echarts = require('echarts');\n     *     echarts.setCanvasCreator(function () {\n     *         // Small size is enough.\n     *         return new Canvas(32, 32);\n     *     });\n     */\n    echarts.setCanvasCreator = function (creator) {\n        zrUtil.createCanvas = creator;\n    };\n\n    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, require('./visual/seriesColor'));\n    echarts.registerPreprocessor(require('./preprocessor/backwardCompat'));\n    echarts.registerLoading('default', require('./loading/default'));\n\n    // Default action\n    echarts.registerAction({\n        type: 'highlight',\n        event: 'highlight',\n        update: 'highlight'\n    }, zrUtil.noop);\n    echarts.registerAction({\n        type: 'downplay',\n        event: 'downplay',\n        update: 'downplay'\n    }, zrUtil.noop);\n\n\n    // --------\n    // Exports\n    // --------\n    //\n    echarts.List = require('./data/List');\n    echarts.Model = require('./model/Model');\n\n    echarts.graphic = require('./util/graphic');\n    echarts.number = require('./util/number');\n    echarts.format = require('./util/format');\n    echarts.throttle = throttle.throttle;\n    echarts.matrix = require('zrender/lib/core/matrix');\n    echarts.vector = require('zrender/lib/core/vector');\n    echarts.color = require('zrender/lib/tool/color');\n\n    echarts.util = {};\n    each([\n            'map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter',\n            'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction',\n            'extend', 'defaults', 'clone'\n        ],\n        function (name) {\n            echarts.util[name] = zrUtil[name];\n        }\n    );\n\n    // PRIORITY\n    echarts.PRIORITY = {\n        PROCESSOR: {\n            FILTER: PRIORITY_PROCESSOR_FILTER,\n            STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n        },\n        VISUAL: {\n            LAYOUT: PRIORITY_VISUAL_LAYOUT,\n            GLOBAL: PRIORITY_VISUAL_GLOBAL,\n            CHART: PRIORITY_VISUAL_CHART,\n            COMPONENT: PRIORITY_VISUAL_COMPONENT,\n            BRUSH: PRIORITY_VISUAL_BRUSH\n        }\n    };\n\n    module.exports = echarts;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/echarts.js\n// module id = 318\n// module chunks = 0 1 2 3 4","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var pathTool = require('zrender/lib/tool/path');\n    var round = Math.round;\n    var Path = require('zrender/lib/graphic/Path');\n    var colorTool = require('zrender/lib/tool/color');\n    var matrix = require('zrender/lib/core/matrix');\n    var vector = require('zrender/lib/core/vector');\n\n    var graphic = {};\n\n    graphic.Group = require('zrender/lib/container/Group');\n\n    graphic.Image = require('zrender/lib/graphic/Image');\n\n    graphic.Text = require('zrender/lib/graphic/Text');\n\n    graphic.Circle = require('zrender/lib/graphic/shape/Circle');\n\n    graphic.Sector = require('zrender/lib/graphic/shape/Sector');\n\n    graphic.Ring = require('zrender/lib/graphic/shape/Ring');\n\n    graphic.Polygon = require('zrender/lib/graphic/shape/Polygon');\n\n    graphic.Polyline = require('zrender/lib/graphic/shape/Polyline');\n\n    graphic.Rect = require('zrender/lib/graphic/shape/Rect');\n\n    graphic.Line = require('zrender/lib/graphic/shape/Line');\n\n    graphic.BezierCurve = require('zrender/lib/graphic/shape/BezierCurve');\n\n    graphic.Arc = require('zrender/lib/graphic/shape/Arc');\n\n    graphic.CompoundPath = require('zrender/lib/graphic/CompoundPath');\n\n    graphic.LinearGradient = require('zrender/lib/graphic/LinearGradient');\n\n    graphic.RadialGradient = require('zrender/lib/graphic/RadialGradient');\n\n    graphic.BoundingRect = require('zrender/lib/core/BoundingRect');\n\n    /**\n     * Extend shape with parameters\n     */\n    graphic.extendShape = function (opts) {\n        return Path.extend(opts);\n    };\n\n    /**\n     * Extend path\n     */\n    graphic.extendPath = function (pathData, opts) {\n        return pathTool.extendFromString(pathData, opts);\n    };\n\n    /**\n     * Create a path element from path data string\n     * @param {string} pathData\n     * @param {Object} opts\n     * @param {module:zrender/core/BoundingRect} rect\n     * @param {string} [layout=cover] 'center' or 'cover'\n     */\n    graphic.makePath = function (pathData, opts, rect, layout) {\n        var path = pathTool.createFromString(pathData, opts);\n        var boundingRect = path.getBoundingRect();\n        if (rect) {\n            var aspect = boundingRect.width / boundingRect.height;\n\n            if (layout === 'center') {\n                // Set rect to center, keep width / height ratio.\n                var width = rect.height * aspect;\n                var height;\n                if (width <= rect.width) {\n                    height = rect.height;\n                }\n                else {\n                    width = rect.width;\n                    height = width / aspect;\n                }\n                var cx = rect.x + rect.width / 2;\n                var cy = rect.y + rect.height / 2;\n\n                rect.x = cx - width / 2;\n                rect.y = cy - height / 2;\n                rect.width = width;\n                rect.height = height;\n            }\n\n            graphic.resizePath(path, rect);\n        }\n        return path;\n    };\n\n    graphic.mergePath = pathTool.mergePath,\n\n    /**\n     * Resize a path to fit the rect\n     * @param {module:zrender/graphic/Path} path\n     * @param {Object} rect\n     */\n    graphic.resizePath = function (path, rect) {\n        if (!path.applyTransform) {\n            return;\n        }\n\n        var pathRect = path.getBoundingRect();\n\n        var m = pathRect.calculateTransform(rect);\n\n        path.applyTransform(m);\n    };\n\n    /**\n     * Sub pixel optimize line for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x1]\n     * @param {number} [param.shape.y1]\n     * @param {number} [param.shape.x2]\n     * @param {number} [param.shape.y2]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeLine = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n\n        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n        }\n        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n        }\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize rect for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x]\n     * @param {number} [param.shape.y]\n     * @param {number} [param.shape.width]\n     * @param {number} [param.shape.height]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeRect = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n        var originX = shape.x;\n        var originY = shape.y;\n        var originWidth = shape.width;\n        var originHeight = shape.height;\n        shape.x = subPixelOptimize(shape.x, lineWidth, true);\n        shape.y = subPixelOptimize(shape.y, lineWidth, true);\n        shape.width = Math.max(\n            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\n            originWidth === 0 ? 0 : 1\n        );\n        shape.height = Math.max(\n            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\n            originHeight === 0 ? 0 : 1\n        );\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize for canvas\n     *\n     * @param {number} position Coordinate, such as x, y\n     * @param {number} lineWidth Should be nonnegative integer.\n     * @param {boolean=} positiveOrNegative Default false (negative).\n     * @return {number} Optimized position.\n     */\n    graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\n        // Assure that (position + lineWidth / 2) is near integer edge,\n        // otherwise line will be fuzzy in canvas.\n        var doubledPosition = round(position * 2);\n        return (doubledPosition + round(lineWidth)) % 2 === 0\n            ? doubledPosition / 2\n            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n    };\n\n    function hasFillOrStroke(fillOrStroke) {\n        return fillOrStroke != null && fillOrStroke != 'none';\n    }\n\n    function liftColor(color) {\n        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n    }\n\n    /**\n     * @private\n     */\n    function cacheElementStl(el) {\n        if (el.__hoverStlDirty) {\n            var stroke = el.style.stroke;\n            var fill = el.style.fill;\n\n            // Create hoverStyle on mouseover\n            var hoverStyle = el.__hoverStl;\n            hoverStyle.fill = hoverStyle.fill\n                || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n            hoverStyle.stroke = hoverStyle.stroke\n                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n\n            var normalStyle = {};\n            for (var name in hoverStyle) {\n                if (hoverStyle.hasOwnProperty(name)) {\n                    normalStyle[name] = el.style[name];\n                }\n            }\n\n            el.__normalStl = normalStyle;\n\n            el.__hoverStlDirty = false;\n        }\n    }\n\n    /**\n     * @private\n     */\n    function doSingleEnterHover(el) {\n        if (el.__isHover) {\n            return;\n        }\n\n        cacheElementStl(el);\n\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.addHover(el, el.__hoverStl);\n        }\n        else {\n            el.setStyle(el.__hoverStl);\n            el.z2 += 1;\n        }\n\n        el.__isHover = true;\n    }\n\n    /**\n     * @inner\n     */\n    function doSingleLeaveHover(el) {\n        if (!el.__isHover) {\n            return;\n        }\n\n        var normalStl = el.__normalStl;\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.removeHover(el);\n        }\n        else {\n            normalStl && el.setStyle(normalStl);\n            el.z2 -= 1;\n        }\n\n        el.__isHover = false;\n    }\n\n    /**\n     * @inner\n     */\n    function doEnterHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleEnterHover(child);\n                }\n            })\n            : doSingleEnterHover(el);\n    }\n\n    function doLeaveHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleLeaveHover(child);\n                }\n            })\n            : doSingleLeaveHover(el);\n    }\n\n    /**\n     * @inner\n     */\n    function setElementHoverStl(el, hoverStl) {\n        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n        // Often used when item group has a label element and it's hoverStyle is different\n        el.__hoverStl = el.hoverStyle || hoverStl || {};\n        el.__hoverStlDirty = true;\n\n        if (el.__isHover) {\n            cacheElementStl(el);\n        }\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOver(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOut(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doLeaveHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function enterEmphasis() {\n        this.__isEmphasis = true;\n        doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function leaveEmphasis() {\n        this.__isEmphasis = false;\n        doLeaveHover(this);\n    }\n\n    /**\n     * Set hover style of element\n     * @param {module:zrender/Element} el\n     * @param {Object} [hoverStyle]\n     * @param {Object} [opt]\n     * @param {boolean} [opt.hoverSilentOnTouch=false]\n     *        In touch device, mouseover event will be trigger on touchstart event\n     *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n     *        conviniently use hoverStyle when tap on touch screen without additional\n     *        code for compatibility.\n     *        But if the chart/component has select feature, which usually also use\n     *        hoverStyle, there might be conflict between 'select-highlight' and\n     *        'hover-highlight' especially when roam is enabled (see geo for example).\n     *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n     *        on touch device.\n     */\n    graphic.setHoverStyle = function (el, hoverStyle, opt) {\n        el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    setElementHoverStl(child, hoverStyle);\n                }\n            })\n            : setElementHoverStl(el, hoverStyle);\n\n        // Duplicated function will be auto-ignored, see Eventful.js.\n        el.on('mouseover', onElementMouseOver)\n          .on('mouseout', onElementMouseOut);\n\n        // Emphasis, normal can be triggered manually\n        el.on('emphasis', enterEmphasis)\n          .on('normal', leaveEmphasis);\n    };\n\n    /**\n     * Set text option in the style\n     * @param {Object} textStyle\n     * @param {module:echarts/model/Model} labelModel\n     * @param {string} color\n     */\n    graphic.setText = function (textStyle, labelModel, color) {\n        var labelPosition = labelModel.getShallow('position') || 'inside';\n        var labelOffset = labelModel.getShallow('offset');\n        var labelColor = labelPosition.indexOf('inside') >= 0 ? 'white' : color;\n        var textStyleModel = labelModel.getModel('textStyle');\n        zrUtil.extend(textStyle, {\n            textDistance: labelModel.getShallow('distance') || 5,\n            textFont: textStyleModel.getFont(),\n            textPosition: labelPosition,\n            textOffset: labelOffset,\n            textFill: textStyleModel.getTextColor() || labelColor\n        });\n    };\n\n    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n        if (typeof dataIndex === 'function') {\n            cb = dataIndex;\n            dataIndex = null;\n        }\n        // Do not check 'animation' property directly here. Consider this case:\n        // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n        // but its parent model (`seriesModel`) does.\n        var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n        if (animationEnabled) {\n            var postfix = isUpdate ? 'Update' : '';\n            var duration = animatableModel.getShallow('animationDuration' + postfix);\n            var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n            var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n            if (typeof animationDelay === 'function') {\n                animationDelay = animationDelay(\n                    dataIndex,\n                    animatableModel.getAnimationDelayParams\n                        ? animatableModel.getAnimationDelayParams(el, dataIndex)\n                        : null\n                );\n            }\n            if (typeof duration === 'function') {\n                duration = duration(dataIndex);\n            }\n\n            duration > 0\n                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb)\n                : (el.attr(props), cb && cb());\n        }\n        else {\n            el.attr(props);\n            cb && cb();\n        }\n    }\n\n    /**\n     * Update graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} [cb]\n     * @example\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n     *     // Or\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, function () { console.log('Animation done!'); });\n     */\n    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Init graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} cb\n     */\n    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Get transform matrix of target (param target),\n     * in coordinate of its ancestor (param ancestor)\n     *\n     * @param {module:zrender/mixin/Transformable} target\n     * @param {module:zrender/mixin/Transformable} [ancestor]\n     */\n    graphic.getTransform = function (target, ancestor) {\n        var mat = matrix.identity([]);\n\n        while (target && target !== ancestor) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }\n\n        return mat;\n    };\n\n    /**\n     * Apply transform to an vertex.\n     * @param {Array.<number>} vertex [x, y]\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {Array.<number>} [x, y]\n     */\n    graphic.applyTransform = function (vertex, transform, invert) {\n        if (invert) {\n            transform = matrix.invert([], transform);\n        }\n        return vector.applyTransform([], vertex, transform);\n    };\n\n    /**\n     * @param {string} direction 'left' 'right' 'top' 'bottom'\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n     */\n    graphic.transformDirection = function (direction, transform, invert) {\n\n        // Pick a base, ensure that transform result will not be (0, 0).\n        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[0]);\n        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[2]);\n\n        var vertex = [\n            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\n            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\n        ];\n\n        vertex = graphic.applyTransform(vertex, transform, invert);\n\n        return Math.abs(vertex[0]) > Math.abs(vertex[1])\n            ? (vertex[0] > 0 ? 'right' : 'left')\n            : (vertex[1] > 0 ? 'bottom' : 'top');\n    };\n\n    /**\n     * Apply group transition animation from g1 to g2\n     */\n    graphic.groupTransition = function (g1, g2, animatableModel, cb) {\n        if (!g1 || !g2) {\n            return;\n        }\n\n        function getElMap(g) {\n            var elMap = {};\n            g.traverse(function (el) {\n                if (!el.isGroup && el.anid) {\n                    elMap[el.anid] = el;\n                }\n            });\n            return elMap;\n        }\n        function getAnimatableProps(el) {\n            var obj = {\n                position: vector.clone(el.position),\n                rotation: el.rotation\n            };\n            if (el.shape) {\n                obj.shape = zrUtil.extend({}, el.shape);\n            }\n            return obj;\n        }\n        var elMap1 = getElMap(g1);\n\n        g2.traverse(function (el) {\n            if (!el.isGroup && el.anid) {\n                var oldEl = elMap1[el.anid];\n                if (oldEl) {\n                    var newProp = getAnimatableProps(el);\n                    el.attr(getAnimatableProps(oldEl));\n                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);\n                }\n                // else {\n                //     if (el.previousProps) {\n                //         graphic.updateProps\n                //     }\n                // }\n            }\n        });\n    };\n\n    module.exports = graphic;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/graphic.js\n// module id = 319\n// module chunks = 0 1 2 3 4","/**\n * 数值处理模块\n * @module echarts/util/number\n */\n\n\n\n    var number = {};\n\n    var RADIAN_EPSILON = 1e-4;\n\n    function _trim(str) {\n        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n\n    /**\n     * Linear mapping a value from domain to range\n     * @memberOf module:echarts/util/number\n     * @param  {(number|Array.<number>)} val\n     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n     * @param  {boolean} clamp\n     * @return {(number|Array.<number>}\n     */\n    number.linearMap = function (val, domain, range, clamp) {\n        var subDomain = domain[1] - domain[0];\n        var subRange = range[1] - range[0];\n\n        if (subDomain === 0) {\n            return subRange === 0\n                ? range[0]\n                : (range[0] + range[1]) / 2;\n        }\n\n        // Avoid accuracy problem in edge, such as\n        // 146.39 - 62.83 === 83.55999999999999.\n        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n        // It is a little verbose for efficiency considering this method\n        // is a hotspot.\n        if (clamp) {\n            if (subDomain > 0) {\n                if (val <= domain[0]) {\n                    return range[0];\n                }\n                else if (val >= domain[1]) {\n                    return range[1];\n                }\n            }\n            else {\n                if (val >= domain[0]) {\n                    return range[0];\n                }\n                else if (val <= domain[1]) {\n                    return range[1];\n                }\n            }\n        }\n        else {\n            if (val === domain[0]) {\n                return range[0];\n            }\n            if (val === domain[1]) {\n                return range[1];\n            }\n        }\n\n        return (val - domain[0]) / subDomain * subRange + range[0];\n    };\n\n    /**\n     * Convert a percent string to absolute number.\n     * Returns NaN if percent is not a valid string or number\n     * @memberOf module:echarts/util/number\n     * @param {string|number} percent\n     * @param {number} all\n     * @return {number}\n     */\n    number.parsePercent = function(percent, all) {\n        switch (percent) {\n            case 'center':\n            case 'middle':\n                percent = '50%';\n                break;\n            case 'left':\n            case 'top':\n                percent = '0%';\n                break;\n            case 'right':\n            case 'bottom':\n                percent = '100%';\n                break;\n        }\n        if (typeof percent === 'string') {\n            if (_trim(percent).match(/%$/)) {\n                return parseFloat(percent) / 100 * all;\n            }\n\n            return parseFloat(percent);\n        }\n\n        return percent == null ? NaN : +percent;\n    };\n\n    /**\n     * Fix rounding error of float numbers\n     * @param {number} x\n     * @return {number}\n     */\n    number.round = function (x, precision) {\n        if (precision == null) {\n            precision = 10;\n        }\n        // Avoid range error\n        precision = Math.min(Math.max(0, precision), 20);\n        return +(+x).toFixed(precision);\n    };\n\n    number.asc = function (arr) {\n        arr.sort(function (a, b) {\n            return a - b;\n        });\n        return arr;\n    };\n\n    /**\n     * Get precision\n     * @param {number} val\n     */\n    number.getPrecision = function (val) {\n        val = +val;\n        if (isNaN(val)) {\n            return 0;\n        }\n        // It is much faster than methods converting number to string as follows\n        //      var tmp = val.toString();\n        //      return tmp.length - 1 - tmp.indexOf('.');\n        // especially when precision is low\n        var e = 1;\n        var count = 0;\n        while (Math.round(val * e) / e !== val) {\n            e *= 10;\n            count++;\n        }\n        return count;\n    };\n\n    number.getPrecisionSafe = function (val) {\n        var str = val.toString();\n        var dotIndex = str.indexOf('.');\n        if (dotIndex < 0) {\n            return 0;\n        }\n        return str.length - 1 - dotIndex;\n    };\n\n    /**\n     * Minimal dicernible data precisioin according to a single pixel.\n     * @param {Array.<number>} dataExtent\n     * @param {Array.<number>} pixelExtent\n     * @return {number} precision\n     */\n    number.getPixelPrecision = function (dataExtent, pixelExtent) {\n        var log = Math.log;\n        var LN10 = Math.LN10;\n        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\n        // toFixed() digits argument must be between 0 and 20.\n        var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n        return !isFinite(precision) ? 20 : precision;\n    };\n\n    // Number.MAX_SAFE_INTEGER, ie do not support.\n    number.MAX_SAFE_INTEGER = 9007199254740991;\n\n    /**\n     * To 0 - 2 * PI, considering negative radian.\n     * @param {number} radian\n     * @return {number}\n     */\n    number.remRadian = function (radian) {\n        var pi2 = Math.PI * 2;\n        return (radian % pi2 + pi2) % pi2;\n    };\n\n    /**\n     * @param {type} radian\n     * @return {boolean}\n     */\n    number.isRadianAroundZero = function (val) {\n        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n    };\n\n    /**\n     * @param {string|Date|number} value\n     * @return {Date} date\n     */\n    number.parseDate = function (value) {\n        if (value instanceof Date) {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            // Treat as ISO format. See issue #3623\n            var ret = new Date(value);\n            if (isNaN(+ret)) {\n                // FIXME new Date('1970-01-01') is UTC, new Date('1970/01/01') is local\n                ret = new Date(new Date(value.replace(/-/g, '/')) - new Date('1970/01/01'));\n            }\n            return ret;\n        }\n\n        return new Date(Math.round(value));\n    };\n\n    /**\n     * Quantity of a number. e.g. 0.1, 1, 10, 100\n     * @param  {number} val\n     * @return {number}\n     */\n    number.quantity = function (val) {\n        return Math.pow(10, Math.floor(Math.log(val) / Math.LN10));\n    };\n\n    // \"Nice Numbers for Graph Labels\" of Graphic Gems\n    /**\n     * find a “nice” number approximately equal to x. Round the number if round = true, take ceiling if round = false\n     * The primary observation is that the “nicest” numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n     * @param  {number} val\n     * @param  {boolean} round\n     * @return {number}\n     */\n    number.nice = function (val, round) {\n        var exp10 = number.quantity(val);\n        var f = val / exp10; // between 1 and 10\n        var nf;\n        if (round) {\n            if (f < 1.5) { nf = 1; }\n            else if (f < 2.5) { nf = 2; }\n            else if (f < 4) { nf = 3; }\n            else if (f < 7) { nf = 5; }\n            else { nf = 10; }\n        }\n        else {\n            if (f < 1) { nf = 1; }\n            else if (f < 2) { nf = 2; }\n            else if (f < 3) { nf = 3; }\n            else if (f < 5) { nf = 5; }\n            else { nf = 10; }\n        }\n        return nf * exp10;\n    };\n\n    /**\n     * Order intervals asc, and split them when overlap.\n     * expect(numberUtil.reformIntervals([\n     *     {interval: [18, 62], close: [1, 1]},\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [1, 1]},\n     *     {interval: [62, 150], close: [1, 1]},\n     *     {interval: [106, 150], close: [1, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ])).toEqual([\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [0, 1]},\n     *     {interval: [18, 62], close: [0, 1]},\n     *     {interval: [62, 150], close: [0, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ]);\n     * @param {Array.<Object>} list, where `close` mean open or close\n     *        of the interval, and Infinity can be used.\n     * @return {Array.<Object>} The origin list, which has been reformed.\n     */\n    number.reformIntervals = function (list) {\n        list.sort(function (a, b) {\n            return littleThan(a, b, 0) ? -1 : 1;\n        });\n\n        var curr = -Infinity;\n        var currClose = 1;\n        for (var i = 0; i < list.length;) {\n            var interval = list[i].interval;\n            var close = list[i].close;\n\n            for (var lg = 0; lg < 2; lg++) {\n                if (interval[lg] <= curr) {\n                    interval[lg] = curr;\n                    close[lg] = !lg ? 1 - currClose : 1;\n                }\n                curr = interval[lg];\n                currClose = close[lg];\n            }\n\n            if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n                list.splice(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n\n        return list;\n\n        function littleThan(a, b, lg) {\n            return a.interval[lg] < b.interval[lg]\n                || (\n                    a.interval[lg] === b.interval[lg]\n                    && (\n                        (a.close[lg] - b.close[lg] === (!lg ? 1 : -1))\n                        || (!lg && littleThan(a, b, 1))\n                    )\n                );\n        }\n    };\n\n    /**\n     * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n     * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n     * subtraction forces infinities to NaN\n     * @param {*} v\n     * @return {boolean}\n     */\n    number.isNumeric = function (v) {\n        return v - parseFloat(v) >= 0;\n    };\n\n    module.exports = number;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/number.js\n// module id = 320\n// module chunks = 0 1 2 3 4","\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n\n    /**\n     * @typedef {Float32Array|Array.<number>} Vector2\n     */\n    /**\n     * 二维向量类\n     * @exports zrender/tool/vector\n     */\n    var vector = {\n        /**\n         * 创建一个向量\n         * @param {number} [x=0]\n         * @param {number} [y=0]\n         * @return {Vector2}\n         */\n        create: function (x, y) {\n            var out = new ArrayCtor(2);\n            if (x == null) {\n                x = 0;\n            }\n            if (y == null) {\n                y = 0;\n            }\n            out[0] = x;\n            out[1] = y;\n            return out;\n        },\n\n        /**\n         * 复制向量数据\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        copy: function (out, v) {\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 克隆一个向量\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        clone: function (v) {\n            var out = new ArrayCtor(2);\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 设置向量的两个项\n         * @param {Vector2} out\n         * @param {number} a\n         * @param {number} b\n         * @return {Vector2} 结果\n         */\n        set: function (out, a, b) {\n            out[0] = a;\n            out[1] = b;\n            return out;\n        },\n\n        /**\n         * 向量相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        add: function (out, v1, v2) {\n            out[0] = v1[0] + v2[0];\n            out[1] = v1[1] + v2[1];\n            return out;\n        },\n\n        /**\n         * 向量缩放后相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} a\n         */\n        scaleAndAdd: function (out, v1, v2, a) {\n            out[0] = v1[0] + v2[0] * a;\n            out[1] = v1[1] + v2[1] * a;\n            return out;\n        },\n\n        /**\n         * 向量相减\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        sub: function (out, v1, v2) {\n            out[0] = v1[0] - v2[0];\n            out[1] = v1[1] - v2[1];\n            return out;\n        },\n\n        /**\n         * 向量长度\n         * @param {Vector2} v\n         * @return {number}\n         */\n        len: function (v) {\n            return Math.sqrt(this.lenSquare(v));\n        },\n\n        /**\n         * 向量长度平方\n         * @param {Vector2} v\n         * @return {number}\n         */\n        lenSquare: function (v) {\n            return v[0] * v[0] + v[1] * v[1];\n        },\n\n        /**\n         * 向量乘法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        mul: function (out, v1, v2) {\n            out[0] = v1[0] * v2[0];\n            out[1] = v1[1] * v2[1];\n            return out;\n        },\n\n        /**\n         * 向量除法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        div: function (out, v1, v2) {\n            out[0] = v1[0] / v2[0];\n            out[1] = v1[1] / v2[1];\n            return out;\n        },\n\n        /**\n         * 向量点乘\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        dot: function (v1, v2) {\n            return v1[0] * v2[0] + v1[1] * v2[1];\n        },\n\n        /**\n         * 向量缩放\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {number} s\n         */\n        scale: function (out, v, s) {\n            out[0] = v[0] * s;\n            out[1] = v[1] * s;\n            return out;\n        },\n\n        /**\n         * 向量归一化\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        normalize: function (out, v) {\n            var d = vector.len(v);\n            if (d === 0) {\n                out[0] = 0;\n                out[1] = 0;\n            }\n            else {\n                out[0] = v[0] / d;\n                out[1] = v[1] / d;\n            }\n            return out;\n        },\n\n        /**\n         * 计算向量间距离\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distance: function (v1, v2) {\n            return Math.sqrt(\n                (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1])\n            );\n        },\n\n        /**\n         * 向量距离平方\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distanceSquare: function (v1, v2) {\n            return (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n        },\n\n        /**\n         * 求负向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        negate: function (out, v) {\n            out[0] = -v[0];\n            out[1] = -v[1];\n            return out;\n        },\n\n        /**\n         * 插值两个点\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} t\n         */\n        lerp: function (out, v1, v2, t) {\n            out[0] = v1[0] + t * (v2[0] - v1[0]);\n            out[1] = v1[1] + t * (v2[1] - v1[1]);\n            return out;\n        },\n\n        /**\n         * 矩阵左乘向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {Vector2} m\n         */\n        applyTransform: function (out, v, m) {\n            var x = v[0];\n            var y = v[1];\n            out[0] = m[0] * x + m[2] * y + m[4];\n            out[1] = m[1] * x + m[3] * y + m[5];\n            return out;\n        },\n        /**\n         * 求两个向量最小值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        min: function (out, v1, v2) {\n            out[0] = Math.min(v1[0], v2[0]);\n            out[1] = Math.min(v1[1], v2[1]);\n            return out;\n        },\n        /**\n         * 求两个向量最大值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        max: function (out, v1, v2) {\n            out[0] = Math.max(v1[0], v2[0]);\n            out[1] = Math.max(v1[1], v2[1]);\n            return out;\n        }\n    };\n\n    vector.length = vector.len;\n    vector.lengthSquare = vector.lenSquare;\n    vector.dist = vector.distance;\n    vector.distSquare = vector.distanceSquare;\n\n    module.exports = vector;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/vector.js\n// module id = 321\n// module chunks = 0 1 2 3 4","/**\n * Path element\n * @module zrender/graphic/Path\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var zrUtil = require('../core/util');\n    var PathProxy = require('../core/PathProxy');\n    var pathContain = require('../contain/path');\n\n    var Pattern = require('./Pattern');\n    var getCanvasPattern = Pattern.prototype.getCanvasPattern;\n\n    var abs = Math.abs;\n\n    /**\n     * @alias module:zrender/graphic/Path\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function Path(opts) {\n        Displayable.call(this, opts);\n\n        /**\n         * @type {module:zrender/core/PathProxy}\n         * @readOnly\n         */\n        this.path = new PathProxy();\n    }\n\n    Path.prototype = {\n\n        constructor: Path,\n\n        type: 'path',\n\n        __dirtyPath: true,\n\n        strokeContainThreshold: 5,\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var path = this.path;\n            var hasStroke = style.hasStroke();\n            var hasFill = style.hasFill();\n            var fill = style.fill;\n            var stroke = style.stroke;\n            var hasFillGradient = hasFill && !!(fill.colorStops);\n            var hasStrokeGradient = hasStroke && !!(stroke.colorStops);\n            var hasFillPattern = hasFill && !!(fill.image);\n            var hasStrokePattern = hasStroke && !!(stroke.image);\n\n            style.bind(ctx, this, prevEl);\n            this.setTransform(ctx);\n\n            if (this.__dirty) {\n                var rect = this.getBoundingRect();\n                // Update gradient because bounding rect may changed\n                if (hasFillGradient) {\n                    this._fillGradient = style.getGradient(ctx, fill, rect);\n                }\n                if (hasStrokeGradient) {\n                    this._strokeGradient = style.getGradient(ctx, stroke, rect);\n                }\n            }\n            // Use the gradient or pattern\n            if (hasFillGradient) {\n                // PENDING If may have affect the state\n                ctx.fillStyle = this._fillGradient;\n            }\n            else if (hasFillPattern) {\n                ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n            }\n            if (hasStrokeGradient) {\n                ctx.strokeStyle = this._strokeGradient;\n            }\n            else if (hasStrokePattern) {\n                ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n            }\n\n            var lineDash = style.lineDash;\n            var lineDashOffset = style.lineDashOffset;\n\n            var ctxLineDash = !!ctx.setLineDash;\n\n            // Update path sx, sy\n            var scale = this.getGlobalScale();\n            path.setScale(scale[0], scale[1]);\n\n            // Proxy context\n            // Rebuild path in following 2 cases\n            // 1. Path is dirty\n            // 2. Path needs javascript implemented lineDash stroking.\n            //    In this case, lineDash information will not be saved in PathProxy\n            if (this.__dirtyPath || (\n                lineDash && !ctxLineDash && hasStroke\n            )) {\n                path = this.path.beginPath(ctx);\n\n                // Setting line dash before build path\n                if (lineDash && !ctxLineDash) {\n                    path.setLineDash(lineDash);\n                    path.setLineDashOffset(lineDashOffset);\n                }\n\n                this.buildPath(path, this.shape, false);\n\n                // Clear path dirty flag\n                this.__dirtyPath = false;\n            }\n            else {\n                // Replay path building\n                ctx.beginPath();\n                this.path.rebuildPath(ctx);\n            }\n\n            hasFill && path.fill(ctx);\n\n            if (lineDash && ctxLineDash) {\n                ctx.setLineDash(lineDash);\n                ctx.lineDashOffset = lineDashOffset;\n            }\n\n            hasStroke && path.stroke(ctx);\n\n            if (lineDash && ctxLineDash) {\n                // PENDING\n                // Remove lineDash\n                ctx.setLineDash([]);\n            }\n\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                // var rect = this.getBoundingRect();\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n        // Like in circle\n        buildPath: function (ctx, shapeCfg, inBundle) {},\n\n        getBoundingRect: function () {\n            var rect = this._rect;\n            var style = this.style;\n            var needsUpdateRect = !rect;\n            if (needsUpdateRect) {\n                var path = this.path;\n                if (this.__dirtyPath) {\n                    path.beginPath();\n                    this.buildPath(path, this.shape, false);\n                }\n                rect = path.getBoundingRect();\n            }\n            this._rect = rect;\n\n            if (style.hasStroke()) {\n                // Needs update rect with stroke lineWidth when\n                // 1. Element changes scale or lineWidth\n                // 2. Shape is changed\n                var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n                if (this.__dirty || needsUpdateRect) {\n                    rectWithStroke.copy(rect);\n                    // FIXME Must after updateTransform\n                    var w = style.lineWidth;\n                    // PENDING, Min line width is needed when line is horizontal or vertical\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n\n                    // Only add extra hover lineWidth when there are no fill\n                    if (!style.hasFill()) {\n                        w = Math.max(w, this.strokeContainThreshold || 4);\n                    }\n                    // Consider line width\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        rectWithStroke.width += w / lineScale;\n                        rectWithStroke.height += w / lineScale;\n                        rectWithStroke.x -= w / lineScale / 2;\n                        rectWithStroke.y -= w / lineScale / 2;\n                    }\n                }\n\n                // Return rect with stroke\n                return rectWithStroke;\n            }\n\n            return rect;\n        },\n\n        contain: function (x, y) {\n            var localPos = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            var style = this.style;\n            x = localPos[0];\n            y = localPos[1];\n\n            if (rect.contain(x, y)) {\n                var pathData = this.path.data;\n                if (style.hasStroke()) {\n                    var lineWidth = style.lineWidth;\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        // Only add extra hover lineWidth when there are no fill\n                        if (!style.hasFill()) {\n                            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n                        }\n                        if (pathContain.containStroke(\n                            pathData, lineWidth / lineScale, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                }\n                if (style.hasFill()) {\n                    return pathContain.contain(pathData, x, y);\n                }\n            }\n            return false;\n        },\n\n        /**\n         * @param  {boolean} dirtyPath\n         */\n        dirty: function (dirtyPath) {\n            if (dirtyPath == null) {\n                dirtyPath = true;\n            }\n            // Only mark dirty, not mark clean\n            if (dirtyPath) {\n                this.__dirtyPath = dirtyPath;\n                this._rect = null;\n            }\n\n            this.__dirty = true;\n\n            this.__zr && this.__zr.refresh();\n\n            // Used as a clipping path\n            if (this.__clipTarget) {\n                this.__clipTarget.dirty();\n            }\n        },\n\n        /**\n         * Alias for animate('shape')\n         * @param {boolean} loop\n         */\n        animateShape: function (loop) {\n            return this.animate('shape', loop);\n        },\n\n        // Overwrite attrKV\n        attrKV: function (key, value) {\n            // FIXME\n            if (key === 'shape') {\n                this.setShape(value);\n                this.__dirtyPath = true;\n                this._rect = null;\n            }\n            else {\n                Displayable.prototype.attrKV.call(this, key, value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setShape: function (key, value) {\n            var shape = this.shape;\n            // Path from string may not have shape\n            if (shape) {\n                if (zrUtil.isObject(key)) {\n                    for (var name in key) {\n                        if (key.hasOwnProperty(name)) {\n                            shape[name] = key[name];\n                        }\n                    }\n                }\n                else {\n                    shape[key] = value;\n                }\n                this.dirty(true);\n            }\n            return this;\n        },\n\n        getLineScale: function () {\n            var m = this.transform;\n            // Get the line scale.\n            // Determinant of `m` means how much the area is enlarged by the\n            // transformation. So its square root can be used as a scale factor\n            // for width.\n            return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10\n                ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))\n                : 1;\n        }\n    };\n\n    /**\n     * 扩展一个 Path element, 比如星形，圆等。\n     * Extend a path element\n     * @param {Object} props\n     * @param {string} props.type Path type\n     * @param {Function} props.init Initialize\n     * @param {Function} props.buildPath Overwrite buildPath method\n     * @param {Object} [props.style] Extended default style config\n     * @param {Object} [props.shape] Extended default shape config\n     */\n    Path.extend = function (defaults) {\n        var Sub = function (opts) {\n            Path.call(this, opts);\n\n            if (defaults.style) {\n                // Extend default style\n                this.style.extendFrom(defaults.style, false);\n            }\n\n            // Extend default shape\n            var defaultShape = defaults.shape;\n            if (defaultShape) {\n                this.shape = this.shape || {};\n                var thisShape = this.shape;\n                for (var name in defaultShape) {\n                    if (\n                        ! thisShape.hasOwnProperty(name)\n                        && defaultShape.hasOwnProperty(name)\n                    ) {\n                        thisShape[name] = defaultShape[name];\n                    }\n                }\n            }\n\n            defaults.init && defaults.init.call(this, opts);\n        };\n\n        zrUtil.inherits(Sub, Path);\n\n        // FIXME 不能 extend position, rotation 等引用对象\n        for (var name in defaults) {\n            // Extending prototype values and methods\n            if (name !== 'style' && name !== 'shape') {\n                Sub.prototype[name] = defaults[name];\n            }\n        }\n\n        return Sub;\n    };\n\n    zrUtil.inherits(Path, Displayable);\n\n    module.exports = Path;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Path.js\n// module id = 322\n// module chunks = 0 1 2 3 4","/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\n\n    var env = {};\n    if (typeof navigator === 'undefined') {\n        // In node\n        env = {\n            browser: {},\n            os: {},\n            node: true,\n            // Assume canvas is supported\n            canvasSupported: true\n        };\n    }\n    else {\n        env = detect(navigator.userAgent);\n    }\n\n    module.exports = env;\n\n    // Zepto.js\n    // (c) 2010-2013 Thomas Fuchs\n    // Zepto.js may be freely distributed under the MIT license.\n\n    function detect(ua) {\n        var os = {};\n        var browser = {};\n        // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n        // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n        // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n        // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n        // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n        // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n        // var touchpad = webos && ua.match(/TouchPad/);\n        // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n        // var silk = ua.match(/Silk\\/([\\d._]+)/);\n        // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n        // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n        // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n        // var playbook = ua.match(/PlayBook/);\n        // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n        var firefox = ua.match(/Firefox\\/([\\d.]+)/);\n        // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n        // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n        var ie = ua.match(/MSIE\\s([\\d.]+)/)\n            // IE 11 Trident/7.0; rv:11.0\n            || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n        var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n        var weChat = (/micromessenger/i).test(ua);\n\n        // Todo: clean this up with a better OS/browser seperation:\n        // - discern (more) between multiple browsers on android\n        // - decide if kindle fire in silk mode is android or not\n        // - Firefox on Android doesn't specify the Android version\n        // - possibly devide in os, device and browser hashes\n\n        // if (browser.webkit = !!webkit) browser.version = webkit[1];\n\n        // if (android) os.android = true, os.version = android[2];\n        // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n        // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n        // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n        // if (webos) os.webos = true, os.version = webos[2];\n        // if (touchpad) os.touchpad = true;\n        // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n        // if (bb10) os.bb10 = true, os.version = bb10[2];\n        // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n        // if (playbook) browser.playbook = true;\n        // if (kindle) os.kindle = true, os.version = kindle[1];\n        // if (silk) browser.silk = true, browser.version = silk[1];\n        // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n        // if (chrome) browser.chrome = true, browser.version = chrome[1];\n        if (firefox) {\n            browser.firefox = true;\n            browser.version = firefox[1];\n        }\n        // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n        // if (webview) browser.webview = true;\n\n        if (ie) {\n            browser.ie = true;\n            browser.version = ie[1];\n        }\n\n        if (edge) {\n            browser.edge = true;\n            browser.version = edge[1];\n        }\n\n        // It is difficult to detect WeChat in Win Phone precisely, because ua can\n        // not be set on win phone. So we do not consider Win Phone.\n        if (weChat) {\n            browser.weChat = true;\n        }\n\n        // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n        //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n        // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n        //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n        //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n        return {\n            browser: browser,\n            os: os,\n            node: false,\n            // 原生canvas支持，改极端点了\n            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n            canvasSupported : document.createElement('canvas').getContext ? true : false,\n            // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n            // works on most browsers\n            // IE10/11 does not support touch event, and MS Edge supports them but not by\n            // default, so we dont check navigator.maxTouchPoints for them here.\n            touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n            // <http://caniuse.com/#search=pointer%20event>.\n            pointerEventsSupported: 'onpointerdown' in window\n                // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n                // events currently. So we dont use that on other browsers unless tested sufficiently.\n                // Although IE 10 supports pointer event, it use old style and is different from the\n                // standard. So we exclude that. (IE 10 is hardly used on touch device)\n                && (browser.edge || (browser.ie && browser.version >= 11))\n        };\n    }\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/env.js\n// module id = 323\n// module chunks = 0 1 2 3 4","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('./number');\n    var textContain = require('zrender/lib/contain/text');\n\n    var formatUtil = {};\n    /**\n     * 每三位默认加,格式化\n     * @type {string|number} x\n     */\n    formatUtil.addCommas = function (x) {\n        if (isNaN(x)) {\n            return '-';\n        }\n        x = (x + '').split('.');\n        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,')\n               + (x.length > 1 ? ('.' + x[1]) : '');\n    };\n\n    /**\n     * @param {string} str\n     * @param {boolean} [upperCaseFirst=false]\n     * @return {string} str\n     */\n    formatUtil.toCamelCase = function (str, upperCaseFirst) {\n        str = (str || '').toLowerCase().replace(/-(.)/g, function(match, group1) {\n            return group1.toUpperCase();\n        });\n\n        if (upperCaseFirst && str) {\n            str = str.charAt(0).toUpperCase() + str.slice(1);\n        }\n\n        return str;\n    };\n\n    /**\n     * Normalize css liked array configuration\n     * e.g.\n     *  3 => [3, 3, 3, 3]\n     *  [4, 2] => [4, 2, 4, 2]\n     *  [4, 3, 2] => [4, 3, 2, 3]\n     * @param {number|Array.<number>} val\n     */\n    formatUtil.normalizeCssArray = function (val) {\n        var len = val.length;\n        if (typeof (val) === 'number') {\n            return [val, val, val, val];\n        }\n        else if (len === 2) {\n            // vertical | horizontal\n            return [val[0], val[1], val[0], val[1]];\n        }\n        else if (len === 3) {\n            // top | horizontal | bottom\n            return [val[0], val[1], val[2], val[1]];\n        }\n        return val;\n    };\n\n    var encodeHTML = formatUtil.encodeHTML = function (source) {\n        return String(source)\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;');\n    };\n\n    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\n    var wrapVar = function (varName, seriesIdx) {\n        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n    };\n\n    /**\n     * Template formatter\n     * @param {string} tpl\n     * @param {Array.<Object>|Object} paramsList\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTpl = function (tpl, paramsList, encode) {\n        if (!zrUtil.isArray(paramsList)) {\n            paramsList = [paramsList];\n        }\n        var seriesLen = paramsList.length;\n        if (!seriesLen) {\n            return '';\n        }\n\n        var $vars = paramsList[0].$vars || [];\n        for (var i = 0; i < $vars.length; i++) {\n            var alias = TPL_VAR_ALIAS[i];\n            var val = wrapVar(alias, 0);\n            tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n        }\n        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n            for (var k = 0; k < $vars.length; k++) {\n                var val = paramsList[seriesIdx][$vars[k]];\n                tpl = tpl.replace(\n                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),\n                    encode ? encodeHTML(val) : val\n                );\n            }\n        }\n\n        return tpl;\n    };\n\n\n    /**\n     * @param {string} str\n     * @return {string}\n     * @inner\n     */\n    var s2d = function (str) {\n        return str < 10 ? ('0' + str) : str;\n    };\n\n    /**\n     * ISO Date format\n     * @param {string} tpl\n     * @param {number} value\n     * @inner\n     */\n    formatUtil.formatTime = function (tpl, value) {\n        if (tpl === 'week'\n            || tpl === 'month'\n            || tpl === 'quarter'\n            || tpl === 'half-year'\n            || tpl === 'year'\n        ) {\n            tpl = 'MM-dd\\nyyyy';\n        }\n\n        var date = numberUtil.parseDate(value);\n        var y = date.getFullYear();\n        var M = date.getMonth() + 1;\n        var d = date.getDate();\n        var h = date.getHours();\n        var m = date.getMinutes();\n        var s = date.getSeconds();\n\n        tpl = tpl.replace('MM', s2d(M))\n            .toLowerCase()\n            .replace('yyyy', y)\n            .replace('yy', y % 100)\n            .replace('dd', s2d(d))\n            .replace('d', d)\n            .replace('hh', s2d(h))\n            .replace('h', h)\n            .replace('mm', s2d(m))\n            .replace('m', m)\n            .replace('ss', s2d(s))\n            .replace('s', s);\n\n        return tpl;\n    };\n\n    /**\n     * Capital first\n     * @param {string} str\n     * @return {string}\n     */\n    formatUtil.capitalFirst = function (str) {\n        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n    };\n\n    formatUtil.truncateText = textContain.truncateText;\n\n    module.exports = formatUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/format.js\n// module id = 324\n// module chunks = 0 1 2 3 4","\n\n    var formatUtil = require('./format');\n    var nubmerUtil = require('./number');\n    var Model = require('../model/Model');\n    var zrUtil = require('zrender/lib/core/util');\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var modelUtil = {};\n\n    /**\n     * If value is not array, then translate it to array.\n     * @param  {*} value\n     * @return {Array} [value] or value\n     */\n    modelUtil.normalizeToArray = function (value) {\n        return value instanceof Array\n            ? value\n            : value == null\n            ? []\n            : [value];\n    };\n\n    /**\n     * Sync default option between normal and emphasis like `position` and `show`\n     * In case some one will write code like\n     *     label: {\n     *         normal: {\n     *             show: false,\n     *             position: 'outside',\n     *             textStyle: {\n     *                 fontSize: 18\n     *             }\n     *         },\n     *         emphasis: {\n     *             show: true\n     *         }\n     *     }\n     * @param {Object} opt\n     * @param {Array.<string>} subOpts\n     */\n     modelUtil.defaultEmphasis = function (opt, subOpts) {\n        if (opt) {\n            var emphasisOpt = opt.emphasis = opt.emphasis || {};\n            var normalOpt = opt.normal = opt.normal || {};\n\n            // Default emphasis option from normal\n            each(subOpts, function (subOptName) {\n                var val = zrUtil.retrieve(emphasisOpt[subOptName], normalOpt[subOptName]);\n                if (val != null) {\n                    emphasisOpt[subOptName] = val;\n                }\n            });\n        }\n    };\n\n    modelUtil.LABEL_OPTIONS = ['position', 'offset', 'show', 'textStyle', 'distance', 'formatter'];\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method retieves value from data.\n     * @param {string|number|Date|Array|Object} dataItem\n     * @return {number|string|Date|Array.<number|string|Date>}\n     */\n    modelUtil.getDataItemValue = function (dataItem) {\n        // Performance sensitive.\n        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n    };\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method determine if dataItem has extra option besides value\n     * @param {string|number|Date|Array|Object} dataItem\n     */\n    modelUtil.isDataItemOption = function (dataItem) {\n        return isObject(dataItem)\n            && !(dataItem instanceof Array);\n            // // markLine data can be array\n            // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n    };\n\n    /**\n     * This helper method convert value in data.\n     * @param {string|number|Date} value\n     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n     */\n    modelUtil.converDataValue = function (value, dimInfo) {\n        // Performance sensitive.\n        var dimType = dimInfo && dimInfo.type;\n        if (dimType === 'ordinal') {\n            return value;\n        }\n\n        if (dimType === 'time' && !isFinite(value) && value != null && value !== '-') {\n            value = +nubmerUtil.parseDate(value);\n        }\n\n        // dimType defaults 'number'.\n        // If dimType is not ordinal and value is null or undefined or NaN or '-',\n        // parse to NaN.\n        return (value == null || value === '')\n            ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n    };\n\n    /**\n     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n     * @param {module:echarts/data/List} data\n     * @param {Object} opt\n     * @param {string} [opt.seriesIndex]\n     * @param {Object} [opt.name]\n     * @param {Object} [opt.mainType]\n     * @param {Object} [opt.subType]\n     */\n    modelUtil.createDataFormatModel = function (data, opt) {\n        var model = new Model();\n        zrUtil.mixin(model, modelUtil.dataFormatMixin);\n        model.seriesIndex = opt.seriesIndex;\n        model.name = opt.name || '';\n        model.mainType = opt.mainType;\n        model.subType = opt.subType;\n\n        model.getData = function () {\n            return data;\n        };\n        return model;\n    };\n\n    // PENDING A little ugly\n    modelUtil.dataFormatMixin = {\n        /**\n         * Get params for formatter\n         * @param {number} dataIndex\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getDataParams: function (dataIndex, dataType) {\n            var data = this.getData(dataType);\n\n            var seriesIndex = this.seriesIndex;\n            var seriesName = this.name;\n\n            var rawValue = this.getRawValue(dataIndex, dataType);\n            var rawDataIndex = data.getRawIndex(dataIndex);\n            var name = data.getName(dataIndex, true);\n            var itemOpt = data.getRawDataItem(dataIndex);\n\n            return {\n                componentType: this.mainType,\n                componentSubType: this.subType,\n                seriesType: this.mainType === 'series' ? this.subType : null,\n                seriesIndex: seriesIndex,\n                seriesName: seriesName,\n                name: name,\n                dataIndex: rawDataIndex,\n                data: itemOpt,\n                dataType: dataType,\n                value: rawValue,\n                color: data.getItemVisual(dataIndex, 'color'),\n\n                // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n                $vars: ['seriesName', 'name', 'value']\n            };\n        },\n\n        /**\n         * Format label\n         * @param {number} dataIndex\n         * @param {string} [status='normal'] 'normal' or 'emphasis'\n         * @param {string} [dataType]\n         * @param {number} [dimIndex]\n         * @return {string}\n         */\n        getFormattedLabel: function (dataIndex, status, dataType, dimIndex) {\n            status = status || 'normal';\n            var data = this.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var params = this.getDataParams(dataIndex, dataType);\n            if (dimIndex != null && (params.value instanceof Array)) {\n                params.value = params.value[dimIndex];\n            }\n\n            var formatter = itemModel.get(['label', status, 'formatter']);\n\n            if (typeof formatter === 'function') {\n                params.status = status;\n                return formatter(params);\n            }\n            else if (typeof formatter === 'string') {\n                return formatUtil.formatTpl(formatter, params);\n            }\n        },\n\n        /**\n         * Get raw value in option\n         * @param {number} idx\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getRawValue: function (idx, dataType) {\n            var data = this.getData(dataType);\n            var dataItem = data.getRawDataItem(idx);\n            if (dataItem != null) {\n                return (isObject(dataItem) && !(dataItem instanceof Array))\n                    ? dataItem.value : dataItem;\n            }\n        },\n\n        /**\n         * Should be implemented.\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         * @return {string} tooltip string\n         */\n        formatTooltip: zrUtil.noop\n    };\n\n    /**\n     * Mapping to exists for merge.\n     *\n     * @public\n     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n     * @param {Object|Array.<Object>} newCptOptions\n     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          index of which is the same as exists.\n     */\n    modelUtil.mappingToExists = function (exists, newCptOptions) {\n        // Mapping by the order by original option (but not order of\n        // new option) in merge mode. Because we should ensure\n        // some specified index (like xAxisIndex) is consistent with\n        // original option, which is easy to understand, espatially in\n        // media query. And in most case, merge option is used to\n        // update partial option but not be expected to change order.\n        newCptOptions = (newCptOptions || []).slice();\n\n        var result = zrUtil.map(exists || [], function (obj, index) {\n            return {exist: obj};\n        });\n\n        // Mapping by id or name if specified.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            // id has highest priority.\n            for (var i = 0; i < result.length; i++) {\n                if (!result[i].option // Consider name: two map to one.\n                    && cptOption.id != null\n                    && result[i].exist.id === cptOption.id + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n\n            for (var i = 0; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option // Consider name: two map to one.\n                    // Can not match when both ids exist but different.\n                    && (exist.id == null || cptOption.id == null)\n                    && cptOption.name != null\n                    && !modelUtil.isIdInner(cptOption)\n                    && !modelUtil.isIdInner(exist)\n                    && exist.name === cptOption.name + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n        });\n\n        // Otherwise mapping by index.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            var i = 0;\n            for (; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option\n                    // Existing model that already has id should be able to\n                    // mapped to (because after mapping performed model may\n                    // be assigned with a id, whish should not affect next\n                    // mapping), except those has inner id.\n                    && !modelUtil.isIdInner(exist)\n                    // Caution:\n                    // Do not overwrite id. But name can be overwritten,\n                    // because axis use name as 'show label text'.\n                    // 'exist' always has id and name and we dont\n                    // need to check it.\n                    && cptOption.id == null\n                ) {\n                    result[i].option = cptOption;\n                    break;\n                }\n            }\n\n            if (i >= result.length) {\n                result.push({option: cptOption});\n            }\n        });\n\n        return result;\n    };\n\n    /**\n     * Make id and name for mapping result (result of mappingToExists)\n     * into `keyInfo` field.\n     *\n     * @public\n     * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          which order is the same as exists.\n     * @return {Array.<Object>} The input.\n     */\n    modelUtil.makeIdAndName = function (mapResult) {\n        // We use this id to hash component models and view instances\n        // in echarts. id can be specified by user, or auto generated.\n\n        // The id generation rule ensures new view instance are able\n        // to mapped to old instance when setOption are called in\n        // no-merge mode. So we generate model id by name and plus\n        // type in view id.\n\n        // name can be duplicated among components, which is convenient\n        // to specify multi components (like series) by one name.\n\n        // Ensure that each id is distinct.\n        var idMap = {};\n\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            existCpt && (idMap[existCpt.id] = item);\n        });\n\n        each(mapResult, function (item, index) {\n            var opt = item.option;\n\n            zrUtil.assert(\n                !opt || opt.id == null || !idMap[opt.id] || idMap[opt.id] === item,\n                'id duplicates: ' + (opt && opt.id)\n            );\n\n            opt && opt.id != null && (idMap[opt.id] = item);\n            !item.keyInfo && (item.keyInfo = {});\n        });\n\n        // Make name and id.\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            var opt = item.option;\n            var keyInfo = item.keyInfo;\n\n            if (!isObject(opt)) {\n                return;\n            }\n\n            // name can be overwitten. Consider case: axis.name = '20km'.\n            // But id generated by name will not be changed, which affect\n            // only in that case: setOption with 'not merge mode' and view\n            // instance will be recreated, which can be accepted.\n            keyInfo.name = opt.name != null\n                ? opt.name + ''\n                : existCpt\n                ? existCpt.name\n                : '\\0-';\n\n            if (existCpt) {\n                keyInfo.id = existCpt.id;\n            }\n            else if (opt.id != null) {\n                keyInfo.id = opt.id + '';\n            }\n            else {\n                // Consider this situatoin:\n                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n                //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n                // Series with the same name between optionA and optionB\n                // should be mapped.\n                var idNum = 0;\n                do {\n                    keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n                }\n                while (idMap[keyInfo.id]);\n            }\n\n            idMap[keyInfo.id] = item;\n        });\n    };\n\n    /**\n     * @public\n     * @param {Object} cptOption\n     * @return {boolean}\n     */\n    modelUtil.isIdInner = function (cptOption) {\n        return isObject(cptOption)\n            && cptOption.id\n            && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n    };\n\n    /**\n     * A helper for removing duplicate items between batchA and batchB,\n     * and in themselves, and categorize by series.\n     *\n     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n     */\n    modelUtil.compressBatches = function (batchA, batchB) {\n        var mapA = {};\n        var mapB = {};\n\n        makeMap(batchA || [], mapA);\n        makeMap(batchB || [], mapB, mapA);\n\n        return [mapToArray(mapA), mapToArray(mapB)];\n\n        function makeMap(sourceBatch, map, otherMap) {\n            for (var i = 0, len = sourceBatch.length; i < len; i++) {\n                var seriesId = sourceBatch[i].seriesId;\n                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);\n                var otherDataIndices = otherMap && otherMap[seriesId];\n\n                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n                    var dataIndex = dataIndices[j];\n\n                    if (otherDataIndices && otherDataIndices[dataIndex]) {\n                        otherDataIndices[dataIndex] = null;\n                    }\n                    else {\n                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n                    }\n                }\n            }\n        }\n\n        function mapToArray(map, isData) {\n            var result = [];\n            for (var i in map) {\n                if (map.hasOwnProperty(i) && map[i] != null) {\n                    if (isData) {\n                        result.push(+i);\n                    }\n                    else {\n                        var dataIndices = mapToArray(map[i], true);\n                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});\n                    }\n                }\n            }\n            return result;\n        }\n    };\n\n    /**\n     * @param {module:echarts/data/List} data\n     * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n     *                         each of which can be Array or primary type.\n     * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n     */\n    modelUtil.queryDataIndex = function (data, payload) {\n        if (payload.dataIndexInside != null) {\n            return payload.dataIndexInside;\n        }\n        else if (payload.dataIndex != null) {\n            return zrUtil.isArray(payload.dataIndex)\n                ? zrUtil.map(payload.dataIndex, function (value) {\n                    return data.indexOfRawIndex(value);\n                })\n                : data.indexOfRawIndex(payload.dataIndex);\n        }\n        else if (payload.name != null) {\n            return zrUtil.isArray(payload.name)\n                ? zrUtil.map(payload.name, function (value) {\n                    return data.indexOfName(value);\n                })\n                : data.indexOfName(payload.name);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Global} ecModel\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex, seriesId, seriesName,\n     *            geoIndex, geoId, goeName,\n     *            bmapIndex, bmapId, bmapName,\n     *            xAxisIndex, xAxisId, xAxisName,\n     *            yAxisIndex, yAxisId, yAxisName,\n     *            gridIndex, gridId, gridName,\n     *            ... (can be extended)\n     *        }\n     *        Each properties can be number|string|Array.<number>|Array.<string>\n     *        For example, a finder could be\n     *        {\n     *            seriesIndex: 3,\n     *            geoId: ['aa', 'cc'],\n     *            gridName: ['xx', 'rr']\n     *        }\n     * @param {Object} [opt]\n     * @param {string} [opt.defaultMainType]\n     * @return {Object} result like:\n     *        {\n     *            seriesModels: [seriesModel1, seriesModel2],\n     *            seriesModel: seriesModel1, // The first model\n     *            geoModels: [geoModel1, geoModel2],\n     *            geoModel: geoModel1, // The first model\n     *            ...\n     *        }\n     */\n    modelUtil.parseFinder = function (ecModel, finder, opt) {\n        if (zrUtil.isString(finder)) {\n            var obj = {};\n            obj[finder + 'Index'] = 0;\n            finder = obj;\n        }\n\n        var defaultMainType = opt && opt.defaultMainType;\n        if (defaultMainType\n            && !has(finder, defaultMainType + 'Index')\n            && !has(finder, defaultMainType + 'Id')\n            && !has(finder, defaultMainType + 'Name')\n        ) {\n            finder[defaultMainType + 'Index'] = 0;\n        }\n\n        var result = {};\n\n        each(finder, function (value, key) {\n            var value = finder[key];\n\n            // Exclude 'dataIndex' and other illgal keys.\n            if (key === 'dataIndex' || key === 'dataIndexInside') {\n                result[key] = value;\n                return;\n            }\n\n            var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n            var mainType = parsedKey[1];\n            var queryType = parsedKey[2];\n\n            if (!mainType || !queryType) {\n                return;\n            }\n\n            var queryParam = {mainType: mainType};\n            queryParam[queryType.toLowerCase()] = value;\n            var models = ecModel.queryComponents(queryParam);\n            result[mainType + 'Models'] = models;\n            result[mainType + 'Model'] = models[0];\n        });\n\n        return result;\n    };\n\n    function has(obj, prop) {\n        return obj && obj.hasOwnProperty(prop);\n    }\n\n    module.exports = modelUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/model.js\n// module id = 325\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * @module echarts/core/BoundingRect\n */\n\n\n    var vec2 = require('./vector');\n    var matrix = require('./matrix');\n\n    var v2ApplyTransform = vec2.applyTransform;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    /**\n     * @alias module:echarts/core/BoundingRect\n     */\n    function BoundingRect(x, y, width, height) {\n\n        if (width < 0) {\n            x = x + width;\n            width = -width;\n        }\n        if (height < 0) {\n            y = y + height;\n            height = -height;\n        }\n\n        /**\n         * @type {number}\n         */\n        this.x = x;\n        /**\n         * @type {number}\n         */\n        this.y = y;\n        /**\n         * @type {number}\n         */\n        this.width = width;\n        /**\n         * @type {number}\n         */\n        this.height = height;\n    }\n\n    BoundingRect.prototype = {\n\n        constructor: BoundingRect,\n\n        /**\n         * @param {module:echarts/core/BoundingRect} other\n         */\n        union: function (other) {\n            var x = mathMin(other.x, this.x);\n            var y = mathMin(other.y, this.y);\n\n            this.width = mathMax(\n                    other.x + other.width,\n                    this.x + this.width\n                ) - x;\n            this.height = mathMax(\n                    other.y + other.height,\n                    this.y + this.height\n                ) - y;\n            this.x = x;\n            this.y = y;\n        },\n\n        /**\n         * @param {Array.<number>} m\n         * @methods\n         */\n        applyTransform: (function () {\n            var lt = [];\n            var rb = [];\n            var lb = [];\n            var rt = [];\n            return function (m) {\n                // In case usage like this\n                // el.getBoundingRect().applyTransform(el.transform)\n                // And element has no transform\n                if (!m) {\n                    return;\n                }\n                lt[0] = lb[0] = this.x;\n                lt[1] = rt[1] = this.y;\n                rb[0] = rt[0] = this.x + this.width;\n                rb[1] = lb[1] = this.y + this.height;\n\n                v2ApplyTransform(lt, lt, m);\n                v2ApplyTransform(rb, rb, m);\n                v2ApplyTransform(lb, lb, m);\n                v2ApplyTransform(rt, rt, m);\n\n                this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n                this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n                var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n                var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n                this.width = maxX - this.x;\n                this.height = maxY - this.y;\n            };\n        })(),\n\n        /**\n         * Calculate matrix of transforming from self to target rect\n         * @param  {module:zrender/core/BoundingRect} b\n         * @return {Array.<number>}\n         */\n        calculateTransform: function (b) {\n            var a = this;\n            var sx = b.width / a.width;\n            var sy = b.height / a.height;\n\n            var m = matrix.create();\n\n            // 矩阵右乘\n            matrix.translate(m, m, [-a.x, -a.y]);\n            matrix.scale(m, m, [sx, sy]);\n            matrix.translate(m, m, [b.x, b.y]);\n\n            return m;\n        },\n\n        /**\n         * @param {(module:echarts/core/BoundingRect|Object)} b\n         * @return {boolean}\n         */\n        intersect: function (b) {\n            if (!b) {\n                return false;\n            }\n\n            if (!(b instanceof BoundingRect)) {\n                // Normalize negative width/height.\n                b = BoundingRect.create(b);\n            }\n\n            var a = this;\n            var ax0 = a.x;\n            var ax1 = a.x + a.width;\n            var ay0 = a.y;\n            var ay1 = a.y + a.height;\n\n            var bx0 = b.x;\n            var bx1 = b.x + b.width;\n            var by0 = b.y;\n            var by1 = b.y + b.height;\n\n            return ! (ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n        },\n\n        contain: function (x, y) {\n            var rect = this;\n            return x >= rect.x\n                && x <= (rect.x + rect.width)\n                && y >= rect.y\n                && y <= (rect.y + rect.height);\n        },\n\n        /**\n         * @return {module:echarts/core/BoundingRect}\n         */\n        clone: function () {\n            return new BoundingRect(this.x, this.y, this.width, this.height);\n        },\n\n        /**\n         * Copy from another rect\n         */\n        copy: function (other) {\n            this.x = other.x;\n            this.y = other.y;\n            this.width = other.width;\n            this.height = other.height;\n        },\n\n        plain: function () {\n            return {\n                x: this.x,\n                y: this.y,\n                width: this.width,\n                height: this.height\n            };\n        }\n    };\n\n    /**\n     * @param {Object|module:zrender/core/BoundingRect} rect\n     * @param {number} rect.x\n     * @param {number} rect.y\n     * @param {number} rect.width\n     * @param {number} rect.height\n     * @return {module:zrender/core/BoundingRect}\n     */\n    BoundingRect.create = function (rect) {\n        return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n    };\n\n    module.exports = BoundingRect;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/BoundingRect.js\n// module id = 326\n// module chunks = 0 1 2 3 4","/**\n * @module echarts/model/Model\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazzUtil = require('../util/clazz');\n    var env = require('zrender/lib/core/env');\n\n    /**\n     * @alias module:echarts/model/Model\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} [parentModel]\n     * @param {module:echarts/model/Global} [ecModel]\n     */\n    function Model(option, parentModel, ecModel) {\n        /**\n         * @type {module:echarts/model/Model}\n         * @readOnly\n         */\n        this.parentModel = parentModel;\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        this.option = option;\n\n        // Simple optimization\n        // if (this.init) {\n        //     if (arguments.length <= 4) {\n        //         this.init(option, parentModel, ecModel, extraOpt);\n        //     }\n        //     else {\n        //         this.init.apply(this, arguments);\n        //     }\n        // }\n    }\n\n    Model.prototype = {\n\n        constructor: Model,\n\n        /**\n         * Model 的初始化函数\n         * @param {Object} option\n         */\n        init: null,\n\n        /**\n         * 从新的 Option merge\n         */\n        mergeOption: function (option) {\n            zrUtil.merge(this.option, option, true);\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        get: function (path, ignoreParent) {\n            if (path == null) {\n                return this.option;\n            }\n\n            return doGet(\n                this.option,\n                this.parsePath(path),\n                !ignoreParent && getParent(this, path)\n            );\n        },\n\n        /**\n         * @param {string} key\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        getShallow: function (key, ignoreParent) {\n            var option = this.option;\n\n            var val = option == null ? option : option[key];\n            var parentModel = !ignoreParent && getParent(this, key);\n            if (val == null && parentModel) {\n                val = parentModel.getShallow(key);\n            }\n            return val;\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {module:echarts/model/Model} [parentModel]\n         * @return {module:echarts/model/Model}\n         */\n        getModel: function (path, parentModel) {\n            var obj = path == null\n                ? this.option\n                : doGet(this.option, path = this.parsePath(path));\n\n            var thisParentModel;\n            parentModel = parentModel || (\n                (thisParentModel = getParent(this, path))\n                    && thisParentModel.getModel(path)\n            );\n\n            return new Model(obj, parentModel, this.ecModel);\n        },\n\n        /**\n         * If model has option\n         */\n        isEmpty: function () {\n            return this.option == null;\n        },\n\n        restoreData: function () {},\n\n        // Pending\n        clone: function () {\n            var Ctor = this.constructor;\n            return new Ctor(zrUtil.clone(this.option));\n        },\n\n        setReadOnly: function (properties) {\n            clazzUtil.setReadOnly(this, properties);\n        },\n\n        // If path is null/undefined, return null/undefined.\n        parsePath: function(path) {\n            if (typeof path === 'string') {\n                path = path.split('.');\n            }\n            return path;\n        },\n\n        /**\n         * @param {Function} getParentMethod\n         *        param {Array.<string>|string} path\n         *        return {module:echarts/model/Model}\n         */\n        customizeGetParent: function (getParentMethod) {\n            clazzUtil.set(this, 'getParent', getParentMethod);\n        },\n\n        isAnimationEnabled: function () {\n            if (!env.node) {\n                if (this.option.animation != null) {\n                    return !!this.option.animation;\n                }\n                else if (this.parentModel) {\n                    return this.parentModel.isAnimationEnabled();\n                }\n            }\n        }\n    };\n\n    function doGet(obj, pathArr, parentModel) {\n        for (var i = 0; i < pathArr.length; i++) {\n            // Ignore empty\n            if (!pathArr[i]) {\n                continue;\n            }\n            // obj could be number/string/... (like 0)\n            obj = (obj && typeof obj === 'object') ? obj[pathArr[i]] : null;\n            if (obj == null) {\n                break;\n            }\n        }\n        if (obj == null && parentModel) {\n            obj = parentModel.get(pathArr);\n        }\n        return obj;\n    }\n\n    function getParent(model, path) {\n        var getParentMethod = clazzUtil.get(model, 'getParent');\n        return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n    }\n\n    // Enable Model.extend.\n    clazzUtil.enableClassExtend(Model);\n\n    var mixin = zrUtil.mixin;\n    mixin(Model, require('./mixin/lineStyle'));\n    mixin(Model, require('./mixin/areaStyle'));\n    mixin(Model, require('./mixin/textStyle'));\n    mixin(Model, require('./mixin/itemStyle'));\n\n    module.exports = Model;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Model.js\n// module id = 327\n// module chunks = 0 1 2 3 4","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var clazz = {};\n\n    var TYPE_DELIMITER = '.';\n    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n    var MEMBER_PRIFIX = '\\0ec_\\0';\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name] = value;` (can be right-value)\n     * @public\n     */\n    clazz.set = function (host, name, value) {\n        return (host[MEMBER_PRIFIX + name] = value);\n    };\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name];`\n     * @public\n     */\n    clazz.get = function (host, name) {\n        return host[MEMBER_PRIFIX + name];\n    };\n\n    /**\n     * For hidden private class member.\n     * The same behavior as `host.hasOwnProperty(name);`\n     * @public\n     */\n    clazz.hasOwn = function (host, name) {\n        return host.hasOwnProperty(MEMBER_PRIFIX + name);\n    };\n\n    /**\n     * @public\n     */\n    var parseClassType = clazz.parseClassType = function (componentType) {\n        var ret = {main: '', sub: ''};\n        if (componentType) {\n            componentType = componentType.split(TYPE_DELIMITER);\n            ret.main = componentType[0] || '';\n            ret.sub = componentType[1] || '';\n        }\n        return ret;\n    };\n\n    /**\n     * @public\n     */\n    function checkClassType(componentType) {\n        zrUtil.assert(\n            /^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType),\n            'componentType \"' + componentType + '\" illegal'\n        );\n    }\n\n    /**\n     * @public\n     */\n    clazz.enableClassExtend = function (RootClass, mandatoryMethods) {\n\n        RootClass.$constructor = RootClass;\n        RootClass.extend = function (proto) {\n\n            if (__DEV__) {\n                zrUtil.each(mandatoryMethods, function (method) {\n                    if (!proto[method]) {\n                        console.warn(\n                            'Method `' + method + '` should be implemented'\n                            + (proto.type ? ' in ' + proto.type : '') + '.'\n                        );\n                    }\n                });\n            }\n\n            var superClass = this;\n            var ExtendedClass = function () {\n                if (!proto.$constructor) {\n                    superClass.apply(this, arguments);\n                }\n                else {\n                    proto.$constructor.apply(this, arguments);\n                }\n            };\n\n            zrUtil.extend(ExtendedClass.prototype, proto);\n\n            ExtendedClass.extend = this.extend;\n            ExtendedClass.superCall = superCall;\n            ExtendedClass.superApply = superApply;\n            zrUtil.inherits(ExtendedClass, this);\n            ExtendedClass.superClass = superClass;\n\n            return ExtendedClass;\n        };\n    };\n\n    // superCall should have class info, which can not be fetch from 'this'.\n    // Consider this case:\n    // class A has method f,\n    // class B inherits class A, overrides method f, f call superApply('f'),\n    // class C inherits class B, do not overrides method f,\n    // then when method of class C is called, dead loop occured.\n    function superCall(context, methodName) {\n        var args = zrUtil.slice(arguments, 2);\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    function superApply(context, methodName, args) {\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    /**\n     * @param {Object} entity\n     * @param {Object} options\n     * @param {boolean} [options.registerWhenExtend]\n     * @public\n     */\n    clazz.enableClassManagement = function (entity, options) {\n        options = options || {};\n\n        /**\n         * Component model classes\n         * key: componentType,\n         * value:\n         *     componentClass, when componentType is 'xxx'\n         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n         * @type {Object}\n         */\n        var storage = {};\n\n        entity.registerClass = function (Clazz, componentType) {\n            if (componentType) {\n                checkClassType(componentType);\n                componentType = parseClassType(componentType);\n\n                if (!componentType.sub) {\n                    if (__DEV__) {\n                        if (storage[componentType.main]) {\n                            console.warn(componentType.main + ' exists.');\n                        }\n                    }\n                    storage[componentType.main] = Clazz;\n                }\n                else if (componentType.sub !== IS_CONTAINER) {\n                    var container = makeContainer(componentType);\n                    container[componentType.sub] = Clazz;\n                }\n            }\n            return Clazz;\n        };\n\n        entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n            var Clazz = storage[componentMainType];\n\n            if (Clazz && Clazz[IS_CONTAINER]) {\n                Clazz = subType ? Clazz[subType] : null;\n            }\n\n            if (throwWhenNotFound && !Clazz) {\n                throw new Error(\n                    !subType\n                        ? componentMainType + '.' + 'type should be specified.'\n                        : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.'\n                );\n            }\n\n            return Clazz;\n        };\n\n        entity.getClassesByMainType = function (componentType) {\n            componentType = parseClassType(componentType);\n\n            var result = [];\n            var obj = storage[componentType.main];\n\n            if (obj && obj[IS_CONTAINER]) {\n                zrUtil.each(obj, function (o, type) {\n                    type !== IS_CONTAINER && result.push(o);\n                });\n            }\n            else {\n                result.push(obj);\n            }\n\n            return result;\n        };\n\n        entity.hasClass = function (componentType) {\n            // Just consider componentType.main.\n            componentType = parseClassType(componentType);\n            return !!storage[componentType.main];\n        };\n\n        /**\n         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n         */\n        entity.getAllClassMainTypes = function () {\n            var types = [];\n            zrUtil.each(storage, function (obj, type) {\n                types.push(type);\n            });\n            return types;\n        };\n\n        /**\n         * If a main type is container and has sub types\n         * @param  {string}  mainType\n         * @return {boolean}\n         */\n        entity.hasSubTypes = function (componentType) {\n            componentType = parseClassType(componentType);\n            var obj = storage[componentType.main];\n            return obj && obj[IS_CONTAINER];\n        };\n\n        entity.parseClassType = parseClassType;\n\n        function makeContainer(componentType) {\n            var container = storage[componentType.main];\n            if (!container || !container[IS_CONTAINER]) {\n                container = storage[componentType.main] = {};\n                container[IS_CONTAINER] = true;\n            }\n            return container;\n        }\n\n        if (options.registerWhenExtend) {\n            var originalExtend = entity.extend;\n            if (originalExtend) {\n                entity.extend = function (proto) {\n                    var ExtendedClass = originalExtend.call(this, proto);\n                    return entity.registerClass(ExtendedClass, proto.type);\n                };\n            }\n        }\n\n        return entity;\n    };\n\n    /**\n     * @param {string|Array.<string>} properties\n     */\n    clazz.setReadOnly = function (obj, properties) {\n        // FIXME It seems broken in IE8 simulation of IE11\n        // if (!zrUtil.isArray(properties)) {\n        //     properties = properties != null ? [properties] : [];\n        // }\n        // zrUtil.each(properties, function (prop) {\n        //     var value = obj[prop];\n\n        //     Object.defineProperty\n        //         && Object.defineProperty(obj, prop, {\n        //             value: value, writable: false\n        //         });\n        //     zrUtil.isArray(obj[prop])\n        //         && Object.freeze\n        //         && Object.freeze(obj[prop]);\n        // });\n    };\n\n    module.exports = clazz;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/clazz.js\n// module id = 328\n// module chunks = 0 1 2 3 4","/**\n * Component model\n *\n * @module echarts/model/Component\n */\n\n\n    var Model = require('./Model');\n    var zrUtil = require('zrender/lib/core/util');\n    var arrayPush = Array.prototype.push;\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n    var layout = require('../util/layout');\n\n    /**\n     * @alias module:echarts/model/Component\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {module:echarts/model/Model} ecModel\n     */\n    var ComponentModel = Model.extend({\n\n        type: 'component',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        id: '',\n\n        /**\n         * @readOnly\n         */\n        name: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        mainType: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        subType: '',\n\n        /**\n         * @readOnly\n         * @type {number}\n         */\n        componentIndex: 0,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        ecModel: null,\n\n        /**\n         * key: componentType\n         * value:  Component model list, can not be null.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @readOnly\n         */\n        dependentModels: [],\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        uid: null,\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        $constructor: function (option, parentModel, ecModel, extraOpt) {\n            Model.call(this, option, parentModel, ecModel, extraOpt);\n\n            this.uid = componentUtil.getUID('componentModel');\n        },\n\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n            this.mergeDefaultAndTheme(option, ecModel);\n        },\n\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            var themeModel = ecModel.getTheme();\n            zrUtil.merge(option, themeModel.get(this.mainType));\n            zrUtil.merge(option, this.getDefaultOption());\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (option, extraOpt) {\n            zrUtil.merge(this.option, option, true);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, option, layoutMode);\n            }\n        },\n\n        // Hooker after init or mergeOption\n        optionUpdated: function (newCptOption, isInit) {},\n\n        getDefaultOption: function () {\n            if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n                var optList = [];\n                var Class = this.constructor;\n                while (Class) {\n                    var opt = Class.prototype.defaultOption;\n                    opt && optList.push(opt);\n                    Class = Class.superClass;\n                }\n\n                var defaultOption = {};\n                for (var i = optList.length - 1; i >= 0; i--) {\n                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n                }\n                clazzUtil.set(this, '__defaultOption', defaultOption);\n            }\n            return clazzUtil.get(this, '__defaultOption');\n        },\n\n        getReferringComponents: function (mainType) {\n            return this.ecModel.queryComponents({\n                mainType: mainType,\n                index: this.get(mainType + 'Index', true),\n                id: this.get(mainType + 'Id', true)\n            });\n        }\n\n    });\n\n    // Reset ComponentModel.extend, add preConstruct.\n    // clazzUtil.enableClassExtend(\n    //     ComponentModel,\n    //     function (option, parentModel, ecModel, extraOpt) {\n    //         // Set dependentModels, componentIndex, name, id, mainType, subType.\n    //         zrUtil.extend(this, extraOpt);\n\n    //         this.uid = componentUtil.getUID('componentModel');\n\n    //         // this.setReadOnly([\n    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n    //         //     'dependentModels', 'componentIndex'\n    //         // ]);\n    //     }\n    // );\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(\n        ComponentModel, {registerWhenExtend: true}\n    );\n    componentUtil.enableSubTypeDefaulter(ComponentModel);\n\n    // Add capability of ComponentModel.topologicalTravel.\n    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\n    function getDependencies(componentType) {\n        var deps = [];\n        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n            arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n        });\n        // Ensure main type\n        return zrUtil.map(deps, function (type) {\n            return clazzUtil.parseClassType(type).main;\n        });\n    }\n\n    zrUtil.mixin(ComponentModel, require('./mixin/boxLayout'));\n\n    module.exports = ComponentModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Component.js\n// module id = 329\n// module chunks = 0 1 2 3 4","'use strict';\n// Layout helpers for each component positioning\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n    var numberUtil = require('./number');\n    var formatUtil = require('./format');\n    var parsePercent = numberUtil.parsePercent;\n    var each = zrUtil.each;\n\n    var layout = {};\n\n    var LOCATION_PARAMS = layout.LOCATION_PARAMS = [\n        'left', 'right', 'top', 'bottom', 'width', 'height'\n    ];\n\n    function boxLayout(orient, group, gap, maxWidth, maxHeight) {\n        var x = 0;\n        var y = 0;\n        if (maxWidth == null) {\n            maxWidth = Infinity;\n        }\n        if (maxHeight == null) {\n            maxHeight = Infinity;\n        }\n        var currentLineMaxSize = 0;\n        group.eachChild(function (child, idx) {\n            var position = child.position;\n            var rect = child.getBoundingRect();\n            var nextChild = group.childAt(idx + 1);\n            var nextChildRect = nextChild && nextChild.getBoundingRect();\n            var nextX;\n            var nextY;\n            if (orient === 'horizontal') {\n                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);\n                nextX = x + moveX;\n                // Wrap when width exceeds maxWidth or meet a `newline` group\n                if (nextX > maxWidth || child.newline) {\n                    x = 0;\n                    nextX = moveX;\n                    y += currentLineMaxSize + gap;\n                    currentLineMaxSize = rect.height;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n                }\n            }\n            else {\n                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);\n                nextY = y + moveY;\n                // Wrap when width exceeds maxHeight or meet a `newline` group\n                if (nextY > maxHeight || child.newline) {\n                    x += currentLineMaxSize + gap;\n                    y = 0;\n                    nextY = moveY;\n                    currentLineMaxSize = rect.width;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n                }\n            }\n\n            if (child.newline) {\n                return;\n            }\n\n            position[0] = x;\n            position[1] = y;\n\n            orient === 'horizontal'\n                ? (x = nextX + gap)\n                : (y = nextY + gap);\n        });\n    }\n\n    /**\n     * VBox or HBox layouting\n     * @param {string} orient\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.box = boxLayout;\n\n    /**\n     * VBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.vbox = zrUtil.curry(boxLayout, 'vertical');\n\n    /**\n     * HBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');\n\n    /**\n     * If x or x2 is not specified or 'center' 'left' 'right',\n     * the width would be as long as possible.\n     * If y or y2 is not specified or 'middle' 'top' 'bottom',\n     * the height would be as long as possible.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.x]\n     * @param {number|string} [positionInfo.y]\n     * @param {number|string} [positionInfo.x2]\n     * @param {number|string} [positionInfo.y2]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @return {Object} {width, height}\n     */\n    layout.getAvailableSize = function (positionInfo, containerRect, margin) {\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var x = parsePercent(positionInfo.x, containerWidth);\n        var y = parsePercent(positionInfo.y, containerHeight);\n        var x2 = parsePercent(positionInfo.x2, containerWidth);\n        var y2 = parsePercent(positionInfo.y2, containerHeight);\n\n        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        return {\n            width: Math.max(x2 - x - margin[1] - margin[3], 0),\n            height: Math.max(y2 - y - margin[0] - margin[2], 0)\n        };\n    };\n\n    /**\n     * Parse position info.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width]\n     * @param {number|string} [positionInfo.height]\n     * @param {number|string} [positionInfo.aspect] Aspect is width / height\n     * @param {Object} containerRect\n     * @param {string|number} [margin]\n     *\n     * @return {module:zrender/core/BoundingRect}\n     */\n    layout.getLayoutRect = function (\n        positionInfo, containerRect, margin\n    ) {\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var left = parsePercent(positionInfo.left, containerWidth);\n        var top = parsePercent(positionInfo.top, containerHeight);\n        var right = parsePercent(positionInfo.right, containerWidth);\n        var bottom = parsePercent(positionInfo.bottom, containerHeight);\n        var width = parsePercent(positionInfo.width, containerWidth);\n        var height = parsePercent(positionInfo.height, containerHeight);\n\n        var verticalMargin = margin[2] + margin[0];\n        var horizontalMargin = margin[1] + margin[3];\n        var aspect = positionInfo.aspect;\n\n        // If width is not specified, calculate width from left and right\n        if (isNaN(width)) {\n            width = containerWidth - right - horizontalMargin - left;\n        }\n        if (isNaN(height)) {\n            height = containerHeight - bottom - verticalMargin - top;\n        }\n\n        // If width and height are not given\n        // 1. Graph should not exceeds the container\n        // 2. Aspect must be keeped\n        // 3. Graph should take the space as more as possible\n        if (isNaN(width) && isNaN(height)) {\n            if (aspect > containerWidth / containerHeight) {\n                width = containerWidth * 0.8;\n            }\n            else {\n                height = containerHeight * 0.8;\n            }\n        }\n\n        if (aspect != null) {\n            // Calculate width or height with given aspect\n            if (isNaN(width)) {\n                width = aspect * height;\n            }\n            if (isNaN(height)) {\n                height = width / aspect;\n            }\n        }\n\n        // If left is not specified, calculate left from right and width\n        if (isNaN(left)) {\n            left = containerWidth - right - width - horizontalMargin;\n        }\n        if (isNaN(top)) {\n            top = containerHeight - bottom - height - verticalMargin;\n        }\n\n        // Align left and top\n        switch (positionInfo.left || positionInfo.right) {\n            case 'center':\n                left = containerWidth / 2 - width / 2 - margin[3];\n                break;\n            case 'right':\n                left = containerWidth - width - horizontalMargin;\n                break;\n        }\n        switch (positionInfo.top || positionInfo.bottom) {\n            case 'middle':\n            case 'center':\n                top = containerHeight / 2 - height / 2 - margin[0];\n                break;\n            case 'bottom':\n                top = containerHeight - height - verticalMargin;\n                break;\n        }\n        // If something is wrong and left, top, width, height are calculated as NaN\n        left = left || 0;\n        top = top || 0;\n        if (isNaN(width)) {\n            // Width may be NaN if only one value is given except width\n            width = containerWidth - left - (right || 0);\n        }\n        if (isNaN(height)) {\n            // Height may be NaN if only one value is given except height\n            height = containerHeight - top - (bottom || 0);\n        }\n\n        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n        rect.margin = margin;\n        return rect;\n    };\n\n\n    /**\n     * Position a zr element in viewport\n     *  Group position is specified by either\n     *  {left, top}, {right, bottom}\n     *  If all properties exists, right and bottom will be igonred.\n     *\n     * Logic:\n     *     1. Scale (against origin point in parent coord)\n     *     2. Rotate (against origin point in parent coord)\n     *     3. Traslate (with el.position by this method)\n     * So this method only fixes the last step 'Traslate', which does not affect\n     * scaling and rotating.\n     *\n     * If be called repeatly with the same input el, the same result will be gotten.\n     *\n     * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @param {Object} [opt]\n     * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n     * @param {Array.<number>} [opt.boundingMode='all']\n     *        Specify how to calculate boundingRect when locating.\n     *        'all': Position the boundingRect that is transformed and uioned\n     *               both itself and its descendants.\n     *               This mode simplies confine the elements in the bounding\n     *               of their container (e.g., using 'right: 0').\n     *        'raw': Position the boundingRect that is not transformed and only itself.\n     *               This mode is useful when you want a element can overflow its\n     *               container. (Consider a rotated circle needs to be located in a corner.)\n     *               In this mode positionInfo.width/height can only be number.\n     */\n    layout.positionElement = function (el, positionInfo, containerRect, margin, opt) {\n        var h = !opt || !opt.hv || opt.hv[0];\n        var v = !opt || !opt.hv || opt.hv[1];\n        var boundingMode = opt && opt.boundingMode || 'all';\n\n        if (!h && !v) {\n            return;\n        }\n\n        var rect;\n        if (boundingMode === 'raw') {\n            rect = el.type === 'group'\n                ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0)\n                : el.getBoundingRect();\n        }\n        else {\n            rect = el.getBoundingRect();\n            if (el.needLocalTransform()) {\n                var transform = el.getLocalTransform();\n                // Notice: raw rect may be inner object of el,\n                // which should not be modified.\n                rect = rect.clone();\n                rect.applyTransform(transform);\n            }\n        }\n\n        positionInfo = layout.getLayoutRect(\n            zrUtil.defaults(\n                {width: rect.width, height: rect.height},\n                positionInfo\n            ),\n            containerRect,\n            margin\n        );\n\n        // Because 'tranlate' is the last step in transform\n        // (see zrender/core/Transformable#getLocalTransfrom),\n        // we can just only modify el.position to get final result.\n        var elPos = el.position;\n        var dx = h ? positionInfo.x - rect.x : 0;\n        var dy = v ? positionInfo.y - rect.y : 0;\n\n        el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n    };\n\n    /**\n     * Consider Case:\n     * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n     * through setOption or media query, using normal zrUtil.merge will cause\n     * {right: 0} does not take effect.\n     *\n     * @example\n     * ComponentModel.extend({\n     *     init: function () {\n     *         ...\n     *         var inputPositionParams = layout.getLayoutParams(option);\n     *         this.mergeOption(inputPositionParams);\n     *     },\n     *     mergeOption: function (newOption) {\n     *         newOption && zrUtil.merge(thisOption, newOption, true);\n     *         layout.mergeLayoutParam(thisOption, newOption);\n     *     }\n     * });\n     *\n     * @param {Object} targetOption\n     * @param {Object} newOption\n     * @param {Object|string} [opt]\n     * @param {boolean} [opt.ignoreSize=false] Some component must has width and height.\n     */\n    layout.mergeLayoutParam = function (targetOption, newOption, opt) {\n        !zrUtil.isObject(opt) && (opt = {});\n        var hNames = ['width', 'left', 'right']; // Order by priority.\n        var vNames = ['height', 'top', 'bottom']; // Order by priority.\n        var hResult = merge(hNames);\n        var vResult = merge(vNames);\n\n        copy(hNames, targetOption, hResult);\n        copy(vNames, targetOption, vResult);\n\n        function merge(names) {\n            var newParams = {};\n            var newValueCount = 0;\n            var merged = {};\n            var mergedValueCount = 0;\n            var enoughParamNumber = opt.ignoreSize ? 1 : 2;\n\n            each(names, function (name) {\n                merged[name] = targetOption[name];\n            });\n            each(names, function (name) {\n                // Consider case: newOption.width is null, which is\n                // set by user for removing width setting.\n                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n                hasValue(newParams, name) && newValueCount++;\n                hasValue(merged, name) && mergedValueCount++;\n            });\n\n            // Case: newOption: {width: ..., right: ...},\n            // or targetOption: {right: ...} and newOption: {width: ...},\n            // There is no conflict when merged only has params count\n            // little than enoughParamNumber.\n            if (mergedValueCount === enoughParamNumber || !newValueCount) {\n                return merged;\n            }\n            // Case: newOption: {width: ..., right: ...},\n            // Than we can make sure user only want those two, and ignore\n            // all origin params in targetOption.\n            else if (newValueCount >= enoughParamNumber) {\n                return newParams;\n            }\n            else {\n                // Chose another param from targetOption by priority.\n                // When 'ignoreSize', enoughParamNumber is 1 and those will not happen.\n                for (var i = 0; i < names.length; i++) {\n                    var name = names[i];\n                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n                        newParams[name] = targetOption[name];\n                        break;\n                    }\n                }\n                return newParams;\n            }\n        }\n\n        function hasProp(obj, name) {\n            return obj.hasOwnProperty(name);\n        }\n\n        function hasValue(obj, name) {\n            return obj[name] != null && obj[name] !== 'auto';\n        }\n\n        function copy(names, target, source) {\n            each(names, function (name) {\n                target[name] = source[name];\n            });\n        }\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.getLayoutParams = function (source) {\n        return layout.copyLayoutParams({}, source);\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.copyLayoutParams = function (target, source) {\n        source && target && each(LOCATION_PARAMS, function (name) {\n            source.hasOwnProperty(name) && (target[name] = source[name]);\n        });\n        return target;\n    };\n\n    module.exports = layout;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/layout.js\n// module id = 330\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var vec2 = require('./vector');\n    var v2Create = vec2.create;\n    var v2DistSquare = vec2.distSquare;\n    var mathPow = Math.pow;\n    var mathSqrt = Math.sqrt;\n\n    var EPSILON = 1e-8;\n    var EPSILON_NUMERIC = 1e-4;\n\n    var THREE_SQRT = mathSqrt(3);\n    var ONE_THIRD = 1 / 3;\n\n    // 临时变量\n    var _v0 = v2Create();\n    var _v1 = v2Create();\n    var _v2 = v2Create();\n    // var _v3 = vec2.create();\n\n    function isAroundZero(val) {\n        return val > -EPSILON && val < EPSILON;\n    }\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n    /**\n     * 计算三次贝塞尔值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return onet * onet * (onet * p0 + 3 * t * p1)\n             + t * t * (t * p3 + 3 * onet * p2);\n    }\n\n    /**\n     * 计算三次贝塞尔导数值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicDerivativeAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return 3 * (\n            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet\n            + (p3 - p2) * t * t\n        );\n    }\n\n    /**\n     * 计算三次贝塞尔方程根，使用盛金公式\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} val\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function cubicRootAt(p0, p1, p2, p3, val, roots) {\n        // Evaluate roots of cubic functions\n        var a = p3 + 3 * (p1 - p2) - p0;\n        var b = 3 * (p2 - p1 * 2 + p0);\n        var c = 3 * (p1  - p0);\n        var d = p0 - val;\n\n        var A = b * b - 3 * a * c;\n        var B = b * c - 9 * a * d;\n        var C = c * c - 3 * b * d;\n\n        var n = 0;\n\n        if (isAroundZero(A) && isAroundZero(B)) {\n            if (isAroundZero(b)) {\n                roots[0] = 0;\n            }\n            else {\n                var t1 = -c / b;  //t1, t2, t3, b is not zero\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = B * B - 4 * A * C;\n\n            if (isAroundZero(disc)) {\n                var K = B / A;\n                var t1 = -b / a + K;  // t1, a is not zero\n                var t2 = -K / 2;  // t2, t3\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n                var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n                if (Y1 < 0) {\n                    Y1 = -mathPow(-Y1, ONE_THIRD);\n                }\n                else {\n                    Y1 = mathPow(Y1, ONE_THIRD);\n                }\n                if (Y2 < 0) {\n                    Y2 = -mathPow(-Y2, ONE_THIRD);\n                }\n                else {\n                    Y2 = mathPow(Y2, ONE_THIRD);\n                }\n                var t1 = (-b - (Y1 + Y2)) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else {\n                var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n                var theta = Math.acos(T) / 3;\n                var ASqrt = mathSqrt(A);\n                var tmp = Math.cos(theta);\n\n                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n                if (t3 >= 0 && t3 <= 1) {\n                    roots[n++] = t3;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算三次贝塞尔方程极限值的位置\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {Array.<number>} extrema\n     * @return {number} 有效数目\n     */\n    function cubicExtrema(p0, p1, p2, p3, extrema) {\n        var b = 6 * p2 - 12 * p1 + 6 * p0;\n        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n        var c = 3 * p1 - 3 * p0;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <=1) {\n                    extrema[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                extrema[0] = -b / (2 * a);\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    extrema[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    extrema[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 细分三次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function cubicSubdivide(p0, p1, p2, p3, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p23 = (p3 - p2) * t + p2;\n\n        var p012 = (p12 - p01) * t + p01;\n        var p123 = (p23 - p12) * t + p12;\n\n        var p0123 = (p123 - p012) * t + p012;\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n        out[3] = p0123;\n        // Seg1\n        out[4] = p0123;\n        out[5] = p123;\n        out[6] = p23;\n        out[7] = p3;\n    }\n\n    /**\n     * 投射点到三次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} [out] 投射点\n     * @return {number}\n     */\n    function cubicProjectPoint(\n        x0, y0, x1, y1, x2, y2, x3, y3,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n        var prev;\n        var next;\n        var d1;\n        var d2;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n            _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n            d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            prev = t - interval;\n            next = t + interval;\n            // t - interval\n            _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n            _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n\n            d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = cubicAt(x0, x1, x2, x3, next);\n                _v2[1] = cubicAt(y0, y1, y2, y3, next);\n                d2 = v2DistSquare(_v2, _v0);\n\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = cubicAt(x0, x1, x2, x3, t);\n            out[1] = cubicAt(y0, y1, y2, y3, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    /**\n     * 计算二次方贝塞尔值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticAt(p0, p1, p2, t) {\n        var onet = 1 - t;\n        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n    }\n\n    /**\n     * 计算二次方贝塞尔导数值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticDerivativeAt(p0, p1, p2, t) {\n        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n    }\n\n    /**\n     * 计算二次方贝塞尔方程根\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function quadraticRootAt(p0, p1, p2, val, roots) {\n        var a = p0 - 2 * p1 + p2;\n        var b = 2 * (p1 - p0);\n        var c = p0 - val;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                var t1 = -b / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算二次贝塞尔方程极限值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @return {number}\n     */\n    function quadraticExtremum(p0, p1, p2) {\n        var divider = p0 + p2 - 2 * p1;\n        if (divider === 0) {\n            // p1 is center of p0 and p2\n            return 0.5;\n        }\n        else {\n            return (p0 - p1) / divider;\n        }\n    }\n\n    /**\n     * 细分二次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function quadraticSubdivide(p0, p1, p2, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p012 = (p12 - p01) * t + p01;\n\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n\n        // Seg1\n        out[3] = p012;\n        out[4] = p12;\n        out[5] = p2;\n    }\n\n    /**\n     * 投射点到二次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} out 投射点\n     * @return {number}\n     */\n    function quadraticProjectPoint(\n        x0, y0, x1, y1, x2, y2,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = quadraticAt(x0, x1, x2, _t);\n            _v1[1] = quadraticAt(y0, y1, y2, _t);\n            var d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            var prev = t - interval;\n            var next = t + interval;\n            // t - interval\n            _v1[0] = quadraticAt(x0, x1, x2, prev);\n            _v1[1] = quadraticAt(y0, y1, y2, prev);\n\n            var d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = quadraticAt(x0, x1, x2, next);\n                _v2[1] = quadraticAt(y0, y1, y2, next);\n                var d2 = v2DistSquare(_v2, _v0);\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = quadraticAt(x0, x1, x2, t);\n            out[1] = quadraticAt(y0, y1, y2, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    module.exports = {\n\n        cubicAt: cubicAt,\n\n        cubicDerivativeAt: cubicDerivativeAt,\n\n        cubicRootAt: cubicRootAt,\n\n        cubicExtrema: cubicExtrema,\n\n        cubicSubdivide: cubicSubdivide,\n\n        cubicProjectPoint: cubicProjectPoint,\n\n        quadraticAt: quadraticAt,\n\n        quadraticDerivativeAt: quadraticDerivativeAt,\n\n        quadraticRootAt: quadraticRootAt,\n\n        quadraticExtremum: quadraticExtremum,\n\n        quadraticSubdivide: quadraticSubdivide,\n\n        quadraticProjectPoint: quadraticProjectPoint\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/curve.js\n// module id = 331\n// module chunks = 0 1 2 3 4","/**\n * @module zrender/tool/color\n */\n\n\n    var kCSSColorTable = {\n        'transparent': [0,0,0,0], 'aliceblue': [240,248,255,1],\n        'antiquewhite': [250,235,215,1], 'aqua': [0,255,255,1],\n        'aquamarine': [127,255,212,1], 'azure': [240,255,255,1],\n        'beige': [245,245,220,1], 'bisque': [255,228,196,1],\n        'black': [0,0,0,1], 'blanchedalmond': [255,235,205,1],\n        'blue': [0,0,255,1], 'blueviolet': [138,43,226,1],\n        'brown': [165,42,42,1], 'burlywood': [222,184,135,1],\n        'cadetblue': [95,158,160,1], 'chartreuse': [127,255,0,1],\n        'chocolate': [210,105,30,1], 'coral': [255,127,80,1],\n        'cornflowerblue': [100,149,237,1], 'cornsilk': [255,248,220,1],\n        'crimson': [220,20,60,1], 'cyan': [0,255,255,1],\n        'darkblue': [0,0,139,1], 'darkcyan': [0,139,139,1],\n        'darkgoldenrod': [184,134,11,1], 'darkgray': [169,169,169,1],\n        'darkgreen': [0,100,0,1], 'darkgrey': [169,169,169,1],\n        'darkkhaki': [189,183,107,1], 'darkmagenta': [139,0,139,1],\n        'darkolivegreen': [85,107,47,1], 'darkorange': [255,140,0,1],\n        'darkorchid': [153,50,204,1], 'darkred': [139,0,0,1],\n        'darksalmon': [233,150,122,1], 'darkseagreen': [143,188,143,1],\n        'darkslateblue': [72,61,139,1], 'darkslategray': [47,79,79,1],\n        'darkslategrey': [47,79,79,1], 'darkturquoise': [0,206,209,1],\n        'darkviolet': [148,0,211,1], 'deeppink': [255,20,147,1],\n        'deepskyblue': [0,191,255,1], 'dimgray': [105,105,105,1],\n        'dimgrey': [105,105,105,1], 'dodgerblue': [30,144,255,1],\n        'firebrick': [178,34,34,1], 'floralwhite': [255,250,240,1],\n        'forestgreen': [34,139,34,1], 'fuchsia': [255,0,255,1],\n        'gainsboro': [220,220,220,1], 'ghostwhite': [248,248,255,1],\n        'gold': [255,215,0,1], 'goldenrod': [218,165,32,1],\n        'gray': [128,128,128,1], 'green': [0,128,0,1],\n        'greenyellow': [173,255,47,1], 'grey': [128,128,128,1],\n        'honeydew': [240,255,240,1], 'hotpink': [255,105,180,1],\n        'indianred': [205,92,92,1], 'indigo': [75,0,130,1],\n        'ivory': [255,255,240,1], 'khaki': [240,230,140,1],\n        'lavender': [230,230,250,1], 'lavenderblush': [255,240,245,1],\n        'lawngreen': [124,252,0,1], 'lemonchiffon': [255,250,205,1],\n        'lightblue': [173,216,230,1], 'lightcoral': [240,128,128,1],\n        'lightcyan': [224,255,255,1], 'lightgoldenrodyellow': [250,250,210,1],\n        'lightgray': [211,211,211,1], 'lightgreen': [144,238,144,1],\n        'lightgrey': [211,211,211,1], 'lightpink': [255,182,193,1],\n        'lightsalmon': [255,160,122,1], 'lightseagreen': [32,178,170,1],\n        'lightskyblue': [135,206,250,1], 'lightslategray': [119,136,153,1],\n        'lightslategrey': [119,136,153,1], 'lightsteelblue': [176,196,222,1],\n        'lightyellow': [255,255,224,1], 'lime': [0,255,0,1],\n        'limegreen': [50,205,50,1], 'linen': [250,240,230,1],\n        'magenta': [255,0,255,1], 'maroon': [128,0,0,1],\n        'mediumaquamarine': [102,205,170,1], 'mediumblue': [0,0,205,1],\n        'mediumorchid': [186,85,211,1], 'mediumpurple': [147,112,219,1],\n        'mediumseagreen': [60,179,113,1], 'mediumslateblue': [123,104,238,1],\n        'mediumspringgreen': [0,250,154,1], 'mediumturquoise': [72,209,204,1],\n        'mediumvioletred': [199,21,133,1], 'midnightblue': [25,25,112,1],\n        'mintcream': [245,255,250,1], 'mistyrose': [255,228,225,1],\n        'moccasin': [255,228,181,1], 'navajowhite': [255,222,173,1],\n        'navy': [0,0,128,1], 'oldlace': [253,245,230,1],\n        'olive': [128,128,0,1], 'olivedrab': [107,142,35,1],\n        'orange': [255,165,0,1], 'orangered': [255,69,0,1],\n        'orchid': [218,112,214,1], 'palegoldenrod': [238,232,170,1],\n        'palegreen': [152,251,152,1], 'paleturquoise': [175,238,238,1],\n        'palevioletred': [219,112,147,1], 'papayawhip': [255,239,213,1],\n        'peachpuff': [255,218,185,1], 'peru': [205,133,63,1],\n        'pink': [255,192,203,1], 'plum': [221,160,221,1],\n        'powderblue': [176,224,230,1], 'purple': [128,0,128,1],\n        'red': [255,0,0,1], 'rosybrown': [188,143,143,1],\n        'royalblue': [65,105,225,1], 'saddlebrown': [139,69,19,1],\n        'salmon': [250,128,114,1], 'sandybrown': [244,164,96,1],\n        'seagreen': [46,139,87,1], 'seashell': [255,245,238,1],\n        'sienna': [160,82,45,1], 'silver': [192,192,192,1],\n        'skyblue': [135,206,235,1], 'slateblue': [106,90,205,1],\n        'slategray': [112,128,144,1], 'slategrey': [112,128,144,1],\n        'snow': [255,250,250,1], 'springgreen': [0,255,127,1],\n        'steelblue': [70,130,180,1], 'tan': [210,180,140,1],\n        'teal': [0,128,128,1], 'thistle': [216,191,216,1],\n        'tomato': [255,99,71,1], 'turquoise': [64,224,208,1],\n        'violet': [238,130,238,1], 'wheat': [245,222,179,1],\n        'white': [255,255,255,1], 'whitesmoke': [245,245,245,1],\n        'yellow': [255,255,0,1], 'yellowgreen': [154,205,50,1]\n    };\n\n    function clampCssByte(i) {  // Clamp to integer 0 .. 255.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 255 ? 255 : i;\n    }\n\n    function clampCssAngle(i) {  // Clamp to integer 0 .. 360.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 360 ? 360 : i;\n    }\n\n    function clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.\n        return f < 0 ? 0 : f > 1 ? 1 : f;\n    }\n\n    function parseCssInt(str) {  // int or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssByte(parseFloat(str) / 100 * 255);\n        }\n        return clampCssByte(parseInt(str, 10));\n    }\n\n    function parseCssFloat(str) {  // float or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssFloat(parseFloat(str) / 100);\n        }\n        return clampCssFloat(parseFloat(str));\n    }\n\n    function cssHueToRgb(m1, m2, h) {\n        if (h < 0) {\n            h += 1;\n        }\n        else if (h > 1) {\n            h -= 1;\n        }\n\n        if (h * 6 < 1) {\n            return m1 + (m2 - m1) * h * 6;\n        }\n        if (h * 2 < 1) {\n            return m2;\n        }\n        if (h * 3 < 2) {\n            return m1 + (m2 - m1) * (2/3 - h) * 6;\n        }\n        return m1;\n    }\n\n    function lerp(a, b, p) {\n        return a + (b - a) * p;\n    }\n\n    /**\n     * @param {string} colorStr\n     * @return {Array.<number>}\n     * @memberOf module:zrender/util/color\n     */\n    function parse(colorStr) {\n        if (!colorStr) {\n            return;\n        }\n        // colorStr may be not string\n        colorStr = colorStr + '';\n        // Remove all whitespace, not compliant, but should just be more accepting.\n        var str = colorStr.replace(/ /g, '').toLowerCase();\n\n        // Color keywords (and transparent) lookup.\n        if (str in kCSSColorTable) {\n            return kCSSColorTable[str].slice();  // dup.\n        }\n\n        // #abc and #abc123 syntax.\n        if (str.charAt(0) === '#') {\n            if (str.length === 4) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xfff)) {\n                    return;  // Covers NaN.\n                }\n                return [\n                    ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n                    (iv & 0xf0) | ((iv & 0xf0) >> 4),\n                    (iv & 0xf) | ((iv & 0xf) << 4),\n                    1\n                ];\n            }\n            else if (str.length === 7) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xffffff)) {\n                    return;  // Covers NaN.\n                }\n                return [\n                    (iv & 0xff0000) >> 16,\n                    (iv & 0xff00) >> 8,\n                    iv & 0xff,\n                    1\n                ];\n            }\n\n            return;\n        }\n        var op = str.indexOf('('), ep = str.indexOf(')');\n        if (op !== -1 && ep + 1 === str.length) {\n            var fname = str.substr(0, op);\n            var params = str.substr(op + 1, ep - (op + 1)).split(',');\n            var alpha = 1;  // To allow case fallthrough.\n            switch (fname) {\n                case 'rgba':\n                    if (params.length !== 4) {\n                        return;\n                    }\n                    alpha = parseCssFloat(params.pop()); // jshint ignore:line\n                // Fall through.\n                case 'rgb':\n                    if (params.length !== 3) {\n                        return;\n                    }\n                    return [\n                        parseCssInt(params[0]),\n                        parseCssInt(params[1]),\n                        parseCssInt(params[2]),\n                        alpha\n                    ];\n                case 'hsla':\n                    if (params.length !== 4) {\n                        return;\n                    }\n                    params[3] = parseCssFloat(params[3]);\n                    return hsla2rgba(params);\n                case 'hsl':\n                    if (params.length !== 3) {\n                        return;\n                    }\n                    return hsla2rgba(params);\n                default:\n                    return;\n            }\n        }\n\n        return;\n    }\n\n    /**\n     * @param {Array.<number>} hsla\n     * @return {Array.<number>} rgba\n     */\n    function hsla2rgba(hsla) {\n        var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parseCssFloat(hsla[1]);\n        var l = parseCssFloat(hsla[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n\n        var rgba = [\n            clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255)\n        ];\n\n        if (hsla.length === 4) {\n            rgba[3] = hsla[3];\n        }\n\n        return rgba;\n    }\n\n    /**\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} hsla\n     */\n    function rgba2hsla(rgba) {\n        if (!rgba) {\n            return;\n        }\n\n        // RGB from 0 to 255\n        var R = rgba[0] / 255;\n        var G = rgba[1] / 255;\n        var B = rgba[2] / 255;\n\n        var vMin = Math.min(R, G, B); // Min. value of RGB\n        var vMax = Math.max(R, G, B); // Max. value of RGB\n        var delta = vMax - vMin; // Delta RGB value\n\n        var L = (vMax + vMin) / 2;\n        var H;\n        var S;\n        // HSL results from 0 to 1\n        if (delta === 0) {\n            H = 0;\n            S = 0;\n        }\n        else {\n            if (L < 0.5) {\n                S = delta / (vMax + vMin);\n            }\n            else {\n                S = delta / (2 - vMax - vMin);\n            }\n\n            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\n            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\n            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\n\n            if (R === vMax) {\n                H = deltaB - deltaG;\n            }\n            else if (G === vMax) {\n                H = (1 / 3) + deltaR - deltaB;\n            }\n            else if (B === vMax) {\n                H = (2 / 3) + deltaG - deltaR;\n            }\n\n            if (H < 0) {\n                H += 1;\n            }\n\n            if (H > 1) {\n                H -= 1;\n            }\n        }\n\n        var hsla = [H * 360, S, L];\n\n        if (rgba[3] != null) {\n            hsla.push(rgba[3]);\n        }\n\n        return hsla;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number} level\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function lift(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            for (var i = 0; i < 3; i++) {\n                if (level < 0) {\n                    colorArr[i] = colorArr[i] * (1 - level) | 0;\n                }\n                else {\n                    colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;\n                }\n            }\n            return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function toHex(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);\n        }\n    }\n\n    /**\n     * Map value to color. Faster than mapToColor methods because color is represented by rgba array\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<Array.<number>>} colors List of rgba color array\n     * @param {Array.<number>} [out] Mapped gba color array\n     * @return {Array.<number>}\n     */\n    function fastMapToColor(normalizedValue, colors, out) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n        out = out || [0, 0, 0, 0];\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = colors[leftIndex];\n        var rightColor = colors[rightIndex];\n        var dv = value - leftIndex;\n        out[0] = clampCssByte(lerp(leftColor[0], rightColor[0], dv));\n        out[1] = clampCssByte(lerp(leftColor[1], rightColor[1], dv));\n        out[2] = clampCssByte(lerp(leftColor[2], rightColor[2], dv));\n        out[3] = clampCssByte(lerp(leftColor[3], rightColor[3], dv));\n        return out;\n    }\n    /**\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<string>} colors Color list.\n     * @param {boolean=} fullOutput Default false.\n     * @return {(string|Object)} Result color. If fullOutput,\n     *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n     * @memberOf module:zrender/util/color\n     */\n    function mapToColor(normalizedValue, colors, fullOutput) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = parse(colors[leftIndex]);\n        var rightColor = parse(colors[rightIndex]);\n        var dv = value - leftIndex;\n\n        var color = stringify(\n            [\n                clampCssByte(lerp(leftColor[0], rightColor[0], dv)),\n                clampCssByte(lerp(leftColor[1], rightColor[1], dv)),\n                clampCssByte(lerp(leftColor[2], rightColor[2], dv)),\n                clampCssFloat(lerp(leftColor[3], rightColor[3], dv))\n            ],\n            'rgba'\n        );\n\n        return fullOutput\n            ? {\n                color: color,\n                leftIndex: leftIndex,\n                rightIndex: rightIndex,\n                value: value\n            }\n            : color;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} h 0 ~ 360, ignore when null.\n     * @param {number=} s 0 ~ 1, ignore when null.\n     * @param {number=} l 0 ~ 1, ignore when null.\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyHSL(color, h, s, l) {\n        color = parse(color);\n\n        if (color) {\n            color = rgba2hsla(color);\n            h != null && (color[0] = clampCssAngle(h));\n            s != null && (color[1] = parseCssFloat(s));\n            l != null && (color[2] = parseCssFloat(l));\n\n            return stringify(hsla2rgba(color), 'rgba');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} alpha 0 ~ 1\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyAlpha(color, alpha) {\n        color = parse(color);\n\n        if (color && alpha != null) {\n            color[3] = clampCssFloat(alpha);\n            return stringify(color, 'rgba');\n        }\n    }\n\n    /**\n     * @param {Array.<string>} colors Color list.\n     * @param {string} type 'rgba', 'hsva', ...\n     * @return {string} Result color.\n     */\n    function stringify(arrColor, type) {\n        var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n        if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n            colorStr += ',' + arrColor[3];\n        }\n        return type + '(' + colorStr + ')';\n    }\n\n    module.exports = {\n        parse: parse,\n        lift: lift,\n        toHex: toHex,\n        fastMapToColor: fastMapToColor,\n        mapToColor: mapToColor,\n        modifyHSL: modifyHSL,\n        modifyAlpha: modifyAlpha,\n        stringify: stringify\n    };\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/color.js\n// module id = 332\n// module chunks = 0 1 2 3 4","/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n\n\n    var arrySlice = Array.prototype.slice;\n\n    /**\n     * 事件分发器\n     * @alias module:zrender/mixin/Eventful\n     * @constructor\n     */\n    var Eventful = function () {\n        this._$handlers = {};\n    };\n\n    Eventful.prototype = {\n\n        constructor: Eventful,\n\n        /**\n         * 单次触发绑定，trigger后销毁\n         *\n         * @param {string} event 事件名\n         * @param {Function} handler 响应函数\n         * @param {Object} context\n         */\n        one: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: true,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 绑定事件\n         * @param {string} event 事件名\n         * @param {Function} handler 事件处理函数\n         * @param {Object} [context]\n         */\n        on: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: false,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 是否绑定了事件\n         * @param  {string}  event\n         * @return {boolean}\n         */\n        isSilent: function (event) {\n            var _h = this._$handlers;\n            return _h[event] && _h[event].length;\n        },\n\n        /**\n         * 解绑事件\n         * @param {string} event 事件名\n         * @param {Function} [handler] 事件处理函数\n         */\n        off: function (event, handler) {\n            var _h = this._$handlers;\n\n            if (!event) {\n                this._$handlers = {};\n                return this;\n            }\n\n            if (handler) {\n                if (_h[event]) {\n                    var newList = [];\n                    for (var i = 0, l = _h[event].length; i < l; i++) {\n                        if (_h[event][i]['h'] != handler) {\n                            newList.push(_h[event][i]);\n                        }\n                    }\n                    _h[event] = newList;\n                }\n\n                if (_h[event] && _h[event].length === 0) {\n                    delete _h[event];\n                }\n            }\n            else {\n                delete _h[event];\n            }\n\n            return this;\n        },\n\n        /**\n         * 事件分发\n         *\n         * @param {string} type 事件类型\n         */\n        trigger: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 3) {\n                    args = arrySlice.call(args, 1);\n                }\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(_h[i]['ctx']);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(_h[i]['ctx'], args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * 带有context的事件分发, 最后一个参数是事件回调的context\n         * @param {string} type 事件类型\n         */\n        triggerWithContext: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 4) {\n                    args = arrySlice.call(args, 1, args.length - 1);\n                }\n                var ctx = args[args.length - 1];\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(ctx);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(ctx, args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(ctx, args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(ctx, args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        }\n    };\n\n    // 对象可以通过 onxxxx 绑定事件\n    /**\n     * @event module:zrender/mixin/Eventful#onclick\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseout\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousemove\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousewheel\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousedown\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseup\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrag\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragstart\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragend\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragenter\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragleave\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrop\n     * @type {Function}\n     * @default null\n     */\n\n    module.exports = Eventful;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Eventful.js\n// module id = 333\n// module chunks = 0 1 2 3 4","\n\n    var textWidthCache = {};\n    var textWidthCacheCounter = 0;\n    var TEXT_CACHE_MAX = 5000;\n\n    var util = require('../core/util');\n    var BoundingRect = require('../core/BoundingRect');\n    var retrieve = util.retrieve;\n\n    function getTextWidth(text, textFont) {\n        var key = text + ':' + textFont;\n        if (textWidthCache[key]) {\n            return textWidthCache[key];\n        }\n\n        var textLines = (text + '').split('\\n');\n        var width = 0;\n\n        for (var i = 0, l = textLines.length; i < l; i++) {\n            // measureText 可以被覆盖以兼容不支持 Canvas 的环境\n            width = Math.max(textContain.measureText(textLines[i], textFont).width, width);\n        }\n\n        if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n            textWidthCacheCounter = 0;\n            textWidthCache = {};\n        }\n        textWidthCacheCounter++;\n        textWidthCache[key] = width;\n\n        return width;\n    }\n\n    function getTextRect(text, textFont, textAlign, textBaseline) {\n        var textLineLen = ((text || '') + '').split('\\n').length;\n\n        var width = getTextWidth(text, textFont);\n        // FIXME 高度计算比较粗暴\n        var lineHeight = getTextWidth('国', textFont);\n        var height = textLineLen * lineHeight;\n\n        var rect = new BoundingRect(0, 0, width, height);\n        // Text has a special line height property\n        rect.lineHeight = lineHeight;\n\n        switch (textBaseline) {\n            case 'bottom':\n            case 'alphabetic':\n                rect.y -= lineHeight;\n                break;\n            case 'middle':\n                rect.y -= lineHeight / 2;\n                break;\n            // case 'hanging':\n            // case 'top':\n        }\n\n        // FIXME Right to left language\n        switch (textAlign) {\n            case 'end':\n            case 'right':\n                rect.x -= rect.width;\n                break;\n            case 'center':\n                rect.x -= rect.width / 2;\n                break;\n            // case 'start':\n            // case 'left':\n        }\n\n        return rect;\n    }\n\n    function adjustTextPositionOnRect(textPosition, rect, textRect, distance) {\n\n        var x = rect.x;\n        var y = rect.y;\n\n        var height = rect.height;\n        var width = rect.width;\n\n        var textHeight = textRect.height;\n\n        var halfHeight = height / 2 - textHeight / 2;\n\n        var textAlign = 'left';\n\n        switch (textPosition) {\n            case 'left':\n                x -= distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'right':\n                x += distance + width;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'top':\n                x += width / 2;\n                y -= distance + textHeight;\n                textAlign = 'center';\n                break;\n            case 'bottom':\n                x += width / 2;\n                y += height + distance;\n                textAlign = 'center';\n                break;\n            case 'inside':\n                x += width / 2;\n                y += halfHeight;\n                textAlign = 'center';\n                break;\n            case 'insideLeft':\n                x += distance;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'insideRight':\n                x += width - distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'insideTop':\n                x += width / 2;\n                y += distance;\n                textAlign = 'center';\n                break;\n            case 'insideBottom':\n                x += width / 2;\n                y += height - textHeight - distance;\n                textAlign = 'center';\n                break;\n            case 'insideTopLeft':\n                x += distance;\n                y += distance;\n                textAlign = 'left';\n                break;\n            case 'insideTopRight':\n                x += width - distance;\n                y += distance;\n                textAlign = 'right';\n                break;\n            case 'insideBottomLeft':\n                x += distance;\n                y += height - textHeight - distance;\n                break;\n            case 'insideBottomRight':\n                x += width - distance;\n                y += height - textHeight - distance;\n                textAlign = 'right';\n                break;\n        }\n\n        return {\n            x: x,\n            y: y,\n            textAlign: textAlign,\n            textBaseline: 'top'\n        };\n    }\n\n    /**\n     * Show ellipsis if overflow.\n     *\n     * @param  {string} text\n     * @param  {string} containerWidth\n     * @param  {string} textFont\n     * @param  {number} [ellipsis='...']\n     * @param  {Object} [options]\n     * @param  {number} [options.maxIterations=3]\n     * @param  {number} [options.minChar=0] If truncate result are less\n     *                  then minChar, ellipsis will not show, which is\n     *                  better for user hint in some cases.\n     * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n     * @return {string}\n     */\n    function truncateText(text, containerWidth, textFont, ellipsis, options) {\n        if (!containerWidth) {\n            return '';\n        }\n\n        options = options || {};\n\n        ellipsis = retrieve(ellipsis, '...');\n        var maxIterations = retrieve(options.maxIterations, 2);\n        var minChar = retrieve(options.minChar, 0);\n        // FIXME\n        // Other languages?\n        var cnCharWidth = getTextWidth('国', textFont);\n        // FIXME\n        // Consider proportional font?\n        var ascCharWidth = getTextWidth('a', textFont);\n        var placeholder = retrieve(options.placeholder, '');\n\n        // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n        // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n        var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n        for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n            contentWidth -= ascCharWidth;\n        }\n\n        var ellipsisWidth = getTextWidth(ellipsis);\n        if (ellipsisWidth > contentWidth) {\n            ellipsis = '';\n            ellipsisWidth = 0;\n        }\n\n        contentWidth = containerWidth - ellipsisWidth;\n\n        var textLines = (text + '').split('\\n');\n\n        for (var i = 0, len = textLines.length; i < len; i++) {\n            var textLine = textLines[i];\n            var lineWidth = getTextWidth(textLine, textFont);\n\n            if (lineWidth <= containerWidth) {\n                continue;\n            }\n\n            for (var j = 0;; j++) {\n                if (lineWidth <= contentWidth || j >= maxIterations) {\n                    textLine += ellipsis;\n                    break;\n                }\n\n                var subLength = j === 0\n                    ? estimateLength(textLine, contentWidth, ascCharWidth, cnCharWidth)\n                    : lineWidth > 0\n                    ? Math.floor(textLine.length * contentWidth / lineWidth)\n                    : 0;\n\n                textLine = textLine.substr(0, subLength);\n                lineWidth = getTextWidth(textLine, textFont);\n            }\n\n            if (textLine === '') {\n                textLine = placeholder;\n            }\n\n            textLines[i] = textLine;\n        }\n\n        return textLines.join('\\n');\n    }\n\n    function estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n        var width = 0;\n        var i = 0;\n        for (var len = text.length; i < len && width < contentWidth; i++) {\n            var charCode = text.charCodeAt(i);\n            width += (0 <= charCode && charCode <= 127) ? ascCharWidth : cnCharWidth;\n        }\n        return i;\n    }\n\n    var textContain = {\n\n        getWidth: getTextWidth,\n\n        getBoundingRect: getTextRect,\n\n        adjustTextPositionOnRect: adjustTextPositionOnRect,\n\n        truncateText: truncateText,\n\n        measureText: function (text, textFont) {\n            var ctx = util.getContext();\n            ctx.font = textFont || '12px sans-serif';\n            return ctx.measureText(text);\n        }\n    };\n\n    module.exports = textContain;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/text.js\n// module id = 334\n// module chunks = 0 1 2 3 4","\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n    /**\n     * 3x2矩阵操作类\n     * @exports zrender/tool/matrix\n     */\n    var matrix = {\n        /**\n         * 创建一个单位矩阵\n         * @return {Float32Array|Array.<number>}\n         */\n        create : function() {\n            var out = new ArrayCtor(6);\n            matrix.identity(out);\n\n            return out;\n        },\n        /**\n         * 设置矩阵为单位矩阵\n         * @param {Float32Array|Array.<number>} out\n         */\n        identity : function(out) {\n            out[0] = 1;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            out[4] = 0;\n            out[5] = 0;\n            return out;\n        },\n        /**\n         * 复制矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m\n         */\n        copy: function(out, m) {\n            out[0] = m[0];\n            out[1] = m[1];\n            out[2] = m[2];\n            out[3] = m[3];\n            out[4] = m[4];\n            out[5] = m[5];\n            return out;\n        },\n        /**\n         * 矩阵相乘\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m1\n         * @param {Float32Array|Array.<number>} m2\n         */\n        mul : function (out, m1, m2) {\n            // Consider matrix.mul(m, m2, m);\n            // where out is the same as m2.\n            // So use temp variable to escape error.\n            var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n            var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n            var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n            var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n            var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n            var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n            out[0] = out0;\n            out[1] = out1;\n            out[2] = out2;\n            out[3] = out3;\n            out[4] = out4;\n            out[5] = out5;\n            return out;\n        },\n        /**\n         * 平移变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        translate : function(out, a, v) {\n            out[0] = a[0];\n            out[1] = a[1];\n            out[2] = a[2];\n            out[3] = a[3];\n            out[4] = a[4] + v[0];\n            out[5] = a[5] + v[1];\n            return out;\n        },\n        /**\n         * 旋转变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {number} rad\n         */\n        rotate : function(out, a, rad) {\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n            var st = Math.sin(rad);\n            var ct = Math.cos(rad);\n\n            out[0] = aa * ct + ab * st;\n            out[1] = -aa * st + ab * ct;\n            out[2] = ac * ct + ad * st;\n            out[3] = -ac * st + ct * ad;\n            out[4] = ct * atx + st * aty;\n            out[5] = ct * aty - st * atx;\n            return out;\n        },\n        /**\n         * 缩放变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        scale : function(out, a, v) {\n            var vx = v[0];\n            var vy = v[1];\n            out[0] = a[0] * vx;\n            out[1] = a[1] * vy;\n            out[2] = a[2] * vx;\n            out[3] = a[3] * vy;\n            out[4] = a[4] * vx;\n            out[5] = a[5] * vy;\n            return out;\n        },\n        /**\n         * 求逆矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         */\n        invert : function(out, a) {\n\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n\n            var det = aa * ad - ab * ac;\n            if (!det) {\n                return null;\n            }\n            det = 1.0 / det;\n\n            out[0] = ad * det;\n            out[1] = -ab * det;\n            out[2] = -ac * det;\n            out[3] = aa * det;\n            out[4] = (ac * aty - ad * atx) * det;\n            out[5] = (ab * atx - aa * aty) * det;\n            return out;\n        }\n    };\n\n    module.exports = matrix;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/matrix.js\n// module id = 335\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n\n    var Eventful = require('../mixin/Eventful');\n    var env = require('./env');\n\n    var isDomLevel2 = (typeof window !== 'undefined') && !!window.addEventListener;\n\n    function getBoundingClientRect(el) {\n        // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n        return el.getBoundingClientRect ? el.getBoundingClientRect() : {left: 0, top: 0};\n    }\n\n    // `calculate` is optional, default false\n    function clientToLocal(el, e, out, calculate) {\n        out = out || {};\n\n        // According to the W3C Working Draft, offsetX and offsetY should be relative\n        // to the padding edge of the target element. The only browser using this convention\n        // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n        // not support the properties.\n        // (see http://www.jacklmoore.com/notes/mouse-position/)\n        // In zr painter.dom, padding edge equals to border edge.\n\n        // FIXME\n        // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n        // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n        // is too complex. So css-transfrom dont support in this case temporarily.\n        if (calculate || !env.canvasSupported) {\n            defaultGetZrXY(el, e, out);\n        }\n        // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n        // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n        // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n        // zoom-factor, overflow / opacity layers, transforms ...)\n        // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n        // <https://bugs.jquery.com/ticket/8523#comment:14>\n        // BTW3, In ff, offsetX/offsetY is always 0.\n        else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n            out.zrX = e.layerX;\n            out.zrY = e.layerY;\n        }\n        // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n        else if (e.offsetX != null) {\n            out.zrX = e.offsetX;\n            out.zrY = e.offsetY;\n        }\n        // For some other device, e.g., IOS safari.\n        else {\n            defaultGetZrXY(el, e, out);\n        }\n\n        return out;\n    }\n\n    function defaultGetZrXY(el, e, out) {\n        // This well-known method below does not support css transform.\n        var box = getBoundingClientRect(el);\n        out.zrX = e.clientX - box.left;\n        out.zrY = e.clientY - box.top;\n    }\n\n    /**\n     * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n     * `calculate` is optional, default false.\n     */\n    function normalizeEvent(el, e, calculate) {\n\n        e = e || window.event;\n\n        if (e.zrX != null) {\n            return e;\n        }\n\n        var eventType = e.type;\n        var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n        if (!isTouch) {\n            clientToLocal(el, e, e, calculate);\n            e.zrDelta = (e.wheelDelta) ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n        }\n        else {\n            var touch = eventType != 'touchend'\n                ? e.targetTouches[0]\n                : e.changedTouches[0];\n            touch && clientToLocal(el, touch, e, calculate);\n        }\n\n        return e;\n    }\n\n    function addEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.addEventListener(name, handler);\n        }\n        else {\n            el.attachEvent('on' + name, handler);\n        }\n    }\n\n    function removeEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.removeEventListener(name, handler);\n        }\n        else {\n            el.detachEvent('on' + name, handler);\n        }\n    }\n\n    /**\n     * preventDefault and stopPropagation.\n     * Notice: do not do that in zrender. Upper application\n     * do that if necessary.\n     *\n     * @memberOf module:zrender/core/event\n     * @method\n     * @param {Event} e : event对象\n     */\n    var stop = isDomLevel2\n        ? function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.cancelBubble = true;\n        }\n        : function (e) {\n            e.returnValue = false;\n            e.cancelBubble = true;\n        };\n\n    module.exports = {\n        clientToLocal: clientToLocal,\n        normalizeEvent: normalizeEvent,\n        addEventListener: addEventListener,\n        removeEventListener: removeEventListener,\n\n        stop: stop,\n        // 做向上兼容\n        Dispatcher: Eventful\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/event.js\n// module id = 336\n// module chunks = 0 1 2 3 4","/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n\n    var clazzUtil = require('../util/clazz');\n\n    function Scale() {\n        /**\n         * Extent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._extent = [Infinity, -Infinity];\n\n        /**\n         * Step is calculated in adjustExtent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._interval = 0;\n\n        this.init && this.init.apply(this, arguments);\n    }\n\n    var scaleProto = Scale.prototype;\n\n    /**\n     * Parse input val to valid inner number.\n     * @param {*} val\n     * @return {number}\n     */\n    scaleProto.parse = function (val) {\n        // Notice: This would be a trap here, If the implementation\n        // of this method depends on extent, and this method is used\n        // before extent set (like in dataZoom), it would be wrong.\n        // Nevertheless, parse does not depend on extent generally.\n        return val;\n    };\n\n    scaleProto.contain = function (val) {\n        var extent = this._extent;\n        return val >= extent[0] && val <= extent[1];\n    };\n\n    /**\n     * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.normalize = function (val) {\n        var extent = this._extent;\n        if (extent[1] === extent[0]) {\n            return 0.5;\n        }\n        return (val - extent[0]) / (extent[1] - extent[0]);\n    };\n\n    /**\n     * Scale normalized value\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.scale = function (val) {\n        var extent = this._extent;\n        return val * (extent[1] - extent[0]) + extent[0];\n    };\n\n    /**\n     * Set extent from data\n     * @param {Array.<number>} other\n     */\n    scaleProto.unionExtent = function (other) {\n        var extent = this._extent;\n        other[0] < extent[0] && (extent[0] = other[0]);\n        other[1] > extent[1] && (extent[1] = other[1]);\n        // not setExtent because in log axis it may transformed to power\n        // this.setExtent(extent[0], extent[1]);\n    };\n\n    /**\n     * Set extent from data\n     * @param {module:echarts/data/List} data\n     * @param {string} dim\n     */\n    scaleProto.unionExtentFromData = function (data, dim) {\n        this.unionExtent(data.getDataExtent(dim, true));\n    };\n\n    /**\n     * Get extent\n     * @return {Array.<number>}\n     */\n    scaleProto.getExtent = function () {\n        return this._extent.slice();\n    };\n\n    /**\n     * Set extent\n     * @param {number} start\n     * @param {number} end\n     */\n    scaleProto.setExtent = function (start, end) {\n        var thisExtent = this._extent;\n        if (!isNaN(start)) {\n            thisExtent[0] = start;\n        }\n        if (!isNaN(end)) {\n            thisExtent[1] = end;\n        }\n    };\n\n    /**\n     * @return {Array.<string>}\n     */\n    scaleProto.getTicksLabels = function () {\n        var labels = [];\n        var ticks = this.getTicks();\n        for (var i = 0; i < ticks.length; i++) {\n            labels.push(this.getLabel(ticks[i]));\n        }\n        return labels;\n    };\n\n    clazzUtil.enableClassExtend(Scale);\n    clazzUtil.enableClassManagement(Scale, {\n        registerWhenExtend: true\n    });\n\n    module.exports = Scale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Scale.js\n// module id = 337\n// module chunks = 0 1 2 3 4","\n    var dpr = 1;\n    // If in browser environment\n    if (typeof window !== 'undefined') {\n        dpr = Math.max(window.devicePixelRatio || 1, 1);\n    }\n    /**\n     * config默认配置项\n     * @exports zrender/config\n     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n     */\n    var config = {\n        /**\n         * debug日志选项：catchBrushException为true下有效\n         * 0 : 不生成debug数据，发布用\n         * 1 : 异常抛出，调试用\n         * 2 : 控制台输出，调试用\n         */\n        debugMode: 0,\n\n        // retina 屏幕优化\n        devicePixelRatio: dpr\n    };\n    module.exports = config;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/config.js\n// module id = 338\n// module chunks = 0 1 2 3 4","/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/lib/container/Group');\n *     var Circle = require('zrender/lib/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n\n    var zrUtil = require('../core/util');\n    var Element = require('../Element');\n    var BoundingRect = require('../core/BoundingRect');\n\n    /**\n     * @alias module:zrender/graphic/Group\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @extends module:zrender/mixin/Eventful\n     */\n    var Group = function (opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        for (var key in opts) {\n            if (opts.hasOwnProperty(key)) {\n                this[key] = opts[key];\n            }\n        }\n\n        this._children = [];\n\n        this.__storage = null;\n\n        this.__dirty = true;\n    };\n\n    Group.prototype = {\n\n        constructor: Group,\n\n        isGroup: true,\n\n        /**\n         * @type {string}\n         */\n        type: 'group',\n\n        /**\n         * 所有子孙元素是否响应鼠标事件\n         * @name module:/zrender/container/Group#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * @return {Array.<module:zrender/Element>}\n         */\n        children: function () {\n            return this._children.slice();\n        },\n\n        /**\n         * 获取指定 index 的儿子节点\n         * @param  {number} idx\n         * @return {module:zrender/Element}\n         */\n        childAt: function (idx) {\n            return this._children[idx];\n        },\n\n        /**\n         * 获取指定名字的儿子节点\n         * @param  {string} name\n         * @return {module:zrender/Element}\n         */\n        childOfName: function (name) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i].name === name) {\n                    return children[i];\n                }\n             }\n        },\n\n        /**\n         * @return {number}\n         */\n        childCount: function () {\n            return this._children.length;\n        },\n\n        /**\n         * 添加子节点到最后\n         * @param {module:zrender/Element} child\n         */\n        add: function (child) {\n            if (child && child !== this && child.parent !== this) {\n\n                this._children.push(child);\n\n                this._doAdd(child);\n            }\n\n            return this;\n        },\n\n        /**\n         * 添加子节点在 nextSibling 之前\n         * @param {module:zrender/Element} child\n         * @param {module:zrender/Element} nextSibling\n         */\n        addBefore: function (child, nextSibling) {\n            if (child && child !== this && child.parent !== this\n                && nextSibling && nextSibling.parent === this) {\n\n                var children = this._children;\n                var idx = children.indexOf(nextSibling);\n\n                if (idx >= 0) {\n                    children.splice(idx, 0, child);\n                    this._doAdd(child);\n                }\n            }\n\n            return this;\n        },\n\n        _doAdd: function (child) {\n            if (child.parent) {\n                child.parent.remove(child);\n            }\n\n            child.parent = this;\n\n            var storage = this.__storage;\n            var zr = this.__zr;\n            if (storage && storage !== child.__storage) {\n\n                storage.addToMap(child);\n\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n        },\n\n        /**\n         * 移除子节点\n         * @param {module:zrender/Element} child\n         */\n        remove: function (child) {\n            var zr = this.__zr;\n            var storage = this.__storage;\n            var children = this._children;\n\n            var idx = zrUtil.indexOf(children, child);\n            if (idx < 0) {\n                return this;\n            }\n            children.splice(idx, 1);\n\n            child.parent = null;\n\n            if (storage) {\n\n                storage.delFromMap(child.id);\n\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n\n            return this;\n        },\n\n        /**\n         * 移除所有子节点\n         */\n        removeAll: function () {\n            var children = this._children;\n            var storage = this.__storage;\n            var child;\n            var i;\n            for (i = 0; i < children.length; i++) {\n                child = children[i];\n                if (storage) {\n                    storage.delFromMap(child.id);\n                    if (child instanceof Group) {\n                        child.delChildrenFromStorage(storage);\n                    }\n                }\n                child.parent = null;\n            }\n            children.length = 0;\n\n            return this;\n        },\n\n        /**\n         * 遍历所有子节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        eachChild: function (cb, context) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                cb.call(context, child, i);\n            }\n            return this;\n        },\n\n        /**\n         * 深度优先遍历所有子孙节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                cb.call(context, child);\n\n                if (child.type === 'group') {\n                    child.traverse(cb, context);\n                }\n            }\n            return this;\n        },\n\n        addChildrenToStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.addToMap(child);\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n        },\n\n        delChildrenFromStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.delFromMap(child.id);\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n        },\n\n        dirty: function () {\n            this.__dirty = true;\n            this.__zr && this.__zr.refresh();\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function (includeChildren) {\n            // TODO Caching\n            var rect = null;\n            var tmpRect = new BoundingRect(0, 0, 0, 0);\n            var children = includeChildren || this._children;\n            var tmpMat = [];\n\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                if (child.ignore || child.invisible) {\n                    continue;\n                }\n\n                var childRect = child.getBoundingRect();\n                var transform = child.getLocalTransform(tmpMat);\n                // TODO\n                // The boundingRect cacluated by transforming original\n                // rect may be bigger than the actual bundingRect when rotation\n                // is used. (Consider a circle rotated aginst its center, where\n                // the actual boundingRect should be the same as that not be\n                // rotated.) But we can not find better approach to calculate\n                // actual boundingRect yet, considering performance.\n                if (transform) {\n                    tmpRect.copy(childRect);\n                    tmpRect.applyTransform(transform);\n                    rect = rect || tmpRect.clone();\n                    rect.union(tmpRect);\n                }\n                else {\n                    rect = rect || childRect.clone();\n                    rect.union(childRect);\n                }\n            }\n            return rect || tmpRect;\n        }\n    };\n\n    zrUtil.inherits(Group, Element);\n\n    module.exports = Group;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/container/Group.js\n// module id = 339\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n\n // TODO getTotalLength, getPointAtLength\n\n\n    var curve = require('./curve');\n    var vec2 = require('./vector');\n    var bbox = require('./bbox');\n    var BoundingRect = require('./BoundingRect');\n    var dpr = require('../config').devicePixelRatio;\n\n    var CMD = {\n        M: 1,\n        L: 2,\n        C: 3,\n        Q: 4,\n        A: 5,\n        Z: 6,\n        // Rect\n        R: 7\n    };\n\n    var min = [];\n    var max = [];\n    var min2 = [];\n    var max2 = [];\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var mathSqrt = Math.sqrt;\n    var mathAbs = Math.abs;\n\n    var hasTypedArray = typeof Float32Array != 'undefined';\n\n    /**\n     * @alias module:zrender/core/PathProxy\n     * @constructor\n     */\n    var PathProxy = function () {\n\n        /**\n         * Path data. Stored as flat array\n         * @type {Array.<Object>}\n         */\n        this.data = [];\n\n        this._len = 0;\n\n        this._ctx = null;\n\n        this._xi = 0;\n        this._yi = 0;\n\n        this._x0 = 0;\n        this._y0 = 0;\n\n        // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n        this._ux = 0;\n        this._uy = 0;\n    };\n\n    /**\n     * 快速计算Path包围盒（并不是最小包围盒）\n     * @return {Object}\n     */\n    PathProxy.prototype = {\n\n        constructor: PathProxy,\n\n        _lineDash: null,\n\n        _dashOffset: 0,\n\n        _dashIdx: 0,\n\n        _dashSum: 0,\n\n        /**\n         * @readOnly\n         */\n        setScale: function (sx, sy) {\n            this._ux = mathAbs(1 / dpr / sx) || 0;\n            this._uy = mathAbs(1 / dpr / sy) || 0;\n        },\n\n        getContext: function () {\n            return this._ctx;\n        },\n\n        /**\n         * @param  {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        beginPath: function (ctx) {\n\n            this._ctx = ctx;\n\n            ctx && ctx.beginPath();\n\n            ctx && (this.dpr = ctx.dpr);\n\n            // Reset\n            this._len = 0;\n\n            if (this._lineDash) {\n                this._lineDash = null;\n\n                this._dashOffset = 0;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        moveTo: function (x, y) {\n            this.addData(CMD.M, x, y);\n            this._ctx && this._ctx.moveTo(x, y);\n\n            // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n            // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n            // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n            // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n            this._x0 = x;\n            this._y0 = y;\n\n            this._xi = x;\n            this._yi = y;\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        lineTo: function (x, y) {\n            var exceedUnit = mathAbs(x - this._xi) > this._ux\n                || mathAbs(y - this._yi) > this._uy\n                // Force draw the first segment\n                || this._len < 5;\n\n            this.addData(CMD.L, x, y);\n\n            if (this._ctx && exceedUnit) {\n                this._needsDash() ? this._dashedLineTo(x, y)\n                    : this._ctx.lineTo(x, y);\n            }\n            if (exceedUnit) {\n                this._xi = x;\n                this._yi = y;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @param  {number} x3\n         * @param  {number} y3\n         * @return {module:zrender/core/PathProxy}\n         */\n        bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n            this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3)\n                    : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n            }\n            this._xi = x3;\n            this._yi = y3;\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @return {module:zrender/core/PathProxy}\n         */\n        quadraticCurveTo: function (x1, y1, x2, y2) {\n            this.addData(CMD.Q, x1, y1, x2, y2);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2)\n                    : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n            }\n            this._xi = x2;\n            this._yi = y2;\n            return this;\n        },\n\n        /**\n         * @param  {number} cx\n         * @param  {number} cy\n         * @param  {number} r\n         * @param  {number} startAngle\n         * @param  {number} endAngle\n         * @param  {boolean} anticlockwise\n         * @return {module:zrender/core/PathProxy}\n         */\n        arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n            this.addData(\n                CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1\n            );\n            this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n\n            this._xi = mathCos(endAngle) * r + cx;\n            this._yi = mathSin(endAngle) * r + cx;\n            return this;\n        },\n\n        // TODO\n        arcTo: function (x1, y1, x2, y2, radius) {\n            if (this._ctx) {\n                this._ctx.arcTo(x1, y1, x2, y2, radius);\n            }\n            return this;\n        },\n\n        // TODO\n        rect: function (x, y, w, h) {\n            this._ctx && this._ctx.rect(x, y, w, h);\n            this.addData(CMD.R, x, y, w, h);\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/PathProxy}\n         */\n        closePath: function () {\n            this.addData(CMD.Z);\n\n            var ctx = this._ctx;\n            var x0 = this._x0;\n            var y0 = this._y0;\n            if (ctx) {\n                this._needsDash() && this._dashedLineTo(x0, y0);\n                ctx.closePath();\n            }\n\n            this._xi = x0;\n            this._yi = y0;\n            return this;\n        },\n\n        /**\n         * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n         * stroke 同样\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        fill: function (ctx) {\n            ctx && ctx.fill();\n            this.toStatic();\n        },\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        stroke: function (ctx) {\n            ctx && ctx.stroke();\n            this.toStatic();\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDash: function (lineDash) {\n            if (lineDash instanceof Array) {\n                this._lineDash = lineDash;\n\n                this._dashIdx = 0;\n\n                var lineDashSum = 0;\n                for (var i = 0; i < lineDash.length; i++) {\n                    lineDashSum += lineDash[i];\n                }\n                this._dashSum = lineDashSum;\n            }\n            return this;\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDashOffset: function (offset) {\n            this._dashOffset = offset;\n            return this;\n        },\n\n        /**\n         *\n         * @return {boolean}\n         */\n        len: function () {\n            return this._len;\n        },\n\n        /**\n         * 直接设置 Path 数据\n         */\n        setData: function (data) {\n\n            var len = data.length;\n\n            if (! (this.data && this.data.length == len) && hasTypedArray) {\n                this.data = new Float32Array(len);\n            }\n\n            for (var i = 0; i < len; i++) {\n                this.data[i] = data[i];\n            }\n\n            this._len = len;\n        },\n\n        /**\n         * 添加子路径\n         * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n         */\n        appendPath: function (path) {\n            if (!(path instanceof Array)) {\n                path = [path];\n            }\n            var len = path.length;\n            var appendSize = 0;\n            var offset = this._len;\n            for (var i = 0; i < len; i++) {\n                appendSize += path[i].len();\n            }\n            if (hasTypedArray && (this.data instanceof Float32Array)) {\n                this.data = new Float32Array(offset + appendSize);\n            }\n            for (var i = 0; i < len; i++) {\n                var appendPathData = path[i].data;\n                for (var k = 0; k < appendPathData.length; k++) {\n                    this.data[offset++] = appendPathData[k];\n                }\n            }\n            this._len = offset;\n        },\n\n        /**\n         * 填充 Path 数据。\n         * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n         */\n        addData: function (cmd) {\n            var data = this.data;\n            if (this._len + arguments.length > data.length) {\n                // 因为之前的数组已经转换成静态的 Float32Array\n                // 所以不够用时需要扩展一个新的动态数组\n                this._expandData();\n                data = this.data;\n            }\n            for (var i = 0; i < arguments.length; i++) {\n                data[this._len++] = arguments[i];\n            }\n\n            this._prevCmd = cmd;\n        },\n\n        _expandData: function () {\n            // Only if data is Float32Array\n            if (!(this.data instanceof Array)) {\n                var newData = [];\n                for (var i = 0; i < this._len; i++) {\n                    newData[i] = this.data[i];\n                }\n                this.data = newData;\n            }\n        },\n\n        /**\n         * If needs js implemented dashed line\n         * @return {boolean}\n         * @private\n         */\n        _needsDash: function () {\n            return this._lineDash;\n        },\n\n        _dashedLineTo: function (x1, y1) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var dx = x1 - x0;\n            var dy = y1 - y0;\n            var dist = mathSqrt(dx * dx + dy * dy);\n            var x = x0;\n            var y = y0;\n            var dash;\n            var nDash = lineDash.length;\n            var idx;\n            dx /= dist;\n            dy /= dist;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            x -= offset * dx;\n            y -= offset * dy;\n\n            while ((dx > 0 && x <= x1) || (dx < 0 && x >= x1)\n            || (dx == 0 && ((dy > 0 && y <= y1) || (dy < 0 && y >= y1)))) {\n                idx = this._dashIdx;\n                dash = lineDash[idx];\n                x += dx * dash;\n                y += dy * dash;\n                this._dashIdx = (idx + 1) % nDash;\n                // Skip positive offset\n                if ((dx > 0 && x < x0) || (dx < 0 && x > x0) || (dy > 0 && y < y0) || (dy < 0 && y > y0)) {\n                    continue;\n                }\n                ctx[idx % 2 ? 'moveTo' : 'lineTo'](\n                    dx >= 0 ? mathMin(x, x1) : mathMax(x, x1),\n                    dy >= 0 ? mathMin(y, y1) : mathMax(y, y1)\n                );\n            }\n            // Offset for next lineTo\n            dx = x - x1;\n            dy = y - y1;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        // Not accurate dashed line to\n        _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var t;\n            var dx;\n            var dy;\n            var cubicAt = curve.cubicAt;\n            var bezierLen = 0;\n            var idx = this._dashIdx;\n            var nDash = lineDash.length;\n\n            var x;\n            var y;\n\n            var tmpLen = 0;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            // Bezier approx length\n            for (t = 0; t < 1; t += 0.1) {\n                dx = cubicAt(x0, x1, x2, x3, t + 0.1)\n                    - cubicAt(x0, x1, x2, x3, t);\n                dy = cubicAt(y0, y1, y2, y3, t + 0.1)\n                    - cubicAt(y0, y1, y2, y3, t);\n                bezierLen += mathSqrt(dx * dx + dy * dy);\n            }\n\n            // Find idx after add offset\n            for (; idx < nDash; idx++) {\n                tmpLen += lineDash[idx];\n                if (tmpLen > offset) {\n                    break;\n                }\n            }\n            t = (tmpLen - offset) / bezierLen;\n\n            while (t <= 1) {\n\n                x = cubicAt(x0, x1, x2, x3, t);\n                y = cubicAt(y0, y1, y2, y3, t);\n\n                // Use line to approximate dashed bezier\n                // Bad result if dash is long\n                idx % 2 ? ctx.moveTo(x, y)\n                    : ctx.lineTo(x, y);\n\n                t += lineDash[idx] / bezierLen;\n\n                idx = (idx + 1) % nDash;\n            }\n\n            // Finish the last segment and calculate the new offset\n            (idx % 2 !== 0) && ctx.lineTo(x3, y3);\n            dx = x3 - x;\n            dy = y3 - y;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        _dashedQuadraticTo: function (x1, y1, x2, y2) {\n            // Convert quadratic to cubic using degree elevation\n            var x3 = x2;\n            var y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (this._xi + 2 * x1) / 3;\n            y1 = (this._yi + 2 * y1) / 3;\n\n            this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n        },\n\n        /**\n         * 转成静态的 Float32Array 减少堆内存占用\n         * Convert dynamic array to static Float32Array\n         */\n        toStatic: function () {\n            var data = this.data;\n            if (data instanceof Array) {\n                data.length = this._len;\n                if (hasTypedArray) {\n                    this.data = new Float32Array(data);\n                }\n            }\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function () {\n            min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n            max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n\n            var data = this.data;\n            var xi = 0;\n            var yi = 0;\n            var x0 = 0;\n            var y0 = 0;\n\n            for (var i = 0; i < data.length;) {\n                var cmd = data[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = data[i];\n                    yi = data[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n\n                switch (cmd) {\n                    case CMD.M:\n                        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                        // 在 closePath 的时候使用\n                        x0 = data[i++];\n                        y0 = data[i++];\n                        xi = x0;\n                        yi = y0;\n                        min2[0] = x0;\n                        min2[1] = y0;\n                        max2[0] = x0;\n                        max2[1] = y0;\n                        break;\n                    case CMD.L:\n                        bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.C:\n                        bbox.fromCubic(\n                            xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.Q:\n                        bbox.fromQuadratic(\n                            xi, yi, data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.A:\n                        // TODO Arc 判断的开销比较大\n                        var cx = data[i++];\n                        var cy = data[i++];\n                        var rx = data[i++];\n                        var ry = data[i++];\n                        var startAngle = data[i++];\n                        var endAngle = data[i++] + startAngle;\n                        // TODO Arc 旋转\n                        var psi = data[i++];\n                        var anticlockwise = 1 - data[i++];\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(startAngle) * rx + cx;\n                            y0 = mathSin(startAngle) * ry + cy;\n                        }\n\n                        bbox.fromArc(\n                            cx, cy, rx, ry, startAngle, endAngle,\n                            anticlockwise, min2, max2\n                        );\n\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = data[i++];\n                        y0 = yi = data[i++];\n                        var width = data[i++];\n                        var height = data[i++];\n                        // Use fromLine\n                        bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n                        break;\n                    case CMD.Z:\n                        xi = x0;\n                        yi = y0;\n                        break;\n                }\n\n                // Union\n                vec2.min(min, min, min2);\n                vec2.max(max, max, max2);\n            }\n\n            // No data\n            if (i === 0) {\n                min[0] = min[1] = max[0] = max[1] = 0;\n            }\n\n            return new BoundingRect(\n                min[0], min[1], max[0] - min[0], max[1] - min[1]\n            );\n        },\n\n        /**\n         * Rebuild path from current data\n         * Rebuild path will not consider javascript implemented line dash.\n         * @param {CanvasRenderingContext} ctx\n         */\n        rebuildPath: function (ctx) {\n            var d = this.data;\n            var x0, y0;\n            var xi, yi;\n            var x, y;\n            var ux = this._ux;\n            var uy = this._uy;\n            var len = this._len;\n            for (var i = 0; i < len;) {\n                var cmd = d[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = d[i];\n                    yi = d[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n                switch (cmd) {\n                    case CMD.M:\n                        x0 = xi = d[i++];\n                        y0 = yi = d[i++];\n                        ctx.moveTo(xi, yi);\n                        break;\n                    case CMD.L:\n                        x = d[i++];\n                        y = d[i++];\n                        // Not draw too small seg between\n                        if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n                            ctx.lineTo(x, y);\n                            xi = x;\n                            yi = y;\n                        }\n                        break;\n                    case CMD.C:\n                        ctx.bezierCurveTo(\n                            d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]\n                        );\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.Q:\n                        ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.A:\n                        var cx = d[i++];\n                        var cy = d[i++];\n                        var rx = d[i++];\n                        var ry = d[i++];\n                        var theta = d[i++];\n                        var dTheta = d[i++];\n                        var psi = d[i++];\n                        var fs = d[i++];\n                        var r = (rx > ry) ? rx : ry;\n                        var scaleX = (rx > ry) ? 1 : rx / ry;\n                        var scaleY = (rx > ry) ? ry / rx : 1;\n                        var isEllipse = Math.abs(rx - ry) > 1e-3;\n                        var endAngle = theta + dTheta;\n                        if (isEllipse) {\n                            ctx.translate(cx, cy);\n                            ctx.rotate(psi);\n                            ctx.scale(scaleX, scaleY);\n                            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n                            ctx.scale(1 / scaleX, 1 / scaleY);\n                            ctx.rotate(-psi);\n                            ctx.translate(-cx, -cy);\n                        }\n                        else {\n                            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n                        }\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(theta) * rx + cx;\n                            y0 = mathSin(theta) * ry + cy;\n                        }\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = d[i];\n                        y0 = yi = d[i + 1];\n                        ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n                        break;\n                    case CMD.Z:\n                        ctx.closePath();\n                        xi = x0;\n                        yi = y0;\n                }\n            }\n        }\n    };\n\n    PathProxy.CMD = CMD;\n\n    module.exports = PathProxy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/PathProxy.js\n// module id = 340\n// module chunks = 0 1 2 3 4","// TODO Parse shadow style\n// TODO Only shallow path support\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    module.exports = function (properties) {\n        // Normalize\n        for (var i = 0; i < properties.length; i++) {\n            if (!properties[i][1]) {\n               properties[i][1] = properties[i][0];\n            }\n        }\n        return function (excludes) {\n            var style = {};\n            for (var i = 0; i < properties.length; i++) {\n                var propName = properties[i][1];\n                if (excludes && zrUtil.indexOf(excludes, propName) >= 0) {\n                    continue;\n                }\n                var val = this.getShallow(propName);\n                if (val != null) {\n                    style[properties[i][0]] = val;\n                }\n            }\n            return style;\n        };\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/makeStyleMapper.js\n// module id = 341\n// module chunks = 0 1 2 3 4","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    /**\n     * Interface of Coordinate System Class\n     *\n     * create:\n     *     @param {module:echarts/model/Global} ecModel\n     *     @param {module:echarts/ExtensionAPI} api\n     *     @return {Object} coordinate system instance\n     *\n     * update:\n     *     @param {module:echarts/model/Global} ecModel\n     *     @param {module:echarts/ExtensionAPI} api\n     *\n     * convertToPixel:\n     * convertFromPixel:\n     *     These two methods is also responsible for determine whether this\n     *     coodinate system is applicable to the given `finder`.\n     *     Each coordinate system will be tried, util one returns none\n     *     null/undefined value.\n     *     @param {module:echarts/model/Global} ecModel\n     *     @param {Object} finder\n     *     @param {Array|number} value\n     *     @return {Array|number} convert result.\n     *\n     * containPoint:\n     *     @param {Array.<number>} point In pixel coordinate system.\n     *     @return {boolean}\n     */\n\n    var coordinateSystemCreators = {};\n\n    function CoordinateSystemManager() {\n\n        this._coordinateSystems = [];\n    }\n\n    CoordinateSystemManager.prototype = {\n\n        constructor: CoordinateSystemManager,\n\n        create: function (ecModel, api) {\n            var coordinateSystems = [];\n            zrUtil.each(coordinateSystemCreators, function (creater, type) {\n                var list = creater.create(ecModel, api);\n                coordinateSystems = coordinateSystems.concat(list || []);\n            });\n\n            this._coordinateSystems = coordinateSystems;\n        },\n\n        update: function (ecModel, api) {\n            zrUtil.each(this._coordinateSystems, function (coordSys) {\n                // FIXME MUST have\n                coordSys.update && coordSys.update(ecModel, api);\n            });\n        },\n\n        getCoordinateSystems: function () {\n            return this._coordinateSystems.slice();\n        }\n    };\n\n    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n        coordinateSystemCreators[type] = coordinateSystemCreator;\n    };\n\n    CoordinateSystemManager.get = function (type) {\n        return coordinateSystemCreators[type];\n    };\n\n    module.exports = CoordinateSystemManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/CoordinateSystem.js\n// module id = 342\n// module chunks = 0 1 2 3 4","\n\n    var OrdinalScale = require('../scale/Ordinal');\n    var IntervalScale = require('../scale/Interval');\n    require('../scale/Time');\n    require('../scale/Log');\n    var Scale = require('../scale/Scale');\n\n    var numberUtil = require('../util/number');\n    var zrUtil = require('zrender/lib/core/util');\n    var textContain = require('zrender/lib/contain/text');\n    var axisHelper = {};\n\n    /**\n     * Get axis scale extent before niced.\n     * Item of returned array can only be number (including Infinity and NaN).\n     */\n    axisHelper.getScaleExtent = function (axis, model) {\n        var scale = axis.scale;\n        var scaleType = scale.type;\n\n        var min = model.getMin();\n        var max = model.getMax();\n        var fixMin = min != null;\n        var fixMax = max != null;\n        var originalExtent = scale.getExtent();\n\n        var axisDataLen;\n        var boundaryGap;\n        var span;\n        if (scaleType === 'ordinal') {\n            axisDataLen = (model.get('data') || []).length;\n        }\n        else {\n            boundaryGap = model.get('boundaryGap');\n            if (!zrUtil.isArray(boundaryGap)) {\n                boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n            }\n            boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n            boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n            span = originalExtent[1] - originalExtent[0];\n        }\n\n        if (min == null) {\n            min = scaleType === 'ordinal'\n                ? (axisDataLen ? 0 : NaN)\n                : originalExtent[0] - boundaryGap[0] * span;\n        }\n        if (max == null) {\n            max = scaleType === 'ordinal'\n                ? (axisDataLen ? axisDataLen - 1 : NaN)\n                : originalExtent[1] + boundaryGap[1] * span;\n        }\n\n        if (min === 'dataMin') {\n            min = originalExtent[0];\n        }\n        if (max === 'dataMax') {\n            max = originalExtent[1];\n        }\n\n        (min == null || !isFinite(min)) && (min = NaN);\n        (max == null || !isFinite(max)) && (max = NaN);\n\n        axis.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max));\n\n        // Evaluate if axis needs cross zero\n        if (model.getNeedCrossZero()) {\n            // Axis is over zero and min is not set\n            if (min > 0 && max > 0 && !fixMin) {\n                min = 0;\n            }\n            // Axis is under zero and max is not set\n            if (min < 0 && max < 0 && !fixMax) {\n                max = 0;\n            }\n        }\n\n        return [min, max];\n    };\n\n    axisHelper.niceScaleExtent = function (axis, model) {\n        var scale = axis.scale;\n        var extent = axisHelper.getScaleExtent(axis, model);\n        var fixMin = model.getMin() != null;\n        var fixMax = model.getMax() != null;\n        var splitNumber = model.get('splitNumber');\n\n        if (scale.type === 'log') {\n            scale.base = model.get('logBase');\n        }\n\n        scale.setExtent(extent[0], extent[1]);\n        scale.niceExtent(splitNumber, fixMin, fixMax);\n\n        // Use minInterval to constraint the calculated interval.\n        // If calculated interval is less than minInterval. increase the interval quantity until\n        // it is larger than minInterval.\n        // For example:\n        //  minInterval is 1, calculated interval is 0.2, so increase it to be 1. In this way we can get\n        //  an integer axis.\n        var minInterval = model.get('minInterval');\n        if (isFinite(minInterval) && !fixMin && !fixMax && scale.type === 'interval') {\n            var interval = scale.getInterval();\n            var intervalScale = Math.max(Math.abs(interval), minInterval) / interval;\n            // while (interval < minInterval) {\n            //     var quantity = numberUtil.quantity(interval);\n            //     interval = quantity * 10;\n            //     scaleQuantity *= 10;\n            // }\n            extent = scale.getExtent();\n            var origin = (extent[1] + extent[0]) / 2;\n            scale.setExtent(\n                intervalScale * (extent[0] - origin) + origin,\n                intervalScale * (extent[1] - origin) + origin\n            );\n            scale.niceExtent(splitNumber);\n        }\n\n        // If some one specified the min, max. And the default calculated interval\n        // is not good enough. He can specify the interval. It is often appeared\n        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n        // to be 60.\n        // FIXME\n        var interval = model.get('interval');\n        if (interval != null) {\n            scale.setInterval && scale.setInterval(interval);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @param {string} [axisType] Default retrieve from model.type\n     * @return {module:echarts/scale/*}\n     */\n    axisHelper.createScaleByModel = function(model, axisType) {\n        axisType = axisType || model.get('type');\n        if (axisType) {\n            switch (axisType) {\n                // Buildin scale\n                case 'category':\n                    return new OrdinalScale(\n                        model.getCategories(), [Infinity, -Infinity]\n                    );\n                case 'value':\n                    return new IntervalScale();\n                // Extended scale, like time and log\n                default:\n                    return (Scale.getClass(axisType) || IntervalScale).create(model);\n            }\n        }\n    };\n\n    /**\n     * Check if the axis corss 0\n     */\n    axisHelper.ifAxisCrossZero = function (axis) {\n        var dataExtent = axis.scale.getExtent();\n        var min = dataExtent[0];\n        var max = dataExtent[1];\n        return !((min > 0 && max > 0) || (min < 0 && max < 0));\n    };\n\n    /**\n     * @param {Array.<number>} tickCoords In axis self coordinate.\n     * @param {Array.<string>} labels\n     * @param {string} font\n     * @param {boolean} isAxisHorizontal\n     * @return {number}\n     */\n    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {\n        // FIXME\n        // 不同角的axis和label，不只是horizontal和vertical.\n\n        var textSpaceTakenRect;\n        var autoLabelInterval = 0;\n        var accumulatedLabelInterval = 0;\n\n        var step = 1;\n        if (labels.length > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.floor(labels.length / 40);\n        }\n\n        for (var i = 0; i < tickCoords.length; i += step) {\n            var tickCoord = tickCoords[i];\n            var rect = textContain.getBoundingRect(\n                labels[i], font, 'center', 'top'\n            );\n            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;\n            // FIXME Magic number 1.5\n            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;\n            if (!textSpaceTakenRect) {\n                textSpaceTakenRect = rect.clone();\n            }\n            // There is no space for current label;\n            else if (textSpaceTakenRect.intersect(rect)) {\n                accumulatedLabelInterval++;\n                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n            }\n            else {\n                textSpaceTakenRect.union(rect);\n                // Reset\n                accumulatedLabelInterval = 0;\n            }\n        }\n        if (autoLabelInterval === 0 && step > 1) {\n            return step;\n        }\n        return (autoLabelInterval + 1) * step - 1;\n    };\n\n    /**\n     * @param {Object} axis\n     * @param {Function} labelFormatter\n     * @return {Array.<string>}\n     */\n    axisHelper.getFormattedLabels = function (axis, labelFormatter) {\n        var scale = axis.scale;\n        var labels = scale.getTicksLabels();\n        var ticks = scale.getTicks();\n        if (typeof labelFormatter === 'string') {\n            labelFormatter = (function (tpl) {\n                return function (val) {\n                    return tpl.replace('{value}', val != null ? val : '');\n                };\n            })(labelFormatter);\n            // Consider empty array\n            return zrUtil.map(labels, labelFormatter);\n        }\n        else if (typeof labelFormatter === 'function') {\n            return zrUtil.map(ticks, function (tick, idx) {\n                return labelFormatter(\n                    axis.type === 'category' ? scale.getLabel(tick) : tick,\n                    idx\n                );\n            }, this);\n        }\n        else {\n            return labels;\n        }\n    };\n\n    module.exports = axisHelper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisHelper.js\n// module id = 343\n// module chunks = 0 1 2 3 4","/**\n * Interval scale\n * @module echarts/scale/Interval\n */\n\n\n\n    var numberUtil = require('../util/number');\n    var formatUtil = require('../util/format');\n    var Scale = require('./Scale');\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n    /**\n     * @alias module:echarts/coord/scale/Interval\n     * @constructor\n     */\n    var IntervalScale = Scale.extend({\n\n        type: 'interval',\n\n        _interval: 0,\n\n        setExtent: function (start, end) {\n            var thisExtent = this._extent;\n            //start,end may be a Number like '25',so...\n            if (!isNaN(start)) {\n                thisExtent[0] = parseFloat(start);\n            }\n            if (!isNaN(end)) {\n                thisExtent[1] = parseFloat(end);\n            }\n        },\n\n        unionExtent: function (other) {\n            var extent = this._extent;\n            other[0] < extent[0] && (extent[0] = other[0]);\n            other[1] > extent[1] && (extent[1] = other[1]);\n\n            // unionExtent may called by it's sub classes\n            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n        },\n        /**\n         * Get interval\n         */\n        getInterval: function () {\n            if (!this._interval) {\n                this.niceTicks();\n            }\n            return this._interval;\n        },\n\n        /**\n         * Set interval\n         */\n        setInterval: function (interval) {\n            this._interval = interval;\n            // Dropped auto calculated niceExtent and use user setted extent\n            // We assume user wan't to set both interval, min, max to get a better result\n            this._niceExtent = this._extent.slice();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            if (!this._interval) {\n                this.niceTicks();\n            }\n            var interval = this._interval;\n            var extent = this._extent;\n            var ticks = [];\n\n            // Consider this case: using dataZoom toolbox, zoom and zoom.\n            var safeLimit = 10000;\n\n            if (interval) {\n                var niceExtent = this._niceExtent;\n                var precision = getPrecisionSafe(interval) + 2;\n\n                if (extent[0] < niceExtent[0]) {\n                    ticks.push(extent[0]);\n                }\n                var tick = niceExtent[0];\n\n                while (tick <= niceExtent[1]) {\n                    ticks.push(tick);\n                    // Avoid rounding error\n                    tick = roundingErrorFix(tick + interval, precision);\n                    if (ticks.length > safeLimit) {\n                        return [];\n                    }\n                }\n                // Consider this case: the last item of ticks is smaller\n                // than niceExtent[1] and niceExtent[1] === extent[1].\n                if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceExtent[1])) {\n                    ticks.push(extent[1]);\n                }\n            }\n\n            return ticks;\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getTicksLabels: function () {\n            var labels = [];\n            var ticks = this.getTicks();\n            for (var i = 0; i < ticks.length; i++) {\n                labels.push(this.getLabel(ticks[i]));\n            }\n            return labels;\n        },\n\n        /**\n         * @param {number} n\n         * @return {number}\n         */\n        getLabel: function (data) {\n            return formatUtil.addCommas(data);\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         *\n         * @param {number} [splitNumber = 5] Desired number of ticks\n         */\n        niceTicks: function (splitNumber) {\n            splitNumber = splitNumber || 5;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (!isFinite(span)) {\n                return;\n            }\n            // User may set axis min 0 and data are all negative\n            // FIXME If it needs to reverse ?\n            if (span < 0) {\n                span = -span;\n                extent.reverse();\n            }\n\n            // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n            // var niceSpan = numberUtil.nice(span, false);\n            var step = roundingErrorFix(\n                numberUtil.nice(span / splitNumber, true),\n                Math.max(\n                    getPrecisionSafe(extent[0]),\n                    getPrecisionSafe(extent[1])\n                // extent may be [0, 1], and step should have 1 more digits.\n                // To make it safe we add 2 more digits\n                ) + 2\n            );\n\n            var precision = getPrecisionSafe(step) + 2;\n            // Niced extent inside original extent\n            var niceExtent = [\n                roundingErrorFix(mathCeil(extent[0] / step) * step, precision),\n                roundingErrorFix(mathFloor(extent[1] / step) * step, precision)\n            ];\n\n            this._interval = step;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {number} [splitNumber = 5] Given approx tick number\n         * @param {boolean} [fixMin=false]\n         * @param {boolean} [fixMax=false]\n         */\n        niceExtent: function (splitNumber, fixMin, fixMax) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                if (extent[0] !== 0) {\n                    // Expand extent\n                    var expandSize = extent[0];\n                    // In the fowllowing case\n                    //      Axis has been fixed max 100\n                    //      Plus data are all 100 and axis extent are [100, 100].\n                    // Extend to the both side will cause expanded max is larger than fixed max.\n                    // So only expand to the smaller side.\n                    if (!fixMax) {\n                        extent[1] += expandSize / 2;\n                        extent[0] -= expandSize / 2;\n                    }\n                    else {\n                        extent[0] -= expandSize / 2;\n                    }\n                }\n                else {\n                    extent[1] = 1;\n                }\n            }\n            var span = extent[1] - extent[0];\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (!isFinite(span)) {\n                extent[0] = 0;\n                extent[1] = 1;\n            }\n\n            this.niceTicks(splitNumber);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!fixMin) {\n                extent[0] = roundingErrorFix(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!fixMax) {\n                extent[1] = roundingErrorFix(mathCeil(extent[1] / interval) * interval);\n            }\n        }\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    IntervalScale.create = function () {\n        return new IntervalScale();\n    };\n\n    module.exports = IntervalScale;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Interval.js\n// module id = 344\n// module chunks = 0 1 2 3 4","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazz = require('./clazz');\n\n    var parseClassType = clazz.parseClassType;\n\n    var base = 0;\n\n    var componentUtil = {};\n\n    var DELIMITER = '_';\n\n    /**\n     * @public\n     * @param {string} type\n     * @return {string}\n     */\n    componentUtil.getUID = function (type) {\n        // Considering the case of crossing js context,\n        // use Math.random to make id as unique as possible.\n        return [(type || ''), base++, Math.random()].join(DELIMITER);\n    };\n\n    /**\n     * @inner\n     */\n    componentUtil.enableSubTypeDefaulter = function (entity) {\n\n        var subTypeDefaulters = {};\n\n        entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n            componentType = parseClassType(componentType);\n            subTypeDefaulters[componentType.main] = defaulter;\n        };\n\n        entity.determineSubType = function (componentType, option) {\n            var type = option.type;\n            if (!type) {\n                var componentTypeMain = parseClassType(componentType).main;\n                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n                    type = subTypeDefaulters[componentTypeMain](option);\n                }\n            }\n            return type;\n        };\n\n        return entity;\n    };\n\n    /**\n     * Topological travel on Activity Network (Activity On Vertices).\n     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n     *\n     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n     *\n     * If there is circle dependencey, Error will be thrown.\n     *\n     */\n    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {\n\n        /**\n         * @public\n         * @param {Array.<string>} targetNameList Target Component type list.\n         *                                           Can be ['aa', 'bb', 'aa.xx']\n         * @param {Array.<string>} fullNameList By which we can build dependency graph.\n         * @param {Function} callback Params: componentType, dependencies.\n         * @param {Object} context Scope of callback.\n         */\n        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n            if (!targetNameList.length) {\n                return;\n            }\n\n            var result = makeDepndencyGraph(fullNameList);\n            var graph = result.graph;\n            var stack = result.noEntryList;\n\n            var targetNameSet = {};\n            zrUtil.each(targetNameList, function (name) {\n                targetNameSet[name] = true;\n            });\n\n            while (stack.length) {\n                var currComponentType = stack.pop();\n                var currVertex = graph[currComponentType];\n                var isInTargetNameSet = !!targetNameSet[currComponentType];\n                if (isInTargetNameSet) {\n                    callback.call(context, currComponentType, currVertex.originalDeps.slice());\n                    delete targetNameSet[currComponentType];\n                }\n                zrUtil.each(\n                    currVertex.successor,\n                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge\n                );\n            }\n\n            zrUtil.each(targetNameSet, function () {\n                throw new Error('Circle dependency may exists');\n            });\n\n            function removeEdge(succComponentType) {\n                graph[succComponentType].entryCount--;\n                if (graph[succComponentType].entryCount === 0) {\n                    stack.push(succComponentType);\n                }\n            }\n\n            // Consider this case: legend depends on series, and we call\n            // chart.setOption({series: [...]}), where only series is in option.\n            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n            // not be called, but only sereis.mergeOption is called. Thus legend\n            // have no chance to update its local record about series (like which\n            // name of series is available in legend).\n            function removeEdgeAndAdd(succComponentType) {\n                targetNameSet[succComponentType] = true;\n                removeEdge(succComponentType);\n            }\n        };\n\n        /**\n         * DepndencyGraph: {Object}\n         * key: conponentType,\n         * value: {\n         *     successor: [conponentTypes...],\n         *     originalDeps: [conponentTypes...],\n         *     entryCount: {number}\n         * }\n         */\n        function makeDepndencyGraph(fullNameList) {\n            var graph = {};\n            var noEntryList = [];\n\n            zrUtil.each(fullNameList, function (name) {\n\n                var thisItem = createDependencyGraphItem(graph, name);\n                var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n\n                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n                thisItem.entryCount = availableDeps.length;\n                if (thisItem.entryCount === 0) {\n                    noEntryList.push(name);\n                }\n\n                zrUtil.each(availableDeps, function (dependentName) {\n                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n                        thisItem.predecessor.push(dependentName);\n                    }\n                    var thatItem = createDependencyGraphItem(graph, dependentName);\n                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n                        thatItem.successor.push(name);\n                    }\n                });\n            });\n\n            return {graph: graph, noEntryList: noEntryList};\n        }\n\n        function createDependencyGraphItem(graph, name) {\n            if (!graph[name]) {\n                graph[name] = {predecessor: [], successor: []};\n            }\n            return graph[name];\n        }\n\n        function getAvailableDependencies(originalDeps, fullNameList) {\n            var availableDeps = [];\n            zrUtil.each(originalDeps, function (dep) {\n                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n            });\n            return availableDeps;\n        }\n    };\n\n    module.exports = componentUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/component.js\n// module id = 345\n// module chunks = 0 1 2 3 4","// https://github.com/mziccard/node-timsort\n\n    var DEFAULT_MIN_MERGE = 32;\n\n    var DEFAULT_MIN_GALLOPING = 7;\n\n    var DEFAULT_TMP_STORAGE_LENGTH = 256;\n\n    function minRunLength(n) {\n        var r = 0;\n\n        while (n >= DEFAULT_MIN_MERGE) {\n            r |= n & 1;\n            n >>= 1;\n        }\n\n        return n + r;\n    }\n\n    function makeAscendingRun(array, lo, hi, compare) {\n        var runHi = lo + 1;\n\n        if (runHi === hi) {\n            return 1;\n        }\n\n        if (compare(array[runHi++], array[lo]) < 0) {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n                runHi++;\n            }\n\n            reverseRun(array, lo, runHi);\n        }\n        else {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n                runHi++;\n            }\n        }\n\n        return runHi - lo;\n    }\n\n    function reverseRun(array, lo, hi) {\n        hi--;\n\n        while (lo < hi) {\n            var t = array[lo];\n            array[lo++] = array[hi];\n            array[hi--] = t;\n        }\n    }\n\n    function binaryInsertionSort(array, lo, hi, start, compare) {\n        if (start === lo) {\n            start++;\n        }\n\n        for (; start < hi; start++) {\n            var pivot = array[start];\n\n            var left = lo;\n            var right = start;\n            var mid;\n\n            while (left < right) {\n                mid = left + right >>> 1;\n\n                if (compare(pivot, array[mid]) < 0) {\n                    right = mid;\n                }\n                else {\n                    left = mid + 1;\n                }\n            }\n\n            var n = start - left;\n\n            switch (n) {\n                case 3:\n                    array[left + 3] = array[left + 2];\n\n                case 2:\n                    array[left + 2] = array[left + 1];\n\n                case 1:\n                    array[left + 1] = array[left];\n                    break;\n                default:\n                    while (n > 0) {\n                        array[left + n] = array[left + n - 1];\n                        n--;\n                    }\n            }\n\n            array[left] = pivot;\n        }\n    }\n\n    function gallopLeft(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) > 0) {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n        else {\n            maxOffset = hint + 1;\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n\n        lastOffset++;\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) > 0) {\n                lastOffset = m + 1;\n            }\n            else {\n                offset = m;\n            }\n        }\n        return offset;\n    }\n\n    function gallopRight(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) < 0) {\n            maxOffset = hint + 1;\n\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n        else {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n\n        lastOffset++;\n\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) < 0) {\n                offset = m;\n            }\n            else {\n                lastOffset = m + 1;\n            }\n        }\n\n        return offset;\n    }\n\n    function TimSort(array, compare) {\n        var minGallop = DEFAULT_MIN_GALLOPING;\n        var length = 0;\n        var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n        var stackLength = 0;\n        var runStart;\n        var runLength;\n        var stackSize = 0;\n\n        length = array.length;\n\n        if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n            tmpStorageLength = length >>> 1;\n        }\n\n        var tmp = [];\n\n        stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n\n        runStart = [];\n        runLength = [];\n\n        function pushRun(_runStart, _runLength) {\n            runStart[stackSize] = _runStart;\n            runLength[stackSize] = _runLength;\n            stackSize += 1;\n        }\n\n        function mergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n                    if (runLength[n - 1] < runLength[n + 1]) {\n                        n--;\n                    }\n                }\n                else if (runLength[n] > runLength[n + 1]) {\n                    break;\n                }\n                mergeAt(n);\n            }\n        }\n\n        function forceMergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n                    n--;\n                }\n\n                mergeAt(n);\n            }\n        }\n\n        function mergeAt(i) {\n            var start1 = runStart[i];\n            var length1 = runLength[i];\n            var start2 = runStart[i + 1];\n            var length2 = runLength[i + 1];\n\n            runLength[i] = length1 + length2;\n\n            if (i === stackSize - 3) {\n                runStart[i + 1] = runStart[i + 2];\n                runLength[i + 1] = runLength[i + 2];\n            }\n\n            stackSize--;\n\n            var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n            start1 += k;\n            length1 -= k;\n\n            if (length1 === 0) {\n                return;\n            }\n\n            length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n            if (length2 === 0) {\n                return;\n            }\n\n            if (length1 <= length2) {\n                mergeLow(start1, length1, start2, length2);\n            }\n            else {\n                mergeHigh(start1, length1, start2, length2);\n            }\n        }\n\n        function mergeLow(start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length1; i++) {\n                tmp[i] = array[start1 + i];\n            }\n\n            var cursor1 = 0;\n            var cursor2 = start2;\n            var dest = start1;\n\n            array[dest++] = array[cursor2++];\n\n            if (--length2 === 0) {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n                return;\n            }\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n                return;\n            }\n\n            var _minGallop = minGallop;\n            var count1, count2, exit;\n\n            while (1) {\n                count1 = 0;\n                count2 = 0;\n                exit = false;\n\n                do {\n                    if (compare(array[cursor2], tmp[cursor1]) < 0) {\n                        array[dest++] = array[cursor2++];\n                        count2++;\n                        count1 = 0;\n\n                        if (--length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest++] = tmp[cursor1++];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n                    if (count1 !== 0) {\n                        for (i = 0; i < count1; i++) {\n                            array[dest + i] = tmp[cursor1 + i];\n                        }\n\n                        dest += count1;\n                        cursor1 += count1;\n                        length1 -= count1;\n                        if (length1 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest++] = array[cursor2++];\n\n                    if (--length2 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n                    if (count2 !== 0) {\n                        for (i = 0; i < count2; i++) {\n                            array[dest + i] = array[cursor2 + i];\n                        }\n\n                        dest += count2;\n                        cursor2 += count2;\n                        length2 -= count2;\n\n                        if (length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    array[dest++] = tmp[cursor1++];\n\n                    if (--length1 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            minGallop < 1 && (minGallop = 1);\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n            }\n            else if (length1 === 0) {\n                throw new Error();\n                // throw new Error('mergeLow preconditions were not respected');\n            }\n            else {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n            }\n        }\n\n        function mergeHigh (start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length2; i++) {\n                tmp[i] = array[start2 + i];\n            }\n\n            var cursor1 = start1 + length1 - 1;\n            var cursor2 = length2 - 1;\n            var dest = start2 + length2 - 1;\n            var customCursor = 0;\n            var customDest = 0;\n\n            array[dest--] = array[cursor1--];\n\n            if (--length1 === 0) {\n                customCursor = dest - (length2 - 1);\n\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n\n                return;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n                return;\n            }\n\n            var _minGallop = minGallop;\n\n            while (true) {\n                var count1 = 0;\n                var count2 = 0;\n                var exit = false;\n\n                do {\n                    if (compare(tmp[cursor2], array[cursor1]) < 0) {\n                        array[dest--] = array[cursor1--];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest--] = tmp[cursor2--];\n                        count2++;\n                        count1 = 0;\n                        if (--length2 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n                    if (count1 !== 0) {\n                        dest -= count1;\n                        cursor1 -= count1;\n                        length1 -= count1;\n                        customDest = dest + 1;\n                        customCursor = cursor1 + 1;\n\n                        for (i = count1 - 1; i >= 0; i--) {\n                            array[customDest + i] = array[customCursor + i];\n                        }\n\n                        if (length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = tmp[cursor2--];\n\n                    if (--length2 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n                    if (count2 !== 0) {\n                        dest -= count2;\n                        cursor2 -= count2;\n                        length2 -= count2;\n                        customDest = dest + 1;\n                        customCursor = cursor2 + 1;\n\n                        for (i = 0; i < count2; i++) {\n                            array[customDest + i] = tmp[customCursor + i];\n                        }\n\n                        if (length2 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = array[cursor1--];\n\n                    if (--length1 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            if (minGallop < 1) {\n                minGallop = 1;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n            }\n            else if (length2 === 0) {\n                throw new Error();\n                // throw new Error('mergeHigh preconditions were not respected');\n            }\n            else {\n                customCursor = dest - (length2 - 1);\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n            }\n        }\n\n        this.mergeRuns = mergeRuns;\n        this.forceMergeRuns = forceMergeRuns;\n        this.pushRun = pushRun;\n    }\n\n    function sort(array, compare, lo, hi) {\n        if (!lo) {\n            lo = 0;\n        }\n        if (!hi) {\n            hi = array.length;\n        }\n\n        var remaining = hi - lo;\n\n        if (remaining < 2) {\n            return;\n        }\n\n        var runLength = 0;\n\n        if (remaining < DEFAULT_MIN_MERGE) {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n            return;\n        }\n\n        var ts = new TimSort(array, compare);\n\n        var minRun = minRunLength(remaining);\n\n        do {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            if (runLength < minRun) {\n                var force = remaining;\n                if (force > minRun) {\n                    force = minRun;\n                }\n\n                binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n                runLength = force;\n            }\n\n            ts.pushRun(lo, runLength);\n            ts.mergeRuns();\n\n            remaining -= runLength;\n            lo += runLength;\n        } while (remaining !== 0);\n\n        ts.forceMergeRuns();\n    }\n\n    module.exports = sort;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/timsort.js\n// module id = 346\n// module chunks = 0 1 2 3 4","/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n\n\n    var zrUtil = require('../core/util');\n\n    var Style = require('./Style');\n\n    var Element = require('../Element');\n    var RectText = require('./mixin/RectText');\n    // var Stateful = require('./mixin/Stateful');\n\n    /**\n     * @alias module:zrender/graphic/Displayable\n     * @extends module:zrender/Element\n     * @extends module:zrender/graphic/mixin/RectText\n     */\n    function Displayable(opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        // Extend properties\n        for (var name in opts) {\n            if (\n                opts.hasOwnProperty(name) &&\n                name !== 'style'\n            ) {\n                this[name] = opts[name];\n            }\n        }\n\n        /**\n         * @type {module:zrender/graphic/Style}\n         */\n        this.style = new Style(opts.style);\n\n        this._rect = null;\n        // Shapes for cascade clipping.\n        this.__clipPaths = [];\n\n        // FIXME Stateful must be mixined after style is setted\n        // Stateful.call(this, opts);\n    }\n\n    Displayable.prototype = {\n\n        constructor: Displayable,\n\n        type: 'displayable',\n\n        /**\n         * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n         * Dirty flag. From which painter will determine if this displayable object needs brush\n         * @name module:zrender/graphic/Displayable#__dirty\n         * @type {boolean}\n         */\n        __dirty: true,\n\n        /**\n         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n         * If ignore drawing of the displayable object. Mouse event will still be triggered\n         * @name module:/zrender/graphic/Displayable#invisible\n         * @type {boolean}\n         * @default false\n         */\n        invisible: false,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z: 0,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z2: 0,\n\n        /**\n         * z层level，决定绘画在哪层canvas中\n         * @name module:/zrender/graphic/Displayable#zlevel\n         * @type {number}\n         * @default 0\n         */\n        zlevel: 0,\n\n        /**\n         * 是否可拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        draggable: false,\n\n        /**\n         * 是否正在拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        dragging: false,\n\n        /**\n         * 是否相应鼠标事件\n         * @name module:/zrender/graphic/Displayable#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * If enable culling\n         * @type {boolean}\n         * @default false\n         */\n        culling: false,\n\n        /**\n         * Mouse cursor when hovered\n         * @name module:/zrender/graphic/Displayable#cursor\n         * @type {string}\n         */\n        cursor: 'pointer',\n\n        /**\n         * If hover area is bounding rect\n         * @name module:/zrender/graphic/Displayable#rectHover\n         * @type {string}\n         */\n        rectHover: false,\n\n        /**\n         * Render the element progressively when the value >= 0,\n         * usefull for large data.\n         * @type {number}\n         */\n        progressive: -1,\n\n        beforeBrush: function (ctx) {},\n\n        afterBrush: function (ctx) {},\n\n        /**\n         * 图形绘制方法\n         * @param {Canvas2DRenderingContext} ctx\n         */\n        // Interface\n        brush: function (ctx, prevEl) {},\n\n        /**\n         * 获取最小包围盒\n         * @return {module:zrender/core/BoundingRect}\n         */\n        // Interface\n        getBoundingRect: function () {},\n\n        /**\n         * 判断坐标 x, y 是否在图形上\n         * If displayable element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        contain: function (x, y) {\n            return this.rectContain(x, y);\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            cb.call(context, this);\n        },\n\n        /**\n         * 判断坐标 x, y 是否在图形的包围盒上\n         * If bounding rect of element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        rectContain: function (x, y) {\n            var coord = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            return rect.contain(coord[0], coord[1]);\n        },\n\n        /**\n         * 标记图形元素为脏，并且在下一帧重绘\n         * Mark displayable element dirty and refresh next frame\n         */\n        dirty: function () {\n            this.__dirty = true;\n\n            this._rect = null;\n\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * 图形是否会触发事件\n         * If displayable object binded any event\n         * @return {boolean}\n         */\n        // TODO, 通过 bind 绑定的事件\n        // isSilent: function () {\n        //     return !(\n        //         this.hoverable || this.draggable\n        //         || this.onmousemove || this.onmouseover || this.onmouseout\n        //         || this.onmousedown || this.onmouseup || this.onclick\n        //         || this.ondragenter || this.ondragover || this.ondragleave\n        //         || this.ondrop\n        //     );\n        // },\n        /**\n         * Alias for animate('style')\n         * @param {boolean} loop\n         */\n        animateStyle: function (loop) {\n            return this.animate('style', loop);\n        },\n\n        attrKV: function (key, value) {\n            if (key !== 'style') {\n                Element.prototype.attrKV.call(this, key, value);\n            }\n            else {\n                this.style.set(value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setStyle: function (key, value) {\n            this.style.set(key, value);\n            this.dirty(false);\n            return this;\n        },\n\n        /**\n         * Use given style object\n         * @param  {Object} obj\n         */\n        useStyle: function (obj) {\n            this.style = new Style(obj);\n            this.dirty(false);\n            return this;\n        }\n    };\n\n    zrUtil.inherits(Displayable, Element);\n\n    zrUtil.mixin(Displayable, RectText);\n    // zrUtil.mixin(Displayable, Stateful);\n\n    module.exports = Displayable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Displayable.js\n// module id = 347\n// module chunks = 0 1 2 3 4","\n\n    /**\n     * @param {Array.<Object>} colorStops\n     */\n    var Gradient = function (colorStops) {\n\n        this.colorStops = colorStops || [];\n    };\n\n    Gradient.prototype = {\n\n        constructor: Gradient,\n\n        addColorStop: function (offset, color) {\n            this.colorStops.push({\n\n                offset: offset,\n\n                color: color\n            });\n        }\n    };\n\n    module.exports = Gradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Gradient.js\n// module id = 348\n// module chunks = 0 1 2 3 4","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../util/format');\n    var classUtil = require('../util/clazz');\n    var modelUtil = require('../util/model');\n    var ComponentModel = require('./Component');\n    var colorPaletteMixin = require('./mixin/colorPalette');\n    var env = require('zrender/lib/core/env');\n    var layout = require('../util/layout');\n\n    var set = classUtil.set;\n    var get = classUtil.get;\n    var encodeHTML = formatUtil.encodeHTML;\n    var addCommas = formatUtil.addCommas;\n\n    var SeriesModel = ComponentModel.extend({\n\n        type: 'series.__base__',\n\n        /**\n         * @readOnly\n         */\n        seriesIndex: 0,\n\n        // coodinateSystem will be injected in the echarts/CoordinateSystem\n        coordinateSystem: null,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * Data provided for legend\n         * @type {Function}\n         */\n        // PENDING\n        legendDataProvider: null,\n\n        /**\n         * Access path of color for visual\n         */\n        visualColorAccessPath: 'itemStyle.normal.color',\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            /**\n             * @type {number}\n             * @readOnly\n             */\n            this.seriesIndex = this.componentIndex;\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            /**\n             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n             * @private\n             */\n            set(this, 'dataBeforeProcessed', this.getInitialData(option, ecModel));\n\n            // If we reverse the order (make data firstly, and then make\n            // dataBeforeProcessed by cloneShallow), cloneShallow will\n            // cause data.graph.data !== data when using\n            // module:echarts/data/Graph or module:echarts/data/Tree.\n            // See module:echarts/data/helper/linkList\n            this.restoreData();\n        },\n\n        /**\n         * Util for merge default and theme to option\n         * @param  {Object} option\n         * @param  {module:echarts/model/Global} ecModel\n         */\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            zrUtil.merge(\n                option,\n                ecModel.getTheme().get(this.subType)\n            );\n            zrUtil.merge(option, this.getDefaultOption());\n\n            // Default label emphasis `position` and `show`\n            // FIXME Set label in mergeOption\n            modelUtil.defaultEmphasis(option.label, modelUtil.LABEL_OPTIONS);\n\n            this.fillDataTextStyle(option.data);\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (newSeriesOption, ecModel) {\n            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n            this.fillDataTextStyle(newSeriesOption.data);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n            }\n\n            var data = this.getInitialData(newSeriesOption, ecModel);\n            // TODO Merge data?\n            if (data) {\n                set(this, 'data', data);\n                set(this, 'dataBeforeProcessed', data.cloneShallow());\n            }\n        },\n\n        fillDataTextStyle: function (data) {\n            // Default data label emphasis `position` and `show`\n            // FIXME Tree structure data ?\n            // FIXME Performance ?\n            if (data) {\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i] && data[i].label) {\n                        modelUtil.defaultEmphasis(data[i].label, modelUtil.LABEL_OPTIONS);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Init a data structure from data related option in series\n         * Must be overwritten\n         */\n        getInitialData: function () {},\n\n        /**\n         * @param {string} [dataType]\n         * @return {module:echarts/data/List}\n         */\n        getData: function (dataType) {\n            var data = get(this, 'data');\n            return dataType == null ? data : data.getLinkedData(dataType);\n        },\n\n        /**\n         * @param {module:echarts/data/List} data\n         */\n        setData: function (data) {\n            set(this, 'data', data);\n        },\n\n        /**\n         * Get data before processed\n         * @return {module:echarts/data/List}\n         */\n        getRawData: function () {\n            return get(this, 'dataBeforeProcessed');\n        },\n\n        /**\n         * Coord dimension to data dimension.\n         *\n         * By default the result is the same as dimensions of series data.\n         * But in some series data dimensions are different from coord dimensions (i.e.\n         * candlestick and boxplot). Override this method to handle those cases.\n         *\n         * Coord dimension to data dimension can be one-to-many\n         *\n         * @param {string} coordDim\n         * @return {Array.<string>} dimensions on the axis.\n         */\n        coordDimToDataDim: function (coordDim) {\n            return [coordDim];\n        },\n\n        /**\n         * Convert data dimension to coord dimension.\n         *\n         * @param {string|number} dataDim\n         * @return {string}\n         */\n        dataDimToCoordDim: function (dataDim) {\n            return dataDim;\n        },\n\n        /**\n         * Get base axis if has coordinate system and has axis.\n         * By default use coordSys.getBaseAxis();\n         * Can be overrided for some chart.\n         * @return {type} description\n         */\n        getBaseAxis: function () {\n            var coordSys = this.coordinateSystem;\n            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n        },\n\n        // FIXME\n        /**\n         * Default tooltip formatter\n         *\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         */\n        formatTooltip: function (dataIndex, multipleSeries, dataType) {\n            function formatArrayValue(value) {\n                var result = [];\n\n                zrUtil.each(value, function (val, idx) {\n                    var dimInfo = data.getDimensionInfo(idx);\n                    var dimType = dimInfo && dimInfo.type;\n                    var valStr;\n\n                    if (dimType === 'ordinal') {\n                        valStr = val + '';\n                    }\n                    else if (dimType === 'time') {\n                        valStr = multipleSeries ? '' : formatUtil.formatTime('yyyy/MM/dd hh:mm:ss', val);\n                    }\n                    else {\n                        valStr = addCommas(val);\n                    }\n\n                    valStr && result.push(valStr);\n                });\n\n                return result.join(', ');\n            }\n\n            var data = get(this, 'data');\n\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = encodeHTML(\n                zrUtil.isArray(value) ? formatArrayValue(value) : addCommas(value)\n            );\n            var name = data.getName(dataIndex);\n\n            var color = data.getItemVisual(dataIndex, 'color');\n            if (zrUtil.isObject(color) && color.colorStops) {\n                color = (color.colorStops[0] || {}).color;\n            }\n            color = color || 'transparent';\n\n            var colorEl = '<span style=\"display:inline-block;margin-right:5px;'\n                + 'border-radius:10px;width:9px;height:9px;background-color:' + encodeHTML(color) + '\"></span>';\n\n            var seriesName = this.name;\n            // FIXME\n            if (seriesName === '\\0-') {\n                // Not show '-'\n                seriesName = '';\n            }\n            return !multipleSeries\n                ? ((seriesName && encodeHTML(seriesName) + '<br />') + colorEl\n                    + (name\n                        ? encodeHTML(name) + ' : ' + formattedValue\n                        : formattedValue\n                    )\n                  )\n                : (colorEl + encodeHTML(this.name) + ' : ' + formattedValue);\n        },\n\n        /**\n         * @return {boolean}\n         */\n        isAnimationEnabled: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var animationEnabled = this.getShallow('animation');\n            if (animationEnabled) {\n                if (this.getData().count() > this.getShallow('animationThreshold')) {\n                    animationEnabled = false;\n                }\n            }\n            return animationEnabled;\n        },\n\n        restoreData: function () {\n            set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n        },\n\n        getColorFromPalette: function (name, scope) {\n            var ecModel = this.ecModel;\n            // PENDING\n            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n            if (!color) {\n                color = ecModel.getColorFromPalette(name, scope);\n            }\n            return color;\n        },\n\n        /**\n         * Get data indices for show tooltip content. See tooltip.\n         * @abstract\n         * @param {Array.<string>|string} dim\n         * @param {Array.<number>} value\n         * @param {module:echarts/coord/single/SingleAxis} baseAxis\n         * @return {Array.<number>} data indices.\n         */\n        getAxisTooltipDataIndex: null,\n\n        /**\n         * See tooltip.\n         * @abstract\n         * @param {number} dataIndex\n         * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n         */\n        getTooltipPosition: null\n    });\n\n    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\n    zrUtil.mixin(SeriesModel, colorPaletteMixin);\n\n    module.exports = SeriesModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Series.js\n// module id = 349\n// module chunks = 0 1 2 3 4","/**\n * List for data storage\n * @module echarts/data/List\n */\n\n\n    var UNDEFINED = 'undefined';\n    var globalObj = typeof window === 'undefined' ? global : window;\n    var Float64Array = typeof globalObj.Float64Array === UNDEFINED\n        ? Array : globalObj.Float64Array;\n    var Int32Array = typeof globalObj.Int32Array === UNDEFINED\n        ? Array : globalObj.Int32Array;\n\n    var dataCtors = {\n        'float': Float64Array,\n        'int': Int32Array,\n        // Ordinal data type can be string or int\n        'ordinal': Array,\n        'number': Array,\n        'time': Array\n    };\n\n    var Model = require('../model/Model');\n    var DataDiffer = require('./DataDiffer');\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var isObject = zrUtil.isObject;\n\n    var TRANSFERABLE_PROPERTIES = [\n        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'\n    ];\n\n    var transferProperties = function (a, b) {\n        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n            if (b.hasOwnProperty(propName)) {\n                a[propName] = b[propName];\n            }\n        });\n\n        a.__wrappedMethods = b.__wrappedMethods;\n    };\n\n    /**\n     * @constructor\n     * @alias module:echarts/data/List\n     *\n     * @param {Array.<string>} dimensions\n     *        Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n     * @param {module:echarts/model/Model} hostModel\n     */\n    var List = function (dimensions, hostModel) {\n\n        dimensions = dimensions || ['x', 'y'];\n\n        var dimensionInfos = {};\n        var dimensionNames = [];\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimensionName;\n            var dimensionInfo = {};\n            if (typeof dimensions[i] === 'string') {\n                dimensionName = dimensions[i];\n                dimensionInfo = {\n                    name: dimensionName,\n                    stackable: false,\n                    // Type can be 'float', 'int', 'number'\n                    // Default is number, Precision of float may not enough\n                    type: 'number'\n                };\n            }\n            else {\n                dimensionInfo = dimensions[i];\n                dimensionName = dimensionInfo.name;\n                dimensionInfo.type = dimensionInfo.type || 'number';\n            }\n            dimensionNames.push(dimensionName);\n            dimensionInfos[dimensionName] = dimensionInfo;\n        }\n        /**\n         * @readOnly\n         * @type {Array.<string>}\n         */\n        this.dimensions = dimensionNames;\n\n        /**\n         * Infomation of each data dimension, like data type.\n         * @type {Object}\n         */\n        this._dimensionInfos = dimensionInfos;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.hostModel = hostModel;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.dataType;\n\n        /**\n         * Indices stores the indices of data subset after filtered.\n         * This data subset will be used in chart.\n         * @type {Array.<number>}\n         * @readOnly\n         */\n        this.indices = [];\n\n        /**\n         * Data storage\n         * @type {Object.<key, TypedArray|Array>}\n         * @private\n         */\n        this._storage = {};\n\n        /**\n         * @type {Array.<string>}\n         */\n        this._nameList = [];\n        /**\n         * @type {Array.<string>}\n         */\n        this._idList = [];\n        /**\n         * Models of data option is stored sparse for optimizing memory cost\n         * @type {Array.<module:echarts/model/Model>}\n         * @private\n         */\n        this._optionModels = [];\n\n        /**\n         * @param {module:echarts/data/List}\n         */\n        this.stackedOn = null;\n\n        /**\n         * Global visual properties after visual coding\n         * @type {Object}\n         * @private\n         */\n        this._visual = {};\n\n        /**\n         * Globel layout properties.\n         * @type {Object}\n         * @private\n         */\n        this._layout = {};\n\n        /**\n         * Item visual properties after visual coding\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemVisuals = [];\n\n        /**\n         * Item layout properties after layout\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemLayouts = [];\n\n        /**\n         * Graphic elemnents\n         * @type {Array.<module:zrender/Element>}\n         * @private\n         */\n        this._graphicEls = [];\n\n        /**\n         * @type {Array.<Array|Object>}\n         * @private\n         */\n        this._rawData;\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._extent;\n    };\n\n    var listProto = List.prototype;\n\n    listProto.type = 'list';\n    /**\n     * If each data item has it's own option\n     * @type {boolean}\n     */\n    listProto.hasItemOption = true;\n\n    /**\n     * Get dimension name\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     * @return {string} Concrete dim name.\n     */\n    listProto.getDimension = function (dim) {\n        if (!isNaN(dim)) {\n            dim = this.dimensions[dim] || dim;\n        }\n        return dim;\n    };\n    /**\n     * Get type and stackable info of particular dimension\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     */\n    listProto.getDimensionInfo = function (dim) {\n        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n    };\n\n    /**\n     * Initialize from data\n     * @param {Array.<Object|number|Array>} data\n     * @param {Array.<string>} [nameList]\n     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n     */\n    listProto.initData = function (data, nameList, dimValueGetter) {\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        this._rawData = data;\n\n        // Clear\n        var storage = this._storage = {};\n        var indices = this.indices = [];\n\n        var dimensions = this.dimensions;\n        var size = data.length;\n        var dimensionInfoMap = this._dimensionInfos;\n\n        var idList = [];\n        var nameRepeatCount = {};\n\n        nameList = nameList || [];\n\n        // Init storage\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimInfo = dimensionInfoMap[dimensions[i]];\n            var DataCtor = dataCtors[dimInfo.type];\n            storage[dimensions[i]] = new DataCtor(size);\n        }\n\n        var self = this;\n        if (!dimValueGetter) {\n            self.hasItemOption = false;\n        }\n        // Default dim value getter\n        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n            var value = modelUtil.getDataItemValue(dataItem);\n            // If any dataItem is like { value: 10 }\n            if (modelUtil.isDataItemOption(dataItem)) {\n                self.hasItemOption = true;\n            }\n            return modelUtil.converDataValue(\n                (value instanceof Array)\n                    ? value[dimIndex]\n                    // If value is a single number or something else not array.\n                    : value,\n                dimensionInfoMap[dimName]\n            );\n        };\n\n        for (var idx = 0; idx < data.length; idx++) {\n            var dataItem = data[idx];\n            // Each data item is value\n            // [1, 2]\n            // 2\n            // Bar chart, line chart which uses category axis\n            // only gives the 'y' value. 'x' value is the indices of cateogry\n            // Use a tempValue to normalize the value to be a (x, y) value\n\n            // Store the data by dimensions\n            for (var k = 0; k < dimensions.length; k++) {\n                var dim = dimensions[k];\n                var dimStorage = storage[dim];\n                // PENDING NULL is empty or zero\n                dimStorage[idx] = dimValueGetter(dataItem, dim, idx, k);\n            }\n\n            indices.push(idx);\n        }\n\n        // Use the name in option and create id\n        for (var i = 0; i < data.length; i++) {\n            if (!nameList[i]) {\n                if (data[i] && data[i].name != null) {\n                    nameList[i] = data[i].name;\n                }\n            }\n            var name = nameList[i] || '';\n            // Try using the id in option\n            var id = data[i] && data[i].id;\n\n            if (!id && name) {\n                // Use name as id and add counter to avoid same name\n                nameRepeatCount[name] = nameRepeatCount[name] || 0;\n                id = name;\n                if (nameRepeatCount[name] > 0) {\n                    id += '__ec__' + nameRepeatCount[name];\n                }\n                nameRepeatCount[name]++;\n            }\n            id && (idList[i] = id);\n        }\n\n        this._nameList = nameList;\n        this._idList = idList;\n    };\n\n    /**\n     * @return {number}\n     */\n    listProto.count = function () {\n        return this.indices.length;\n    };\n\n    /**\n     * Get value. Return NaN if idx is out of range.\n     * @param {string} dim Dim must be concrete name.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.get = function (dim, idx, stack) {\n        var storage = this._storage;\n        var dataIndex = this.indices[idx];\n\n        // If value not exists\n        if (dataIndex == null) {\n            return NaN;\n        }\n\n        var value = storage[dim] && storage[dim][dataIndex];\n        // FIXME ordinal data type is not stackable\n        if (stack) {\n            var dimensionInfo = this._dimensionInfos[dim];\n            if (dimensionInfo && dimensionInfo.stackable) {\n                var stackedOn = this.stackedOn;\n                while (stackedOn) {\n                    // Get no stacked data of stacked on\n                    var stackedValue = stackedOn.get(dim, idx);\n                    // Considering positive stack, negative stack and empty data\n                    if ((value >= 0 && stackedValue > 0)  // Positive stack\n                        || (value <= 0 && stackedValue < 0) // Negative stack\n                    ) {\n                        value += stackedValue;\n                    }\n                    stackedOn = stackedOn.stackedOn;\n                }\n            }\n        }\n        return value;\n    };\n\n    /**\n     * Get value for multi dimensions.\n     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.getValues = function (dimensions, idx, stack) {\n        var values = [];\n\n        if (!zrUtil.isArray(dimensions)) {\n            stack = idx;\n            idx = dimensions;\n            dimensions = this.dimensions;\n        }\n\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            values.push(this.get(dimensions[i], idx, stack));\n        }\n\n        return values;\n    };\n\n    /**\n     * If value is NaN. Inlcuding '-'\n     * @param {string} dim\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.hasValue = function (idx) {\n        var dimensions = this.dimensions;\n        var dimensionInfos = this._dimensionInfos;\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            if (\n                // Ordinal type can be string or number\n                dimensionInfos[dimensions[i]].type !== 'ordinal'\n                && isNaN(this.get(dimensions[i], idx))\n            ) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * Get extent of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     * @param {Function} filter\n     */\n    listProto.getDataExtent = function (dim, stack, filter) {\n        dim = this.getDimension(dim);\n        var dimData = this._storage[dim];\n        var dimInfo = this.getDimensionInfo(dim);\n        stack = (dimInfo && dimInfo.stackable) && stack;\n        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];\n        var value;\n        if (dimExtent) {\n            return dimExtent;\n        }\n        // var dimInfo = this._dimensionInfos[dim];\n        if (dimData) {\n            var min = Infinity;\n            var max = -Infinity;\n            // var isOrdinal = dimInfo.type === 'ordinal';\n            for (var i = 0, len = this.count(); i < len; i++) {\n                value = this.get(dim, i, stack);\n                // FIXME\n                // if (isOrdinal && typeof value === 'string') {\n                //     value = zrUtil.indexOf(dimData, value);\n                // }\n                if (!filter || filter(value, dim, i)) {\n                    value < min && (min = value);\n                    value > max && (max = value);\n                }\n            }\n            return (this._extent[dim + !!stack] = [min, max]);\n        }\n        else {\n            return [Infinity, -Infinity];\n        }\n    };\n\n    /**\n     * Get sum of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     */\n    listProto.getSum = function (dim, stack) {\n        var dimData = this._storage[dim];\n        var sum = 0;\n        if (dimData) {\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var value = this.get(dim, i, stack);\n                if (!isNaN(value)) {\n                    sum += value;\n                }\n            }\n        }\n        return sum;\n    };\n\n    /**\n     * Retreive the index with given value\n     * @param {number} idx\n     * @param {number} value\n     * @return {number}\n     */\n    // FIXME Precision of float value\n    listProto.indexOf = function (dim, value) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var indices = this.indices;\n\n        if (dimData) {\n            for (var i = 0, len = indices.length; i < len; i++) {\n                var rawIndex = indices[i];\n                if (dimData[rawIndex] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given name\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfName = function (name) {\n        var indices = this.indices;\n        var nameList = this._nameList;\n\n        for (var i = 0, len = indices.length; i < len; i++) {\n            var rawIndex = indices[i];\n            if (nameList[rawIndex] === name) {\n                return i;\n            }\n        }\n\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given raw data index\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfRawIndex = function (rawIndex) {\n        // Indices are ascending\n        var indices = this.indices;\n\n        // If rawIndex === dataIndex\n        var rawDataIndex = indices[rawIndex];\n        if (rawDataIndex != null && rawDataIndex === rawIndex) {\n            return rawIndex;\n        }\n\n        var left = 0;\n        var right = indices.length - 1;\n        while (left <= right) {\n            var mid = (left + right) / 2 | 0;\n            if (indices[mid] < rawIndex) {\n                left = mid + 1;\n            }\n            else if (indices[mid] > rawIndex) {\n                right = mid - 1;\n            }\n            else {\n                return mid;\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index of nearest value\n     * @param {string} dim\n     * @param {number} value\n     * @param {boolean} stack If given value is after stacked\n     * @param {number} [maxDistance=Infinity]\n     * @return {number}\n     */\n    listProto.indexOfNearest = function (dim, value, stack, maxDistance) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n\n        if (maxDistance == null) {\n            maxDistance = Infinity;\n        }\n\n        var nearestIdx = -1;\n        if (dimData) {\n            var minDist = Number.MAX_VALUE;\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var diff = value - this.get(dim, i, stack);\n                var dist = Math.abs(diff);\n                if (\n                    diff <= maxDistance\n                    && (dist < minDist\n                        // For the case of two data are same on xAxis, which has sequence data.\n                        // Show the nearest index\n                        // https://github.com/ecomfe/echarts/issues/2869\n                        || (dist === minDist && diff > 0)\n                    )\n                ) {\n                    minDist = dist;\n                    nearestIdx = i;\n                }\n            }\n        }\n        return nearestIdx;\n    };\n\n    /**\n     * Get raw data index\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawIndex = function (idx) {\n        var rawIdx = this.indices[idx];\n        return rawIdx == null ? -1 : rawIdx;\n    };\n\n    /**\n     * Get raw data item\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawDataItem = function (idx) {\n        return this._rawData[this.getRawIndex(idx)];\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getName = function (idx) {\n        return this._nameList[this.indices[idx]] || '';\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getId = function (idx) {\n        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');\n    };\n\n\n    function normalizeDimensions(dimensions) {\n        if (!zrUtil.isArray(dimensions)) {\n            dimensions = [dimensions];\n        }\n        return dimensions;\n    }\n\n    /**\n     * Data iteration\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     *\n     * @example\n     *  list.each('x', function (x, idx) {});\n     *  list.each(['x', 'y'], function (x, y, idx) {});\n     *  list.each(function (idx) {})\n     */\n    listProto.each = function (dims, cb, stack, context) {\n        if (typeof dims === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dims;\n            dims = [];\n        }\n\n        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n\n        var value = [];\n        var dimSize = dims.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            // Simple optimization\n            switch (dimSize) {\n                case 0:\n                    cb.call(context, i);\n                    break;\n                case 1:\n                    cb.call(context, this.get(dims[0], i, stack), i);\n                    break;\n                case 2:\n                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n                    break;\n                default:\n                    for (var k = 0; k < dimSize; k++) {\n                        value[k] = this.get(dims[k], i, stack);\n                    }\n                    // Index\n                    value[k] = i;\n                    cb.apply(context, value);\n            }\n        }\n    };\n\n    /**\n     * Data filter\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     */\n    listProto.filterSelf = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var newIndices = [];\n        var value = [];\n        var dimSize = dimensions.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            var keep;\n            // Simple optimization\n            if (dimSize === 1) {\n                keep = cb.call(\n                    context, this.get(dimensions[0], i, stack), i\n                );\n            }\n            else {\n                for (var k = 0; k < dimSize; k++) {\n                    value[k] = this.get(dimensions[k], i, stack);\n                }\n                value[k] = i;\n                keep = cb.apply(context, value);\n            }\n            if (keep) {\n                newIndices.push(indices[i]);\n            }\n        }\n\n        this.indices = newIndices;\n\n        // Reset data extent\n        this._extent = {};\n\n        return this;\n    };\n\n    /**\n     * Data mapping to a plain array\n     * @param {string|Array.<string>} [dimensions]\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.mapArray = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        var result = [];\n        this.each(dimensions, function () {\n            result.push(cb && cb.apply(this, arguments));\n        }, stack, context);\n        return result;\n    };\n\n    function cloneListForMapAndSample(original, excludeDimensions) {\n        var allDimensions = original.dimensions;\n        var list = new List(\n            zrUtil.map(allDimensions, original.getDimensionInfo, original),\n            original.hostModel\n        );\n        // FIXME If needs stackedOn, value may already been stacked\n        transferProperties(list, original);\n\n        var storage = list._storage = {};\n        var originalStorage = original._storage;\n        // Init storage\n        for (var i = 0; i < allDimensions.length; i++) {\n            var dim = allDimensions[i];\n            var dimStore = originalStorage[dim];\n            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n                storage[dim] = new dimStore.constructor(\n                    originalStorage[dim].length\n                );\n            }\n            else {\n                // Direct reference for other dimensions\n                storage[dim] = originalStorage[dim];\n            }\n        }\n        return list;\n    }\n\n    /**\n     * Data mapping to a new List with given dimensions\n     * @param {string|Array.<string>} dimensions\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.map = function (dimensions, cb, stack, context) {\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var list = cloneListForMapAndSample(this, dimensions);\n        // Following properties are all immutable.\n        // So we can reference to the same value\n        var indices = list.indices = this.indices;\n\n        var storage = list._storage;\n\n        var tmpRetValue = [];\n        this.each(dimensions, function () {\n            var idx = arguments[arguments.length - 1];\n            var retValue = cb && cb.apply(this, arguments);\n            if (retValue != null) {\n                // a number\n                if (typeof retValue === 'number') {\n                    tmpRetValue[0] = retValue;\n                    retValue = tmpRetValue;\n                }\n                for (var i = 0; i < retValue.length; i++) {\n                    var dim = dimensions[i];\n                    var dimStore = storage[dim];\n                    var rawIdx = indices[idx];\n                    if (dimStore) {\n                        dimStore[rawIdx] = retValue[i];\n                    }\n                }\n            }\n        }, stack, context);\n\n        return list;\n    };\n\n    /**\n     * Large data down sampling on given dimension\n     * @param {string} dimension\n     * @param {number} rate\n     * @param {Function} sampleValue\n     * @param {Function} sampleIndex Sample index for name and id\n     */\n    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n        var list = cloneListForMapAndSample(this, [dimension]);\n        var storage = this._storage;\n        var targetStorage = list._storage;\n\n        var originalIndices = this.indices;\n        var indices = list.indices = [];\n\n        var frameValues = [];\n        var frameIndices = [];\n        var frameSize = Math.floor(1 / rate);\n\n        var dimStore = targetStorage[dimension];\n        var len = this.count();\n        // Copy data from original data\n        for (var i = 0; i < storage[dimension].length; i++) {\n            targetStorage[dimension][i] = storage[dimension][i];\n        }\n        for (var i = 0; i < len; i += frameSize) {\n            // Last frame\n            if (frameSize > len - i) {\n                frameSize = len - i;\n                frameValues.length = frameSize;\n            }\n            for (var k = 0; k < frameSize; k++) {\n                var idx = originalIndices[i + k];\n                frameValues[k] = dimStore[idx];\n                frameIndices[k] = idx;\n            }\n            var value = sampleValue(frameValues);\n            var idx = frameIndices[sampleIndex(frameValues, value) || 0];\n            // Only write value on the filtered data\n            dimStore[idx] = value;\n            indices.push(idx);\n        }\n\n        return list;\n    };\n\n    /**\n     * Get model of one data item.\n     *\n     * @param {number} idx\n     */\n    // FIXME Model proxy ?\n    listProto.getItemModel = function (idx) {\n        var hostModel = this.hostModel;\n        idx = this.indices[idx];\n        return new Model(this._rawData[idx], hostModel, hostModel && hostModel.ecModel);\n    };\n\n    /**\n     * Create a data differ\n     * @param {module:echarts/data/List} otherList\n     * @return {module:echarts/data/DataDiffer}\n     */\n    listProto.diff = function (otherList) {\n        var idList = this._idList;\n        var otherIdList = otherList && otherList._idList;\n        var val;\n        // Use prefix to avoid index to be the same as otherIdList[idx],\n        // which will cause weird udpate animation.\n        var prefix = 'e\\0\\0';\n\n        return new DataDiffer(\n            otherList ? otherList.indices : [],\n            this.indices,\n            function (idx) {\n                return (val = otherIdList[idx]) != null ? val : prefix + idx;\n            },\n            function (idx) {\n                return (val = idList[idx]) != null ? val : prefix + idx;\n            }\n        );\n    };\n    /**\n     * Get visual property.\n     * @param {string} key\n     */\n    listProto.getVisual = function (key) {\n        var visual = this._visual;\n        return visual && visual[key];\n    };\n\n    /**\n     * Set visual property\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setVisual('color', color);\n     *  setVisual({\n     *      'color': color\n     *  });\n     */\n    listProto.setVisual = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setVisual(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._visual = this._visual || {};\n        this._visual[key] = val;\n    };\n\n    /**\n     * Set layout property.\n     * @param {string} key\n     * @param {*} [val]\n     */\n    listProto.setLayout = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setLayout(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._layout[key] = val;\n    };\n\n    /**\n     * Get layout property.\n     * @param  {string} key.\n     * @return {*}\n     */\n    listProto.getLayout = function (key) {\n        return this._layout[key];\n    };\n\n    /**\n     * Get layout of single data item\n     * @param {number} idx\n     */\n    listProto.getItemLayout = function (idx) {\n        return this._itemLayouts[idx];\n    };\n\n    /**\n     * Set layout of single data item\n     * @param {number} idx\n     * @param {Object} layout\n     * @param {boolean=} [merge=false]\n     */\n    listProto.setItemLayout = function (idx, layout, merge) {\n        this._itemLayouts[idx] = merge\n            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)\n            : layout;\n    };\n\n    /**\n     * Clear all layout of single data item\n     */\n    listProto.clearItemLayouts = function () {\n        this._itemLayouts.length = 0;\n    };\n\n    /**\n     * Get visual property of single data item\n     * @param {number} idx\n     * @param {string} key\n     * @param {boolean} ignoreParent\n     */\n    listProto.getItemVisual = function (idx, key, ignoreParent) {\n        var itemVisual = this._itemVisuals[idx];\n        var val = itemVisual && itemVisual[key];\n        if (val == null && !ignoreParent) {\n            // Use global visual property\n            return this.getVisual(key);\n        }\n        return val;\n    };\n\n    /**\n     * Set visual property of single data item\n     *\n     * @param {number} idx\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setItemVisual(0, 'color', color);\n     *  setItemVisual(0, {\n     *      'color': color\n     *  });\n     */\n    listProto.setItemVisual = function (idx, key, value) {\n        var itemVisual = this._itemVisuals[idx] || {};\n        this._itemVisuals[idx] = itemVisual;\n\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    itemVisual[name] = key[name];\n                }\n            }\n            return;\n        }\n        itemVisual[key] = value;\n    };\n\n    /**\n     * Clear itemVisuals and list visual.\n     */\n    listProto.clearAllVisual = function () {\n        this._visual = {};\n        this._itemVisuals = [];\n    };\n\n    var setItemDataAndSeriesIndex = function (child) {\n        child.seriesIndex = this.seriesIndex;\n        child.dataIndex = this.dataIndex;\n        child.dataType = this.dataType;\n    };\n    /**\n     * Set graphic element relative to data. It can be set as null\n     * @param {number} idx\n     * @param {module:zrender/Element} [el]\n     */\n    listProto.setItemGraphicEl = function (idx, el) {\n        var hostModel = this.hostModel;\n\n        if (el) {\n            // Add data index and series index for indexing the data by element\n            // Useful in tooltip\n            el.dataIndex = idx;\n            el.dataType = this.dataType;\n            el.seriesIndex = hostModel && hostModel.seriesIndex;\n            if (el.type === 'group') {\n                el.traverse(setItemDataAndSeriesIndex, el);\n            }\n        }\n\n        this._graphicEls[idx] = el;\n    };\n\n    /**\n     * @param {number} idx\n     * @return {module:zrender/Element}\n     */\n    listProto.getItemGraphicEl = function (idx) {\n        return this._graphicEls[idx];\n    };\n\n    /**\n     * @param {Function} cb\n     * @param {*} context\n     */\n    listProto.eachItemGraphicEl = function (cb, context) {\n        zrUtil.each(this._graphicEls, function (el, idx) {\n            if (el) {\n                cb && cb.call(context, el, idx);\n            }\n        });\n    };\n\n    /**\n     * Shallow clone a new list except visual and layout properties, and graph elements.\n     * New list only change the indices.\n     */\n    listProto.cloneShallow = function () {\n        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n        var list = new List(dimensionInfoList, this.hostModel);\n\n        // FIXME\n        list._storage = this._storage;\n\n        transferProperties(list, this);\n\n\n        // Clone will not change the data extent and indices\n        list.indices = this.indices.slice();\n\n        if (this._extent) {\n            list._extent = zrUtil.extend({}, this._extent);\n        }\n\n        return list;\n    };\n\n    /**\n     * Wrap some method to add more feature\n     * @param {string} methodName\n     * @param {Function} injectFunction\n     */\n    listProto.wrapMethod = function (methodName, injectFunction) {\n        var originalMethod = this[methodName];\n        if (typeof originalMethod !== 'function') {\n            return;\n        }\n        this.__wrappedMethods = this.__wrappedMethods || [];\n        this.__wrappedMethods.push(methodName);\n        this[methodName] = function () {\n            var res = originalMethod.apply(this, arguments);\n            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n        };\n    };\n\n    // Methods that create a new list based on this list should be listed here.\n    // Notice that those method should `RETURN` the new list.\n    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];\n    // Methods that change indices of this list should be listed here.\n    listProto.CHANGABLE_METHODS = ['filterSelf'];\n\n    module.exports = List;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/List.js\n// module id = 351\n// module chunks = 0 1 2 3 4","import axios from 'axios';\nimport { Message } from 'element-ui';\nimport store from '../store';\nimport router from '../router';\n\nexport default function _fetch(options) {\n  return new Promise((resolve, reject) => {\n    const instance = axios.create({\n      baseURL: process.env.BASE_API,\n            // timeout: 2000,\n      headers: { 'X-Ivanka-Token': store.getters.token }\n    });\n    instance(options)\n            .then(response => {\n              const res = response.data;\n              if (res.code !== 20000) {\n                console.log(options); // for debug\n                Message({\n                  message: res.message,\n                  type: 'error',\n                  duration: 5 * 1000\n                });\n                    // 50014:Token 过期了 50012:其他客户端登录了 50008:非法的token\n                if (res.code === 50008 || res.code === 50014 || res.code === 50012) {\n                  Message({\n                    message: res.message,\n                    type: 'error',\n                    duration: 5 * 1000\n                  });\n                        // router.push({path: '/'})\n                        // TODO\n                  store.dispatch('FedLogOut').then(() => {\n                    router.push({ path: '/login' })\n                  });\n                }\n                reject(res);\n              }\n              resolve(res);\n            })\n            .catch(error => {\n              Message({\n                message: '发生异常错误,请刷新页面重试,或联系程序员',\n                type: 'error',\n                duration: 5 * 1000\n              });\n              console.log(error); // for debug\n              reject(error);\n            });\n  });\n}\n\nexport function fetch(options) {\n  return new Promise((resolve, reject) => {\n    const instance = axios.create({\n      timeout: 2000 // 超时\n    });\n    instance(options)\n            .then(response => {\n              const res = response.data;\n              resolve(res);\n            })\n            .catch(error => {\n              Message({\n                message: '发生异常错误,请刷新页面重试,或联系程序员',\n                type: 'error',\n                duration: 5 * 1000\n              });\n              console.log(error); // for debug\n              reject(error);\n            });\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/fetch.js","/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var symbolUtil = require('../../util/symbol');\n    var graphic = require('../../util/graphic');\n    var numberUtil = require('../../util/number');\n\n    function getSymbolSize(data, idx) {\n        var symbolSize = data.getItemVisual(idx, 'symbolSize');\n        return symbolSize instanceof Array\n            ? symbolSize.slice()\n            : [+symbolSize, +symbolSize];\n    }\n\n    function getScale(symbolSize) {\n        return [symbolSize[0] / 2, symbolSize[1] / 2];\n    }\n\n    /**\n     * @constructor\n     * @alias {module:echarts/chart/helper/Symbol}\n     * @param {module:echarts/data/List} data\n     * @param {number} idx\n     * @extends {module:zrender/graphic/Group}\n     */\n    function Symbol(data, idx, seriesScope) {\n        graphic.Group.call(this);\n\n        this.updateData(data, idx, seriesScope);\n    }\n\n    var symbolProto = Symbol.prototype;\n\n    function driftSymbol(dx, dy) {\n        this.parent.drift(dx, dy);\n    }\n\n    symbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n        // Remove paths created before\n        this.removeAll();\n\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // var symbolPath = symbolUtil.createSymbol(\n        //     symbolType, -0.5, -0.5, 1, 1, color\n        // );\n        // If width/height are set too small (e.g., set to 1) on ios10\n        // and macOS Sierra, a circle stroke become a rect, no matter what\n        // the scale is set. So we set width/height as 2. See #4150.\n        var symbolPath = symbolUtil.createSymbol(\n            symbolType, -1, -1, 2, 2, color\n        );\n\n        symbolPath.attr({\n            z2: 100,\n            culling: true,\n            scale: [0, 0]\n        });\n        // Rewrite drift method\n        symbolPath.drift = driftSymbol;\n\n        graphic.initProps(symbolPath, {\n            scale: getScale(symbolSize)\n        }, seriesModel, idx);\n        this._symbolType = symbolType;\n\n        this.add(symbolPath);\n    };\n\n    /**\n     * Stop animation\n     * @param {boolean} toLastFrame\n     */\n    symbolProto.stopSymbolAnimation = function (toLastFrame) {\n        this.childAt(0).stopAnimation(toLastFrame);\n    };\n\n    /**\n     * Get symbol path element\n     */\n    symbolProto.getSymbolPath = function () {\n        return this.childAt(0);\n    };\n\n    /**\n     * Get scale(aka, current symbol size).\n     * Including the change caused by animation\n     */\n    symbolProto.getScale = function () {\n        return this.childAt(0).scale;\n    };\n\n    /**\n     * Highlight symbol\n     */\n    symbolProto.highlight = function () {\n        this.childAt(0).trigger('emphasis');\n    };\n\n    /**\n     * Downplay symbol\n     */\n    symbolProto.downplay = function () {\n        this.childAt(0).trigger('normal');\n    };\n\n    /**\n     * @param {number} zlevel\n     * @param {number} z\n     */\n    symbolProto.setZ = function (zlevel, z) {\n        var symbolPath = this.childAt(0);\n        symbolPath.zlevel = zlevel;\n        symbolPath.z = z;\n    };\n\n    symbolProto.setDraggable = function (draggable) {\n        var symbolPath = this.childAt(0);\n        symbolPath.draggable = draggable;\n        symbolPath.cursor = draggable ? 'move' : 'pointer';\n    };\n\n    /**\n     * Update symbol properties\n     * @param  {module:echarts/data/List} data\n     * @param  {number} idx\n     */\n    symbolProto.updateData = function (data, idx, seriesScope) {\n        this.silent = false;\n\n        var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n        var seriesModel = data.hostModel;\n        var symbolSize = getSymbolSize(data, idx);\n\n        if (symbolType !== this._symbolType) {\n            this._createSymbol(symbolType, data, idx, symbolSize);\n        }\n        else {\n            var symbolPath = this.childAt(0);\n            graphic.updateProps(symbolPath, {\n                scale: getScale(symbolSize)\n            }, seriesModel, idx);\n        }\n        this._updateCommon(data, idx, symbolSize, seriesScope);\n        this._seriesModel = seriesModel;\n    };\n\n    // Update common properties\n    var normalStyleAccessPath = ['itemStyle', 'normal'];\n    var emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n    var normalLabelAccessPath = ['label', 'normal'];\n    var emphasisLabelAccessPath = ['label', 'emphasis'];\n\n    symbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n        var symbolPath = this.childAt(0);\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // Reset style\n        if (symbolPath.type !== 'image') {\n            symbolPath.useStyle({\n                strokeNoScale: true\n            });\n        }\n\n        seriesScope = seriesScope || null;\n\n        var itemStyle = seriesScope && seriesScope.itemStyle;\n        var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n        var symbolRotate = seriesScope && seriesScope.symbolRotate;\n        var symbolOffset = seriesScope && seriesScope.symbolOffset;\n        var labelModel = seriesScope && seriesScope.labelModel;\n        var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n        var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n\n        if (!seriesScope || data.hasItemOption) {\n            var itemModel = data.getItemModel(idx);\n\n            // Color must be excluded.\n            // Because symbol provide setColor individually to set fill and stroke\n            itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n            hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n\n            symbolRotate = itemModel.getShallow('symbolRotate');\n            symbolOffset = itemModel.getShallow('symbolOffset');\n\n            labelModel = itemModel.getModel(normalLabelAccessPath);\n            hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n            hoverAnimation = itemModel.getShallow('hoverAnimation');\n        }\n        else {\n            hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n        }\n\n        var elStyle = symbolPath.style;\n\n        symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n        if (symbolOffset) {\n            symbolPath.attr('position', [\n                numberUtil.parsePercent(symbolOffset[0], symbolSize[0]),\n                numberUtil.parsePercent(symbolOffset[1], symbolSize[1])\n            ]);\n        }\n\n        // PENDING setColor before setStyle!!!\n        symbolPath.setColor(color);\n\n        symbolPath.setStyle(itemStyle);\n\n        var opacity = data.getItemVisual(idx, 'opacity');\n        if (opacity != null) {\n            elStyle.opacity = opacity;\n        }\n\n        // Get last value dim\n        var dimensions = data.dimensions.slice();\n        var valueDim;\n        var dataType;\n        while (dimensions.length && (\n            valueDim = dimensions.pop(),\n            dataType = data.getDimensionInfo(valueDim).type,\n            dataType === 'ordinal' || dataType === 'time'\n        )) {} // jshint ignore:line\n\n        if (valueDim != null && labelModel.getShallow('show')) {\n            graphic.setText(elStyle, labelModel, color);\n            elStyle.text = zrUtil.retrieve(\n                seriesModel.getFormattedLabel(idx, 'normal'),\n                data.get(valueDim, idx)\n            );\n        }\n        else {\n            elStyle.text = '';\n        }\n\n        if (valueDim != null && hoverLabelModel.getShallow('show')) {\n            graphic.setText(hoverItemStyle, hoverLabelModel, color);\n            hoverItemStyle.text = zrUtil.retrieve(\n                seriesModel.getFormattedLabel(idx, 'emphasis'),\n                data.get(valueDim, idx)\n            );\n        }\n        else {\n            hoverItemStyle.text = '';\n        }\n\n        symbolPath.off('mouseover')\n            .off('mouseout')\n            .off('emphasis')\n            .off('normal');\n\n        symbolPath.hoverStyle = hoverItemStyle;\n\n        graphic.setHoverStyle(symbolPath);\n\n        var scale = getScale(symbolSize);\n\n        if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n            var onEmphasis = function() {\n                var ratio = scale[1] / scale[0];\n                this.animateTo({\n                    scale: [\n                        Math.max(scale[0] * 1.1, scale[0] + 3),\n                        Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)\n                    ]\n                }, 400, 'elasticOut');\n            };\n            var onNormal = function() {\n                this.animateTo({\n                    scale: scale\n                }, 400, 'elasticOut');\n            };\n            symbolPath.on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n    };\n\n    symbolProto.fadeOut = function (cb) {\n        var symbolPath = this.childAt(0);\n        // Avoid mistaken hover when fading out\n        this.silent = true;\n        // Not show text when animating\n        symbolPath.style.text = '';\n        graphic.updateProps(symbolPath, {\n            scale: [0, 0]\n        }, this._seriesModel, this.dataIndex, cb);\n    };\n\n    zrUtil.inherits(Symbol, graphic.Group);\n\n    module.exports = Symbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/Symbol.js\n// module id = 354\n// module chunks = 0 1 2 3 4","'use strict';\n\n\n    var ComponentModel = require('../../model/Component');\n    var zrUtil = require('zrender/lib/core/util');\n    var axisModelCreator = require('../axisModelCreator');\n\n    var AxisModel = ComponentModel.extend({\n\n        type: 'cartesian2dAxis',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Axis2D}\n         */\n        axis: null,\n\n        /**\n         * @override\n         */\n        init: function () {\n            AxisModel.superApply(this, 'init', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function () {\n            AxisModel.superApply(this, 'mergeOption', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        restoreData: function () {\n            AxisModel.superApply(this, 'restoreData', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         * @return {module:echarts/model/Component}\n         */\n        getCoordSysModel: function () {\n            return this.ecModel.queryComponents({\n                mainType: 'grid',\n                index: this.option.gridIndex,\n                id: this.option.gridId\n            })[0];\n        }\n\n    });\n\n    function getAxisType(axisDim, option) {\n        // Default axis with data is category axis\n        return option.type || (option.data ? 'category' : 'value');\n    }\n\n    zrUtil.merge(AxisModel.prototype, require('../axisModelCommonMixin'));\n\n    var extraOption = {\n        // gridIndex: 0,\n        // gridId: '',\n\n        // Offset is for multiple axis on the same position\n        offset: 0\n    };\n\n    axisModelCreator('x', AxisModel, getAxisType, extraOption);\n    axisModelCreator('y', AxisModel, getAxisType, extraOption);\n\n    module.exports = AxisModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/AxisModel.js\n// module id = 355\n// module chunks = 0 1 2 3 4","\n\n    var classUtil = require('../../util/clazz');\n    var set = classUtil.set;\n    var get = classUtil.get;\n\n    module.exports = {\n        clearColorPalette: function () {\n            set(this, 'colorIdx', 0);\n            set(this, 'colorNameMap', {});\n        },\n\n        getColorFromPalette: function (name, scope) {\n            scope = scope || this;\n            var colorIdx = get(scope, 'colorIdx') || 0;\n            var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {});\n            if (colorNameMap[name]) {\n                return colorNameMap[name];\n            }\n            var colorPalette = this.get('color', true) || [];\n            if (!colorPalette.length) {\n                return;\n            }\n\n            var color = colorPalette[colorIdx];\n            if (name) {\n                colorNameMap[name] = color;\n            }\n            set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n\n            return color;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/colorPalette.js\n// module id = 356\n// module chunks = 0 1 2 3 4","'use strict';\n// Symbol factory\n\n\n    var graphic = require('./graphic');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n\n    /**\n     * Triangle shape\n     * @inner\n     */\n    var Triangle = graphic.extendShape({\n        type: 'triangle',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy + height);\n            path.lineTo(cx - width, cy + height);\n            path.closePath();\n        }\n    });\n    /**\n     * Diamond shape\n     * @inner\n     */\n    var Diamond = graphic.extendShape({\n        type: 'diamond',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy);\n            path.lineTo(cx, cy + height);\n            path.lineTo(cx - width, cy);\n            path.closePath();\n        }\n    });\n\n    /**\n     * Pin shape\n     * @inner\n     */\n    var Pin = graphic.extendShape({\n        type: 'pin',\n        shape: {\n            // x, y on the cusp\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (path, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var w = shape.width / 5 * 3;\n            // Height must be larger than width\n            var h = Math.max(w, shape.height);\n            var r = w / 2;\n\n            // Dist on y with tangent point and circle center\n            var dy = r * r / (h - r);\n            var cy = y - h + r + dy;\n            var angle = Math.asin(dy / r);\n            // Dist on x with tangent point and circle center\n            var dx = Math.cos(angle) * r;\n\n            var tanX = Math.sin(angle);\n            var tanY = Math.cos(angle);\n\n            path.arc(\n                x, cy, r,\n                Math.PI - angle,\n                Math.PI * 2 + angle\n            );\n\n            var cpLen = r * 0.6;\n            var cpLen2 = r * 0.7;\n            path.bezierCurveTo(\n                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\n                x, y - cpLen2,\n                x, y\n            );\n            path.bezierCurveTo(\n                x, y - cpLen2,\n                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\n                x - dx, cy + dy\n            );\n            path.closePath();\n        }\n    });\n\n    /**\n     * Arrow shape\n     * @inner\n     */\n    var Arrow = graphic.extendShape({\n\n        type: 'arrow',\n\n        shape: {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var height = shape.height;\n            var width = shape.width;\n            var x = shape.x;\n            var y = shape.y;\n            var dx = width / 3 * 2;\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + dx, y + height);\n            ctx.lineTo(x, y + height / 4 * 3);\n            ctx.lineTo(x - dx, y + height);\n            ctx.lineTo(x, y);\n            ctx.closePath();\n        }\n    });\n\n    /**\n     * Map of path contructors\n     * @type {Object.<string, module:zrender/graphic/Path>}\n     */\n    var symbolCtors = {\n        line: graphic.Line,\n\n        rect: graphic.Rect,\n\n        roundRect: graphic.Rect,\n\n        square: graphic.Rect,\n\n        circle: graphic.Circle,\n\n        diamond: Diamond,\n\n        pin: Pin,\n\n        arrow: Arrow,\n\n        triangle: Triangle\n    };\n\n    var symbolShapeMakers = {\n\n        line: function (x, y, w, h, shape) {\n            // FIXME\n            shape.x1 = x;\n            shape.y1 = y + h / 2;\n            shape.x2 = x + w;\n            shape.y2 = y + h / 2;\n        },\n\n        rect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        roundRect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n            shape.r = Math.min(w, h) / 4;\n        },\n\n        square: function (x, y, w, h, shape) {\n            var size = Math.min(w, h);\n            shape.x = x;\n            shape.y = y;\n            shape.width = size;\n            shape.height = size;\n        },\n\n        circle: function (x, y, w, h, shape) {\n            // Put circle in the center of square\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.r = Math.min(w, h) / 2;\n        },\n\n        diamond: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        pin: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        arrow: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        triangle: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        }\n    };\n\n    var symbolBuildProxies = {};\n    for (var name in symbolCtors) {\n        if (symbolCtors.hasOwnProperty(name)) {\n            symbolBuildProxies[name] = new symbolCtors[name]();\n        }\n    }\n\n    var Symbol = graphic.extendShape({\n\n        type: 'symbol',\n\n        shape: {\n            symbolType: '',\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        beforeBrush: function () {\n            var style = this.style;\n            var shape = this.shape;\n            // FIXME\n            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n                style.textPosition = ['50%', '40%'];\n                style.textAlign = 'center';\n                style.textVerticalAlign = 'middle';\n            }\n        },\n\n        buildPath: function (ctx, shape, inBundle) {\n            var symbolType = shape.symbolType;\n            var proxySymbol = symbolBuildProxies[symbolType];\n            if (shape.symbolType !== 'none') {\n                if (!proxySymbol) {\n                    // Default rect\n                    symbolType = 'rect';\n                    proxySymbol = symbolBuildProxies[symbolType];\n                }\n                symbolShapeMakers[symbolType](\n                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\n                );\n                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n            }\n        }\n    });\n\n    // Provide setColor helper method to avoid determine if set the fill or stroke outside\n    var symbolPathSetColor = function (color) {\n        if (this.type !== 'image') {\n            var symbolStyle = this.style;\n            var symbolShape = this.shape;\n            if (symbolShape && symbolShape.symbolType === 'line') {\n                symbolStyle.stroke = color;\n            }\n            else if (this.__isEmptyBrush) {\n                symbolStyle.stroke = color;\n                symbolStyle.fill = '#fff';\n            }\n            else {\n                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n                symbolStyle.fill && (symbolStyle.fill = color);\n                symbolStyle.stroke && (symbolStyle.stroke = color);\n            }\n            this.dirty(false);\n        }\n    };\n\n    var symbolUtil = {\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @param {string} symbolType\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: function (symbolType, x, y, w, h, color) {\n            var isEmpty = symbolType.indexOf('empty') === 0;\n            if (isEmpty) {\n                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n            }\n            var symbolPath;\n\n            if (symbolType.indexOf('image://') === 0) {\n                symbolPath = new graphic.Image({\n                    style: {\n                        image: symbolType.slice(8),\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n            else if (symbolType.indexOf('path://') === 0) {\n                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\n            }\n            else {\n                symbolPath = new Symbol({\n                    shape: {\n                        symbolType: symbolType,\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n\n            symbolPath.__isEmptyBrush = isEmpty;\n\n            symbolPath.setColor = symbolPathSetColor;\n\n            symbolPath.setColor(color);\n\n            return symbolPath;\n        }\n    };\n\n    module.exports = symbolUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/symbol.js\n// module id = 357\n// module chunks = 0 1 2 3 4","\n\n    var Group = require('zrender/lib/container/Group');\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n    var modelUtil = require('../util/model');\n    var zrUtil = require('zrender/lib/core/util');\n\n    function Chart() {\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewChart');\n    }\n\n    Chart.prototype = {\n\n        type: 'chart',\n\n        /**\n         * Init the chart\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        init: function (ecModel, api) {},\n\n        /**\n         * Render the chart\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        render: function (seriesModel, ecModel, api, payload) {},\n\n        /**\n         * Highlight series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        highlight: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n        },\n\n        /**\n         * Downplay series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        downplay: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'normal');\n        },\n\n        /**\n         * Remove self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        remove: function (ecModel, api) {\n            this.group.removeAll();\n        },\n\n        /**\n         * Dispose self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        dispose: function () {}\n\n        /**\n         * The view contains the given point.\n         * @interface\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        // containPoint: function () {}\n\n    };\n\n    var chartProto = Chart.prototype;\n    chartProto.updateView\n        = chartProto.updateLayout\n        = chartProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            this.render(seriesModel, ecModel, api, payload);\n        };\n\n    /**\n     * Set state of single element\n     * @param  {module:zrender/Element} el\n     * @param  {string} state\n     */\n    function elSetState(el, state) {\n        if (el) {\n            el.trigger(state);\n            if (el.type === 'group') {\n                for (var i = 0; i < el.childCount(); i++) {\n                    elSetState(el.childAt(i), state);\n                }\n            }\n        }\n    }\n    /**\n     * @param  {module:echarts/data/List} data\n     * @param  {Object} payload\n     * @param  {string} state 'normal'|'emphasis'\n     * @inner\n     */\n    function toggleHighlight(data, payload, state) {\n        var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n        if (dataIndex != null) {\n            zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n                elSetState(data.getItemGraphicEl(dataIdx), state);\n            });\n        }\n        else {\n            data.eachItemGraphicEl(function (el) {\n                elSetState(el, state);\n            });\n        }\n    }\n\n    // Enable Chart.extend.\n    clazzUtil.enableClassExtend(Chart, ['dispose']);\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});\n\n    module.exports = Chart;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/view/Chart.js\n// module id = 358\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * @module zrender/Element\n */\n\n\n    var guid = require('./core/guid');\n    var Eventful = require('./mixin/Eventful');\n    var Transformable = require('./mixin/Transformable');\n    var Animatable = require('./mixin/Animatable');\n    var zrUtil = require('./core/util');\n\n    /**\n     * @alias module:zrender/Element\n     * @constructor\n     * @extends {module:zrender/mixin/Animatable}\n     * @extends {module:zrender/mixin/Transformable}\n     * @extends {module:zrender/mixin/Eventful}\n     */\n    var Element = function (opts) {\n\n        Transformable.call(this, opts);\n        Eventful.call(this, opts);\n        Animatable.call(this, opts);\n\n        /**\n         * 画布元素ID\n         * @type {string}\n         */\n        this.id = opts.id || guid();\n    };\n\n    Element.prototype = {\n\n        /**\n         * 元素类型\n         * Element type\n         * @type {string}\n         */\n        type: 'element',\n\n        /**\n         * 元素名字\n         * Element name\n         * @type {string}\n         */\n        name: '',\n\n        /**\n         * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n         * ZRender instance will be assigned when element is associated with zrender\n         * @name module:/zrender/Element#__zr\n         * @type {module:zrender/ZRender}\n         */\n        __zr: null,\n\n        /**\n         * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n         * If ignore drawing and events of the element object\n         * @name module:/zrender/Element#ignore\n         * @type {boolean}\n         * @default false\n         */\n        ignore: false,\n\n        /**\n         * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n         * 该路径会继承被裁减对象的变换\n         * @type {module:zrender/graphic/Path}\n         * @see http://www.w3.org/TR/2dcontext/#clipping-region\n         * @readOnly\n         */\n        clipPath: null,\n\n        /**\n         * Drift element\n         * @param  {number} dx dx on the global space\n         * @param  {number} dy dy on the global space\n         */\n        drift: function (dx, dy) {\n            switch (this.draggable) {\n                case 'horizontal':\n                    dy = 0;\n                    break;\n                case 'vertical':\n                    dx = 0;\n                    break;\n            }\n\n            var m = this.transform;\n            if (!m) {\n                m = this.transform = [1, 0, 0, 1, 0, 0];\n            }\n            m[4] += dx;\n            m[5] += dy;\n\n            this.decomposeTransform();\n            this.dirty(false);\n        },\n\n        /**\n         * Hook before update\n         */\n        beforeUpdate: function () {},\n        /**\n         * Hook after update\n         */\n        afterUpdate: function () {},\n        /**\n         * Update each frame\n         */\n        update: function () {\n            this.updateTransform();\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {},\n\n        /**\n         * @protected\n         */\n        attrKV: function (key, value) {\n            if (key === 'position' || key === 'scale' || key === 'origin') {\n                // Copy the array\n                if (value) {\n                    var target = this[key];\n                    if (!target) {\n                        target = this[key] = [];\n                    }\n                    target[0] = value[0];\n                    target[1] = value[1];\n                }\n            }\n            else {\n                this[key] = value;\n            }\n        },\n\n        /**\n         * Hide the element\n         */\n        hide: function () {\n            this.ignore = true;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * Show the element\n         */\n        show: function () {\n            this.ignore = false;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * @param {string|Object} key\n         * @param {*} value\n         */\n        attr: function (key, value) {\n            if (typeof key === 'string') {\n                this.attrKV(key, value);\n            }\n            else if (zrUtil.isObject(key)) {\n                for (var name in key) {\n                    if (key.hasOwnProperty(name)) {\n                        this.attrKV(name, key[name]);\n                    }\n                }\n            }\n\n            this.dirty(false);\n\n            return this;\n        },\n\n        /**\n         * @param {module:zrender/graphic/Path} clipPath\n         */\n        setClipPath: function (clipPath) {\n            var zr = this.__zr;\n            if (zr) {\n                clipPath.addSelfToZr(zr);\n            }\n\n            // Remove previous clip path\n            if (this.clipPath && this.clipPath !== clipPath) {\n                this.removeClipPath();\n            }\n\n            this.clipPath = clipPath;\n            clipPath.__zr = zr;\n            clipPath.__clipTarget = this;\n\n            this.dirty(false);\n        },\n\n        /**\n         */\n        removeClipPath: function () {\n            var clipPath = this.clipPath;\n            if (clipPath) {\n                if (clipPath.__zr) {\n                    clipPath.removeSelfFromZr(clipPath.__zr);\n                }\n\n                clipPath.__zr = null;\n                clipPath.__clipTarget = null;\n                this.clipPath = null;\n\n                this.dirty(false);\n            }\n        },\n\n        /**\n         * Add self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        addSelfToZr: function (zr) {\n            this.__zr = zr;\n            // 添加动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.addAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.addSelfToZr(zr);\n            }\n        },\n\n        /**\n         * Remove self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        removeSelfFromZr: function (zr) {\n            this.__zr = null;\n            // 移除动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.removeAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.removeSelfFromZr(zr);\n            }\n        }\n    };\n\n    zrUtil.mixin(Element, Animatable);\n    zrUtil.mixin(Element, Transformable);\n    zrUtil.mixin(Element, Eventful);\n\n    module.exports = Element;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Element.js\n// module id = 359\n// module chunks = 0 1 2 3 4","/**\n * @module echarts/animation/Animator\n */\n\n\n    var Clip = require('./Clip');\n    var color = require('../tool/color');\n    var util = require('../core/util');\n    var isArrayLike = util.isArrayLike;\n\n    var arraySlice = Array.prototype.slice;\n\n    function defaultGetter(target, key) {\n        return target[key];\n    }\n\n    function defaultSetter(target, key, value) {\n        target[key] = value;\n    }\n\n    /**\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} percent\n     * @return {number}\n     */\n    function interpolateNumber(p0, p1, percent) {\n        return (p1 - p0) * percent + p0;\n    }\n\n    /**\n     * @param  {string} p0\n     * @param  {string} p1\n     * @param  {number} percent\n     * @return {string}\n     */\n    function interpolateString(p0, p1, percent) {\n        return percent > 0.5 ? p1 : p0;\n    }\n\n    /**\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {number} percent\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function interpolateArray(p0, p1, percent, out, arrDim) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = interpolateNumber(p0[i], p1[i], percent);\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = interpolateNumber(\n                        p0[i][j], p1[i][j], percent\n                    );\n                }\n            }\n        }\n    }\n\n    // arr0 is source array, arr1 is target array.\n    // Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n    function fillArr(arr0, arr1, arrDim) {\n        var arr0Len = arr0.length;\n        var arr1Len = arr1.length;\n        if (arr0Len !== arr1Len) {\n            // FIXME Not work for TypedArray\n            var isPreviousLarger = arr0Len > arr1Len;\n            if (isPreviousLarger) {\n                // Cut the previous\n                arr0.length = arr1Len;\n            }\n            else {\n                // Fill the previous\n                for (var i = arr0Len; i < arr1Len; i++) {\n                    arr0.push(\n                        arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i])\n                    );\n                }\n            }\n        }\n        // Handling NaN value\n        var len2 = arr0[0] && arr0[0].length;\n        for (var i = 0; i < arr0.length; i++) {\n            if (arrDim === 1) {\n                if (isNaN(arr0[i])) {\n                    arr0[i] = arr1[i];\n                }\n            }\n            else {\n                for (var j = 0; j < len2; j++) {\n                    if (isNaN(arr0[i][j])) {\n                        arr0[i][j] = arr1[i][j];\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @param  {Array} arr0\n     * @param  {Array} arr1\n     * @param  {number} arrDim\n     * @return {boolean}\n     */\n    function isArraySame(arr0, arr1, arrDim) {\n        if (arr0 === arr1) {\n            return true;\n        }\n        var len = arr0.length;\n        if (len !== arr1.length) {\n            return false;\n        }\n        if (arrDim === 1) {\n            for (var i = 0; i < len; i++) {\n                if (arr0[i] !== arr1[i]) {\n                    return false;\n                }\n            }\n        }\n        else {\n            var len2 = arr0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    if (arr0[i][j] !== arr1[i][j]) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Catmull Rom interpolate array\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {Array} p2\n     * @param  {Array} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function catmullRomInterpolateArray(\n        p0, p1, p2, p3, t, t2, t3, out, arrDim\n    ) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = catmullRomInterpolate(\n                    p0[i], p1[i], p2[i], p3[i], t, t2, t3\n                );\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = catmullRomInterpolate(\n                        p0[i][j], p1[i][j], p2[i][j], p3[i][j],\n                        t, t2, t3\n                    );\n                }\n            }\n        }\n    }\n\n    /**\n     * Catmull Rom interpolate number\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @return {number}\n     */\n    function catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    function cloneValue(value) {\n        if (isArrayLike(value)) {\n            var len = value.length;\n            if (isArrayLike(value[0])) {\n                var ret = [];\n                for (var i = 0; i < len; i++) {\n                    ret.push(arraySlice.call(value[i]));\n                }\n                return ret;\n            }\n\n            return arraySlice.call(value);\n        }\n\n        return value;\n    }\n\n    function rgba2String(rgba) {\n        rgba[0] = Math.floor(rgba[0]);\n        rgba[1] = Math.floor(rgba[1]);\n        rgba[2] = Math.floor(rgba[2]);\n\n        return 'rgba(' + rgba.join(',') + ')';\n    }\n\n    function createTrackClip (animator, easing, oneTrackDone, keyframes, propName) {\n        var getter = animator._getter;\n        var setter = animator._setter;\n        var useSpline = easing === 'spline';\n\n        var trackLen = keyframes.length;\n        if (!trackLen) {\n            return;\n        }\n        // Guess data type\n        var firstVal = keyframes[0].value;\n        var isValueArray = isArrayLike(firstVal);\n        var isValueColor = false;\n        var isValueString = false;\n\n        // For vertices morphing\n        var arrDim = (\n                isValueArray\n                && isArrayLike(firstVal[0])\n            )\n            ? 2 : 1;\n        var trackMaxTime;\n        // Sort keyframe as ascending\n        keyframes.sort(function(a, b) {\n            return a.time - b.time;\n        });\n\n        trackMaxTime = keyframes[trackLen - 1].time;\n        // Percents of each keyframe\n        var kfPercents = [];\n        // Value of each keyframe\n        var kfValues = [];\n        var prevValue = keyframes[0].value;\n        var isAllValueEqual = true;\n        for (var i = 0; i < trackLen; i++) {\n            kfPercents.push(keyframes[i].time / trackMaxTime);\n            // Assume value is a color when it is a string\n            var value = keyframes[i].value;\n\n            // Check if value is equal, deep check if value is array\n            if (!((isValueArray && isArraySame(value, prevValue, arrDim))\n                || (!isValueArray && value === prevValue))) {\n                isAllValueEqual = false;\n            }\n            prevValue = value;\n\n            // Try converting a string to a color array\n            if (typeof value == 'string') {\n                var colorArray = color.parse(value);\n                if (colorArray) {\n                    value = colorArray;\n                    isValueColor = true;\n                }\n                else {\n                    isValueString = true;\n                }\n            }\n            kfValues.push(value);\n        }\n        if (isAllValueEqual) {\n            return;\n        }\n\n        var lastValue = kfValues[trackLen - 1];\n        // Polyfill array and NaN value\n        for (var i = 0; i < trackLen - 1; i++) {\n            if (isValueArray) {\n                fillArr(kfValues[i], lastValue, arrDim);\n            }\n            else {\n                if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n                    kfValues[i] = lastValue;\n                }\n            }\n        }\n        isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim);\n\n        // Cache the key of last frame to speed up when\n        // animation playback is sequency\n        var lastFrame = 0;\n        var lastFramePercent = 0;\n        var start;\n        var w;\n        var p0;\n        var p1;\n        var p2;\n        var p3;\n\n        if (isValueColor) {\n            var rgba = [0, 0, 0, 0];\n        }\n\n        var onframe = function (target, percent) {\n            // Find the range keyframes\n            // kf1-----kf2---------current--------kf3\n            // find kf2 and kf3 and do interpolation\n            var frame;\n            // In the easing function like elasticOut, percent may less than 0\n            if (percent < 0) {\n                frame = 0;\n            }\n            else if (percent < lastFramePercent) {\n                // Start from next key\n                // PENDING start from lastFrame ?\n                start = Math.min(lastFrame + 1, trackLen - 1);\n                for (frame = start; frame >= 0; frame--) {\n                    if (kfPercents[frame] <= percent) {\n                        break;\n                    }\n                }\n                // PENDING really need to do this ?\n                frame = Math.min(frame, trackLen - 2);\n            }\n            else {\n                for (frame = lastFrame; frame < trackLen; frame++) {\n                    if (kfPercents[frame] > percent) {\n                        break;\n                    }\n                }\n                frame = Math.min(frame - 1, trackLen - 2);\n            }\n            lastFrame = frame;\n            lastFramePercent = percent;\n\n            var range = (kfPercents[frame + 1] - kfPercents[frame]);\n            if (range === 0) {\n                return;\n            }\n            else {\n                w = (percent - kfPercents[frame]) / range;\n            }\n            if (useSpline) {\n                p1 = kfValues[frame];\n                p0 = kfValues[frame === 0 ? frame : frame - 1];\n                p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n                p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n                if (isValueArray) {\n                    catmullRomInterpolateArray(\n                        p0, p1, p2, p3, w, w * w, w * w * w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        value = catmullRomInterpolateArray(\n                            p0, p1, p2, p3, w, w * w, w * w * w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(p1, p2, w);\n                    }\n                    else {\n                        value = catmullRomInterpolate(\n                            p0, p1, p2, p3, w, w * w, w * w * w\n                        );\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n            else {\n                if (isValueArray) {\n                    interpolateArray(\n                        kfValues[frame], kfValues[frame + 1], w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        interpolateArray(\n                            kfValues[frame], kfValues[frame + 1], w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    else {\n                        value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n        };\n\n        var clip = new Clip({\n            target: animator._target,\n            life: trackMaxTime,\n            loop: animator._loop,\n            delay: animator._delay,\n            onframe: onframe,\n            ondestroy: oneTrackDone\n        });\n\n        if (easing && easing !== 'spline') {\n            clip.easing = easing;\n        }\n\n        return clip;\n    }\n\n    /**\n     * @alias module:zrender/animation/Animator\n     * @constructor\n     * @param {Object} target\n     * @param {boolean} loop\n     * @param {Function} getter\n     * @param {Function} setter\n     */\n    var Animator = function(target, loop, getter, setter) {\n        this._tracks = {};\n        this._target = target;\n\n        this._loop = loop || false;\n\n        this._getter = getter || defaultGetter;\n        this._setter = setter || defaultSetter;\n\n        this._clipCount = 0;\n\n        this._delay = 0;\n\n        this._doneList = [];\n\n        this._onframeList = [];\n\n        this._clipList = [];\n    };\n\n    Animator.prototype = {\n        /**\n         * 设置动画关键帧\n         * @param  {number} time 关键帧时间，单位是ms\n         * @param  {Object} props 关键帧的属性值，key-value表示\n         * @return {module:zrender/animation/Animator}\n         */\n        when: function(time /* ms */, props) {\n            var tracks = this._tracks;\n            for (var propName in props) {\n                if (!props.hasOwnProperty(propName)) {\n                    continue;\n                }\n\n                if (!tracks[propName]) {\n                    tracks[propName] = [];\n                    // Invalid value\n                    var value = this._getter(this._target, propName);\n                    if (value == null) {\n                        // zrLog('Invalid property ' + propName);\n                        continue;\n                    }\n                    // If time is 0\n                    //  Then props is given initialize value\n                    // Else\n                    //  Initialize value from current prop value\n                    if (time !== 0) {\n                        tracks[propName].push({\n                            time: 0,\n                            value: cloneValue(value)\n                        });\n                    }\n                }\n                tracks[propName].push({\n                    time: time,\n                    value: props[propName]\n                });\n            }\n            return this;\n        },\n        /**\n         * 添加动画每一帧的回调函数\n         * @param  {Function} callback\n         * @return {module:zrender/animation/Animator}\n         */\n        during: function (callback) {\n            this._onframeList.push(callback);\n            return this;\n        },\n\n        _doneCallback: function () {\n            // Clear all tracks\n            this._tracks = {};\n            // Clear all clips\n            this._clipList.length = 0;\n\n            var doneList = this._doneList;\n            var len = doneList.length;\n            for (var i = 0; i < len; i++) {\n                doneList[i].call(this);\n            }\n        },\n        /**\n         * 开始执行动画\n         * @param  {string|Function} easing\n         *         动画缓动函数，详见{@link module:zrender/animation/easing}\n         * @return {module:zrender/animation/Animator}\n         */\n        start: function (easing) {\n\n            var self = this;\n            var clipCount = 0;\n\n            var oneTrackDone = function() {\n                clipCount--;\n                if (!clipCount) {\n                    self._doneCallback();\n                }\n            };\n\n            var lastClip;\n            for (var propName in this._tracks) {\n                if (!this._tracks.hasOwnProperty(propName)) {\n                    continue;\n                }\n                var clip = createTrackClip(\n                    this, easing, oneTrackDone,\n                    this._tracks[propName], propName\n                );\n                if (clip) {\n                    this._clipList.push(clip);\n                    clipCount++;\n\n                    // If start after added to animation\n                    if (this.animation) {\n                        this.animation.addClip(clip);\n                    }\n\n                    lastClip = clip;\n                }\n            }\n\n            // Add during callback on the last clip\n            if (lastClip) {\n                var oldOnFrame = lastClip.onframe;\n                lastClip.onframe = function (target, percent) {\n                    oldOnFrame(target, percent);\n\n                    for (var i = 0; i < self._onframeList.length; i++) {\n                        self._onframeList[i](target, percent);\n                    }\n                };\n            }\n\n            if (!clipCount) {\n                this._doneCallback();\n            }\n            return this;\n        },\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stop: function (forwardToLast) {\n            var clipList = this._clipList;\n            var animation = this.animation;\n            for (var i = 0; i < clipList.length; i++) {\n                var clip = clipList[i];\n                if (forwardToLast) {\n                    // Move to last frame before stop\n                    clip.onframe(this._target, 1);\n                }\n                animation && animation.removeClip(clip);\n            }\n            clipList.length = 0;\n        },\n        /**\n         * 设置动画延迟开始的时间\n         * @param  {number} time 单位ms\n         * @return {module:zrender/animation/Animator}\n         */\n        delay: function (time) {\n            this._delay = time;\n            return this;\n        },\n        /**\n         * 添加动画结束的回调\n         * @param  {Function} cb\n         * @return {module:zrender/animation/Animator}\n         */\n        done: function(cb) {\n            if (cb) {\n                this._doneList.push(cb);\n            }\n            return this;\n        },\n\n        /**\n         * @return {Array.<module:zrender/animation/Clip>}\n         */\n        getClips: function () {\n            return this._clipList;\n        }\n    };\n\n    module.exports = Animator;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Animator.js\n// module id = 360\n// module chunks = 0 1 2 3 4","\n\n    module.exports = (typeof window !== 'undefined' &&\n                                    (window.requestAnimationFrame\n                                    || window.msRequestAnimationFrame\n                                    || window.mozRequestAnimationFrame\n                                    || window.webkitRequestAnimationFrame))\n                                || function (func) {\n                                    setTimeout(func, 16);\n                                };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/requestAnimationFrame.js\n// module id = 361\n// module chunks = 0 1 2 3 4","\n\n    var PI2 = Math.PI * 2;\n    module.exports = {\n        normalizeRadian: function(angle) {\n            angle %= PI2;\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return angle;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/util.js\n// module id = 362\n// module chunks = 0 1 2 3 4","/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\n\n\n    var idStart = 0x0907;\n\n    module.exports = function () {\n        return idStart++;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/guid.js\n// module id = 363\n// module chunks = 0 1 2 3 4","\n        var config = require('../config');\n\n        /**\n         * @exports zrender/tool/log\n         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n         */\n        module.exports = function() {\n            if (config.debugMode === 0) {\n                return;\n            }\n            else if (config.debugMode == 1) {\n                for (var k in arguments) {\n                    throw new Error(arguments[k]);\n                }\n            }\n            else if (config.debugMode > 1) {\n                for (var k in arguments) {\n                    console.log(arguments[k]);\n                }\n            }\n        };\n\n        /* for debug\n        return function(mes) {\n            document.getElementById('wrong-message').innerHTML =\n                mes + ' ' + (new Date() - 0)\n                + '<br/>'\n                + document.getElementById('wrong-message').innerHTML;\n        };\n        */\n    \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/log.js\n// module id = 364\n// module chunks = 0 1 2 3 4","/**\n * Image element\n * @module zrender/graphic/Image\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var BoundingRect = require('../core/BoundingRect');\n    var zrUtil = require('../core/util');\n\n    var LRU = require('../core/LRU');\n    var globalImageCache = new LRU(50);\n    /**\n     * @alias zrender/graphic/Image\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function ZImage(opts) {\n        Displayable.call(this, opts);\n    }\n\n    ZImage.prototype = {\n\n        constructor: ZImage,\n\n        type: 'image',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var src = style.image;\n            var image;\n\n            // Must bind each time\n            style.bind(ctx, this, prevEl);\n            // style.image is a url string\n            if (typeof src === 'string') {\n                image = this._image;\n            }\n            // style.image is an HTMLImageElement or HTMLCanvasElement or Canvas\n            else {\n                image = src;\n            }\n            // FIXME Case create many images with src\n            if (!image && src) {\n                // Try get from global image cache\n                var cachedImgObj = globalImageCache.get(src);\n                if (!cachedImgObj) {\n                    // Create a new image\n                    image = new Image();\n                    image.onload = function () {\n                        image.onload = null;\n                        for (var i = 0; i < cachedImgObj.pending.length; i++) {\n                            cachedImgObj.pending[i].dirty();\n                        }\n                    };\n                    cachedImgObj = {\n                        image: image,\n                        pending: [this]\n                    };\n                    image.src = src;\n                    globalImageCache.put(src, cachedImgObj);\n                    this._image = image;\n                    return;\n                }\n                else {\n                    image = cachedImgObj.image;\n                    this._image = image;\n                    // Image is not complete finish, add to pending list\n                    if (!image.width || !image.height) {\n                        cachedImgObj.pending.push(this);\n                        return;\n                    }\n                }\n            }\n\n            if (image) {\n                // 图片已经加载完成\n                // if (image.nodeName.toUpperCase() == 'IMG') {\n                //     if (!image.complete) {\n                //         return;\n                //     }\n                // }\n                // Else is canvas\n\n                var width = style.width || image.width;\n                var height = style.height || image.height;\n                var x = style.x || 0;\n                var y = style.y || 0;\n                // 图片加载失败\n                if (!image.width || !image.height) {\n                    return;\n                }\n\n                // 设置transform\n                this.setTransform(ctx);\n\n\n                if (style.sWidth && style.sHeight) {\n                    var sx = style.sx || 0;\n                    var sy = style.sy || 0;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, style.sWidth, style.sHeight,\n                        x, y, width, height\n                    );\n                }\n                else if (style.sx && style.sy) {\n                    var sx = style.sx;\n                    var sy = style.sy;\n                    var sWidth = width - sx;\n                    var sHeight = height - sy;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, sWidth, sHeight,\n                        x, y, width, height\n                    );\n                }\n                else {\n                    ctx.drawImage(image, x, y, width, height);\n                }\n\n                // 如果没设置宽和高的话自动根据图片宽高设置\n                if (style.width == null) {\n                    style.width = width;\n                }\n                if (style.height == null) {\n                    style.height = height;\n                }\n\n                this.restoreTransform(ctx);\n\n                // Draw rect text\n                if (style.text != null) {\n                    this.drawRectText(ctx, this.getBoundingRect());\n                }\n\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (! this._rect) {\n                this._rect = new BoundingRect(\n                    style.x || 0, style.y || 0, style.width || 0, style.height || 0\n                );\n            }\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(ZImage, Displayable);\n\n    module.exports = ZImage;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Image.js\n// module id = 365\n// module chunks = 0 1 2 3 4","\n\n    var Pattern = function (image, repeat) {\n        this.image = image;\n        this.repeat = repeat;\n\n        // Can be cloned\n        this.type = 'pattern';\n    };\n\n    Pattern.prototype.getCanvasPattern = function (ctx) {\n\n        return this._canvasPattern\n            || (this._canvasPattern = ctx.createPattern(this.image, this.repeat));\n    };\n\n    module.exports = Pattern;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Pattern.js\n// module id = 366\n// module chunks = 0 1 2 3 4","/**\n * @module zrender/graphic/Style\n */\n\n\n    var STYLE_COMMON_PROPS = [\n        ['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'],\n        ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]\n    ];\n\n    // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n    // var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\n    var Style = function (opts) {\n        this.extendFrom(opts);\n    };\n\n    function createLinearGradient(ctx, obj, rect) {\n        // var size =\n        var x = obj.x;\n        var x2 = obj.x2;\n        var y = obj.y;\n        var y2 = obj.y2;\n\n        if (!obj.global) {\n            x = x * rect.width + rect.x;\n            x2 = x2 * rect.width + rect.x;\n            y = y * rect.height + rect.y;\n            y2 = y2 * rect.height + rect.y;\n        }\n\n        var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n\n        return canvasGradient;\n    }\n\n    function createRadialGradient(ctx, obj, rect) {\n        var width = rect.width;\n        var height = rect.height;\n        var min = Math.min(width, height);\n\n        var x = obj.x;\n        var y = obj.y;\n        var r = obj.r;\n        if (!obj.global) {\n            x = x * width + rect.x;\n            y = y * height + rect.y;\n            r = r * min;\n        }\n\n        var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n\n        return canvasGradient;\n    }\n\n\n    Style.prototype = {\n\n        constructor: Style,\n\n        /**\n         * @type {string}\n         */\n        fill: '#000000',\n\n        /**\n         * @type {string}\n         */\n        stroke: null,\n\n        /**\n         * @type {number}\n         */\n        opacity: 1,\n\n        /**\n         * @type {Array.<number>}\n         */\n        lineDash: null,\n\n        /**\n         * @type {number}\n         */\n        lineDashOffset: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetY: 0,\n\n        /**\n         * @type {number}\n         */\n        lineWidth: 1,\n\n        /**\n         * If stroke ignore scale\n         * @type {Boolean}\n         */\n        strokeNoScale: false,\n\n        // Bounding rect text configuration\n        // Not affected by element transform\n        /**\n         * @type {string}\n         */\n        text: null,\n\n        /**\n         * @type {string}\n         */\n        textFill: '#000',\n\n        /**\n         * @type {string}\n         */\n        textStroke: null,\n\n        /**\n         * 'inside', 'left', 'right', 'top', 'bottom'\n         * [x, y]\n         * @type {string|Array.<number>}\n         * @default 'inside'\n         */\n        textPosition: 'inside',\n\n        /**\n         * [x, y]\n         * @type {Array.<number>}\n         */\n        textOffset: null,\n\n        /**\n         * @type {string}\n         */\n        textBaseline: null,\n\n        /**\n         * @type {string}\n         */\n        textAlign: null,\n\n        /**\n         * @type {string}\n         */\n        textVerticalAlign: null,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textDistance: 5,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowBlur: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetX: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetY: 0,\n\n        /**\n         * If transform text\n         * Only useful in Path and Image element\n         * @type {boolean}\n         */\n        textTransform: false,\n\n        /**\n         * Text rotate around position of Path or Image\n         * Only useful in Path and Image element and textTransform is false.\n         */\n        textRotation: 0,\n\n        /**\n         * @type {string}\n         * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n         */\n        blend: null,\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        bind: function (ctx, el, prevEl) {\n            var style = this;\n            var prevStyle = prevEl && prevEl.style;\n            var firstDraw = !prevStyle;\n\n            for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n                var prop = STYLE_COMMON_PROPS[i];\n                var styleName = prop[0];\n\n                if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n                    // FIXME Invalid property value will cause style leak from previous element.\n                    ctx[styleName] = style[styleName] || prop[1];\n                }\n            }\n\n            if ((firstDraw || style.fill !== prevStyle.fill)) {\n                ctx.fillStyle = style.fill;\n            }\n            if ((firstDraw || style.stroke !== prevStyle.stroke)) {\n                ctx.strokeStyle = style.stroke;\n            }\n            if ((firstDraw || style.opacity !== prevStyle.opacity)) {\n                ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n            }\n\n            if ((firstDraw || style.blend !== prevStyle.blend)) {\n                ctx.globalCompositeOperation = style.blend || 'source-over';\n            }\n            if (this.hasStroke()) {\n                var lineWidth = style.lineWidth;\n                ctx.lineWidth = lineWidth / (\n                    (this.strokeNoScale && el && el.getLineScale) ? el.getLineScale() : 1\n                );\n            }\n        },\n\n        hasFill: function () {\n            var fill = this.fill;\n            return fill != null && fill !== 'none';\n        },\n\n        hasStroke: function () {\n            var stroke = this.stroke;\n            return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n        },\n\n        /**\n         * Extend from other style\n         * @param {zrender/graphic/Style} otherStyle\n         * @param {boolean} overwrite\n         */\n        extendFrom: function (otherStyle, overwrite) {\n            if (otherStyle) {\n                var target = this;\n                for (var name in otherStyle) {\n                    if (otherStyle.hasOwnProperty(name)\n                        && (overwrite || ! target.hasOwnProperty(name))\n                    ) {\n                        target[name] = otherStyle[name];\n                    }\n                }\n            }\n        },\n\n        /**\n         * Batch setting style with a given object\n         * @param {Object|string} obj\n         * @param {*} [obj]\n         */\n        set: function (obj, value) {\n            if (typeof obj === 'string') {\n                this[obj] = value;\n            }\n            else {\n                this.extendFrom(obj, true);\n            }\n        },\n\n        /**\n         * Clone\n         * @return {zrender/graphic/Style} [description]\n         */\n        clone: function () {\n            var newStyle = new this.constructor();\n            newStyle.extendFrom(this, true);\n            return newStyle;\n        },\n\n        getGradient: function (ctx, obj, rect) {\n            var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n            var canvasGradient = method(ctx, obj, rect);\n            var colorStops = obj.colorStops;\n            for (var i = 0; i < colorStops.length; i++) {\n                canvasGradient.addColorStop(\n                    colorStops[i].offset, colorStops[i].color\n                );\n            }\n            return canvasGradient;\n        }\n    };\n\n    var styleProto = Style.prototype;\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n        var prop = STYLE_COMMON_PROPS[i];\n        if (!(prop[0] in styleProto)) {\n            styleProto[prop[0]] = prop[1];\n        }\n    }\n\n    // Provide for others\n    Style.getGradient = styleProto.getGradient;\n\n    module.exports = Style;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Style.js\n// module id = 367\n// module chunks = 0 1 2 3 4","\n\n    var smoothSpline = require('./smoothSpline');\n    var smoothBezier = require('./smoothBezier');\n\n    module.exports = {\n        buildPath: function (ctx, shape, closePath) {\n            var points = shape.points;\n            var smooth = shape.smooth;\n            if (points && points.length >= 2) {\n                if (smooth && smooth !== 'spline') {\n                    var controlPoints = smoothBezier(\n                        points, smooth, closePath, shape.smoothConstraint\n                    );\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    var len = points.length;\n                    for (var i = 0; i < (closePath ? len : len - 1); i++) {\n                        var cp1 = controlPoints[i * 2];\n                        var cp2 = controlPoints[i * 2 + 1];\n                        var p = points[(i + 1) % len];\n                        ctx.bezierCurveTo(\n                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\n                        );\n                    }\n                }\n                else {\n                    if (smooth === 'spline') {\n                        points = smoothSpline(points, closePath);\n                    }\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    for (var i = 1, l = points.length; i < l; i++) {\n                        ctx.lineTo(points[i][0], points[i][1]);\n                    }\n                }\n\n                closePath && ctx.closePath();\n            }\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/poly.js\n// module id = 368\n// module chunks = 0 1 2 3 4","'use strict';\n\n\n    var List = require('../../data/List');\n    var completeDimensions = require('../../data/helper/completeDimensions');\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var CoordinateSystem = require('../../CoordinateSystem');\n    var getDataItemValue = modelUtil.getDataItemValue;\n    var converDataValue = modelUtil.converDataValue;\n\n    function firstDataNotNull(data) {\n        var i = 0;\n        while (i < data.length && data[i] == null) {\n            i++;\n        }\n        return data[i];\n    }\n    function ifNeedCompleteOrdinalData(data) {\n        var sampleItem = firstDataNotNull(data);\n        return sampleItem != null\n            && !zrUtil.isArray(getDataItemValue(sampleItem));\n    }\n\n    /**\n     * Helper function to create a list from option data\n     */\n    function createListFromArray(data, seriesModel, ecModel) {\n        // If data is undefined\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        var coordSysName = seriesModel.get('coordinateSystem');\n        var creator = creators[coordSysName];\n        var registeredCoordSys = CoordinateSystem.get(coordSysName);\n        // FIXME\n        var axesInfo = creator && creator(data, seriesModel, ecModel);\n        var dimensions = axesInfo && axesInfo.dimensions;\n        if (!dimensions) {\n            // Get dimensions from registered coordinate system\n            dimensions = (registeredCoordSys && registeredCoordSys.dimensions) || ['x', 'y'];\n            dimensions = completeDimensions(dimensions, data, dimensions.concat(['value']));\n        }\n        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n\n        var list = new List(dimensions, seriesModel);\n\n        var nameList = createNameList(axesInfo, data);\n\n        var categories = {};\n        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))\n            ? function (itemOpt, dimName, dataIndex, dimIndex) {\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                // Use dataIndex as ordinal value in categoryAxis\n                return dimIndex === categoryIndex\n                    ? dataIndex\n                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n            }\n            : function (itemOpt, dimName, dataIndex, dimIndex) {\n                var value = getDataItemValue(itemOpt);\n                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n                if (categoryAxesModels && categoryAxesModels[dimName]) {\n                    // If given value is a category string\n                    if (typeof val === 'string') {\n                        // Lazy get categories\n                        categories[dimName] = categories[dimName]\n                            || categoryAxesModels[dimName].getCategories();\n                        val = zrUtil.indexOf(categories[dimName], val);\n                        if (val < 0 && !isNaN(val)) {\n                            // In case some one write '1', '2' istead of 1, 2\n                            val = +val;\n                        }\n                    }\n                }\n                return val;\n            };\n\n        list.hasItemOption = false;\n        list.initData(data, nameList, dimValueGetter);\n\n        return list;\n    }\n\n    function isStackable(axisType) {\n        return axisType !== 'category' && axisType !== 'time';\n    }\n\n    function getDimTypeByAxis(axisType) {\n        return axisType === 'category'\n            ? 'ordinal'\n            : axisType === 'time'\n            ? 'time'\n            : 'float';\n    }\n\n    /**\n     * Creaters for each coord system.\n     */\n    var creators = {\n\n        cartesian2d: function (data, seriesModel, ecModel) {\n\n            var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n                return ecModel.queryComponents({\n                    mainType: name,\n                    index: seriesModel.get(name + 'Index'),\n                    id: seriesModel.get(name + 'Id')\n                })[0];\n            });\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            if (__DEV__) {\n                if (!xAxisModel) {\n                    throw new Error('xAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('xAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n                if (!yAxisModel) {\n                    throw new Error('yAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('yAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n\n            var xAxisType = xAxisModel.get('type');\n            var yAxisType = yAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'x',\n                    type: getDimTypeByAxis(xAxisType),\n                    stackable: isStackable(xAxisType)\n                },\n                {\n                    name: 'y',\n                    // If two category axes\n                    type: getDimTypeByAxis(yAxisType),\n                    stackable: isStackable(yAxisType)\n                }\n            ];\n\n            var isXAxisCateogry = xAxisType === 'category';\n            var isYAxisCategory = yAxisType === 'category';\n\n            completeDimensions(dimensions, data, ['x', 'y', 'z']);\n\n            var categoryAxesModels = {};\n            if (isXAxisCateogry) {\n                categoryAxesModels.x = xAxisModel;\n            }\n            if (isYAxisCategory) {\n                categoryAxesModels.y = yAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        singleAxis: function (data, seriesModel, ecModel) {\n\n            var singleAxisModel = ecModel.queryComponents({\n                mainType: 'singleAxis',\n                index: seriesModel.get('singleAxisIndex'),\n                id: seriesModel.get('singleAxisId')\n            })[0];\n\n            if (__DEV__) {\n                if (!singleAxisModel) {\n                    throw new Error('singleAxis should be specified.');\n                }\n            }\n\n            var singleAxisType = singleAxisModel.get('type');\n            var isCategory = singleAxisType === 'category';\n\n            var dimensions = [{\n                name: 'single',\n                type: getDimTypeByAxis(singleAxisType),\n                stackable: isStackable(singleAxisType)\n            }];\n\n            completeDimensions(dimensions, data);\n\n            var categoryAxesModels = {};\n            if (isCategory) {\n                categoryAxesModels.single = singleAxisModel;\n            }\n\n            return {\n                dimensions: dimensions,\n                categoryIndex: isCategory ? 0 : -1,\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        polar: function (data, seriesModel, ecModel) {\n            var polarModel = ecModel.queryComponents({\n                mainType: 'polar',\n                index: seriesModel.get('polarIndex'),\n                id: seriesModel.get('polarId')\n            })[0];\n\n            var angleAxisModel = polarModel.findAxisModel('angleAxis');\n            var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n\n            if (__DEV__) {\n                if (!angleAxisModel) {\n                    throw new Error('angleAxis option not found');\n                }\n                if (!radiusAxisModel) {\n                    throw new Error('radiusAxis option not found');\n                }\n            }\n\n            var radiusAxisType = radiusAxisModel.get('type');\n            var angleAxisType = angleAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'radius',\n                    type: getDimTypeByAxis(radiusAxisType),\n                    stackable: isStackable(radiusAxisType)\n                },\n                {\n                    name: 'angle',\n                    type: getDimTypeByAxis(angleAxisType),\n                    stackable: isStackable(angleAxisType)\n                }\n            ];\n            var isAngleAxisCateogry = angleAxisType === 'category';\n            var isRadiusAxisCateogry = radiusAxisType === 'category';\n\n            completeDimensions(dimensions, data, ['radius', 'angle', 'value']);\n\n            var categoryAxesModels = {};\n            if (isRadiusAxisCateogry) {\n                categoryAxesModels.radius = radiusAxisModel;\n            }\n            if (isAngleAxisCateogry) {\n                categoryAxesModels.angle = angleAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        geo: function (data, seriesModel, ecModel) {\n            // TODO Region\n            // 多个散点图系列在同一个地区的时候\n            return {\n                dimensions: completeDimensions([\n                    {name: 'lng'},\n                    {name: 'lat'}\n                ], data, ['lng', 'lat', 'value'])\n            };\n        }\n    };\n\n    function createNameList(result, data) {\n        var nameList = [];\n\n        var categoryDim = result && result.dimensions[result.categoryIndex];\n        var categoryAxisModel;\n        if (categoryDim) {\n            categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n        }\n\n        if (categoryAxisModel) {\n            // FIXME Two category axis\n            var categories = categoryAxisModel.getCategories();\n            if (categories) {\n                var dataLen = data.length;\n                // Ordered data is given explicitly like\n                // [[3, 0.2], [1, 0.3], [2, 0.15]]\n                // or given scatter data,\n                // pick the category\n                if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n                    nameList = [];\n                    for (var i = 0; i < dataLen; i++) {\n                        nameList[i] = categories[data[i][result.categoryIndex || 0]];\n                    }\n                }\n                else {\n                    nameList = categories.slice(0);\n                }\n            }\n        }\n\n        return nameList;\n    }\n\n    module.exports = createListFromArray;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/createListFromArray.js\n// module id = 369\n// module chunks = 0 1 2 3 4","'use strict';\n\n\n    var graphic = require('../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n\n    require('../coord/cartesian/Grid');\n\n    require('./axis');\n\n    // Grid view\n    echarts.extendComponentView({\n\n        type: 'grid',\n\n        render: function (gridModel, ecModel) {\n            this.group.removeAll();\n            if (gridModel.get('show')) {\n                this.group.add(new graphic.Rect({\n                    shape: gridModel.coordinateSystem.getRect(),\n                    style: zrUtil.defaults({\n                        fill: gridModel.get('backgroundColor')\n                    }, gridModel.getItemStyle()),\n                    silent: true,\n                    z2: -1\n                }));\n            }\n        }\n\n    });\n\n    echarts.registerPreprocessor(function (option) {\n        // Only create grid when need\n        if (option.xAxis && option.yAxis && !option.grid) {\n            option.grid = {};\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/grid.js\n// module id = 370\n// module chunks = 0 1 2 3 4","/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\nvar factory = exports;\n\n    var layout = require('../../util/layout');\n    var axisHelper = require('../../coord/axisHelper');\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Cartesian2D = require('./Cartesian2D');\n    var Axis2D = require('./Axis2D');\n\n    var each = zrUtil.each;\n\n    var ifAxisCrossZero = axisHelper.ifAxisCrossZero;\n    var niceScaleExtent = axisHelper.niceScaleExtent;\n\n    // 依赖 GridModel, AxisModel 做预处理\n    require('./GridModel');\n\n    /**\n     * Check if the axis is used in the specified grid\n     * @inner\n     */\n    function isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n        return axisModel.getCoordSysModel() === gridModel;\n    }\n\n    function getLabelUnionRect(axis) {\n        var axisModel = axis.model;\n        var labels = axisModel.getFormattedLabels();\n        var textStyleModel = axisModel.getModel('axisLabel.textStyle');\n        var rect;\n        var step = 1;\n        var labelCount = labels.length;\n        if (labelCount > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.ceil(labelCount / 40);\n        }\n        for (var i = 0; i < labelCount; i += step) {\n            if (!axis.isLabelIgnored(i)) {\n                var singleRect = textStyleModel.getTextRect(labels[i]);\n                // FIXME consider label rotate\n                rect ? rect.union(singleRect) : (rect = singleRect);\n            }\n        }\n        return rect;\n    }\n\n    function Grid(gridModel, ecModel, api) {\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n         * @private\n         */\n        this._coordsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n         * @private\n         */\n        this._coordsList = [];\n\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesList = [];\n\n        this._initCartesian(gridModel, ecModel, api);\n\n        this._model = gridModel;\n    }\n\n    var gridProto = Grid.prototype;\n\n    gridProto.type = 'grid';\n\n    gridProto.getRect = function () {\n        return this._rect;\n    };\n\n    gridProto.update = function (ecModel, api) {\n\n        var axesMap = this._axesMap;\n\n        this._updateScale(ecModel, this._model);\n\n        function ifAxisCanNotOnZero(otherAxisDim) {\n            var axes = axesMap[otherAxisDim];\n            for (var idx in axes) {\n                if (axes.hasOwnProperty(idx)) {\n                    var axis = axes[idx];\n                    if (axis && (axis.type === 'category' || !ifAxisCrossZero(axis))) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n\n        each(axesMap.x, function (xAxis) {\n            niceScaleExtent(xAxis, xAxis.model);\n        });\n        each(axesMap.y, function (yAxis) {\n            niceScaleExtent(yAxis, yAxis.model);\n        });\n        // Fix configuration\n        each(axesMap.x, function (xAxis) {\n            // onZero can not be enabled in these two situations\n            // 1. When any other axis is a category axis\n            // 2. When any other axis not across 0 point\n            if (ifAxisCanNotOnZero('y')) {\n                xAxis.onZero = false;\n            }\n        });\n        each(axesMap.y, function (yAxis) {\n            if (ifAxisCanNotOnZero('x')) {\n                yAxis.onZero = false;\n            }\n        });\n\n        // Resize again if containLabel is enabled\n        // FIXME It may cause getting wrong grid size in data processing stage\n        this.resize(this._model, api);\n    };\n\n    /**\n     * Resize the grid\n     * @param {module:echarts/coord/cartesian/GridModel} gridModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    gridProto.resize = function (gridModel, api) {\n\n        var gridRect = layout.getLayoutRect(\n            gridModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n\n        this._rect = gridRect;\n\n        var axesList = this._axesList;\n\n        adjustAxes();\n\n        // Minus label size\n        if (gridModel.get('containLabel')) {\n            each(axesList, function (axis) {\n                if (!axis.model.get('axisLabel.inside')) {\n                    var labelUnionRect = getLabelUnionRect(axis);\n                    if (labelUnionRect) {\n                        var dim = axis.isHorizontal() ? 'height' : 'width';\n                        var margin = axis.model.get('axisLabel.margin');\n                        gridRect[dim] -= labelUnionRect[dim] + margin;\n                        if (axis.position === 'top') {\n                            gridRect.y += labelUnionRect.height + margin;\n                        }\n                        else if (axis.position === 'left')  {\n                            gridRect.x += labelUnionRect.width + margin;\n                        }\n                    }\n                }\n            });\n\n            adjustAxes();\n        }\n\n        function adjustAxes() {\n            each(axesList, function (axis) {\n                var isHorizontal = axis.isHorizontal();\n                var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n                var idx = axis.inverse ? 1 : 0;\n                axis.setExtent(extent[idx], extent[1 - idx]);\n                updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n            });\n        }\n    };\n\n    /**\n     * @param {string} axisType\n     * @param {ndumber} [axisIndex]\n     */\n    gridProto.getAxis = function (axisType, axisIndex) {\n        var axesMapOnDim = this._axesMap[axisType];\n        if (axesMapOnDim != null) {\n            if (axisIndex == null) {\n                // Find first axis\n                for (var name in axesMapOnDim) {\n                    if (axesMapOnDim.hasOwnProperty(name)) {\n                        return axesMapOnDim[name];\n                    }\n                }\n            }\n            return axesMapOnDim[axisIndex];\n        }\n    };\n\n    gridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n        if (xAxisIndex != null && yAxisIndex != null) {\n            var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n            return this._coordsMap[key];\n        }\n        else {\n            // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n            for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n                if (coordList[i].getAxis('x').index === xAxisIndex\n                    || coordList[i].getAxis('y').index === yAxisIndex\n                ) {\n                    return coordList[i];\n                }\n            }\n        }\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertToPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.dataToPoint(value)\n            : target.axis\n            ? target.axis.toGlobalCoord(target.axis.dataToCoord(value))\n            : null;\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertFromPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.pointToData(value)\n            : target.axis\n            ? target.axis.coordToData(target.axis.toLocalCoord(value))\n            : null;\n    };\n\n    /**\n     * @inner\n     */\n    gridProto._findConvertTarget = function (ecModel, finder) {\n        var seriesModel = finder.seriesModel;\n        var xAxisModel = finder.xAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('xAxis')[0]);\n        var yAxisModel = finder.yAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('yAxis')[0]);\n        var gridModel = finder.gridModel;\n        var coordsList = this._coordsList;\n        var cartesian;\n        var axis;\n\n        if (seriesModel) {\n            cartesian = seriesModel.coordinateSystem;\n            zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n        }\n        else if (xAxisModel && yAxisModel) {\n            cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n        }\n        else if (xAxisModel) {\n            axis = this.getAxis('x', xAxisModel.componentIndex);\n        }\n        else if (yAxisModel) {\n            axis = this.getAxis('y', yAxisModel.componentIndex);\n        }\n        // Lowest priority.\n        else if (gridModel) {\n            var grid = gridModel.coordinateSystem;\n            if (grid === this) {\n                cartesian = this._coordsList[0];\n            }\n        }\n\n        return {cartesian: cartesian, axis: axis};\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.containPoint = function (point) {\n        var coord = this._coordsList[0];\n        if (coord) {\n            return coord.containPoint(point);\n        }\n    };\n\n    /**\n     * Initialize cartesian coordinate systems\n     * @private\n     */\n    gridProto._initCartesian = function (gridModel, ecModel, api) {\n        var axisPositionUsed = {\n            left: false,\n            right: false,\n            top: false,\n            bottom: false\n        };\n\n        var axesMap = {\n            x: {},\n            y: {}\n        };\n        var axesCount = {\n            x: 0,\n            y: 0\n        };\n\n        /// Create axis\n        ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n        ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n        if (!axesCount.x || !axesCount.y) {\n            // Roll back when there no either x or y axis\n            this._axesMap = {};\n            this._axesList = [];\n            return;\n        }\n\n        this._axesMap = axesMap;\n\n        /// Create cartesian2d\n        each(axesMap.x, function (xAxis, xAxisIndex) {\n            each(axesMap.y, function (yAxis, yAxisIndex) {\n                var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n                var cartesian = new Cartesian2D(key);\n\n                cartesian.grid = this;\n\n                this._coordsMap[key] = cartesian;\n                this._coordsList.push(cartesian);\n\n                cartesian.addAxis(xAxis);\n                cartesian.addAxis(yAxis);\n            }, this);\n        }, this);\n\n        function createAxisCreator(axisType) {\n            return function (axisModel, idx) {\n                if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n                    return;\n                }\n\n                var axisPosition = axisModel.get('position');\n                if (axisType === 'x') {\n                    // Fix position\n                    if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n                        // Default bottom of X\n                        axisPosition = 'bottom';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n                        }\n                    }\n                }\n                else {\n                    // Fix position\n                    if (axisPosition !== 'left' && axisPosition !== 'right') {\n                        // Default left of Y\n                        axisPosition = 'left';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n                        }\n                    }\n                }\n                axisPositionUsed[axisPosition] = true;\n\n                var axis = new Axis2D(\n                    axisType, axisHelper.createScaleByModel(axisModel),\n                    [0, 0],\n                    axisModel.get('type'),\n                    axisPosition\n                );\n\n                var isCategory = axis.type === 'category';\n                axis.onBand = isCategory && axisModel.get('boundaryGap');\n                axis.inverse = axisModel.get('inverse');\n\n                axis.onZero = axisModel.get('axisLine.onZero');\n\n                // Inject axis into axisModel\n                axisModel.axis = axis;\n\n                // Inject axisModel into axis\n                axis.model = axisModel;\n\n                // Inject grid info axis\n                axis.grid = this;\n\n                // Index of axis, can be used as key\n                axis.index = idx;\n\n                this._axesList.push(axis);\n\n                axesMap[axisType][idx] = axis;\n                axesCount[axisType]++;\n            };\n        }\n    };\n\n    /**\n     * Update cartesian properties from series\n     * @param  {module:echarts/model/Option} option\n     * @private\n     */\n    gridProto._updateScale = function (ecModel, gridModel) {\n        // Reset scale\n        zrUtil.each(this._axesList, function (axis) {\n            axis.scale.setExtent(Infinity, -Infinity);\n        });\n        ecModel.eachSeries(function (seriesModel) {\n            if (isCartesian2D(seriesModel)) {\n                var axesModels = findAxesModels(seriesModel, ecModel);\n                var xAxisModel = axesModels[0];\n                var yAxisModel = axesModels[1];\n\n                if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel)\n                    || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)\n                 ) {\n                    return;\n                }\n\n                var cartesian = this.getCartesian(\n                    xAxisModel.componentIndex, yAxisModel.componentIndex\n                );\n                var data = seriesModel.getData();\n                var xAxis = cartesian.getAxis('x');\n                var yAxis = cartesian.getAxis('y');\n\n                if (data.type === 'list') {\n                    unionExtent(data, xAxis, seriesModel);\n                    unionExtent(data, yAxis, seriesModel);\n                }\n            }\n        }, this);\n\n        function unionExtent(data, axis, seriesModel) {\n            each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n                axis.scale.unionExtentFromData(data, dim);\n            });\n        }\n    };\n\n    /**\n     * @inner\n     */\n    function updateAxisTransfrom(axis, coordBase) {\n        var axisExtent = axis.getExtent();\n        var axisExtentSum = axisExtent[0] + axisExtent[1];\n\n        // Fast transform\n        axis.toGlobalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord + coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n        axis.toLocalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord - coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n    }\n\n    var axesTypes = ['xAxis', 'yAxis'];\n    /**\n     * @inner\n     */\n    function findAxesModels(seriesModel, ecModel) {\n        return zrUtil.map(axesTypes, function (axisType) {\n            var axisModel = seriesModel.getReferringComponents(axisType)[0];\n\n            if (__DEV__) {\n                if (!axisModel) {\n                    throw new Error(axisType + ' \"' + zrUtil.retrieve(\n                        seriesModel.get(axisType + 'Index'),\n                        seriesModel.get(axisType + 'Id'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n            return axisModel;\n        });\n    }\n\n    /**\n     * @inner\n     */\n    function isCartesian2D(seriesModel) {\n        return seriesModel.get('coordinateSystem') === 'cartesian2d';\n    }\n\n    Grid.create = function (ecModel, api) {\n        var grids = [];\n        ecModel.eachComponent('grid', function (gridModel, idx) {\n            var grid = new Grid(gridModel, ecModel, api);\n            grid.name = 'grid_' + idx;\n            grid.resize(gridModel, api);\n\n            gridModel.coordinateSystem = grid;\n\n            grids.push(grid);\n        });\n\n        // Inject the coordinateSystems into seriesModel\n        ecModel.eachSeries(function (seriesModel) {\n            if (!isCartesian2D(seriesModel)) {\n                return;\n            }\n\n            var axesModels = findAxesModels(seriesModel, ecModel);\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            var gridModel = xAxisModel.getCoordSysModel();\n\n            if (__DEV__) {\n                if (!gridModel) {\n                    throw new Error(\n                        'Grid \"' + zrUtil.retrieve(\n                            xAxisModel.get('gridIndex'),\n                            xAxisModel.get('gridId'),\n                            0\n                        ) + '\" not found'\n                    );\n                }\n                if (xAxisModel.getCoordSysModel() !== yAxisModel.getCoordSysModel()) {\n                    throw new Error('xAxis and yAxis must use the same grid');\n                }\n            }\n\n            var grid = gridModel.coordinateSystem;\n\n            seriesModel.coordinateSystem = grid.getCartesian(\n                xAxisModel.componentIndex, yAxisModel.componentIndex\n            );\n        });\n\n        return grids;\n    };\n\n    // For deciding which dimensions to use when creating list data\n    Grid.dimensions = Cartesian2D.prototype.dimensions;\n\n    require('../../CoordinateSystem').register('cartesian2d', Grid);\n\n    module.exports = Grid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Grid.js\n// module id = 371\n// module chunks = 0 1 2 3 4","\n\n    var lib = {};\n\n    var ORIGIN_METHOD = '\\0__throttleOriginMethod';\n    var RATE = '\\0__throttleRate';\n    var THROTTLE_TYPE = '\\0__throttleType';\n\n    /**\n     * @public\n     * @param {(Function)} fn\n     * @param {number} [delay=0] Unit: ms.\n     * @param {boolean} [debounce=false]\n     *        true: If call interval less than `delay`, only the last call works.\n     *        false: If call interval less than `delay, call works on fixed rate.\n     * @return {(Function)} throttled fn.\n     */\n    lib.throttle = function (fn, delay, debounce) {\n\n        var currCall;\n        var lastCall = 0;\n        var lastExec = 0;\n        var timer = null;\n        var diff;\n        var scope;\n        var args;\n\n        delay = delay || 0;\n\n        function exec() {\n            lastExec = (new Date()).getTime();\n            timer = null;\n            fn.apply(scope, args || []);\n        }\n\n        var cb = function () {\n            currCall = (new Date()).getTime();\n            scope = this;\n            args = arguments;\n            diff = currCall - (debounce ? lastCall : lastExec) - delay;\n\n            clearTimeout(timer);\n\n            if (debounce) {\n                timer = setTimeout(exec, delay);\n            }\n            else {\n                if (diff >= 0) {\n                    exec();\n                }\n                else {\n                    timer = setTimeout(exec, -diff);\n                }\n            }\n\n            lastCall = currCall;\n        };\n\n        /**\n         * Clear throttle.\n         * @public\n         */\n        cb.clear = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n\n        return cb;\n    };\n\n    /**\n     * Create throttle method or update throttle rate.\n     *\n     * @example\n     * ComponentView.prototype.render = function () {\n     *     ...\n     *     throttle.createOrUpdate(\n     *         this,\n     *         '_dispatchAction',\n     *         this.model.get('throttle'),\n     *         'fixRate'\n     *     );\n     * };\n     * ComponentView.prototype.remove = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     * ComponentView.prototype.dispose = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     * @param {number} [rate]\n     * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n     * @return {Function} throttled function.\n     */\n    lib.createOrUpdate = function (obj, fnAttr, rate, throttleType) {\n        var fn = obj[fnAttr];\n\n        if (!fn) {\n            return;\n        }\n\n        var originFn = fn[ORIGIN_METHOD] || fn;\n        var lastThrottleType = fn[THROTTLE_TYPE];\n        var lastRate = fn[RATE];\n\n        if (lastRate !== rate || lastThrottleType !== throttleType) {\n            if (rate == null || !throttleType) {\n                return (obj[fnAttr] = originFn);\n            }\n\n            fn = obj[fnAttr] = lib.throttle(\n                originFn, rate, throttleType === 'debounce'\n            );\n            fn[ORIGIN_METHOD] = originFn;\n            fn[THROTTLE_TYPE] = throttleType;\n            fn[RATE] = rate;\n        }\n\n        return fn;\n    };\n\n    /**\n     * Clear throttle. Example see throttle.createOrUpdate.\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     */\n    lib.clear = function (obj, fnAttr) {\n        var fn = obj[fnAttr];\n        if (fn && fn[ORIGIN_METHOD]) {\n            obj[fnAttr] = fn[ORIGIN_METHOD];\n        }\n    };\n\n    module.exports = lib;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/throttle.js\n// module id = 372\n// module chunks = 0 1 2 3 4","'use strict';\n\n\n    var zrUtil = require('../core/util');\n\n    var Gradient = require('./Gradient');\n\n    /**\n     * x, y, x2, y2 are all percent from 0 to 1\n     * @param {number} [x=0]\n     * @param {number} [y=0]\n     * @param {number} [x2=1]\n     * @param {number} [y2=0]\n     * @param {Array.<Object>} colorStops\n     * @param {boolean} [globalCoord=false]\n     */\n    var LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n        this.x = x == null ? 0 : x;\n\n        this.y = y == null ? 0 : y;\n\n        this.x2 = x2 == null ? 1 : x2;\n\n        this.y2 = y2 == null ? 0 : y2;\n\n        // Can be cloned\n        this.type = 'linear';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    LinearGradient.prototype = {\n\n        constructor: LinearGradient\n    };\n\n    zrUtil.inherits(LinearGradient, Gradient);\n\n    module.exports = LinearGradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/LinearGradient.js\n// module id = 374\n// module chunks = 0 1 2 3 4","/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n\n    var graphic = require('../../util/graphic');\n    var Symbol = require('./Symbol');\n\n    /**\n     * @constructor\n     * @alias module:echarts/chart/helper/SymbolDraw\n     * @param {module:zrender/graphic/Group} [symbolCtor]\n     */\n    function SymbolDraw(symbolCtor) {\n        this.group = new graphic.Group();\n\n        this._symbolCtor = symbolCtor || Symbol;\n    }\n\n    var symbolDrawProto = SymbolDraw.prototype;\n\n    function symbolNeedsDraw(data, idx, isIgnore) {\n        var point = data.getItemLayout(idx);\n        // Is an object\n        // if (point && point.hasOwnProperty('point')) {\n        //     point = point.point;\n        // }\n        return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx))\n                    && data.getItemVisual(idx, 'symbol') !== 'none';\n    }\n    /**\n     * Update symbols draw by new data\n     * @param {module:echarts/data/List} data\n     * @param {Array.<boolean>} [isIgnore]\n     */\n    symbolDrawProto.updateData = function (data, isIgnore) {\n        var group = this.group;\n        var seriesModel = data.hostModel;\n        var oldData = this._data;\n\n        var SymbolCtor = this._symbolCtor;\n\n        var seriesScope = {\n            itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n            hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n            symbolRotate: seriesModel.get('symbolRotate'),\n            symbolOffset: seriesModel.get('symbolOffset'),\n            hoverAnimation: seriesModel.get('hoverAnimation'),\n\n            labelModel: seriesModel.getModel('label.normal'),\n            hoverLabelModel: seriesModel.getModel('label.emphasis')\n        };\n\n        data.diff(oldData)\n            .add(function (newIdx) {\n                var point = data.getItemLayout(newIdx);\n                if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n                    symbolEl.attr('position', point);\n                    data.setItemGraphicEl(newIdx, symbolEl);\n                    group.add(symbolEl);\n                }\n            })\n            .update(function (newIdx, oldIdx) {\n                var symbolEl = oldData.getItemGraphicEl(oldIdx);\n                var point = data.getItemLayout(newIdx);\n                if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    group.remove(symbolEl);\n                    return;\n                }\n                if (!symbolEl) {\n                    symbolEl = new SymbolCtor(data, newIdx);\n                    symbolEl.attr('position', point);\n                }\n                else {\n                    symbolEl.updateData(data, newIdx, seriesScope);\n                    graphic.updateProps(symbolEl, {\n                        position: point\n                    }, seriesModel);\n                }\n\n                // Add back\n                group.add(symbolEl);\n\n                data.setItemGraphicEl(newIdx, symbolEl);\n            })\n            .remove(function (oldIdx) {\n                var el = oldData.getItemGraphicEl(oldIdx);\n                el && el.fadeOut(function () {\n                    group.remove(el);\n                });\n            })\n            .execute();\n\n        this._data = data;\n    };\n\n    symbolDrawProto.updateLayout = function () {\n        var data = this._data;\n        if (data) {\n            // Not use animation\n            data.eachItemGraphicEl(function (el, idx) {\n                var point = data.getItemLayout(idx);\n                el.attr('position', point);\n            });\n        }\n    };\n\n    symbolDrawProto.remove = function (enableAnimation) {\n        var group = this.group;\n        var data = this._data;\n        if (data) {\n            if (enableAnimation) {\n                data.eachItemGraphicEl(function (el) {\n                    el.fadeOut(function () {\n                        group.remove(el);\n                    });\n                });\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    };\n\n    module.exports = SymbolDraw;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/SymbolDraw.js\n// module id = 375\n// module chunks = 0 1 2 3 4","// FIXME Better way to pack data in graphic element\n\n\n    require('./tooltip/TooltipModel');\n\n    require('./tooltip/TooltipView');\n\n    // Show tip action\n    /**\n     * @action\n     * @property {string} type\n     * @property {number} seriesIndex\n     * @property {number} dataIndex\n     * @property {number} [x]\n     * @property {number} [y]\n     */\n    require('../echarts').registerAction(\n        {\n            type: 'showTip',\n            event: 'showTip',\n            update: 'tooltip:manuallyShowTip'\n        },\n        // noop\n        function () {}\n    );\n    // Hide tip action\n    require('../echarts').registerAction(\n        {\n            type: 'hideTip',\n            event: 'hideTip',\n            update: 'tooltip:manuallyHideTip'\n        },\n        // noop\n        function () {}\n    );\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip.js\n// module id = 376\n// module chunks = 0 1 2 3 4","\n\n    var Group = require('zrender/lib/container/Group');\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n\n    var Component = function () {\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewComponent');\n    };\n\n    Component.prototype = {\n\n        constructor: Component,\n\n        init: function (ecModel, api) {},\n\n        render: function (componentModel, ecModel, api, payload) {},\n\n        dispose: function () {}\n\n    };\n\n    var componentProto = Component.prototype;\n    componentProto.updateView\n        = componentProto.updateLayout\n        = componentProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            // Do nothing;\n        };\n    // Enable Component.extend.\n    clazzUtil.enableClassExtend(Component);\n\n    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});\n\n    module.exports = Component;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/view/Component.js\n// module id = 377\n// module chunks = 0 1 2 3 4","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var echartsAPIList = [\n        'getDom', 'getZr', 'getWidth', 'getHeight', 'dispatchAction', 'isDisposed',\n        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption'\n    ];\n\n    function ExtensionAPI(chartInstance) {\n        zrUtil.each(echartsAPIList, function (name) {\n            this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n        }, this);\n    }\n\n    module.exports = ExtensionAPI;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/ExtensionAPI.js\n// module id = 378\n// module chunks = 0 1 2 3 4","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n    var PRIORITY = echarts.PRIORITY;\n\n    require('./line/LineSeries');\n    require('./line/LineView');\n\n    echarts.registerVisual(zrUtil.curry(\n        require('../visual/symbol'), 'line', 'circle', 'line'\n    ));\n    echarts.registerLayout(zrUtil.curry(\n        require('../layout/points'), 'line'\n    ));\n\n    // Down sample after filter\n    echarts.registerProcessor(PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(\n        require('../processor/dataSample'), 'line'\n    ));\n\n    // In case developer forget to include grid component\n    require('../component/grid');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line.js\n// module id = 379\n// module chunks = 0 1 2 3 4","'use strict';\n\n\n    var createListFromArray = require('../helper/createListFromArray');\n    var SeriesModel = require('../../model/Series');\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.line',\n\n        dependencies: ['grid', 'polar'],\n\n        getInitialData: function (option, ecModel) {\n            if (__DEV__) {\n                var coordSys = option.coordinateSystem;\n                if (coordSys !== 'polar' && coordSys !== 'cartesian2d') {\n                    throw new Error('Line not support coordinateSystem besides cartesian and polar');\n                }\n            }\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // stack: null\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // polarIndex: 0,\n\n            // If clip the overflow value\n            clipOverflow: true,\n\n            label: {\n                normal: {\n                    position: 'top'\n                }\n            },\n            // itemStyle: {\n            //     normal: {},\n            //     emphasis: {}\n            // },\n            lineStyle: {\n                normal: {\n                    width: 2,\n                    type: 'solid'\n                }\n            },\n            // areaStyle: {},\n            // false, 'start', 'end', 'middle'\n            step: false,\n\n            // Disabled if step is true\n            smooth: false,\n            smoothMonotone: null,\n            // 拐点图形类型\n            symbol: 'emptyCircle',\n            // 拐点图形大小\n            symbolSize: 4,\n            // 拐点图形旋转控制\n            symbolRotate: null,\n\n            // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n            showSymbol: true,\n            // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n            showAllSymbol: false,\n\n            // 是否连接断点\n            connectNulls: false,\n\n            // 数据过滤，'average', 'max', 'min', 'sum'\n            sampling: 'none',\n\n            animationEasing: 'linear',\n\n            // Disable progressive\n            progressive: 0,\n            hoverLayerThreshold: Infinity\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/LineSeries.js\n// module id = 380\n// module chunks = 0 1 2 3 4","'use strict';\n// FIXME step not support polar\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var SymbolDraw = require('../helper/SymbolDraw');\n    var Symbol = require('../helper/Symbol');\n    var lineAnimationDiff = require('./lineAnimationDiff');\n    var graphic = require('../../util/graphic');\n    var modelUtil = require('../../util/model');\n    var polyHelper = require('./poly');\n    var ChartView = require('../../view/Chart');\n\n    function isPointsSame(points1, points2) {\n        if (points1.length !== points2.length) {\n            return;\n        }\n        for (var i = 0; i < points1.length; i++) {\n            var p1 = points1[i];\n            var p2 = points2[i];\n            if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n                return;\n            }\n        }\n        return true;\n    }\n\n    function getSmooth(smooth) {\n        return typeof (smooth) === 'number' ? smooth : (smooth ? 0.3 : 0);\n    }\n\n    function getAxisExtentWithGap(axis) {\n        var extent = axis.getGlobalExtent();\n        if (axis.onBand) {\n            // Remove extra 1px to avoid line miter in clipped edge\n            var halfBandWidth = axis.getBandWidth() / 2 - 1;\n            var dir = extent[1] > extent[0] ? 1 : -1;\n            extent[0] += dir * halfBandWidth;\n            extent[1] -= dir * halfBandWidth;\n        }\n        return extent;\n    }\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n    /**\n     * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n     * @param {module:echarts/data/List} data\n     * @param {Array.<Array.<number>>} points\n     * @private\n     */\n    function getStackedOnPoints(coordSys, data) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        return data.mapArray([valueDim], function (val, idx) {\n            var stackedOnSameSign;\n            var stackedOn = data.stackedOn;\n            // Find first stacked value with same sign\n            while (stackedOn &&\n                sign(stackedOn.get(valueDim, idx)) === sign(val)\n            ) {\n                stackedOnSameSign = stackedOn;\n                break;\n            }\n            var stackedData = [];\n            stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n            stackedData[1 - baseDataOffset] = stackedOnSameSign\n                ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n            return coordSys.dataToPoint(stackedData);\n        }, true);\n    }\n\n    function createGridClipShape(cartesian, hasAnimation, seriesModel) {\n        var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n        var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n        var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n\n        var x = Math.min(xExtent[0], xExtent[1]);\n        var y = Math.min(yExtent[0], yExtent[1]);\n        var width = Math.max(xExtent[0], xExtent[1]) - x;\n        var height = Math.max(yExtent[0], yExtent[1]) - y;\n        var lineWidth = seriesModel.get('lineStyle.normal.width') || 2;\n        // Expand clip shape to avoid clipping when line value exceeds axis\n        var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n        if (isHorizontal) {\n            y -= expandSize;\n            height += expandSize * 2;\n        }\n        else {\n            x -= expandSize;\n            width += expandSize * 2;\n        }\n\n        var clipPath = new graphic.Rect({\n            shape: {\n                x: x,\n                y: y,\n                width: width,\n                height: height\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n            graphic.initProps(clipPath, {\n                shape: {\n                    width: width,\n                    height: height\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createPolarClipShape(polar, hasAnimation, seriesModel) {\n        var angleAxis = polar.getAngleAxis();\n        var radiusAxis = polar.getRadiusAxis();\n\n        var radiusExtent = radiusAxis.getExtent();\n        var angleExtent = angleAxis.getExtent();\n\n        var RADIAN = Math.PI / 180;\n\n        var clipPath = new graphic.Sector({\n            shape: {\n                cx: polar.cx,\n                cy: polar.cy,\n                r0: radiusExtent[0],\n                r: radiusExtent[1],\n                startAngle: -angleExtent[0] * RADIAN,\n                endAngle: -angleExtent[1] * RADIAN,\n                clockwise: angleAxis.inverse\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: -angleExtent[1] * RADIAN\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createClipShape(coordSys, hasAnimation, seriesModel) {\n        return coordSys.type === 'polar'\n            ? createPolarClipShape(coordSys, hasAnimation, seriesModel)\n            : createGridClipShape(coordSys, hasAnimation, seriesModel);\n    }\n\n    function turnPointsIntoStep(points, coordSys, stepTurnAt) {\n        var baseAxis = coordSys.getBaseAxis();\n        var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n\n        var stepPoints = [];\n        for (var i = 0; i < points.length - 1; i++) {\n            var nextPt = points[i + 1];\n            var pt = points[i];\n            stepPoints.push(pt);\n\n            var stepPt = [];\n            switch (stepTurnAt) {\n                case 'end':\n                    stepPt[baseIndex] = nextPt[baseIndex];\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n                    break;\n                case 'middle':\n                    // default is start\n                    var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n                    var stepPt2 = [];\n                    stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n                    stepPoints.push(stepPt);\n                    stepPoints.push(stepPt2);\n                    break;\n                default:\n                    stepPt[baseIndex] = pt[baseIndex];\n                    stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n            }\n        }\n        // Last points\n        points[i] && stepPoints.push(points[i]);\n        return stepPoints;\n    }\n\n    function getVisualGradient(data, coordSys) {\n        var visualMetaList = data.getVisual('visualMeta');\n        if (!visualMetaList || !visualMetaList.length || !data.count()) {\n            // When data.count() is 0, gradient range can not be calculated.\n            return;\n        }\n\n        var visualMeta;\n        for (var i = visualMetaList.length - 1; i >= 0; i--) {\n            // Can only be x or y\n            if (visualMetaList[i].dimension < 2) {\n                visualMeta = visualMetaList[i];\n                break;\n            }\n        }\n        if (!visualMeta || coordSys.type !== 'cartesian2d') {\n            if (__DEV__) {\n                console.warn('Visual map on line style only support x or y dimension.');\n            }\n            return;\n        }\n\n        // If the area to be rendered is bigger than area defined by LinearGradient,\n        // the canvas spec prescribes that the color of the first stop and the last\n        // stop should be used. But if two stops are added at offset 0, in effect\n        // browsers use the color of the second stop to render area outside\n        // LinearGradient. So we can only infinitesimally extend area defined in\n        // LinearGradient to render `outerColors`.\n\n        var dimension = visualMeta.dimension;\n        var dimName = data.dimensions[dimension];\n        var axis = coordSys.getAxis(dimName);\n\n        // dataToCoor mapping may not be linear, but must be monotonic.\n        var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n            return {\n                coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n                color: stop.color\n            };\n        });\n        var stopLen = colorStops.length;\n        var outerColors = visualMeta.outerColors.slice();\n\n        if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n            colorStops.reverse();\n            outerColors.reverse();\n        }\n\n        var tinyExtent = 10; // Arbitrary value: 10px\n        var minCoord = colorStops[0].coord - tinyExtent;\n        var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n        var coordSpan = maxCoord - minCoord;\n\n        if (coordSpan < 1e-3) {\n            return 'transparent';\n        }\n\n        zrUtil.each(colorStops, function (stop) {\n            stop.offset = (stop.coord - minCoord) / coordSpan;\n        });\n        colorStops.push({\n            offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n            color: outerColors[1] || 'transparent'\n        });\n        colorStops.unshift({ // notice colorStops.length have been changed.\n            offset: stopLen ? colorStops[0].offset : 0.5,\n            color: outerColors[0] || 'transparent'\n        });\n\n        // zrUtil.each(colorStops, function (colorStop) {\n        //     // Make sure each offset has rounded px to avoid not sharp edge\n        //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n        // });\n\n        var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n        gradient[dimName] = minCoord;\n        gradient[dimName + '2'] = maxCoord;\n\n        return gradient;\n    }\n\n    module.exports = ChartView.extend({\n\n        type: 'line',\n\n        init: function () {\n            var lineGroup = new graphic.Group();\n\n            var symbolDraw = new SymbolDraw();\n            this.group.add(symbolDraw.group);\n\n            this._symbolDraw = symbolDraw;\n            this._lineGroup = lineGroup;\n        },\n\n        render: function (seriesModel, ecModel, api) {\n            var coordSys = seriesModel.coordinateSystem;\n            var group = this.group;\n            var data = seriesModel.getData();\n            var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n            var areaStyleModel = seriesModel.getModel('areaStyle.normal');\n\n            var points = data.mapArray(data.getItemLayout, true);\n\n            var isCoordSysPolar = coordSys.type === 'polar';\n            var prevCoordSys = this._coordSys;\n\n            var symbolDraw = this._symbolDraw;\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n\n            var lineGroup = this._lineGroup;\n\n            var hasAnimation = seriesModel.get('animation');\n\n            var isAreaChart = !areaStyleModel.isEmpty();\n            var stackedOnPoints = getStackedOnPoints(coordSys, data);\n\n            var showSymbol = seriesModel.get('showSymbol');\n\n            var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol')\n                && this._getSymbolIgnoreFunc(data, coordSys);\n\n            // Remove temporary symbols\n            var oldData = this._data;\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            // Remove previous created symbols if showSymbol changed to false\n            if (!showSymbol) {\n                symbolDraw.remove();\n            }\n\n            group.add(lineGroup);\n\n            // FIXME step not support polar\n            var step = !isCoordSysPolar && seriesModel.get('step');\n            // Initialization animation or coordinate system changed\n            if (\n                !(polyline && prevCoordSys.type === coordSys.type && step === this._step)\n            ) {\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                if (step) {\n                    // TODO If stacked series is not step\n                    points = turnPointsIntoStep(points, coordSys, step);\n                    stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                }\n\n                polyline = this._newPolyline(points, coordSys, hasAnimation);\n                if (isAreaChart) {\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n            }\n            else {\n                if (isAreaChart && !polygon) {\n                    // If areaStyle is added\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                else if (polygon && !isAreaChart) {\n                    // If areaStyle is removed\n                    lineGroup.remove(polygon);\n                    polygon = this._polygon = null;\n                }\n\n                // Update clipPath\n                lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel));\n\n                // Always update, or it is wrong in the case turning on legend\n                // because points are not changed\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                // Stop symbol animation and sync with line points\n                // FIXME performance?\n                data.eachItemGraphicEl(function (el) {\n                    el.stopAnimation(true);\n                });\n\n                // In the case data zoom triggerred refreshing frequently\n                // Data may not change if line has a category axis. So it should animate nothing\n                if (!isPointsSame(this._stackedOnPoints, stackedOnPoints)\n                    || !isPointsSame(this._points, points)\n                ) {\n                    if (hasAnimation) {\n                        this._updateAnimation(\n                            data, stackedOnPoints, coordSys, api, step\n                        );\n                    }\n                    else {\n                        // Not do it in update with animation\n                        if (step) {\n                            // TODO If stacked series is not step\n                            points = turnPointsIntoStep(points, coordSys, step);\n                            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                        }\n\n                        polyline.setShape({\n                            points: points\n                        });\n                        polygon && polygon.setShape({\n                            points: points,\n                            stackedOnPoints: stackedOnPoints\n                        });\n                    }\n                }\n            }\n\n            var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n\n            polyline.useStyle(zrUtil.defaults(\n                // Use color in lineStyle first\n                lineStyleModel.getLineStyle(),\n                {\n                    fill: 'none',\n                    stroke: visualColor,\n                    lineJoin: 'bevel'\n                }\n            ));\n\n            var smooth = seriesModel.get('smooth');\n            smooth = getSmooth(seriesModel.get('smooth'));\n            polyline.setShape({\n                smooth: smooth,\n                smoothMonotone: seriesModel.get('smoothMonotone'),\n                connectNulls: seriesModel.get('connectNulls')\n            });\n\n            if (polygon) {\n                var stackedOn = data.stackedOn;\n                var stackedOnSmooth = 0;\n\n                polygon.useStyle(zrUtil.defaults(\n                    areaStyleModel.getAreaStyle(),\n                    {\n                        fill: visualColor,\n                        opacity: 0.7,\n                        lineJoin: 'bevel'\n                    }\n                ));\n\n                if (stackedOn) {\n                    var stackedOnSeries = stackedOn.hostModel;\n                    stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n                }\n\n                polygon.setShape({\n                    smooth: smooth,\n                    stackedOnSmooth: stackedOnSmooth,\n                    smoothMonotone: seriesModel.get('smoothMonotone'),\n                    connectNulls: seriesModel.get('connectNulls')\n                });\n            }\n\n            this._data = data;\n            // Save the coordinate system for transition animation when data changed\n            this._coordSys = coordSys;\n            this._stackedOnPoints = stackedOnPoints;\n            this._points = points;\n            this._step = step;\n        },\n\n        dispose: function () {},\n\n        highlight: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n            if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (!symbol) {\n                    // Create a temporary symbol if it is not exists\n                    var pt = data.getItemLayout(dataIndex);\n                    if (!pt) {\n                        // Null data\n                        return;\n                    }\n                    symbol = new Symbol(data, dataIndex);\n                    symbol.position = pt;\n                    symbol.setZ(\n                        seriesModel.get('zlevel'),\n                        seriesModel.get('z')\n                    );\n                    symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n                    symbol.__temp = true;\n                    data.setItemGraphicEl(dataIndex, symbol);\n\n                    // Stop scale animation\n                    symbol.stopSymbolAnimation(true);\n\n                    this.group.add(symbol);\n                }\n                symbol.highlight();\n            }\n            else {\n                // Highlight whole series\n                ChartView.prototype.highlight.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        downplay: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n            if (dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (symbol) {\n                    if (symbol.__temp) {\n                        data.setItemGraphicEl(dataIndex, null);\n                        this.group.remove(symbol);\n                    }\n                    else {\n                        symbol.downplay();\n                    }\n                }\n            }\n            else {\n                // Downplay whole series\n                ChartView.prototype.downplay.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolyline: function (points) {\n            var polyline = this._polyline;\n            // Remove previous created polyline\n            if (polyline) {\n                this._lineGroup.remove(polyline);\n            }\n\n            polyline = new polyHelper.Polyline({\n                shape: {\n                    points: points\n                },\n                silent: true,\n                z2: 10\n            });\n\n            this._lineGroup.add(polyline);\n\n            this._polyline = polyline;\n\n            return polyline;\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} stackedOnPoints\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolygon: function (points, stackedOnPoints) {\n            var polygon = this._polygon;\n            // Remove previous created polygon\n            if (polygon) {\n                this._lineGroup.remove(polygon);\n            }\n\n            polygon = new polyHelper.Polygon({\n                shape: {\n                    points: points,\n                    stackedOnPoints: stackedOnPoints\n                },\n                silent: true\n            });\n\n            this._lineGroup.add(polygon);\n\n            this._polygon = polygon;\n            return polygon;\n        },\n        /**\n         * @private\n         */\n        _getSymbolIgnoreFunc: function (data, coordSys) {\n            var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n            // `getLabelInterval` is provided by echarts/component/axis\n            if (categoryAxis && categoryAxis.isLabelIgnored) {\n                return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n            }\n        },\n\n        /**\n         * @private\n         */\n        // FIXME Two value axis\n        _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n            var seriesModel = data.hostModel;\n\n            var diff = lineAnimationDiff(\n                this._data, data,\n                this._stackedOnPoints, stackedOnPoints,\n                this._coordSys, coordSys\n            );\n\n            var current = diff.current;\n            var stackedOnCurrent = diff.stackedOnCurrent;\n            var next = diff.next;\n            var stackedOnNext = diff.stackedOnNext;\n            if (step) {\n                // TODO If stacked series is not step\n                current = turnPointsIntoStep(diff.current, coordSys, step);\n                stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n                next = turnPointsIntoStep(diff.next, coordSys, step);\n                stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n            }\n            // `diff.current` is subset of `current` (which should be ensured by\n            // turnPointsIntoStep), so points in `__points` can be updated when\n            // points in `current` are update during animation.\n            polyline.shape.__points = diff.current;\n            polyline.shape.points = current;\n\n            graphic.updateProps(polyline, {\n                shape: {\n                    points: next\n                }\n            }, seriesModel);\n\n            if (polygon) {\n                polygon.setShape({\n                    points: current,\n                    stackedOnPoints: stackedOnCurrent\n                });\n                graphic.updateProps(polygon, {\n                    shape: {\n                        points: next,\n                        stackedOnPoints: stackedOnNext\n                    }\n                }, seriesModel);\n            }\n\n            var updatedDataInfo = [];\n            var diffStatus = diff.status;\n\n            for (var i = 0; i < diffStatus.length; i++) {\n                var cmd = diffStatus[i].cmd;\n                if (cmd === '=') {\n                    var el = data.getItemGraphicEl(diffStatus[i].idx1);\n                    if (el) {\n                        updatedDataInfo.push({\n                            el: el,\n                            ptIdx: i    // Index of points\n                        });\n                    }\n                }\n            }\n\n            if (polyline.animators && polyline.animators.length) {\n                polyline.animators[0].during(function () {\n                    for (var i = 0; i < updatedDataInfo.length; i++) {\n                        var el = updatedDataInfo[i].el;\n                        el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n                    }\n                });\n            }\n        },\n\n        remove: function (ecModel) {\n            var group = this.group;\n            var oldData = this._data;\n            this._lineGroup.removeAll();\n            this._symbolDraw.remove(true);\n            // Remove temporary created elements when highlighting\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            this._polyline =\n            this._polygon =\n            this._coordSys =\n            this._points =\n            this._stackedOnPoints =\n            this._data = null;\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/LineView.js\n// module id = 381\n// module chunks = 0 1 2 3 4","\n\n    // var arrayDiff = require('zrender/lib/core/arrayDiff');\n    // 'zrender/core/arrayDiff' has been used before, but it did\n    // not do well in performance when roam with fixed dataZoom window.\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n\n    function getStackedOnPoint(coordSys, data, idx) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        var stackedOnSameSign;\n        var stackedOn = data.stackedOn;\n        var val = data.get(valueDim, idx);\n        // Find first stacked value with same sign\n        while (stackedOn &&\n            sign(stackedOn.get(valueDim, idx)) === sign(val)\n        ) {\n            stackedOnSameSign = stackedOn;\n            break;\n        }\n        var stackedData = [];\n        stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n        stackedData[1 - baseDataOffset] = stackedOnSameSign\n            ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n        return coordSys.dataToPoint(stackedData);\n    }\n\n    // function convertToIntId(newIdList, oldIdList) {\n    //     // Generate int id instead of string id.\n    //     // Compare string maybe slow in score function of arrDiff\n\n    //     // Assume id in idList are all unique\n    //     var idIndicesMap = {};\n    //     var idx = 0;\n    //     for (var i = 0; i < newIdList.length; i++) {\n    //         idIndicesMap[newIdList[i]] = idx;\n    //         newIdList[i] = idx++;\n    //     }\n    //     for (var i = 0; i < oldIdList.length; i++) {\n    //         var oldId = oldIdList[i];\n    //         // Same with newIdList\n    //         if (idIndicesMap[oldId]) {\n    //             oldIdList[i] = idIndicesMap[oldId];\n    //         }\n    //         else {\n    //             oldIdList[i] = idx++;\n    //         }\n    //     }\n    // }\n\n    function diffData(oldData, newData) {\n        var diffResult = [];\n\n        newData.diff(oldData)\n            .add(function (idx) {\n                diffResult.push({cmd: '+', idx: idx});\n            })\n            .update(function (newIdx, oldIdx) {\n                diffResult.push({cmd: '=', idx: oldIdx, idx1: newIdx});\n            })\n            .remove(function (idx) {\n                diffResult.push({cmd: '-', idx: idx});\n            })\n            .execute();\n\n        return diffResult;\n    }\n\n    module.exports = function (\n        oldData, newData,\n        oldStackedOnPoints, newStackedOnPoints,\n        oldCoordSys, newCoordSys\n    ) {\n        var diff = diffData(oldData, newData);\n\n        // var newIdList = newData.mapArray(newData.getId);\n        // var oldIdList = oldData.mapArray(oldData.getId);\n\n        // convertToIntId(newIdList, oldIdList);\n\n        // // FIXME One data ?\n        // diff = arrayDiff(oldIdList, newIdList);\n\n        var currPoints = [];\n        var nextPoints = [];\n        // Points for stacking base line\n        var currStackedPoints = [];\n        var nextStackedPoints = [];\n\n        var status = [];\n        var sortedIndices = [];\n        var rawIndices = [];\n        var dims = newCoordSys.dimensions;\n        for (var i = 0; i < diff.length; i++) {\n            var diffItem = diff[i];\n            var pointAdded = true;\n\n            // FIXME, animation is not so perfect when dataZoom window moves fast\n            // Which is in case remvoing or add more than one data in the tail or head\n            switch (diffItem.cmd) {\n                case '=':\n                    var currentPt = oldData.getItemLayout(diffItem.idx);\n                    var nextPt = newData.getItemLayout(diffItem.idx1);\n                    // If previous data is NaN, use next point directly\n                    if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n                        currentPt = nextPt.slice();\n                    }\n                    currPoints.push(currentPt);\n                    nextPoints.push(nextPt);\n\n                    currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n                    nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n\n                    rawIndices.push(newData.getRawIndex(diffItem.idx1));\n                    break;\n                case '+':\n                    var idx = diffItem.idx;\n                    currPoints.push(\n                        oldCoordSys.dataToPoint([\n                            newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)\n                        ])\n                    );\n\n                    nextPoints.push(newData.getItemLayout(idx).slice());\n\n                    currStackedPoints.push(\n                        getStackedOnPoint(oldCoordSys, newData, idx)\n                    );\n                    nextStackedPoints.push(newStackedOnPoints[idx]);\n\n                    rawIndices.push(newData.getRawIndex(idx));\n                    break;\n                case '-':\n                    var idx = diffItem.idx;\n                    var rawIndex = oldData.getRawIndex(idx);\n                    // Data is replaced. In the case of dynamic data queue\n                    // FIXME FIXME FIXME\n                    if (rawIndex !== idx) {\n                        currPoints.push(oldData.getItemLayout(idx));\n                        nextPoints.push(newCoordSys.dataToPoint([\n                            oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)\n                        ]));\n\n                        currStackedPoints.push(oldStackedOnPoints[idx]);\n                        nextStackedPoints.push(\n                            getStackedOnPoint(\n                                newCoordSys, oldData, idx\n                            )\n                        );\n\n                        rawIndices.push(rawIndex);\n                    }\n                    else {\n                        pointAdded = false;\n                    }\n            }\n\n            // Original indices\n            if (pointAdded) {\n                status.push(diffItem);\n                sortedIndices.push(sortedIndices.length);\n            }\n        }\n\n        // Diff result may be crossed if all items are changed\n        // Sort by data index\n        sortedIndices.sort(function (a, b) {\n            return rawIndices[a] - rawIndices[b];\n        });\n\n        var sortedCurrPoints = [];\n        var sortedNextPoints = [];\n\n        var sortedCurrStackedPoints = [];\n        var sortedNextStackedPoints = [];\n\n        var sortedStatus = [];\n        for (var i = 0; i < sortedIndices.length; i++) {\n            var idx = sortedIndices[i];\n            sortedCurrPoints[i] = currPoints[idx];\n            sortedNextPoints[i] = nextPoints[idx];\n\n            sortedCurrStackedPoints[i] = currStackedPoints[idx];\n            sortedNextStackedPoints[i] = nextStackedPoints[idx];\n\n            sortedStatus[i] = status[idx];\n        }\n\n        return {\n            current: sortedCurrPoints,\n            next: sortedNextPoints,\n\n            stackedOnCurrent: sortedCurrStackedPoints,\n            stackedOnNext: sortedNextStackedPoints,\n\n            status: sortedStatus\n        };\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/lineAnimationDiff.js\n// module id = 382\n// module chunks = 0 1 2 3 4","// Poly path support NaN point\n\n\n    var Path = require('zrender/lib/graphic/Path');\n    var vec2 = require('zrender/lib/core/vector');\n\n    var vec2Min = vec2.min;\n    var vec2Max = vec2.max;\n\n    var scaleAndAdd = vec2.scaleAndAdd;\n    var v2Copy = vec2.copy;\n\n    // Temporary variable\n    var v = [];\n    var cp0 = [];\n    var cp1 = [];\n\n    function isPointNull(p) {\n        return isNaN(p[0]) || isNaN(p[1]);\n    }\n\n    function drawSegment(\n        ctx, points, start, segLen, allLen,\n        dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls\n    ) {\n        var prevIdx = 0;\n        var idx = start;\n        for (var k = 0; k < segLen; k++) {\n            var p = points[idx];\n            if (idx >= allLen || idx < 0) {\n                break;\n            }\n            if (isPointNull(p)) {\n                if (connectNulls) {\n                    idx += dir;\n                    continue;\n                }\n                break;\n            }\n\n            if (idx === start) {\n                ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n                v2Copy(cp0, p);\n            }\n            else {\n                if (smooth > 0) {\n                    var nextIdx = idx + dir;\n                    var nextP = points[nextIdx];\n                    if (connectNulls) {\n                        // Find next point not null\n                        while (nextP && isPointNull(points[nextIdx])) {\n                            nextIdx += dir;\n                            nextP = points[nextIdx];\n                        }\n                    }\n\n                    var ratioNextSeg = 0.5;\n                    var prevP = points[prevIdx];\n                    var nextP = points[nextIdx];\n                    // Last point\n                    if (!nextP || isPointNull(nextP)) {\n                        v2Copy(cp1, p);\n                    }\n                    else {\n                        // If next data is null in not connect case\n                        if (isPointNull(nextP) && !connectNulls) {\n                            nextP = p;\n                        }\n\n                        vec2.sub(v, nextP, prevP);\n\n                        var lenPrevSeg;\n                        var lenNextSeg;\n                        if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n                            var dim = smoothMonotone === 'x' ? 0 : 1;\n                            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n                            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n                        }\n                        else {\n                            lenPrevSeg = vec2.dist(p, prevP);\n                            lenNextSeg = vec2.dist(p, nextP);\n                        }\n\n                        // Use ratio of seg length\n                        ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n\n                        scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n                    }\n                    // Smooth constraint\n                    vec2Min(cp0, cp0, smoothMax);\n                    vec2Max(cp0, cp0, smoothMin);\n                    vec2Min(cp1, cp1, smoothMax);\n                    vec2Max(cp1, cp1, smoothMin);\n\n                    ctx.bezierCurveTo(\n                        cp0[0], cp0[1],\n                        cp1[0], cp1[1],\n                        p[0], p[1]\n                    );\n                    // cp0 of next segment\n                    scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n                }\n                else {\n                    ctx.lineTo(p[0], p[1]);\n                }\n            }\n\n            prevIdx = idx;\n            idx += dir;\n        }\n\n        return k;\n    }\n\n    function getBoundingBox(points, smoothConstraint) {\n        var ptMin = [Infinity, Infinity];\n        var ptMax = [-Infinity, -Infinity];\n        if (smoothConstraint) {\n            for (var i = 0; i < points.length; i++) {\n                var pt = points[i];\n                if (pt[0] < ptMin[0]) { ptMin[0] = pt[0]; }\n                if (pt[1] < ptMin[1]) { ptMin[1] = pt[1]; }\n                if (pt[0] > ptMax[0]) { ptMax[0] = pt[0]; }\n                if (pt[1] > ptMax[1]) { ptMax[1] = pt[1]; }\n            }\n        }\n        return {\n            min: smoothConstraint ? ptMin : ptMax,\n            max: smoothConstraint ? ptMax : ptMin\n        };\n    }\n\n    module.exports = {\n\n        Polyline: Path.extend({\n\n            type: 'ec-polyline',\n\n            shape: {\n                points: [],\n\n                smooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            style: {\n                fill: null,\n\n                stroke: '#000'\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n\n                var i = 0;\n                var len = points.length;\n\n                var result = getBoundingBox(points, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    i += drawSegment(\n                        ctx, points, i, len, len,\n                        1, result.min, result.max, shape.smooth,\n                        shape.smoothMonotone, shape.connectNulls\n                    ) + 1;\n                }\n            }\n        }),\n\n        Polygon: Path.extend({\n\n            type: 'ec-polygon',\n\n            shape: {\n                points: [],\n\n                // Offset between stacked base points and points\n                stackedOnPoints: [],\n\n                smooth: 0,\n\n                stackedOnSmooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n                var stackedOnPoints = shape.stackedOnPoints;\n\n                var i = 0;\n                var len = points.length;\n                var smoothMonotone = shape.smoothMonotone;\n                var bbox = getBoundingBox(points, shape.smoothConstraint);\n                var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    var k = drawSegment(\n                        ctx, points, i, len, len,\n                        1, bbox.min, bbox.max, shape.smooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    drawSegment(\n                        ctx, stackedOnPoints, i + k - 1, k, len,\n                        -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    i += k + 1;\n\n                    ctx.closePath();\n                }\n            }\n        })\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/poly.js\n// module id = 383\n// module chunks = 0 1 2 3 4","'use strict';\n// TODO boundaryGap\n\n\n    require('../coord/cartesian/AxisModel');\n\n    require('./axis/AxisView');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis.js\n// module id = 384\n// module chunks = 0 1 2 3 4","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../../util/format');\n    var graphic = require('../../util/graphic');\n    var Model = require('../../model/Model');\n    var numberUtil = require('../../util/number');\n    var remRadian = numberUtil.remRadian;\n    var isRadianAroundZero = numberUtil.isRadianAroundZero;\n    var vec2 = require('zrender/lib/core/vector');\n    var v2ApplyTransform = vec2.applyTransform;\n    var retrieve = zrUtil.retrieve;\n\n    var PI = Math.PI;\n\n    function makeAxisEventDataBase(axisModel) {\n        var eventData = {\n            componentType: axisModel.mainType\n        };\n        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n        return eventData;\n    }\n\n    /**\n     * A final axis is translated and rotated from a \"standard axis\".\n     * So opt.position and opt.rotation is required.\n     *\n     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n     * for example: (0, 0) ------------> (0, 50)\n     *\n     * nameDirection or tickDirection or labelDirection is 1 means tick\n     * or label is below the standard axis, whereas is -1 means above\n     * the standard axis. labelOffset means offset between label and axis,\n     * which is useful when 'onZero', where axisLabel is in the grid and\n     * label in outside grid.\n     *\n     * Tips: like always,\n     * positive rotation represents anticlockwise, and negative rotation\n     * represents clockwise.\n     * The direction of position coordinate is the same as the direction\n     * of screen coordinate.\n     *\n     * Do not need to consider axis 'inverse', which is auto processed by\n     * axis extent.\n     *\n     * @param {module:zrender/container/Group} group\n     * @param {Object} axisModel\n     * @param {Object} opt Standard axis parameters.\n     * @param {Array.<number>} opt.position [x, y]\n     * @param {number} opt.rotation by radian\n     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle'.\n     * @param {number} [opt.tickDirection=1] 1 or -1\n     * @param {number} [opt.labelDirection=1] 1 or -1\n     * @param {number} [opt.labelOffset=0] Usefull when onZero.\n     * @param {string} [opt.axisLabelShow] default get from axisModel.\n     * @param {string} [opt.axisName] default get from axisModel.\n     * @param {number} [opt.axisNameAvailableWidth]\n     * @param {number} [opt.labelRotation] by degree, default get from axisModel.\n     * @param {number} [opt.labelInterval] Default label interval when label\n     *                                     interval from model is null or 'auto'.\n     * @param {number} [opt.strokeContainThreshold] Default label interval when label\n     */\n    var AxisBuilder = function (axisModel, opt) {\n\n        /**\n         * @readOnly\n         */\n        this.opt = opt;\n\n        /**\n         * @readOnly\n         */\n        this.axisModel = axisModel;\n\n        // Default value\n        zrUtil.defaults(\n            opt,\n            {\n                labelOffset: 0,\n                nameDirection: 1,\n                tickDirection: 1,\n                labelDirection: 1,\n                silent: true\n            }\n        );\n\n        /**\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        // FIXME Not use a seperate text group?\n        var dumbGroup = new graphic.Group({\n            position: opt.position.slice(),\n            rotation: opt.rotation\n        });\n\n        // this.group.add(dumbGroup);\n        // this._dumbGroup = dumbGroup;\n\n        dumbGroup.updateTransform();\n        this._transform = dumbGroup.transform;\n\n        this._dumbGroup = dumbGroup;\n    };\n\n    AxisBuilder.prototype = {\n\n        constructor: AxisBuilder,\n\n        hasBuilder: function (name) {\n            return !!builders[name];\n        },\n\n        add: function (name) {\n            builders[name].call(this);\n        },\n\n        getGroup: function () {\n            return this.group;\n        }\n\n    };\n\n    var builders = {\n\n        /**\n         * @private\n         */\n        axisLine: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n\n            if (!axisModel.get('axisLine.show')) {\n                return;\n            }\n\n            var extent = this.axisModel.axis.getExtent();\n\n            var matrix = this._transform;\n            var pt1 = [extent[0], 0];\n            var pt2 = [extent[1], 0];\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n\n            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                // Id for animation\n                anid: 'line',\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.extend(\n                    {lineCap: 'round'},\n                    axisModel.getModel('axisLine.lineStyle').getLineStyle()\n                ),\n                strokeContainThreshold: opt.strokeContainThreshold || 5,\n                silent: true,\n                z2: 1\n            })));\n        },\n\n        /**\n         * @private\n         */\n        axisTick: function () {\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n\n            if (!axisModel.get('axisTick.show') || axis.isBlank()) {\n                return;\n            }\n\n            var tickModel = axisModel.getModel('axisTick');\n            var opt = this.opt;\n\n            var lineStyleModel = tickModel.getModel('lineStyle');\n            var tickLen = tickModel.get('length');\n\n            var tickInterval = getInterval(tickModel, opt.labelInterval);\n            var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));\n            var ticks = axis.scale.getTicks();\n\n            var pt1 = [];\n            var pt2 = [];\n            var matrix = this._transform;\n\n            for (var i = 0; i < ticksCoords.length; i++) {\n                // Only ordinal scale support tick interval\n                if (ifIgnoreOnTick(axis, i, tickInterval)) {\n                     continue;\n                }\n\n                var tickCoord = ticksCoords[i];\n\n                pt1[0] = tickCoord;\n                pt1[1] = 0;\n                pt2[0] = tickCoord;\n                pt2[1] = opt.tickDirection * tickLen;\n\n                if (matrix) {\n                    v2ApplyTransform(pt1, pt1, matrix);\n                    v2ApplyTransform(pt2, pt2, matrix);\n                }\n                // Tick line, Not use group transform to have better line draw\n                this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                    // Id for animation\n                    anid: 'tick_' + ticks[i],\n\n                    shape: {\n                        x1: pt1[0],\n                        y1: pt1[1],\n                        x2: pt2[0],\n                        y2: pt2[1]\n                    },\n                    style: zrUtil.defaults(\n                        lineStyleModel.getLineStyle(),\n                        {\n                            stroke: axisModel.get('axisLine.lineStyle.color')\n                        }\n                    ),\n                    z2: 2,\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @private\n         */\n        axisLabel: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n            var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n            if (!show || axis.isBlank()) {\n                return;\n            }\n\n            var labelModel = axisModel.getModel('axisLabel');\n            var textStyleModel = labelModel.getModel('textStyle');\n            var labelMargin = labelModel.get('margin');\n            var ticks = axis.scale.getTicks();\n            var labels = axisModel.getFormattedLabels();\n\n            // Special label rotate.\n            var labelRotation = retrieve(opt.labelRotation, labelModel.get('rotate')) || 0;\n            // To radian.\n            labelRotation = labelRotation * PI / 180;\n\n            var labelLayout = innerTextLayout(opt, labelRotation, opt.labelDirection);\n            var categoryData = axisModel.get('data');\n\n            var textEls = [];\n            var silent = isSilent(axisModel);\n            var triggerEvent = axisModel.get('triggerEvent');\n\n            zrUtil.each(ticks, function (tickVal, index) {\n                if (ifIgnoreOnTick(axis, index, opt.labelInterval)) {\n                     return;\n                }\n\n                var itemTextStyleModel = textStyleModel;\n                if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n                    itemTextStyleModel = new Model(\n                        categoryData[tickVal].textStyle, textStyleModel, axisModel.ecModel\n                    );\n                }\n                var textColor = itemTextStyleModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color');\n\n                var tickCoord = axis.dataToCoord(tickVal);\n                var pos = [\n                    tickCoord,\n                    opt.labelOffset + opt.labelDirection * labelMargin\n                ];\n                var labelBeforeFormat = axis.scale.getLabel(tickVal);\n\n                var textEl = new graphic.Text({\n\n                    // Id for animation\n                    anid: 'label_' + tickVal,\n\n                    style: {\n                        text: labels[index],\n                        textAlign: itemTextStyleModel.get('align', true) || labelLayout.textAlign,\n                        textVerticalAlign: itemTextStyleModel.get('baseline', true) || labelLayout.verticalAlign,\n                        textFont: itemTextStyleModel.getFont(),\n                        fill: typeof textColor === 'function' ? textColor(labelBeforeFormat) : textColor\n                    },\n                    position: pos,\n                    rotation: labelLayout.rotation,\n                    silent: silent,\n                    z2: 10\n                });\n\n                // Pack data for mouse event\n                if (triggerEvent) {\n                    textEl.eventData = makeAxisEventDataBase(axisModel);\n                    textEl.eventData.targetType = 'axisLabel';\n                    textEl.eventData.value = labelBeforeFormat;\n                }\n\n                // FIXME\n                this._dumbGroup.add(textEl);\n                textEl.updateTransform();\n\n                textEls.push(textEl);\n                this.group.add(textEl);\n\n                textEl.decomposeTransform();\n\n            }, this);\n\n            function isTwoLabelOverlapped(current, next) {\n                var firstRect = current && current.getBoundingRect().clone();\n                var nextRect = next && next.getBoundingRect().clone();\n                if (firstRect && nextRect) {\n                    firstRect.applyTransform(current.getLocalTransform());\n                    nextRect.applyTransform(next.getLocalTransform());\n                    return firstRect.intersect(nextRect);\n                }\n            }\n\n            // If min or max are user set, we need to check\n            // If the tick on min(max) are overlap on their neighbour tick\n            // If they are overlapped, we need to hide the min(max) tick label\n            if (axisModel.getMin() != null) {\n                var firstLabel = textEls[0];\n                var nextLabel = textEls[1];\n                if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n                    firstLabel.ignore = true;\n                }\n            }\n            if (axisModel.getMax() != null) {\n                var lastLabel = textEls[textEls.length - 1];\n                var prevLabel = textEls[textEls.length - 2];\n                if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n                    lastLabel.ignore = true;\n                }\n            }\n        },\n\n        /**\n         * @private\n         */\n        axisName: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var name = retrieve(opt.axisName, axisModel.get('name'));\n\n            if (!name) {\n                return;\n            }\n\n            var nameLocation = axisModel.get('nameLocation');\n            var nameDirection = opt.nameDirection;\n            var textStyleModel = axisModel.getModel('nameTextStyle');\n            var gap = axisModel.get('nameGap') || 0;\n\n            var extent = this.axisModel.axis.getExtent();\n            var gapSignal = extent[0] > extent[1] ? -1 : 1;\n            var pos = [\n                nameLocation === 'start'\n                    ? extent[0] - gapSignal * gap\n                    : nameLocation === 'end'\n                    ? extent[1] + gapSignal * gap\n                    : (extent[0] + extent[1]) / 2, // 'middle'\n                // Reuse labelOffset.\n                nameLocation === 'middle' ? opt.labelOffset + nameDirection * gap : 0\n            ];\n\n            var labelLayout;\n\n            var nameRotation = axisModel.get('nameRotate');\n            if (nameRotation != null) {\n                nameRotation = nameRotation * PI / 180; // To radian.\n            }\n\n            var axisNameAvailableWidth;\n\n            if (nameLocation === 'middle') {\n                labelLayout = innerTextLayout(\n                    opt,\n                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n                    nameDirection\n                );\n            }\n            else {\n                labelLayout = endTextLayout(\n                    opt, nameLocation, nameRotation || 0, extent\n                );\n\n                axisNameAvailableWidth = opt.axisNameAvailableWidth;\n                if (axisNameAvailableWidth != null) {\n                    axisNameAvailableWidth = Math.abs(\n                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)\n                    );\n                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n                }\n            }\n\n            var textFont = textStyleModel.getFont();\n\n            var truncateOpt = axisModel.get('nameTruncate', true) || {};\n            var ellipsis = truncateOpt.ellipsis;\n            var maxWidth = retrieve(truncateOpt.maxWidth, axisNameAvailableWidth);\n            var truncatedText = (ellipsis != null && maxWidth != null)\n                ? formatUtil.truncateText(\n                    name, maxWidth, textFont, ellipsis,\n                    {minChar: 2, placeholder: truncateOpt.placeholder}\n                )\n                : name;\n\n            var tooltipOpt = axisModel.get('tooltip', true);\n\n            var mainType = axisModel.mainType;\n            var formatterParams = {\n                componentType: mainType,\n                name: name,\n                $vars: ['name']\n            };\n            formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n\n            var textEl = new graphic.Text({\n\n                // Id for animation\n                anid: 'name',\n\n                __fullText: name,\n                __truncatedText: truncatedText,\n\n                style: {\n                    text: truncatedText,\n                    textFont: textFont,\n                    fill: textStyleModel.getTextColor()\n                        || axisModel.get('axisLine.lineStyle.color'),\n                    textAlign: labelLayout.textAlign,\n                    textVerticalAlign: labelLayout.verticalAlign\n                },\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: isSilent(axisModel),\n                z2: 1,\n                tooltip: (tooltipOpt && tooltipOpt.show)\n                    ? zrUtil.extend({\n                        content: name,\n                        formatter: function () {\n                            return name;\n                        },\n                        formatterParams: formatterParams\n                    }, tooltipOpt)\n                    : null\n            });\n\n            if (axisModel.get('triggerEvent')) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisName';\n                textEl.eventData.name = name;\n            }\n\n            // FIXME\n            this._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            this.group.add(textEl);\n\n            textEl.decomposeTransform();\n        }\n\n    };\n\n    /**\n     * @inner\n     */\n    function innerTextLayout(opt, textRotation, direction) {\n        var rotationDiff = remRadian(textRotation - opt.rotation);\n        var textAlign;\n        var verticalAlign;\n\n        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.\n            verticalAlign = direction > 0 ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.\n            verticalAlign = direction > 0 ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else {\n            verticalAlign = 'middle';\n\n            if (rotationDiff > 0 && rotationDiff < PI) {\n                textAlign = direction > 0 ? 'right' : 'left';\n            }\n            else {\n                textAlign = direction > 0 ? 'left' : 'right';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            verticalAlign: verticalAlign\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function endTextLayout(opt, textPosition, textRotate, extent) {\n        var rotationDiff = remRadian(textRotate - opt.rotation);\n        var textAlign;\n        var verticalAlign;\n        var inverse = extent[0] > extent[1];\n        var onLeft = (textPosition === 'start' && !inverse)\n            || (textPosition !== 'start' && inverse);\n\n        if (isRadianAroundZero(rotationDiff - PI / 2)) {\n            verticalAlign = onLeft ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n            verticalAlign = onLeft ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else {\n            verticalAlign = 'middle';\n            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n                textAlign = onLeft ? 'left' : 'right';\n            }\n            else {\n                textAlign = onLeft ? 'right' : 'left';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            verticalAlign: verticalAlign\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function isSilent(axisModel) {\n        var tooltipOpt = axisModel.get('tooltip');\n        return axisModel.get('silent')\n            // Consider mouse cursor, add these restrictions.\n            || !(\n                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)\n            );\n    }\n\n    /**\n     * @static\n     */\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval) {\n        var rawTick;\n        var scale = axis.scale;\n        return scale.type === 'ordinal'\n            && (\n                typeof interval === 'function'\n                    ? (\n                        rawTick = scale.getTicks()[i],\n                        !interval(rawTick, scale.getLabel(rawTick))\n                    )\n                    : i % (interval + 1)\n            );\n    };\n\n    /**\n     * @static\n     */\n    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n        var interval = model.get('interval');\n        if (interval == null || interval == 'auto') {\n            interval = labelInterval;\n        }\n        return interval;\n    };\n\n    module.exports = AxisBuilder;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/AxisBuilder.js\n// module id = 385\n// module chunks = 0 1 2 3 4","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var AxisBuilder = require('./AxisBuilder');\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\n    var getInterval = AxisBuilder.getInterval;\n\n    var axisBuilderAttrs = [\n        'axisLine', 'axisLabel', 'axisTick', 'axisName'\n    ];\n    var selfBuilderAttrs = [\n        'splitArea', 'splitLine'\n    ];\n\n    // function getAlignWithLabel(model, axisModel) {\n    //     var alignWithLabel = model.get('alignWithLabel');\n    //     if (alignWithLabel === 'auto') {\n    //         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n    //     }\n    //     return alignWithLabel;\n    // }\n\n    var AxisView = require('../../echarts').extendComponentView({\n\n        type: 'axis',\n\n        render: function (axisModel, ecModel) {\n\n            this.group.removeAll();\n\n            var oldAxisGroup = this._axisGroup;\n            this._axisGroup = new graphic.Group();\n\n            this.group.add(this._axisGroup);\n\n            if (!axisModel.get('show')) {\n                return;\n            }\n\n            var gridModel = axisModel.getCoordSysModel();\n\n            var layout = layoutAxis(gridModel, axisModel);\n\n            var axisBuilder = new AxisBuilder(axisModel, layout);\n\n            zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n            this._axisGroup.add(axisBuilder.getGroup());\n\n            zrUtil.each(selfBuilderAttrs, function (name) {\n                if (axisModel.get(name + '.show')) {\n                    this['_' + name](axisModel, gridModel, layout.labelInterval);\n                }\n            }, this);\n\n            graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitLine: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.isBlank()) {\n                return;\n            }\n\n            var splitLineModel = axisModel.getModel('splitLine');\n            var lineStyleModel = splitLineModel.getModel('lineStyle');\n            var lineColors = lineStyleModel.get('color');\n\n            var lineInterval = getInterval(splitLineModel, labelInterval);\n\n            lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n            var isHorizontal = axis.isHorizontal();\n\n            var lineCount = 0;\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitLineModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var p1 = [];\n            var p2 = [];\n            // Simple optimization\n            // Batching the lines if color are the same\n            var lineStyle = lineStyleModel.getLineStyle();\n            for (var i = 0; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, lineInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                if (isHorizontal) {\n                    p1[0] = tickCoord;\n                    p1[1] = gridRect.y;\n                    p2[0] = tickCoord;\n                    p2[1] = gridRect.y + gridRect.height;\n                }\n                else {\n                    p1[0] = gridRect.x;\n                    p1[1] = tickCoord;\n                    p2[0] = gridRect.x + gridRect.width;\n                    p2[1] = tickCoord;\n                }\n\n                var colorIndex = (lineCount++) % lineColors.length;\n                this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n                    anid: 'line_' + ticks[i],\n\n                    shape: {\n                        x1: p1[0],\n                        y1: p1[1],\n                        x2: p2[0],\n                        y2: p2[1]\n                    },\n                    style: zrUtil.defaults({\n                        stroke: lineColors[colorIndex]\n                    }, lineStyle),\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitArea: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.isBlank()) {\n                return;\n            }\n\n            var splitAreaModel = axisModel.getModel('splitArea');\n            var areaStyleModel = splitAreaModel.getModel('areaStyle');\n            var areaColors = areaStyleModel.get('color');\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitAreaModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var prevX = axis.toGlobalCoord(ticksCoords[0]);\n            var prevY = axis.toGlobalCoord(ticksCoords[0]);\n\n            var count = 0;\n\n            var areaInterval = getInterval(splitAreaModel, labelInterval);\n\n            var areaStyle = areaStyleModel.getAreaStyle();\n            areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n            for (var i = 1; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, areaInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                var x;\n                var y;\n                var width;\n                var height;\n                if (axis.isHorizontal()) {\n                    x = prevX;\n                    y = gridRect.y;\n                    width = tickCoord - x;\n                    height = gridRect.height;\n                }\n                else {\n                    x = gridRect.x;\n                    y = prevY;\n                    width = gridRect.width;\n                    height = tickCoord - y;\n                }\n\n                var colorIndex = (count++) % areaColors.length;\n                this._axisGroup.add(new graphic.Rect({\n                    anid: 'area_' + ticks[i],\n\n                    shape: {\n                        x: x,\n                        y: y,\n                        width: width,\n                        height: height\n                    },\n                    style: zrUtil.defaults({\n                        fill: areaColors[colorIndex]\n                    }, areaStyle),\n                    silent: true\n                }));\n\n                prevX = x + width;\n                prevY = y + height;\n            }\n        }\n    });\n\n    AxisView.extend({\n        type: 'xAxis'\n    });\n    AxisView.extend({\n        type: 'yAxis'\n    });\n\n    /**\n     * @inner\n     */\n    function layoutAxis(gridModel, axisModel) {\n        var grid = gridModel.coordinateSystem;\n        var axis = axisModel.axis;\n        var layout = {};\n\n        var rawAxisPosition = axis.position;\n        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n        var axisDim = axis.dim;\n\n        // [left, right, top, bottom]\n        var rect = grid.getRect();\n        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n\n        var axisOffset = axisModel.get('offset') || 0;\n\n        var posMap = {\n            x: { top: rectBound[2] - axisOffset, bottom: rectBound[3] + axisOffset },\n            y: { left: rectBound[0] - axisOffset, right: rectBound[1] + axisOffset }\n        };\n\n        posMap.x.onZero = Math.max(Math.min(getZero('y'), posMap.x.bottom), posMap.x.top);\n        posMap.y.onZero = Math.max(Math.min(getZero('x'), posMap.y.right), posMap.y.left);\n\n        function getZero(dim, val) {\n            var theAxis = grid.getAxis(dim);\n            return theAxis.toGlobalCoord(theAxis.dataToCoord(0));\n        }\n\n        // Axis position\n        layout.position = [\n            axisDim === 'y' ? posMap.y[axisPosition] : rectBound[0],\n            axisDim === 'x' ? posMap.x[axisPosition] : rectBound[3]\n        ];\n\n        // Axis rotation\n        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);\n\n        // Tick and label direction, x y is axisDim\n        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};\n\n        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n        if (axis.onZero) {\n            layout.labelOffset = posMap[axisDim][rawAxisPosition] - posMap[axisDim].onZero;\n        }\n\n        if (axisModel.getModel('axisTick').get('inside')) {\n            layout.tickDirection = -layout.tickDirection;\n        }\n        if (axisModel.getModel('axisLabel').get('inside')) {\n            layout.labelDirection = -layout.labelDirection;\n        }\n\n        // Special label rotation\n        var labelRotation = axisModel.getModel('axisLabel').get('rotate');\n        layout.labelRotation = axisPosition === 'top' ? -labelRotation : labelRotation;\n\n        // label interval when auto mode.\n        layout.labelInterval = axis.getLabelInterval();\n\n        // Over splitLine and splitArea\n        layout.z2 = 1;\n\n        return layout;\n    }\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/AxisView.js\n// module id = 386\n// module chunks = 0 1 2 3 4","/**\n * @module echarts/component/tooltip/TooltipContent\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var zrColor = require('zrender/lib/tool/color');\n    var eventUtil = require('zrender/lib/core/event');\n    var formatUtil = require('../../util/format');\n    var each = zrUtil.each;\n    var toCamelCase = formatUtil.toCamelCase;\n    var env = require('zrender/lib/core/env');\n\n    var vendors = ['', '-webkit-', '-moz-', '-o-'];\n\n    var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n\n    /**\n     * @param {number} duration\n     * @return {string}\n     * @inner\n     */\n    function assembleTransition(duration) {\n        var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n        var transitionText = 'left ' + duration + 's ' + transitionCurve + ','\n                            + 'top ' + duration + 's ' + transitionCurve;\n        return zrUtil.map(vendors, function (vendorPrefix) {\n            return vendorPrefix + 'transition:' + transitionText;\n        }).join(';');\n    }\n\n    /**\n     * @param {Object} textStyle\n     * @return {string}\n     * @inner\n     */\n    function assembleFont(textStyleModel) {\n        var cssText = [];\n\n        var fontSize = textStyleModel.get('fontSize');\n        var color = textStyleModel.getTextColor();\n\n        color && cssText.push('color:' + color);\n\n        cssText.push('font:' + textStyleModel.getFont());\n\n        fontSize &&\n            cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n\n        each(['decoration', 'align'], function (name) {\n            var val = textStyleModel.get(name);\n            val && cssText.push('text-' + name + ':' + val);\n        });\n\n        return cssText.join(';');\n    }\n\n    /**\n     * @param {Object} tooltipModel\n     * @return {string}\n     * @inner\n     */\n    function assembleCssText(tooltipModel) {\n\n        tooltipModel = tooltipModel;\n\n        var cssText = [];\n\n        var transitionDuration = tooltipModel.get('transitionDuration');\n        var backgroundColor = tooltipModel.get('backgroundColor');\n        var textStyleModel = tooltipModel.getModel('textStyle');\n        var padding = tooltipModel.get('padding');\n\n        // Animation transition\n        transitionDuration &&\n            cssText.push(assembleTransition(transitionDuration));\n\n        if (backgroundColor) {\n            if (env.canvasSupported) {\n                cssText.push('background-Color:' + backgroundColor);\n            }\n            else {\n                // for ie\n                cssText.push(\n                    'background-Color:#' + zrColor.toHex(backgroundColor)\n                );\n                cssText.push('filter:alpha(opacity=70)');\n            }\n        }\n\n        // Border style\n        each(['width', 'color', 'radius'], function (name) {\n            var borderName = 'border-' + name;\n            var camelCase = toCamelCase(borderName);\n            var val = tooltipModel.get(camelCase);\n            val != null &&\n                cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n        });\n\n        // Text style\n        cssText.push(assembleFont(textStyleModel));\n\n        // Padding\n        if (padding != null) {\n            cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n        }\n\n        return cssText.join(';') + ';';\n    }\n\n    /**\n     * @alias module:echarts/component/tooltip/TooltipContent\n     * @constructor\n     */\n    function TooltipContent(container, api) {\n        var el = document.createElement('div');\n        var zr = api.getZr();\n\n        this.el = el;\n\n        this._x = api.getWidth() / 2;\n        this._y = api.getHeight() / 2;\n\n        container.appendChild(el);\n\n        this._container = container;\n\n        this._show = false;\n\n        /**\n         * @private\n         */\n        this._hideTimeout;\n\n        var self = this;\n        el.onmouseenter = function () {\n            // clear the timeout in hideLater and keep showing tooltip\n            if (self.enterable) {\n                clearTimeout(self._hideTimeout);\n                self._show = true;\n            }\n            self._inContent = true;\n        };\n        el.onmousemove = function (e) {\n            e = e || window.event;\n            if (!self.enterable) {\n                // Try trigger zrender event to avoid mouse\n                // in and out shape too frequently\n                var handler = zr.handler;\n                eventUtil.normalizeEvent(container, e, true);\n                handler.dispatch('mousemove', e);\n            }\n        };\n        el.onmouseleave = function () {\n            if (self.enterable) {\n                if (self._show) {\n                    self.hideLater(self._hideDelay);\n                }\n            }\n            self._inContent = false;\n        };\n    }\n\n    TooltipContent.prototype = {\n\n        constructor: TooltipContent,\n\n        enterable: true,\n\n        /**\n         * Update when tooltip is rendered\n         */\n        update: function () {\n            var container = this._container;\n            var stl = container.currentStyle\n                || document.defaultView.getComputedStyle(container);\n            var domStyle = container.style;\n            if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n                domStyle.position = 'relative';\n            }\n            // Hide the tooltip\n            // PENDING\n            // this.hide();\n        },\n\n        show: function (tooltipModel) {\n            clearTimeout(this._hideTimeout);\n            var el = this.el;\n\n            el.style.cssText = gCssText + assembleCssText(tooltipModel)\n                // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n                + ';left:' + this._x + 'px;top:' + this._y + 'px;'\n                + (tooltipModel.get('extraCssText') || '');\n\n            el.style.display = el.innerHTML ?  'block' : 'none';\n\n            this._show = true;\n        },\n\n        setContent: function (content) {\n            var el = this.el;\n            el.innerHTML = content;\n            el.style.display = content ? 'block' : 'none';\n        },\n\n        moveTo: function (x, y) {\n            var style = this.el.style;\n            style.left = x + 'px';\n            style.top = y + 'px';\n\n            this._x = x;\n            this._y = y;\n        },\n\n        hide: function () {\n            this.el.style.display = 'none';\n            this._show = false;\n        },\n\n        // showLater: function ()\n\n        hideLater: function (time) {\n            if (this._show && !(this._inContent && this.enterable)) {\n                if (time) {\n                    this._hideDelay = time;\n                    // Set show false to avoid invoke hideLater mutiple times\n                    this._show = false;\n                    this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n                }\n                else {\n                    this.hide();\n                }\n            }\n        },\n\n        isShow: function () {\n            return this._show;\n        }\n    };\n\n    module.exports = TooltipContent;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipContent.js\n// module id = 387\n// module chunks = 0 1 2 3 4","\n\n    require('../../echarts').extendComponentModel({\n\n        type: 'tooltip',\n\n        defaultOption: {\n            zlevel: 0,\n\n            z: 8,\n\n            show: true,\n\n            // tooltip主体内容\n            showContent: true,\n\n            // 触发类型，默认数据触发，见下图，可选为：'item' ¦ 'axis'\n            trigger: 'item',\n\n            // 触发条件，支持 'click' | 'mousemove' | 'none'\n            triggerOn: 'mousemove',\n\n            // 是否永远显示 content\n            alwaysShowContent: false,\n\n            // 位置 {Array} | {Function}\n            // position: null\n\n            // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n            confine: false,\n\n            // 内容格式器：{string}（Template） ¦ {Function}\n            // formatter: null\n\n            showDelay: 0,\n\n            // 隐藏延迟，单位ms\n            hideDelay: 100,\n\n            // 动画变换时间，单位s\n            transitionDuration: 0.4,\n\n            enterable: false,\n\n            // 提示背景颜色，默认为透明度为0.7的黑色\n            backgroundColor: 'rgba(50,50,50,0.7)',\n\n            // 提示边框颜色\n            borderColor: '#333',\n\n            // 提示边框圆角，单位px，默认为4\n            borderRadius: 4,\n\n            // 提示边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 提示内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // Extra css text\n            extraCssText: '',\n\n            // 坐标轴指示器，坐标轴触发有效\n            axisPointer: {\n                // 默认为直线\n                // 可选为：'line' | 'shadow' | 'cross'\n                type: 'line',\n\n                // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n                // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n                // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n                // 极坐标系会默认选择 angle 轴\n                axis: 'auto',\n\n                animation: true,\n                animationDurationUpdate: 200,\n                animationEasingUpdate: 'exponentialOut',\n\n                // 直线指示器样式设置\n                lineStyle: {\n                    color: '#555',\n                    width: 1,\n                    type: 'solid'\n                },\n\n                crossStyle: {\n                    color: '#555',\n                    width: 1,\n                    type: 'dashed',\n\n                    // TODO formatter\n                    textStyle: {}\n                },\n\n                // 阴影指示器样式设置\n                shadowStyle: {\n                    color: 'rgba(150,150,150,0.3)'\n                }\n            },\n            textStyle: {\n                color: '#fff',\n                fontSize: 14\n            }\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipModel.js\n// module id = 388\n// module chunks = 0 1 2 3 4","\n\n    var TooltipContent = require('./TooltipContent');\n    var graphic = require('../../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../../util/format');\n    var numberUtil = require('../../util/number');\n    var modelUtil = require('../../util/model');\n    var parsePercent = numberUtil.parsePercent;\n    var env = require('zrender/lib/core/env');\n    var Model = require('../../model/Model');\n\n    function dataEqual(a, b) {\n        if (!a || !b) {\n            return false;\n        }\n        var round = numberUtil.round;\n        return round(a[0]) === round(b[0])\n            && round(a[1]) === round(b[1]);\n    }\n    /**\n     * @inner\n     */\n    function makeLineShape(x1, y1, x2, y2) {\n        return {\n            x1: x1,\n            y1: y1,\n            x2: x2,\n            y2: y2\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function makeRectShape(x, y, width, height) {\n        return {\n            x: x,\n            y: y,\n            width: width,\n            height: height\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n        return {\n            cx: cx,\n            cy: cy,\n            r0: r0,\n            r: r,\n            startAngle: startAngle,\n            endAngle: endAngle,\n            clockwise: true\n        };\n    }\n\n    function refixTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n        var gap = 20;\n\n        if (x + width + gap > viewWidth) {\n            x -= width + gap;\n        }\n        else {\n            x += gap;\n        }\n        if (y + height + gap > viewHeight) {\n            y -= height + gap;\n        }\n        else {\n            y += gap;\n        }\n        return [x, y];\n    }\n\n    function confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        x = Math.min(x + width, viewWidth) - width;\n        y = Math.min(y + height, viewHeight) - height;\n        x = Math.max(x, 0);\n        y = Math.max(y, 0);\n\n        return [x, y];\n    }\n\n    function calcTooltipPosition(position, rect, dom) {\n        var domWidth = dom.clientWidth;\n        var domHeight = dom.clientHeight;\n        var gap = 5;\n        var x = 0;\n        var y = 0;\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n        switch (position) {\n            case 'inside':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'top':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y - domHeight - gap;\n                break;\n            case 'bottom':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight + gap;\n                break;\n            case 'left':\n                x = rect.x - domWidth - gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'right':\n                x = rect.x + rectWidth + gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n        }\n        return [x, y];\n    }\n\n    /**\n     * @param  {string|Function|Array.<number>} positionExpr\n     * @param  {number} x Mouse x\n     * @param  {number} y Mouse y\n     * @param  {boolean} confine Whether confine tooltip content in view rect.\n     * @param  {module:echarts/component/tooltip/TooltipContent} content\n     * @param  {Object|<Array.<Object>} params\n     * @param  {module:zrender/Element} el target element\n     * @param  {module:echarts/ExtensionAPI} api\n     * @return {Array.<number>}\n     */\n    function updatePosition(positionExpr, x, y, confine, content, params, el, api) {\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n\n        var rect = el && el.getBoundingRect().clone();\n        el && rect.applyTransform(el.transform);\n        if (typeof positionExpr === 'function') {\n            // Callback of position can be an array or a string specify the position\n            positionExpr = positionExpr([x, y], params, content.el, rect);\n        }\n\n        if (zrUtil.isArray(positionExpr)) {\n            x = parsePercent(positionExpr[0], viewWidth);\n            y = parsePercent(positionExpr[1], viewHeight);\n        }\n        // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n        else if (typeof positionExpr === 'string' && el) {\n            var pos = calcTooltipPosition(\n                positionExpr, rect, content.el\n            );\n            x = pos[0];\n            y = pos[1];\n        }\n        else {\n            var pos = refixTooltipPosition(\n                x, y, content.el, viewWidth, viewHeight\n            );\n            x = pos[0];\n            y = pos[1];\n        }\n\n        if (confine) {\n            var pos = confineTooltipPosition(\n                x, y, content.el, viewWidth, viewHeight\n            );\n            x = pos[0];\n            y = pos[1];\n        }\n\n        content.moveTo(x, y);\n    }\n\n    function ifSeriesSupportAxisTrigger(seriesModel) {\n        var coordSys = seriesModel.coordinateSystem;\n        var trigger = seriesModel.get('tooltip.trigger', true);\n        // Ignore series use item tooltip trigger and series coordinate system is not cartesian or\n        return !(!coordSys\n            || (coordSys.type !== 'cartesian2d' && coordSys.type !== 'polar' && coordSys.type !== 'singleAxis')\n            || trigger === 'item');\n    }\n\n    require('../../echarts').extendComponentView({\n\n        type: 'tooltip',\n\n        _axisPointers: {},\n\n        init: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var tooltipContent = new TooltipContent(api.getDom(), api);\n            this._tooltipContent = tooltipContent;\n        },\n\n        render: function (tooltipModel, ecModel, api) {\n            if (env.node) {\n                return;\n            }\n\n            // Reset\n            this.group.removeAll();\n\n            /**\n             * @type {Object}\n             * @private\n             */\n            this._axisPointers = {};\n\n            /**\n             * @private\n             * @type {module:echarts/component/tooltip/TooltipModel}\n             */\n            this._tooltipModel = tooltipModel;\n\n            /**\n             * @private\n             * @type {module:echarts/model/Global}\n             */\n            this._ecModel = ecModel;\n\n            /**\n             * @private\n             * @type {module:echarts/ExtensionAPI}\n             */\n            this._api = api;\n\n            /**\n             * @type {Object}\n             * @private\n             */\n            this._lastHover = {\n                // data\n                // payloadBatch\n            };\n\n            var tooltipContent = this._tooltipContent;\n            tooltipContent.update();\n            tooltipContent.enterable = tooltipModel.get('enterable');\n            this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n\n            /**\n             * @type {Object.<string, Array>}\n             */\n            this._seriesGroupByAxis = this._prepareAxisTriggerData(\n                tooltipModel, ecModel\n            );\n\n            var crossText = this._crossText;\n            if (crossText) {\n                this.group.add(crossText);\n            }\n\n            var triggerOn = tooltipModel.get('triggerOn');\n\n            // Try to keep the tooltip show when refreshing\n            if (this._lastX != null\n                && this._lastY != null\n                // When user is willing to control tooltip totally using API,\n                // self.manuallyShowTip({x, y}) might cause tooltip hide,\n                // which is not expected.\n                && triggerOn !== 'none'\n            ) {\n                var self = this;\n                clearTimeout(this._refreshUpdateTimeout);\n                this._refreshUpdateTimeout = setTimeout(function () {\n                    // Show tip next tick after other charts are rendered\n                    // In case highlight action has wrong result\n                    // FIXME\n                    self.manuallyShowTip(tooltipModel, ecModel, api, {\n                        x: self._lastX,\n                        y: self._lastY\n                    });\n                });\n            }\n\n            var zr = this._api.getZr();\n            zr.off('click', this._tryShow);\n            zr.off('mousemove', this._mousemove);\n            zr.off('mouseout', this._hide);\n            zr.off('globalout', this._hide);\n\n            if (triggerOn === 'click') {\n                zr.on('click', this._tryShow, this);\n            }\n            else if (triggerOn === 'mousemove') {\n                zr.on('mousemove', this._mousemove, this);\n                zr.on('mouseout', this._hide, this);\n                zr.on('globalout', this._hide, this);\n            }\n            // else triggerOn is 'none', which enable user\n            // to control tooltip totally using API.\n        },\n\n        _mousemove: function (e) {\n            var showDelay = this._tooltipModel.get('showDelay');\n            var self = this;\n            clearTimeout(this._showTimeout);\n            if (showDelay > 0) {\n                this._showTimeout = setTimeout(function () {\n                    self._tryShow(e);\n                }, showDelay);\n            }\n            else {\n                this._tryShow(e);\n            }\n        },\n\n        /**\n         * Show tip manually by\n         * dispatchAction({\n         *     type: 'showTip',\n         *     x: 10,\n         *     y: 10\n         * });\n         * Or\n         * dispatchAction({\n         *      type: 'showTip',\n         *      seriesIndex: 0,\n         *      dataIndex or dataIndexInside or name\n         * });\n         *\n         *  TODO Batch\n         */\n        manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n            // From self\n            if (payload.from === this.uid) {\n                return;\n            }\n\n            var ecModel = this._ecModel;\n            var seriesIndex = payload.seriesIndex;\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n            var api = this._api;\n\n            var isTriggerAxis = this._tooltipModel.get('trigger') === 'axis';\n            function seriesHaveDataOnIndex(_series) {\n                var data = _series.getData();\n                var dataIndex = modelUtil.queryDataIndex(data, payload);\n                // Have single dataIndex\n                if (dataIndex != null && !zrUtil.isArray(dataIndex)\n                    && data.hasValue(dataIndex)\n                ) {\n                    return true;\n                }\n            }\n\n            if (payload.x == null || payload.y == null) {\n                if (isTriggerAxis) {\n                    // Find another series.\n                    if (seriesModel && !seriesHaveDataOnIndex(seriesModel)) {\n                        seriesModel = null;\n                    }\n                    if (!seriesModel) {\n                        // Find the first series can use axis trigger And data is not null\n                        ecModel.eachSeries(function (_series) {\n                            if (ifSeriesSupportAxisTrigger(_series) && !seriesModel) {\n                                if (seriesHaveDataOnIndex(_series)) {\n                                    seriesModel = _series;\n                                }\n                            }\n                        });\n                    }\n                }\n                else {\n                    // Use the first series by default.\n                    seriesModel = seriesModel || ecModel.getSeriesByIndex(0);\n                }\n                if (seriesModel) {\n                    var data = seriesModel.getData();\n                    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n                    if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n                        return;\n                    }\n\n                    var el = data.getItemGraphicEl(dataIndex);\n                    var cx;\n                    var cy;\n                    // Try to get the point in coordinate system\n                    var coordSys = seriesModel.coordinateSystem;\n                    if (seriesModel.getTooltipPosition) {\n                        var point = seriesModel.getTooltipPosition(dataIndex) || [];\n                        cx = point[0];\n                        cy = point[1];\n                    }\n                    else if (coordSys && coordSys.dataToPoint) {\n                        var point = coordSys.dataToPoint(\n                            data.getValues(\n                                zrUtil.map(coordSys.dimensions, function (dim) {\n                                    return seriesModel.coordDimToDataDim(dim)[0];\n                                }), dataIndex, true\n                            )\n                        );\n                        cx = point && point[0];\n                        cy = point && point[1];\n                    }\n                    else if (el) {\n                        // Use graphic bounding rect\n                        var rect = el.getBoundingRect().clone();\n                        rect.applyTransform(el.transform);\n                        cx = rect.x + rect.width / 2;\n                        cy = rect.y + rect.height / 2;\n                    }\n\n                    if (cx != null && cy != null) {\n                        this._tryShow({\n                            offsetX: cx,\n                            offsetY: cy,\n                            position: payload.position,\n                            target: el,\n                            event: {}\n                        });\n                    }\n                }\n            }\n            else {\n                var el = api.getZr().handler.findHover(payload.x, payload.y);\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    target: el,\n                    event: {}\n                });\n            }\n        },\n\n        manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n            if (payload.from === this.uid) {\n                return;\n            }\n\n            this._hide();\n        },\n\n        _prepareAxisTriggerData: function (tooltipModel, ecModel) {\n            // Prepare data for axis trigger\n            var seriesGroupByAxis = {};\n            ecModel.eachSeries(function (seriesModel) {\n                if (ifSeriesSupportAxisTrigger(seriesModel)) {\n                    var coordSys = seriesModel.coordinateSystem;\n                    var baseAxis;\n                    var key;\n\n                    // Only cartesian2d, polar and single support axis trigger\n                    if (coordSys.type === 'cartesian2d') {\n                        // FIXME `axisPointer.axis` is not baseAxis\n                        baseAxis = coordSys.getBaseAxis();\n                        key = baseAxis.dim + baseAxis.index;\n                    }\n                    else if (coordSys.type === 'singleAxis') {\n                        baseAxis = coordSys.getAxis();\n                        key = baseAxis.dim + baseAxis.type;\n                    }\n                    else {\n                        baseAxis = coordSys.getBaseAxis();\n                        key = baseAxis.dim + coordSys.name;\n                    }\n\n                    seriesGroupByAxis[key] = seriesGroupByAxis[key] || {\n                        coordSys: [],\n                        series: []\n                    };\n                    seriesGroupByAxis[key].coordSys.push(coordSys);\n                    seriesGroupByAxis[key].series.push(seriesModel);\n                }\n            }, this);\n\n            return seriesGroupByAxis;\n        },\n\n        /**\n         * mousemove handler\n         * @param {Object} e\n         * @private\n         */\n        _tryShow: function (e) {\n            var el = e.target;\n            var tooltipModel = this._tooltipModel;\n            var globalTrigger = tooltipModel.get('trigger');\n            var ecModel = this._ecModel;\n            var api = this._api;\n\n            if (!tooltipModel) {\n                return;\n            }\n\n            // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n            this._lastX = e.offsetX;\n            this._lastY = e.offsetY;\n\n            // Always show item tooltip if mouse is on the element with dataIndex\n            if (el && el.dataIndex != null) {\n                // Use dataModel in element if possible\n                // Used when mouseover on a element like markPoint or edge\n                // In which case, the data is not main data in series.\n                var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                var dataIndex = el.dataIndex;\n                var data = dataModel.getData();\n                var itemModel = data.getItemModel(dataIndex);\n                // Series or single data may use item trigger when global is axis trigger\n                if ((itemModel.get('tooltip.trigger') || globalTrigger) === 'axis') {\n                    this._showAxisTooltip(tooltipModel, ecModel, e);\n                }\n                else {\n                    // Reset ticket\n                    this._ticket = '';\n                    // If either single data or series use item trigger\n                    this._hideAxisPointer();\n                    // Reset last hover and dispatch downplay action\n                    this._resetLastHover();\n\n                    this._showItemTooltipContent(dataModel, dataIndex, el.dataType, e);\n                }\n\n                api.dispatchAction({\n                    type: 'showTip',\n                    from: this.uid,\n                    dataIndexInside: dataIndex,\n                    dataIndex: data.getRawIndex(dataIndex), // expose to user.\n                    seriesIndex: el.seriesIndex\n                });\n            }\n            // Tooltip provided directly. Like legend\n            else if (el && el.tooltip) {\n                var tooltipOpt = el.tooltip;\n                if (typeof tooltipOpt === 'string') {\n                    var content = tooltipOpt;\n                    tooltipOpt = {\n                        content: content,\n                        // Fixed formatter\n                        formatter: content\n                    };\n                }\n                var subTooltipModel = new Model(tooltipOpt, tooltipModel);\n                var defaultHtml = subTooltipModel.get('content');\n                var asyncTicket = Math.random();\n                this._showTooltipContent(\n                    // TODO params\n                    subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {},\n                    asyncTicket, e.offsetX, e.offsetY, e.position, el, api\n                );\n            }\n            else {\n                if (globalTrigger === 'item') {\n                    this._hide();\n                }\n                else {\n                    // Try show axis tooltip\n                    this._showAxisTooltip(tooltipModel, ecModel, e);\n                }\n\n                // Action of cross pointer\n                // other pointer types will trigger action in _dispatchAndShowSeriesTooltipContent method\n                if (tooltipModel.get('axisPointer.type') === 'cross') {\n                    api.dispatchAction({\n                        type: 'showTip',\n                        from: this.uid,\n                        x: e.offsetX,\n                        y: e.offsetY\n                    });\n                }\n            }\n        },\n\n        /**\n         * Show tooltip on axis\n         * @param {module:echarts/component/tooltip/TooltipModel} tooltipModel\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Object} e\n         * @private\n         */\n        _showAxisTooltip: function (tooltipModel, ecModel, e) {\n            var axisPointerModel = tooltipModel.getModel('axisPointer');\n            var axisPointerType = axisPointerModel.get('type');\n\n            if (axisPointerType === 'cross') {\n                var el = e.target;\n                if (el && el.dataIndex != null) {\n                    var seriesModel = ecModel.getSeriesByIndex(el.seriesIndex);\n                    var dataIndex = el.dataIndex;\n                    this._showItemTooltipContent(seriesModel, dataIndex, el.dataType, e);\n                }\n            }\n\n            this._showAxisPointer();\n            var allNotShow = true;\n            zrUtil.each(this._seriesGroupByAxis, function (seriesCoordSysSameAxis) {\n                // Try show the axis pointer\n                var allCoordSys = seriesCoordSysSameAxis.coordSys;\n                var coordSys = allCoordSys[0];\n\n                // If mouse position is not in the grid or polar\n                var point = [e.offsetX, e.offsetY];\n\n                if (!coordSys.containPoint(point)) {\n                    // Hide axis pointer\n                    this._hideAxisPointer(coordSys.name);\n                    return;\n                }\n\n                allNotShow = false;\n                // Make sure point is discrete on cateogry axis\n                var dimensions = coordSys.dimensions;\n                var value = coordSys.pointToData(point, true);\n                point = coordSys.dataToPoint(value);\n\n                var baseAxis = coordSys.getBaseAxis();\n                var axisType = axisPointerModel.get('axis');\n                if (axisType === 'auto') {\n                    axisType = baseAxis.dim;\n                }\n\n                if (baseAxis.isBlank() || zrUtil.eqNaN(point[0]) || zrUtil.eqNaN(point[1])) {\n                    this._hideAxisPointer(coordSys.name);\n                    return;\n                }\n\n                var contentNotChange = false;\n                var lastHover = this._lastHover;\n                if (axisPointerType === 'cross') {\n                    // If hover data not changed\n                    // Possible when two axes are all category\n                    if (dataEqual(lastHover.data, value)) {\n                        contentNotChange = true;\n                    }\n                    lastHover.data = value;\n                }\n                else {\n                    var valIndex = zrUtil.indexOf(dimensions, axisType);\n\n                    // If hover data not changed on the axis dimension\n                    if (lastHover.data === value[valIndex]) {\n                        contentNotChange = true;\n                    }\n                    lastHover.data = value[valIndex];\n                }\n\n                var enableAnimation = tooltipModel.get('animation');\n\n                if (coordSys.type === 'cartesian2d' && !contentNotChange) {\n                    this._showCartesianPointer(\n                        axisPointerModel, coordSys, axisType, point, enableAnimation\n                    );\n                }\n                else if (coordSys.type === 'polar' && !contentNotChange) {\n                    this._showPolarPointer(\n                        axisPointerModel, coordSys, axisType, point, enableAnimation\n                    );\n                }\n                else if (coordSys.type === 'singleAxis' && !contentNotChange) {\n                    this._showSinglePointer(\n                        axisPointerModel, coordSys, axisType, point, enableAnimation\n                    );\n                }\n\n                if (axisPointerType !== 'cross') {\n                    this._dispatchAndShowSeriesTooltipContent(\n                        coordSys, seriesCoordSysSameAxis.series, point, value, contentNotChange, e.position\n                    );\n                }\n            }, this);\n\n            if (!this._tooltipModel.get('show')) {\n                this._hideAxisPointer();\n            }\n\n            if (allNotShow) {\n                this._hide();\n            }\n        },\n\n        /**\n         * Show tooltip on axis of cartesian coordinate\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @param {module:echarts/coord/cartesian/Cartesian2D} cartesians\n         * @param {string} axisType\n         * @param {Array.<number>} point\n         * @private\n         */\n        _showCartesianPointer: function (axisPointerModel, cartesian, axisType, point, enableAnimation) {\n            var self = this;\n\n            var axisPointerType = axisPointerModel.get('type');\n            var baseAxis = cartesian.getBaseAxis();\n            var moveAnimation = enableAnimation\n                && axisPointerType !== 'cross'\n                && baseAxis.type === 'category'\n                && baseAxis.getBandWidth() > 20;\n\n            if (axisPointerType === 'cross') {\n                moveGridLine('x', point, cartesian.getAxis('y').getGlobalExtent());\n                moveGridLine('y', point, cartesian.getAxis('x').getGlobalExtent());\n\n                this._updateCrossText(cartesian, point, axisPointerModel);\n            }\n            else {\n                var otherAxis = cartesian.getAxis(axisType === 'x' ? 'y' : 'x');\n                var otherExtent = otherAxis.getGlobalExtent();\n\n                if (cartesian.type === 'cartesian2d') {\n                    (axisPointerType === 'line' ? moveGridLine : moveGridShadow)(\n                        axisType, point, otherExtent\n                    );\n                }\n            }\n\n            /**\n             * @inner\n             */\n            function moveGridLine(axisType, point, otherExtent) {\n                var targetShape = axisType === 'x'\n                    ? makeLineShape(point[0], otherExtent[0], point[0], otherExtent[1])\n                    : makeLineShape(otherExtent[0], point[1], otherExtent[1], point[1]);\n\n                var pointerEl = self._getPointerElement(\n                    cartesian, axisPointerModel, axisType, targetShape\n                );\n                graphic.subPixelOptimizeLine({\n                    shape: targetShape,\n                    style: pointerEl.style\n                });\n\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n\n            /**\n             * @inner\n             */\n            function moveGridShadow(axisType, point, otherExtent) {\n                var axis = cartesian.getAxis(axisType);\n                var bandWidth = axis.getBandWidth();\n                var span = otherExtent[1] - otherExtent[0];\n                var targetShape = axisType === 'x'\n                    ? makeRectShape(point[0] - bandWidth / 2, otherExtent[0], bandWidth, span)\n                    : makeRectShape(otherExtent[0], point[1] - bandWidth / 2, span, bandWidth);\n\n                var pointerEl = self._getPointerElement(\n                    cartesian, axisPointerModel, axisType, targetShape\n                );\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n        },\n\n        _showSinglePointer: function (axisPointerModel, single, axisType, point, enableAnimation) {\n            var self = this;\n            var axisPointerType = axisPointerModel.get('type');\n            var moveAnimation =\n                enableAnimation\n                && axisPointerType !== 'cross'\n                && single.getBaseAxis().type === 'category';\n            var rect = single.getRect();\n            var otherExtent = [rect.y, rect.y + rect.height];\n\n            moveSingleLine(axisType, point, otherExtent);\n\n            /**\n             * @inner\n             */\n            function moveSingleLine(axisType, point, otherExtent) {\n                var axis = single.getAxis();\n                var orient = axis.orient;\n\n                var targetShape = orient === 'horizontal'\n                    ? makeLineShape(point[0], otherExtent[0], point[0], otherExtent[1])\n                    : makeLineShape(otherExtent[0], point[1], otherExtent[1], point[1]);\n\n                var pointerEl = self._getPointerElement(\n                    single, axisPointerModel, axisType, targetShape\n                );\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n\n        },\n\n        /**\n         * Show tooltip on axis of polar coordinate\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @param {Array.<module:echarts/coord/polar/Polar>} polar\n         * @param {string} axisType\n         * @param {Array.<number>} point\n         */\n        _showPolarPointer: function (axisPointerModel, polar, axisType, point, enableAnimation) {\n            var self = this;\n\n            var axisPointerType = axisPointerModel.get('type');\n\n            var angleAxis = polar.getAngleAxis();\n            var radiusAxis = polar.getRadiusAxis();\n\n            var moveAnimation = enableAnimation\n                && axisPointerType !== 'cross'\n                && polar.getBaseAxis().type === 'category';\n\n            if (axisPointerType === 'cross') {\n                movePolarLine('angle', point, radiusAxis.getExtent());\n                movePolarLine('radius', point, angleAxis.getExtent());\n\n                this._updateCrossText(polar, point, axisPointerModel);\n            }\n            else {\n                var otherAxis = polar.getAxis(axisType === 'radius' ? 'angle' : 'radius');\n                var otherExtent = otherAxis.getExtent();\n\n                (axisPointerType === 'line' ? movePolarLine : movePolarShadow)(\n                    axisType, point, otherExtent\n                );\n            }\n            /**\n             * @inner\n             */\n            function movePolarLine(axisType, point, otherExtent) {\n                var mouseCoord = polar.pointToCoord(point);\n\n                var targetShape;\n\n                if (axisType === 'angle') {\n                    var p1 = polar.coordToPoint([otherExtent[0], mouseCoord[1]]);\n                    var p2 = polar.coordToPoint([otherExtent[1], mouseCoord[1]]);\n                    targetShape = makeLineShape(p1[0], p1[1], p2[0], p2[1]);\n                }\n                else {\n                    targetShape = {\n                        cx: polar.cx,\n                        cy: polar.cy,\n                        r: mouseCoord[0]\n                    };\n                }\n\n                var pointerEl = self._getPointerElement(\n                    polar, axisPointerModel, axisType, targetShape\n                );\n\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n\n            /**\n             * @inner\n             */\n            function movePolarShadow(axisType, point, otherExtent) {\n                var axis = polar.getAxis(axisType);\n                var bandWidth = axis.getBandWidth();\n\n                var mouseCoord = polar.pointToCoord(point);\n\n                var targetShape;\n\n                var radian = Math.PI / 180;\n\n                if (axisType === 'angle') {\n                    targetShape = makeSectorShape(\n                        polar.cx, polar.cy,\n                        otherExtent[0], otherExtent[1],\n                        // In ECharts y is negative if angle is positive\n                        (-mouseCoord[1] - bandWidth / 2) * radian,\n                        (-mouseCoord[1] + bandWidth / 2) * radian\n                    );\n                }\n                else {\n                    targetShape = makeSectorShape(\n                        polar.cx, polar.cy,\n                        mouseCoord[0] - bandWidth / 2,\n                        mouseCoord[0] + bandWidth / 2,\n                        0, Math.PI * 2\n                    );\n                }\n\n                var pointerEl = self._getPointerElement(\n                    polar, axisPointerModel, axisType, targetShape\n                );\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n        },\n\n        _updateCrossText: function (coordSys, point, axisPointerModel) {\n            var crossStyleModel = axisPointerModel.getModel('crossStyle');\n            var textStyleModel = crossStyleModel.getModel('textStyle');\n\n            var tooltipModel = this._tooltipModel;\n\n            var text = this._crossText;\n            if (!text) {\n                text = this._crossText = new graphic.Text({\n                    style: {\n                        textAlign: 'left',\n                        textVerticalAlign: 'bottom'\n                    }\n                });\n                this.group.add(text);\n            }\n\n            var value = coordSys.pointToData(point);\n\n            var dims = coordSys.dimensions;\n            value = zrUtil.map(value, function (val, idx) {\n                var axis = coordSys.getAxis(dims[idx]);\n                if (axis.type === 'category' || axis.type === 'time') {\n                    val = axis.scale.getLabel(val);\n                }\n                else {\n                    val = formatUtil.addCommas(\n                        val.toFixed(axis.getPixelPrecision())\n                    );\n                }\n                return val;\n            });\n\n            text.setStyle({\n                fill: textStyleModel.getTextColor() || crossStyleModel.get('color'),\n                textFont: textStyleModel.getFont(),\n                text: value.join(', '),\n                x: point[0] + 5,\n                y: point[1] - 5\n            });\n            text.z = tooltipModel.get('z');\n            text.zlevel = tooltipModel.get('zlevel');\n        },\n\n        _getPointerElement: function (coordSys, pointerModel, axisType, initShape) {\n            var tooltipModel = this._tooltipModel;\n            var z = tooltipModel.get('z');\n            var zlevel = tooltipModel.get('zlevel');\n            var axisPointers = this._axisPointers;\n            var coordSysName = coordSys.name;\n            axisPointers[coordSysName] = axisPointers[coordSysName] || {};\n            if (axisPointers[coordSysName][axisType]) {\n                return axisPointers[coordSysName][axisType];\n            }\n\n            // Create if not exists\n            var pointerType = pointerModel.get('type');\n            var styleModel = pointerModel.getModel(pointerType + 'Style');\n            var isShadow = pointerType === 'shadow';\n            var style = styleModel[isShadow ? 'getAreaStyle' : 'getLineStyle']();\n\n            var elementType = coordSys.type === 'polar'\n                ? (isShadow ? 'Sector' : (axisType === 'radius' ? 'Circle' : 'Line'))\n                : (isShadow ? 'Rect' : 'Line');\n\n            isShadow ? (style.stroke = null) : (style.fill = null);\n\n            var el = axisPointers[coordSysName][axisType] = new graphic[elementType]({\n                style: style,\n                z: z,\n                zlevel: zlevel,\n                silent: true,\n                shape: initShape\n            });\n\n            this.group.add(el);\n            return el;\n        },\n\n        /**\n         * Dispatch actions and show tooltip on series\n         * @param {Array.<module:echarts/model/Series>} seriesList\n         * @param {Array.<number>} point\n         * @param {Array.<number>} value\n         * @param {boolean} contentNotChange\n         * @param {Array.<number>|string|Function} [positionExpr]\n         */\n        _dispatchAndShowSeriesTooltipContent: function (\n            coordSys, seriesList, point, value, contentNotChange, positionExpr\n        ) {\n\n            var rootTooltipModel = this._tooltipModel;\n\n            var baseAxis = coordSys.getBaseAxis();\n            var baseDimIndex = ({x: 1, radius: 1, single: 1})[baseAxis.dim] ? 0 : 1;\n\n            if (!seriesList.length) {\n                return;\n            }\n\n            var payloadBatch = zrUtil.map(seriesList, function (series) {\n                return {\n                    seriesIndex: series.seriesIndex,\n                    dataIndexInside: series.getAxisTooltipDataIndex\n                        ? series.getAxisTooltipDataIndex(series.coordDimToDataDim(baseAxis.dim), value, baseAxis)\n                        : series.getData().indexOfNearest(\n                            series.coordDimToDataDim(baseAxis.dim)[0],\n                            value[baseDimIndex],\n                            // Add a threshold to avoid find the wrong dataIndex when data length is not same\n                            false, baseAxis.type === 'category' ? 0.5 : null\n                        )\n                };\n            });\n            var sampleSeriesIndex;\n            zrUtil.each(payloadBatch, function (payload, idx) {\n                if (seriesList[idx].getData().hasValue(payload.dataIndexInside)) {\n                    sampleSeriesIndex = idx;\n                }\n            });\n            // Fallback to 0.\n            sampleSeriesIndex = sampleSeriesIndex || 0;\n\n            var lastHover = this._lastHover;\n            var api = this._api;\n            // Dispatch downplay action\n            if (lastHover.payloadBatch && !contentNotChange) {\n                api.dispatchAction({\n                    type: 'downplay',\n                    batch: lastHover.payloadBatch\n                });\n            }\n            // Dispatch highlight action\n            if (!contentNotChange) {\n                api.dispatchAction({\n                    type: 'highlight',\n                    batch: payloadBatch\n                });\n                lastHover.payloadBatch = payloadBatch;\n            }\n            // Dispatch showTip action\n            var dataIndex = payloadBatch[sampleSeriesIndex].dataIndexInside;\n            api.dispatchAction({\n                type: 'showTip',\n                dataIndexInside: dataIndex,\n                // expose to user.\n                dataIndex: seriesList[sampleSeriesIndex].getData().getRawIndex(dataIndex),\n                seriesIndex: payloadBatch[sampleSeriesIndex].seriesIndex,\n                from: this.uid\n            });\n\n            if (baseAxis && rootTooltipModel.get('showContent') && rootTooltipModel.get('show')) {\n                var paramsList = zrUtil.map(seriesList, function (series, index) {\n                    return series.getDataParams(payloadBatch[index].dataIndexInside);\n                });\n\n                if (!contentNotChange) {\n                    // Update html content\n                    var firstDataIndex = payloadBatch[sampleSeriesIndex].dataIndexInside;\n\n                    // Default tooltip content\n                    // FIXME\n                    // (1) shold be the first data which has name?\n                    // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n                    var firstLine = baseAxis.type === 'time'\n                        ? baseAxis.scale.getLabel(value[baseDimIndex])\n                        : seriesList[sampleSeriesIndex].getData().getName(firstDataIndex);\n                    var defaultHtml = (firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '')\n                        + zrUtil.map(seriesList, function (series, index) {\n                            return series.formatTooltip(payloadBatch[index].dataIndexInside, true);\n                        }).join('<br />');\n\n                    var asyncTicket = 'axis_' + coordSys.name + '_' + firstDataIndex;\n\n                    this._showTooltipContent(\n                        rootTooltipModel, defaultHtml, paramsList, asyncTicket,\n                        point[0], point[1], positionExpr, null, api\n                    );\n                }\n                else {\n                    updatePosition(\n                        positionExpr || rootTooltipModel.get('position'),\n                        point[0], point[1],\n                        rootTooltipModel.get('confine'),\n                        this._tooltipContent, paramsList, null, api\n                    );\n                }\n            }\n        },\n\n        /**\n         * Show tooltip on item\n         * @param {module:echarts/model/Series} seriesModel\n         * @param {number} dataIndex\n         * @param {string} dataType\n         * @param {Object} e\n         */\n        _showItemTooltipContent: function (seriesModel, dataIndex, dataType, e) {\n            // FIXME Graph data\n            var api = this._api;\n            var data = seriesModel.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var tooltipOpt = itemModel.get('tooltip', true);\n            if (typeof tooltipOpt === 'string') {\n                // In each data item tooltip can be simply write:\n                // {\n                //  value: 10,\n                //  tooltip: 'Something you need to know'\n                // }\n                var tooltipContent = tooltipOpt;\n                tooltipOpt = {\n                    formatter: tooltipContent\n                };\n            }\n            var rootTooltipModel = this._tooltipModel;\n            var seriesTooltipModel = seriesModel.getModel(\n                'tooltip', rootTooltipModel\n            );\n            var tooltipModel = new Model(tooltipOpt, seriesTooltipModel, seriesTooltipModel.ecModel);\n\n            var params = seriesModel.getDataParams(dataIndex, dataType);\n            var defaultHtml = seriesModel.formatTooltip(dataIndex, false, dataType);\n\n            var asyncTicket = 'item_' + seriesModel.name + '_' + dataIndex;\n\n            this._showTooltipContent(\n                tooltipModel, defaultHtml, params, asyncTicket,\n                e.offsetX, e.offsetY, e.position, e.target, api\n            );\n        },\n\n        _showTooltipContent: function (\n            tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, target, api\n        ) {\n            // Reset ticket\n            this._ticket = '';\n\n            if (tooltipModel.get('showContent') && tooltipModel.get('show')) {\n                var tooltipContent = this._tooltipContent;\n                var confine = tooltipModel.get('confine');\n\n                var formatter = tooltipModel.get('formatter');\n                positionExpr = positionExpr || tooltipModel.get('position');\n                var html = defaultHtml;\n\n                if (formatter) {\n                    if (typeof formatter === 'string') {\n                        html = formatUtil.formatTpl(formatter, params, true);\n                    }\n                    else if (typeof formatter === 'function') {\n                        var self = this;\n                        var ticket = asyncTicket;\n                        var callback = function (cbTicket, html) {\n                            if (cbTicket === self._ticket) {\n                                tooltipContent.setContent(html);\n\n                                updatePosition(\n                                    positionExpr, x, y, confine,\n                                    tooltipContent, params, target, api\n                                );\n                            }\n                        };\n                        self._ticket = ticket;\n                        html = formatter(params, ticket, callback);\n                    }\n                }\n\n                tooltipContent.show(tooltipModel);\n                tooltipContent.setContent(html);\n\n                updatePosition(\n                    positionExpr, x, y, confine,\n                    tooltipContent, params, target, api\n                );\n            }\n        },\n\n        /**\n         * Show axis pointer\n         * @param {string} [coordSysName]\n         */\n        _showAxisPointer: function (coordSysName) {\n            if (coordSysName) {\n                var axisPointers = this._axisPointers[coordSysName];\n                axisPointers && zrUtil.each(axisPointers, function (el) {\n                    el.show();\n                });\n            }\n            else {\n                this.group.eachChild(function (child) {\n                    child.show();\n                });\n                this.group.show();\n            }\n        },\n\n        _resetLastHover: function () {\n            var lastHover = this._lastHover;\n            if (lastHover.payloadBatch) {\n                this._api.dispatchAction({\n                    type: 'downplay',\n                    batch: lastHover.payloadBatch\n                });\n            }\n            // Reset lastHover\n            this._lastHover = {};\n        },\n        /**\n         * Hide axis pointer\n         * @param {string} [coordSysName]\n         */\n        _hideAxisPointer: function (coordSysName) {\n            if (coordSysName) {\n                var axisPointers = this._axisPointers[coordSysName];\n                axisPointers && zrUtil.each(axisPointers, function (el) {\n                    el.hide();\n                });\n            }\n            else {\n                if (this.group.children().length) {\n                    this.group.hide();\n                }\n            }\n        },\n\n        _hide: function () {\n            clearTimeout(this._showTimeout);\n\n            this._hideAxisPointer();\n            this._resetLastHover();\n            if (!this._alwaysShowContent) {\n                this._tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n            }\n\n            this._api.dispatchAction({\n                type: 'hideTip',\n                from: this.uid\n            });\n\n            this._lastX = this._lastY = null;\n        },\n\n        dispose: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var zr = api.getZr();\n            this._tooltipContent.hide();\n\n            zr.off('click', this._tryShow);\n            zr.off('mousemove', this._mousemove);\n            zr.off('mouseout', this._hide);\n            zr.off('globalout', this._hide);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipView.js\n// module id = 389\n// module chunks = 0 1 2 3 4","\n\n    var numberUtil = require('../util/number');\n    var linearMap = numberUtil.linearMap;\n    var zrUtil = require('zrender/lib/core/util');\n\n    function fixExtentWithBands(extent, nTick) {\n        var size = extent[1] - extent[0];\n        var len = nTick;\n        var margin = size / len / 2;\n        extent[0] += margin;\n        extent[1] -= margin;\n    }\n\n    var normalizedExtent = [0, 1];\n    /**\n     * @name module:echarts/coord/CartesianAxis\n     * @constructor\n     */\n    var Axis = function (dim, scale, extent) {\n\n        /**\n         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n         * @type {string}\n         */\n        this.dim = dim;\n\n        /**\n         * Axis scale\n         * @type {module:echarts/coord/scale/*}\n         */\n        this.scale = scale;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        this._extent = extent || [0, 0];\n\n        /**\n         * @type {boolean}\n         */\n        this.inverse = false;\n\n        /**\n         * Usually true when axis has a ordinal scale\n         * @type {boolean}\n         */\n        this.onBand = false;\n    };\n\n    Axis.prototype = {\n\n        constructor: Axis,\n\n        /**\n         * If axis extent contain given coord\n         * @param {number} coord\n         * @return {boolean}\n         */\n        contain: function (coord) {\n            var extent = this._extent;\n            var min = Math.min(extent[0], extent[1]);\n            var max = Math.max(extent[0], extent[1]);\n            return coord >= min && coord <= max;\n        },\n\n        /**\n         * If axis extent contain given data\n         * @param {number} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.contain(this.dataToCoord(data));\n        },\n\n        /**\n         * Get coord extent.\n         * @return {Array.<number>}\n         */\n        getExtent: function () {\n            var ret = this._extent.slice();\n            return ret;\n        },\n\n        /**\n         * Get precision used for formatting\n         * @param {Array.<number>} [dataExtent]\n         * @return {number}\n         */\n        getPixelPrecision: function (dataExtent) {\n            return numberUtil.getPixelPrecision(\n                dataExtent || this.scale.getExtent(),\n                this._extent\n            );\n        },\n\n        /**\n         * Set coord extent\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var extent = this._extent;\n            extent[0] = start;\n            extent[1] = end;\n        },\n\n        /**\n         * Convert data to coord. Data is the rank if it has a ordinal scale\n         * @param {number} data\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        dataToCoord: function (data, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n            data = scale.normalize(data);\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            return linearMap(data, normalizedExtent, extent, clamp);\n        },\n\n        /**\n         * Convert coord to data. Data is the rank if it has a ordinal scale\n         * @param {number} coord\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        coordToData: function (coord, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            var t = linearMap(coord, extent, normalizedExtent, clamp);\n\n            return this.scale.scale(t);\n        },\n        /**\n         * @return {Array.<number>}\n         */\n        getTicksCoords: function (alignWithLabel) {\n            if (this.onBand && !alignWithLabel) {\n                var bands = this.getBands();\n                var coords = [];\n                for (var i = 0; i < bands.length; i++) {\n                    coords.push(bands[i][0]);\n                }\n                if (bands[i - 1]) {\n                    coords.push(bands[i - 1][1]);\n                }\n                return coords;\n            }\n            else {\n                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n            }\n        },\n\n        /**\n         * Coords of labels are on the ticks or on the middle of bands\n         * @return {Array.<number>}\n         */\n        getLabelsCoords: function () {\n            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n        },\n\n        /**\n         * Get bands.\n         *\n         * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n         * |---1---|---2---|---3---|---4---|.\n         *\n         * @return {Array}\n         */\n         // FIXME Situation when labels is on ticks\n        getBands: function () {\n            var extent = this.getExtent();\n            var bands = [];\n            var len = this.scale.count();\n            var start = extent[0];\n            var end = extent[1];\n            var span = end - start;\n\n            for (var i = 0; i < len; i++) {\n                bands.push([\n                    span * i / len + start,\n                    span * (i + 1) / len + start\n                ]);\n            }\n            return bands;\n        },\n\n        /**\n         * Get width of band\n         * @return {number}\n         */\n        getBandWidth: function () {\n            var axisExtent = this._extent;\n            var dataExtent = this.scale.getExtent();\n\n            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\n            // Fix #2728, avoid NaN when only one data.\n            len === 0 && (len = 1);\n\n            var size = Math.abs(axisExtent[1] - axisExtent[0]);\n\n            return Math.abs(size) / len;\n        },\n\n        /**\n         * When axis extent depends on data and no data exists,\n         * axis ticks should not be drawn, which is named 'blank'.\n         */\n        isBlank: function () {\n            return this._isBlank;\n        },\n\n        /**\n         * When axis extent depends on data and no data exists,\n         * axis ticks should not be drawn, which is named 'blank'.\n         */\n        setBlank: function (isBlank) {\n            this._isBlank = isBlank;\n        }\n\n    };\n\n    module.exports = Axis;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/Axis.js\n// module id = 390\n// module chunks = 0 1 2 3 4","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var defaultOption = {\n        show: true,\n        zlevel: 0,                  // 一级层叠\n        z: 0,                       // 二级层叠\n        // 反向坐标轴\n        inverse: false,\n\n        // 坐标轴名字，默认为空\n        name: '',\n        // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n        nameLocation: 'end',\n        // 坐标轴名字旋转，degree。\n        nameRotate: null, // Adapt to axis rotate, when nameLocation is 'middle'.\n        nameTruncate: {\n            maxWidth: null,\n            ellipsis: '...',\n            placeholder: '.'\n        },\n        // 坐标轴文字样式，默认取全局样式\n        nameTextStyle: {},\n        // 文字与轴线距离\n        nameGap: 15,\n\n        silent: false, // Default false to support tooltip.\n        triggerEvent: false, // Default false to avoid legacy user event listener fail.\n\n        tooltip: {\n            show: false\n        },\n\n        // 坐标轴线\n        axisLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            onZero: true,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                color: '#333',\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // 属性show控制显示与否，默认显示\n            show: true,\n            // 控制小标记是否在grid里\n            inside: false,\n            // 属性length控制线长\n            length: 5,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                width: 1\n            }\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            show: true,\n            // 控制文本标签是否在grid里\n            inside: false,\n            rotate: 0,\n            margin: 8,\n            // formatter: null,\n            // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n            textStyle: {\n                fontSize: 12\n            }\n        },\n        // 分隔线\n        splitLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            // 属性lineStyle（详见lineStyle）控制线条样式\n            lineStyle: {\n                color: ['#ccc'],\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 分隔区域\n        splitArea: {\n            // 默认不显示，属性show控制显示与否\n            show: false,\n            // 属性areaStyle（详见areaStyle）控制区域样式\n            areaStyle: {\n                color: ['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']\n            }\n        }\n    };\n\n    var categoryAxis = zrUtil.merge({\n        // 类目起始和结束两端空白策略\n        boundaryGap: true,\n        // splitArea: {\n            // show: false\n        // },\n        splitLine: {\n            show: false\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // If tick is align with label when boundaryGap is true\n            // Default with axisTick\n            alignWithLabel: false,\n            interval: 'auto'\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            interval: 'auto'\n        }\n    }, defaultOption);\n\n    var valueAxis = zrUtil.merge({\n        // 数值起始和结束两端空白策略\n        boundaryGap: [0, 0],\n        // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n        // min: null,\n        // 最大值，设置成 'dataMax' 则从数据中计算最大值\n        // max: null,\n        // Readonly prop, specifies start value of the range when using data zoom.\n        // rangeStart: null\n        // Readonly prop, specifies end value of the range when using data zoom.\n        // rangeEnd: null\n        // 脱离0值比例，放大聚焦到最终_min，_max区间\n        // scale: false,\n        // 分割段数，默认为5\n        splitNumber: 5\n        // Minimum interval\n        // minInterval: null\n    }, defaultOption);\n\n    // FIXME\n    var timeAxis = zrUtil.defaults({\n        scale: true,\n        min: 'dataMin',\n        max: 'dataMax'\n    }, valueAxis);\n    var logAxis = zrUtil.defaults({\n        logBase: 10\n    }, valueAxis);\n    logAxis.scale = true;\n\n    module.exports = {\n        categoryAxis: categoryAxis,\n        valueAxis: valueAxis,\n        timeAxis: timeAxis,\n        logAxis: logAxis\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisDefault.js\n// module id = 391\n// module chunks = 0 1 2 3 4","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var axisHelper = require('./axisHelper');\n\n    function getName(obj) {\n        if (zrUtil.isObject(obj) && obj.value != null) {\n            return obj.value;\n        }\n        else {\n            return obj;\n        }\n    }\n\n    module.exports = {\n\n        /**\n         * Format labels\n         * @return {Array.<string>}\n         */\n        getFormattedLabels: function () {\n            return axisHelper.getFormattedLabels(\n                this.axis,\n                this.get('axisLabel.formatter')\n            );\n        },\n\n        /**\n         * Get categories\n         */\n        getCategories: function () {\n            return this.get('type') === 'category'\n                && zrUtil.map(this.get('data'), getName);\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n         */\n        getMin: function (origin) {\n            var option = this.option;\n            var min = (!origin && option.rangeStart != null)\n                ? option.rangeStart : option.min;\n\n            if (min != null && min !== 'dataMin' && !zrUtil.eqNaN(min)) {\n                min = this.axis.scale.parse(min);\n            }\n            return min;\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n         */\n        getMax: function (origin) {\n            var option = this.option;\n            var max = (!origin && option.rangeEnd != null)\n                ? option.rangeEnd : option.max;\n\n            if (max != null && max !== 'dataMax' && !zrUtil.eqNaN(max)) {\n                max = this.axis.scale.parse(max);\n            }\n            return max;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        getNeedCrossZero: function () {\n            var option = this.option;\n            return (option.rangeStart != null || option.rangeEnd != null)\n                ? false : !option.scale;\n        },\n\n        /**\n         * Should be implemented by each axis model if necessary.\n         * @return {module:echarts/model/Component} coordinate system model\n         */\n        getCoordSysModel: zrUtil.noop,\n\n        /**\n         * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n         * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n         */\n        setRange: function (rangeStart, rangeEnd) {\n            this.option.rangeStart = rangeStart;\n            this.option.rangeEnd = rangeEnd;\n        },\n\n        /**\n         * Reset range\n         */\n        resetRange: function () {\n            // rangeStart and rangeEnd is readonly.\n            this.option.rangeStart = this.option.rangeEnd = null;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisModelCommonMixin.js\n// module id = 392\n// module chunks = 0 1 2 3 4","\n\n    var axisDefault = require('./axisDefault');\n    var zrUtil = require('zrender/lib/core/util');\n    var ComponentModel = require('../model/Component');\n    var layout = require('../util/layout');\n\n    // FIXME axisType is fixed ?\n    var AXIS_TYPES = ['value', 'category', 'time', 'log'];\n\n    /**\n     * Generate sub axis model class\n     * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n     * @param {module:echarts/model/Component} BaseAxisModelClass\n     * @param {Function} axisTypeDefaulter\n     * @param {Object} [extraDefaultOption]\n     */\n    module.exports = function (axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n\n        zrUtil.each(AXIS_TYPES, function (axisType) {\n\n            BaseAxisModelClass.extend({\n\n                type: axisName + 'Axis.' + axisType,\n\n                mergeDefaultAndTheme: function (option, ecModel) {\n                    var layoutMode = this.layoutMode;\n                    var inputPositionParams = layoutMode\n                        ? layout.getLayoutParams(option) : {};\n\n                    var themeModel = ecModel.getTheme();\n                    zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n                    zrUtil.merge(option, this.getDefaultOption());\n\n                    option.type = axisTypeDefaulter(axisName, option);\n\n                    if (layoutMode) {\n                        layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n                    }\n                },\n\n                defaultOption: zrUtil.mergeAll(\n                    [\n                        {},\n                        axisDefault[axisType + 'Axis'],\n                        extraDefaultOption\n                    ],\n                    true\n                )\n            });\n        });\n\n        ComponentModel.registerSubTypeDefaulter(\n            axisName + 'Axis',\n            zrUtil.curry(axisTypeDefaulter, axisName)\n        );\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisModelCreator.js\n// module id = 393\n// module chunks = 0 1 2 3 4","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Axis = require('../Axis');\n    var axisLabelInterval = require('./axisLabelInterval');\n\n    /**\n     * Extend axis 2d\n     * @constructor module:echarts/coord/cartesian/Axis2D\n     * @extends {module:echarts/coord/cartesian/Axis}\n     * @param {string} dim\n     * @param {*} scale\n     * @param {Array.<number>} coordExtent\n     * @param {string} axisType\n     * @param {string} position\n     */\n    var Axis2D = function (dim, scale, coordExtent, axisType, position) {\n        Axis.call(this, dim, scale, coordExtent);\n        /**\n         * Axis type\n         *  - 'category'\n         *  - 'value'\n         *  - 'time'\n         *  - 'log'\n         * @type {string}\n         */\n        this.type = axisType || 'value';\n\n        /**\n         * Axis position\n         *  - 'top'\n         *  - 'bottom'\n         *  - 'left'\n         *  - 'right'\n         */\n        this.position = position || 'bottom';\n    };\n\n    Axis2D.prototype = {\n\n        constructor: Axis2D,\n\n        /**\n         * Index of axis, can be used as key\n         */\n        index: 0,\n        /**\n         * If axis is on the zero position of the other axis\n         * @type {boolean}\n         */\n        onZero: false,\n\n        /**\n         * Axis model\n         * @param {module:echarts/coord/cartesian/AxisModel}\n         */\n        model: null,\n\n        isHorizontal: function () {\n            var position = this.position;\n            return position === 'top' || position === 'bottom';\n        },\n\n        getGlobalExtent: function () {\n            var ret = this.getExtent();\n            ret[0] = this.toGlobalCoord(ret[0]);\n            ret[1] = this.toGlobalCoord(ret[1]);\n            return ret;\n        },\n\n        /**\n         * @return {number}\n         */\n        getLabelInterval: function () {\n            var labelInterval = this._labelInterval;\n            if (!labelInterval) {\n                labelInterval = this._labelInterval = axisLabelInterval(this);\n            }\n            return labelInterval;\n        },\n\n        /**\n         * If label is ignored.\n         * Automatically used when axis is category and label can not be all shown\n         * @param  {number}  idx\n         * @return {boolean}\n         */\n        isLabelIgnored: function (idx) {\n            if (this.type === 'category') {\n                var labelInterval = this.getLabelInterval();\n                return ((typeof labelInterval === 'function')\n                    && !labelInterval(idx, this.scale.getLabel(idx)))\n                    || idx % (labelInterval + 1);\n            }\n        },\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var localCoord = axis.toLocalCoord(80);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toLocalCoord: null,\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var globalCoord = axis.toLocalCoord(40);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toGlobalCoord: null\n\n    };\n    zrUtil.inherits(Axis2D, Axis);\n\n    module.exports = Axis2D;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Axis2D.js\n// module id = 394\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    function dimAxisMapper(dim) {\n        return this._axes[dim];\n    }\n\n    /**\n     * @alias module:echarts/coord/Cartesian\n     * @constructor\n     */\n    var Cartesian = function (name) {\n        this._axes = {};\n\n        this._dimList = [];\n\n        /**\n         * @type {string}\n         */\n        this.name = name || '';\n    };\n\n    Cartesian.prototype = {\n\n        constructor: Cartesian,\n\n        type: 'cartesian',\n\n        /**\n         * Get axis\n         * @param  {number|string} dim\n         * @return {module:echarts/coord/Cartesian~Axis}\n         */\n        getAxis: function (dim) {\n            return this._axes[dim];\n        },\n\n        /**\n         * Get axes list\n         * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n         */\n        getAxes: function () {\n            return zrUtil.map(this._dimList, dimAxisMapper, this);\n        },\n\n        /**\n         * Get axes list by given scale type\n         */\n        getAxesByScale: function (scaleType) {\n            scaleType = scaleType.toLowerCase();\n            return zrUtil.filter(\n                this.getAxes(),\n                function (axis) {\n                    return axis.scale.type === scaleType;\n                }\n            );\n        },\n\n        /**\n         * Add axis\n         * @param {module:echarts/coord/Cartesian.Axis}\n         */\n        addAxis: function (axis) {\n            var dim = axis.dim;\n\n            this._axes[dim] = axis;\n\n            this._dimList.push(dim);\n        },\n\n        /**\n         * Convert data to coord in nd space\n         * @param {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        dataToCoord: function (val) {\n            return this._dataCoordConvert(val, 'dataToCoord');\n        },\n\n        /**\n         * Convert coord in nd space to data\n         * @param  {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        coordToData: function (val) {\n            return this._dataCoordConvert(val, 'coordToData');\n        },\n\n        _dataCoordConvert: function (input, method) {\n            var dimList = this._dimList;\n\n            var output = input instanceof Array ? [] : {};\n\n            for (var i = 0; i < dimList.length; i++) {\n                var dim = dimList[i];\n                var axis = this._axes[dim];\n\n                output[dim] = axis[method](input[dim]);\n            }\n\n            return output;\n        }\n    };\n\n    module.exports = Cartesian;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Cartesian.js\n// module id = 395\n// module chunks = 0 1 2 3 4","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Cartesian = require('./Cartesian');\n\n    function Cartesian2D(name) {\n\n        Cartesian.call(this, name);\n    }\n\n    Cartesian2D.prototype = {\n\n        constructor: Cartesian2D,\n\n        type: 'cartesian2d',\n\n        /**\n         * @type {Array.<string>}\n         * @readOnly\n         */\n        dimensions: ['x', 'y'],\n\n        /**\n         * Base axis will be used on stacking.\n         *\n         * @return {module:echarts/coord/cartesian/Axis2D}\n         */\n        getBaseAxis: function () {\n            return this.getAxesByScale('ordinal')[0]\n                || this.getAxesByScale('time')[0]\n                || this.getAxis('x');\n        },\n\n        /**\n         * If contain point\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        containPoint: function (point) {\n            var axisX = this.getAxis('x');\n            var axisY = this.getAxis('y');\n            return axisX.contain(axisX.toLocalCoord(point[0]))\n                && axisY.contain(axisY.toLocalCoord(point[1]));\n        },\n\n        /**\n         * If contain data\n         * @param {Array.<number>} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.getAxis('x').containData(data[0])\n                && this.getAxis('y').containData(data[1]);\n        },\n\n        /**\n         * Convert series data to an array of points\n         * @param {module:echarts/data/List} data\n         * @param {boolean} stack\n         * @return {Array}\n         *  Return array of points. For example:\n         *  `[[10, 10], [20, 20], [30, 30]]`\n         */\n        dataToPoints: function (data, stack) {\n            return data.mapArray(['x', 'y'], function (x, y) {\n                return this.dataToPoint([x, y]);\n            }, stack, this);\n        },\n\n        /**\n         * @param {Array.<number>} data\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        dataToPoint: function (data, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)),\n                yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))\n            ];\n        },\n\n        /**\n         * @param {Array.<number>} point\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        pointToData: function (point, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp),\n                yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)\n            ];\n        },\n\n        /**\n         * Get other axis\n         * @param {module:echarts/coord/cartesian/Axis2D} axis\n         */\n        getOtherAxis: function (axis) {\n            return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n        }\n    };\n\n    zrUtil.inherits(Cartesian2D, Cartesian);\n\n    module.exports = Cartesian2D;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Cartesian2D.js\n// module id = 396\n// module chunks = 0 1 2 3 4","'use strict';\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\n\n\n    require('./AxisModel');\n    var ComponentModel = require('../../model/Component');\n\n    module.exports = ComponentModel.extend({\n\n        type: 'grid',\n\n        dependencies: ['xAxis', 'yAxis'],\n\n        layoutMode: 'box',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Grid}\n         */\n        coordinateSystem: null,\n\n        defaultOption: {\n            show: false,\n            zlevel: 0,\n            z: 0,\n            left: '10%',\n            top: 60,\n            right: '10%',\n            bottom: 60,\n            // If grid size contain label\n            containLabel: false,\n            // width: {totalWidth} - left - right,\n            // height: {totalHeight} - top - bottom,\n            backgroundColor: 'rgba(0,0,0,0)',\n            borderWidth: 1,\n            borderColor: '#ccc'\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/GridModel.js\n// module id = 397\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * Helper function for axisLabelInterval calculation\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var axisHelper = require('../axisHelper');\n\n    module.exports = function (axis) {\n        var axisModel = axis.model;\n        var labelModel = axisModel.getModel('axisLabel');\n        var labelInterval = labelModel.get('interval');\n        if (!(axis.type === 'category' && labelInterval === 'auto')) {\n            return labelInterval === 'auto' ? 0 : labelInterval;\n        }\n\n        return axisHelper.getAxisLabelInterval(\n            zrUtil.map(axis.scale.getTicks(), axis.dataToCoord, axis),\n            axisModel.getFormattedLabels(),\n            labelModel.getModel('textStyle').getFont(),\n            axis.isHorizontal()\n        );\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/axisLabelInterval.js\n// module id = 398\n// module chunks = 0 1 2 3 4","'use strict';\n\n\n    function defaultKeyGetter(item) {\n        return item;\n    }\n\n    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter) {\n        this._old = oldArr;\n        this._new = newArr;\n\n        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n        this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n    }\n\n    DataDiffer.prototype = {\n\n        constructor: DataDiffer,\n\n        /**\n         * Callback function when add a data\n         */\n        add: function (func) {\n            this._add = func;\n            return this;\n        },\n\n        /**\n         * Callback function when update a data\n         */\n        update: function (func) {\n            this._update = func;\n            return this;\n        },\n\n        /**\n         * Callback function when remove a data\n         */\n        remove: function (func) {\n            this._remove = func;\n            return this;\n        },\n\n        execute: function () {\n            var oldArr = this._old;\n            var newArr = this._new;\n            var oldKeyGetter = this._oldKeyGetter;\n            var newKeyGetter = this._newKeyGetter;\n\n            var oldDataIndexMap = {};\n            var newDataIndexMap = {};\n            var oldDataKeyArr = [];\n            var newDataKeyArr = [];\n            var i;\n\n            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, oldKeyGetter);\n            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, newKeyGetter);\n\n            // Travel by inverted order to make sure order consistency\n            // when duplicate keys exists (consider newDataIndex.pop() below).\n            // For performance consideration, these code below do not look neat.\n            for (i = 0; i < oldArr.length; i++) {\n                var key = oldDataKeyArr[i];\n                var idx = newDataIndexMap[key];\n\n                // idx can never be empty array here. see 'set null' logic below.\n                if (idx != null) {\n                    // Consider there is duplicate key (for example, use dataItem.name as key).\n                    // We should make sure every item in newArr and oldArr can be visited.\n                    var len = idx.length;\n                    if (len) {\n                        len === 1 && (newDataIndexMap[key] = null);\n                        idx = idx.unshift();\n                    }\n                    else {\n                        newDataIndexMap[key] = null;\n                    }\n                    this._update && this._update(idx, i);\n                }\n                else {\n                    this._remove && this._remove(i);\n                }\n            }\n\n            for (var i = 0; i < newDataKeyArr.length; i++) {\n                var key = newDataKeyArr[i];\n                if (newDataIndexMap.hasOwnProperty(key)) {\n                    var idx = newDataIndexMap[key];\n                    if (idx == null) {\n                        continue;\n                    }\n                    // idx can never be empty array here. see 'set null' logic above.\n                    if (!idx.length) {\n                        this._add && this._add(idx);\n                    }\n                    else {\n                        for (var j = 0, len = idx.length; j < len; j++) {\n                            this._add && this._add(idx[j]);\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    function initIndexMap(arr, map, keyArr, keyGetter) {\n        for (var i = 0; i < arr.length; i++) {\n            var key = keyGetter(arr[i], i);\n            var existence = map[key];\n            if (existence == null) {\n                keyArr.push(key);\n                map[key] = i;\n            }\n            else {\n                if (!existence.length) {\n                    map[key] = existence = [existence];\n                }\n                existence.push(i);\n            }\n        }\n    }\n\n    module.exports = DataDiffer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/DataDiffer.js\n// module id = 399\n// module chunks = 0 1 2 3 4","/**\n * Complete dimensions by data (guess dimension).\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    /**\n     * Complete the dimensions array guessed from the data structure.\n     * @param  {Array.<string>} dimensions      Necessary dimensions, like ['x', 'y']\n     * @param  {Array} data                     Data list. [[1, 2, 3], [2, 3, 4]]\n     * @param  {Array.<string>} [defaultNames]    Default names to fill not necessary dimensions, like ['value']\n     * @param  {string} [extraPrefix]             Prefix of name when filling the left dimensions.\n     * @return {Array.<string>}\n     */\n    function completeDimensions(dimensions, data, defaultNames, extraPrefix) {\n        if (!data) {\n            return dimensions;\n        }\n\n        var value0 = retrieveValue(data[0]);\n        var dimSize = zrUtil.isArray(value0) && value0.length || 1;\n\n        defaultNames = defaultNames || [];\n        extraPrefix = extraPrefix || 'extra';\n        for (var i = 0; i < dimSize; i++) {\n            if (!dimensions[i]) {\n                var name = defaultNames[i] || (extraPrefix + (i - defaultNames.length));\n                dimensions[i] = guessOrdinal(data, i)\n                    ? {type: 'ordinal', name: name}\n                    : name;\n            }\n        }\n\n        return dimensions;\n    }\n\n    // The rule should not be complex, otherwise user might not\n    // be able to known where the data is wrong.\n    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n        for (var i = 0, len = data.length; i < len; i++) {\n            var value = retrieveValue(data[i]);\n\n            if (!zrUtil.isArray(value)) {\n                return false;\n            }\n\n            var value = value[dimIndex];\n            if (value != null && isFinite(value)) {\n                return false;\n            }\n            else if (zrUtil.isString(value) && value !== '-') {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    function retrieveValue(o) {\n        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;\n    }\n\n    module.exports = completeDimensions;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/helper/completeDimensions.js\n// module id = 400\n// module chunks = 0 1 2 3 4","\n\n    module.exports = function (seriesType, ecModel) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var coordSys = seriesModel.coordinateSystem;\n\n            if (coordSys) {\n                var dims = coordSys.dimensions;\n\n                if (coordSys.type === 'singleAxis') {\n                    data.each(dims[0], function (x, idx) {\n                        // Also {Array.<number>}, not undefined to avoid if...else... statement\n                        data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\n                    });\n                }\n                else {\n                    data.each(dims, function (x, y, idx) {\n                        // Also {Array.<number>}, not undefined to avoid if...else... statement\n                        data.setItemLayout(\n                            idx, (isNaN(x) || isNaN(y)) ? [NaN, NaN] : coordSys.dataToPoint([x, y])\n                        );\n                    }, true);\n                }\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/layout/points.js\n// module id = 401\n// module chunks = 0 1 2 3 4","\n\n    var graphic = require('../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var PI = Math.PI;\n    /**\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [opts]\n     * @param {string} [opts.text]\n     * @param {string} [opts.color]\n     * @param {string} [opts.textColor]\n     * @return {module:zrender/Element}\n     */\n    module.exports = function (api, opts) {\n        opts = opts || {};\n        zrUtil.defaults(opts, {\n            text: 'loading',\n            color: '#c23531',\n            textColor: '#000',\n            maskColor: 'rgba(255, 255, 255, 0.8)',\n            zlevel: 0\n        });\n        var mask = new graphic.Rect({\n            style: {\n                fill: opts.maskColor\n            },\n            zlevel: opts.zlevel,\n            z: 10000\n        });\n        var arc = new graphic.Arc({\n            shape: {\n                startAngle: -PI / 2,\n                endAngle: -PI / 2 + 0.1,\n                r: 10\n            },\n            style: {\n                stroke: opts.color,\n                lineCap: 'round',\n                lineWidth: 5\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n        var labelRect = new graphic.Rect({\n            style: {\n                fill: 'none',\n                text: opts.text,\n                textPosition: 'right',\n                textDistance: 10,\n                textFill: opts.textColor\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n\n        arc.animateShape(true)\n            .when(1000, {\n                endAngle: PI * 3 / 2\n            })\n            .start('circularInOut');\n        arc.animateShape(true)\n            .when(1000, {\n                startAngle: PI * 3 / 2\n            })\n            .delay(300)\n            .start('circularInOut');\n\n        var group = new graphic.Group();\n        group.add(arc);\n        group.add(labelRect);\n        group.add(mask);\n        // Inject resize\n        group.resize = function () {\n            var cx = api.getWidth() / 2;\n            var cy = api.getHeight() / 2;\n            arc.setShape({\n                cx: cx,\n                cy: cy\n            });\n            var r = arc.shape.r;\n            labelRect.setShape({\n                x: cx - r,\n                y: cy - r,\n                width: r * 2,\n                height: r * 2\n            });\n\n            mask.setShape({\n                x: 0,\n                y: 0,\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n        };\n        group.resize();\n        return group;\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/loading/default.js\n// module id = 402\n// module chunks = 0 1 2 3 4","/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n\n\n    /**\n     * Caution: If the mechanism should be changed some day, these cases\n     * should be considered:\n     *\n     * (1) In `merge option` mode, if using the same option to call `setOption`\n     * many times, the result should be the same (try our best to ensure that).\n     * (2) In `merge option` mode, if a component has no id/name specified, it\n     * will be merged by index, and the result sequence of the components is\n     * consistent to the original sequence.\n     * (3) `reset` feature (in toolbox). Find detailed info in comments about\n     * `mergeOption` in module:echarts/model/OptionManager.\n     */\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var Model = require('./Model');\n    var each = zrUtil.each;\n    var filter = zrUtil.filter;\n    var map = zrUtil.map;\n    var isArray = zrUtil.isArray;\n    var indexOf = zrUtil.indexOf;\n    var isObject = zrUtil.isObject;\n\n    var ComponentModel = require('./Component');\n\n    var globalDefault = require('./globalDefault');\n\n    var OPTION_INNER_KEY = '\\0_ec_inner';\n\n    /**\n     * @alias module:echarts/model/Global\n     *\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {Object} theme\n     */\n    var GlobalModel = Model.extend({\n\n        constructor: GlobalModel,\n\n        init: function (option, parentModel, theme, optionManager) {\n            theme = theme || {};\n\n            this.option = null; // Mark as not initialized.\n\n            /**\n             * @type {module:echarts/model/Model}\n             * @private\n             */\n            this._theme = new Model(theme);\n\n            /**\n             * @type {module:echarts/model/OptionManager}\n             */\n            this._optionManager = optionManager;\n        },\n\n        setOption: function (option, optionPreprocessorFuncs) {\n            zrUtil.assert(\n                !(OPTION_INNER_KEY in option),\n                'please use chart.getOption()'\n            );\n\n            this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n            this.resetOption();\n        },\n\n        /**\n         * @param {string} type null/undefined: reset all.\n         *                      'recreate': force recreate all.\n         *                      'timeline': only reset timeline option\n         *                      'media': only reset media query option\n         * @return {boolean} Whether option changed.\n         */\n        resetOption: function (type) {\n            var optionChanged = false;\n            var optionManager = this._optionManager;\n\n            if (!type || type === 'recreate') {\n                var baseOption = optionManager.mountOption(type === 'recreate');\n\n                if (!this.option || type === 'recreate') {\n                    initBase.call(this, baseOption);\n                }\n                else {\n                    this.restoreData();\n                    this.mergeOption(baseOption);\n                }\n                optionChanged = true;\n            }\n\n            if (type === 'timeline' || type === 'media') {\n                this.restoreData();\n            }\n\n            if (!type || type === 'recreate' || type === 'timeline') {\n                var timelineOption = optionManager.getTimelineOption(this);\n                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n            }\n\n            if (!type || type === 'recreate' || type === 'media') {\n                var mediaOptions = optionManager.getMediaOption(this, this._api);\n                if (mediaOptions.length) {\n                    each(mediaOptions, function (mediaOption) {\n                        this.mergeOption(mediaOption, optionChanged = true);\n                    }, this);\n                }\n            }\n\n            return optionChanged;\n        },\n\n        /**\n         * @protected\n         */\n        mergeOption: function (newOption) {\n            var option = this.option;\n            var componentsMap = this._componentsMap;\n            var newCptTypes = [];\n\n            // 如果不存在对应的 component model 则直接 merge\n            each(newOption, function (componentOption, mainType) {\n                if (componentOption == null) {\n                    return;\n                }\n\n                if (!ComponentModel.hasClass(mainType)) {\n                    option[mainType] = option[mainType] == null\n                        ? zrUtil.clone(componentOption)\n                        : zrUtil.merge(option[mainType], componentOption, true);\n                }\n                else {\n                    newCptTypes.push(mainType);\n                }\n            });\n\n            // FIXME OPTION 同步是否要改回原来的\n            ComponentModel.topologicalTravel(\n                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this\n            );\n\n            this._seriesIndices = this._seriesIndices || [];\n\n            function visitComponent(mainType, dependencies) {\n                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n\n                var mapResult = modelUtil.mappingToExists(\n                    componentsMap[mainType], newCptOptionList\n                );\n\n                modelUtil.makeIdAndName(mapResult);\n\n                // Set mainType and complete subType.\n                each(mapResult, function (item, index) {\n                    var opt = item.option;\n                    if (isObject(opt)) {\n                        item.keyInfo.mainType = mainType;\n                        item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n                    }\n                });\n\n                var dependentModels = getComponentsByTypes(\n                    componentsMap, dependencies\n                );\n\n                option[mainType] = [];\n                componentsMap[mainType] = [];\n\n                each(mapResult, function (resultItem, index) {\n                    var componentModel = resultItem.exist;\n                    var newCptOption = resultItem.option;\n\n                    zrUtil.assert(\n                        isObject(newCptOption) || componentModel,\n                        'Empty component definition'\n                    );\n\n                    // Consider where is no new option and should be merged using {},\n                    // see removeEdgeAndAdd in topologicalTravel and\n                    // ComponentModel.getAllClassMainTypes.\n                    if (!newCptOption) {\n                        componentModel.mergeOption({}, this);\n                        componentModel.optionUpdated({}, false);\n                    }\n                    else {\n                        var ComponentModelClass = ComponentModel.getClass(\n                            mainType, resultItem.keyInfo.subType, true\n                        );\n\n                        if (componentModel && componentModel instanceof ComponentModelClass) {\n                            componentModel.name = resultItem.keyInfo.name;\n                            componentModel.mergeOption(newCptOption, this);\n                            componentModel.optionUpdated(newCptOption, false);\n                        }\n                        else {\n                            // PENDING Global as parent ?\n                            var extraOpt = zrUtil.extend(\n                                {\n                                    dependentModels: dependentModels,\n                                    componentIndex: index\n                                },\n                                resultItem.keyInfo\n                            );\n                            componentModel = new ComponentModelClass(\n                                newCptOption, this, this, extraOpt\n                            );\n                            zrUtil.extend(componentModel, extraOpt);\n                            componentModel.init(newCptOption, this, this, extraOpt);\n                            // Call optionUpdated after init.\n                            // newCptOption has been used as componentModel.option\n                            // and may be merged with theme and default, so pass null\n                            // to avoid confusion.\n                            componentModel.optionUpdated(null, true);\n                        }\n                    }\n\n                    componentsMap[mainType][index] = componentModel;\n                    option[mainType][index] = componentModel.option;\n                }, this);\n\n                // Backup series for filtering.\n                if (mainType === 'series') {\n                    this._seriesIndices = createSeriesIndices(componentsMap.series);\n                }\n            }\n        },\n\n        /**\n         * Get option for output (cloned option and inner info removed)\n         * @public\n         * @return {Object}\n         */\n        getOption: function () {\n            var option = zrUtil.clone(this.option);\n\n            each(option, function (opts, mainType) {\n                if (ComponentModel.hasClass(mainType)) {\n                    var opts = modelUtil.normalizeToArray(opts);\n                    for (var i = opts.length - 1; i >= 0; i--) {\n                        // Remove options with inner id.\n                        if (modelUtil.isIdInner(opts[i])) {\n                            opts.splice(i, 1);\n                        }\n                    }\n                    option[mainType] = opts;\n                }\n            });\n\n            delete option[OPTION_INNER_KEY];\n\n            return option;\n        },\n\n        /**\n         * @return {module:echarts/model/Model}\n         */\n        getTheme: function () {\n            return this._theme;\n        },\n\n        /**\n         * @param {string} mainType\n         * @param {number} [idx=0]\n         * @return {module:echarts/model/Component}\n         */\n        getComponent: function (mainType, idx) {\n            var list = this._componentsMap[mainType];\n            if (list) {\n                return list[idx || 0];\n            }\n        },\n\n        /**\n         * If none of index and id and name used, return all components with mainType.\n         * @param {Object} condition\n         * @param {string} condition.mainType\n         * @param {string} [condition.subType] If ignore, only query by mainType\n         * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        queryComponents: function (condition) {\n            var mainType = condition.mainType;\n            if (!mainType) {\n                return [];\n            }\n\n            var index = condition.index;\n            var id = condition.id;\n            var name = condition.name;\n\n            var cpts = this._componentsMap[mainType];\n\n            if (!cpts || !cpts.length) {\n                return [];\n            }\n\n            var result;\n\n            if (index != null) {\n                if (!isArray(index)) {\n                    index = [index];\n                }\n                result = filter(map(index, function (idx) {\n                    return cpts[idx];\n                }), function (val) {\n                    return !!val;\n                });\n            }\n            else if (id != null) {\n                var isIdArray = isArray(id);\n                result = filter(cpts, function (cpt) {\n                    return (isIdArray && indexOf(id, cpt.id) >= 0)\n                        || (!isIdArray && cpt.id === id);\n                });\n            }\n            else if (name != null) {\n                var isNameArray = isArray(name);\n                result = filter(cpts, function (cpt) {\n                    return (isNameArray && indexOf(name, cpt.name) >= 0)\n                        || (!isNameArray && cpt.name === name);\n                });\n            }\n            else {\n                // Return all components with mainType\n                result = cpts;\n            }\n\n            return filterBySubType(result, condition);\n        },\n\n        /**\n         * The interface is different from queryComponents,\n         * which is convenient for inner usage.\n         *\n         * @usage\n         * var result = findComponents(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series'},\n         *     function (model, index) {...}\n         * );\n         * // result like [component0, componnet1, ...]\n         *\n         * @param {Object} condition\n         * @param {string} condition.mainType Mandatory.\n         * @param {string} [condition.subType] Optional.\n         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n         *        where xxx is mainType.\n         *        If query attribute is null/undefined or has no index/id/name,\n         *        do not filtering by query conditions, which is convenient for\n         *        no-payload situations or when target of action is global.\n         * @param {Function} [condition.filter] parameter: component, return boolean.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        findComponents: function (condition) {\n            var query = condition.query;\n            var mainType = condition.mainType;\n\n            var queryCond = getQueryCond(query);\n            var result = queryCond\n                ? this.queryComponents(queryCond)\n                : this._componentsMap[mainType];\n\n            return doFilter(filterBySubType(result, condition));\n\n            function getQueryCond(q) {\n                var indexAttr = mainType + 'Index';\n                var idAttr = mainType + 'Id';\n                var nameAttr = mainType + 'Name';\n                return q && (\n                        q[indexAttr] != null\n                        || q[idAttr] != null\n                        || q[nameAttr] != null\n                    )\n                    ? {\n                        mainType: mainType,\n                        // subType will be filtered finally.\n                        index: q[indexAttr],\n                        id: q[idAttr],\n                        name: q[nameAttr]\n                    }\n                    : null;\n            }\n\n            function doFilter(res) {\n                return condition.filter\n                     ? filter(res, condition.filter)\n                     : res;\n            }\n        },\n\n        /**\n         * @usage\n         * eachComponent('legend', function (legendModel, index) {\n         *     ...\n         * });\n         * eachComponent(function (componentType, model, index) {\n         *     // componentType does not include subType\n         *     // (componentType is 'xxx' but not 'xxx.aa')\n         * });\n         * eachComponent(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n         *     function (model, index) {...}\n         * );\n         * eachComponent(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n         *     function (model, index) {...}\n         * );\n         *\n         * @param {string|Object=} mainType When mainType is object, the definition\n         *                                  is the same as the method 'findComponents'.\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachComponent: function (mainType, cb, context) {\n            var componentsMap = this._componentsMap;\n\n            if (typeof mainType === 'function') {\n                context = cb;\n                cb = mainType;\n                each(componentsMap, function (components, componentType) {\n                    each(components, function (component, index) {\n                        cb.call(context, componentType, component, index);\n                    });\n                });\n            }\n            else if (zrUtil.isString(mainType)) {\n                each(componentsMap[mainType], cb, context);\n            }\n            else if (isObject(mainType)) {\n                var queryResult = this.findComponents(mainType);\n                each(queryResult, cb, context);\n            }\n        },\n\n        /**\n         * @param {string} name\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByName: function (name) {\n            var series = this._componentsMap.series;\n            return filter(series, function (oneSeries) {\n                return oneSeries.name === name;\n            });\n        },\n\n        /**\n         * @param {number} seriesIndex\n         * @return {module:echarts/model/Series}\n         */\n        getSeriesByIndex: function (seriesIndex) {\n            return this._componentsMap.series[seriesIndex];\n        },\n\n        /**\n         * @param {string} subType\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByType: function (subType) {\n            var series = this._componentsMap.series;\n            return filter(series, function (oneSeries) {\n                return oneSeries.subType === subType;\n            });\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeries: function () {\n            return this._componentsMap.series.slice();\n        },\n\n        /**\n         * After filtering, series may be different\n         * frome raw series.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.series[rawSeriesIndex];\n                cb.call(context, series, rawSeriesIndex);\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeries: function (cb, context) {\n            each(this._componentsMap.series, cb, context);\n        },\n\n        /**\n         * After filtering, series may be different.\n         * frome raw series.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeriesByType: function (subType, cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.series[rawSeriesIndex];\n                if (series.subType === subType) {\n                    cb.call(context, series, rawSeriesIndex);\n                }\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered of given type.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeriesByType: function (subType, cb, context) {\n            return each(this.getSeriesByType(subType), cb, context);\n        },\n\n        /**\n         * @param {module:echarts/model/Series} seriesModel\n         */\n        isSeriesFiltered: function (seriesModel) {\n            assertSeriesInitialized(this);\n            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n        },\n\n        /**\n         * @param {Function} cb\n         * @param {*} context\n         */\n        filterSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            var filteredSeries = filter(\n                this._componentsMap.series, cb, context\n            );\n            this._seriesIndices = createSeriesIndices(filteredSeries);\n        },\n\n        restoreData: function () {\n            var componentsMap = this._componentsMap;\n\n            this._seriesIndices = createSeriesIndices(componentsMap.series);\n\n            var componentTypes = [];\n            each(componentsMap, function (components, componentType) {\n                componentTypes.push(componentType);\n            });\n\n            ComponentModel.topologicalTravel(\n                componentTypes,\n                ComponentModel.getAllClassMainTypes(),\n                function (componentType, dependencies) {\n                    each(componentsMap[componentType], function (component) {\n                        component.restoreData();\n                    });\n                }\n            );\n        }\n\n    });\n\n    /**\n     * @inner\n     */\n    function mergeTheme(option, theme) {\n        zrUtil.each(theme, function (themeItem, name) {\n            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n            if (!ComponentModel.hasClass(name)) {\n                if (typeof themeItem === 'object') {\n                    option[name] = !option[name]\n                        ? zrUtil.clone(themeItem)\n                        : zrUtil.merge(option[name], themeItem, false);\n                }\n                else {\n                    if (option[name] == null) {\n                        option[name] = themeItem;\n                    }\n                }\n            }\n        });\n    }\n\n    function initBase(baseOption) {\n        baseOption = baseOption;\n\n        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n        this.option = {};\n        this.option[OPTION_INNER_KEY] = 1;\n\n        /**\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * Mapping between filtered series list and raw series list.\n         * key: filtered series indices, value: raw series indices.\n         * @type {Array.<nubmer>}\n         * @private\n         */\n        this._seriesIndices = null;\n\n        mergeTheme(baseOption, this._theme.option);\n\n        // TODO Needs clone when merging to the unexisted property\n        zrUtil.merge(baseOption, globalDefault, false);\n\n        this.mergeOption(baseOption);\n    }\n\n    /**\n     * @inner\n     * @param {Array.<string>|string} types model types\n     * @return {Object} key: {string} type, value: {Array.<Object>} models\n     */\n    function getComponentsByTypes(componentsMap, types) {\n        if (!zrUtil.isArray(types)) {\n            types = types ? [types] : [];\n        }\n\n        var ret = {};\n        each(types, function (type) {\n            ret[type] = (componentsMap[type] || []).slice();\n        });\n\n        return ret;\n    }\n\n    /**\n     * @inner\n     */\n    function determineSubType(mainType, newCptOption, existComponent) {\n        var subType = newCptOption.type\n            ? newCptOption.type\n            : existComponent\n            ? existComponent.subType\n            // Use determineSubType only when there is no existComponent.\n            : ComponentModel.determineSubType(mainType, newCptOption);\n\n        // tooltip, markline, markpoint may always has no subType\n        return subType;\n    }\n\n    /**\n     * @inner\n     */\n    function createSeriesIndices(seriesModels) {\n        return map(seriesModels, function (series) {\n            return series.componentIndex;\n        }) || [];\n    }\n\n    /**\n     * @inner\n     */\n    function filterBySubType(components, condition) {\n        // Using hasOwnProperty for restrict. Consider\n        // subType is undefined in user payload.\n        return condition.hasOwnProperty('subType')\n            ? filter(components, function (cpt) {\n                return cpt.subType === condition.subType;\n            })\n            : components;\n    }\n\n    /**\n     * @inner\n     */\n    function assertSeriesInitialized(ecModel) {\n        // Components that use _seriesIndices should depends on series component,\n        // which make sure that their initialization is after series.\n        if (__DEV__) {\n            if (!ecModel._seriesIndices) {\n                throw new Error('Series has not been initialized yet.');\n            }\n        }\n    }\n\n    zrUtil.mixin(GlobalModel, require('./mixin/colorPalette'));\n\n    module.exports = GlobalModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Global.js\n// module id = 403\n// module chunks = 0 1 2 3 4","/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var ComponentModel = require('./Component');\n    var each = zrUtil.each;\n    var clone = zrUtil.clone;\n    var map = zrUtil.map;\n    var merge = zrUtil.merge;\n\n    var QUERY_REG = /^(min|max)?(.+)$/;\n\n    /**\n     * TERM EXPLANATIONS:\n     *\n     * [option]:\n     *\n     *     An object that contains definitions of components. For example:\n     *     var option = {\n     *         title: {...},\n     *         legend: {...},\n     *         visualMap: {...},\n     *         series: [\n     *             {data: [...]},\n     *             {data: [...]},\n     *             ...\n     *         ]\n     *     };\n     *\n     * [rawOption]:\n     *\n     *     An object input to echarts.setOption. 'rawOption' may be an\n     *     'option', or may be an object contains multi-options. For example:\n     *     var option = {\n     *         baseOption: {\n     *             title: {...},\n     *             legend: {...},\n     *             series: [\n     *                 {data: [...]},\n     *                 {data: [...]},\n     *                 ...\n     *             ]\n     *         },\n     *         timeline: {...},\n     *         options: [\n     *             {title: {...}, series: {data: [...]}},\n     *             {title: {...}, series: {data: [...]}},\n     *             ...\n     *         ],\n     *         media: [\n     *             {\n     *                 query: {maxWidth: 320},\n     *                 option: {series: {x: 20}, visualMap: {show: false}}\n     *             },\n     *             {\n     *                 query: {minWidth: 320, maxWidth: 720},\n     *                 option: {series: {x: 500}, visualMap: {show: true}}\n     *             },\n     *             {\n     *                 option: {series: {x: 1200}, visualMap: {show: true}}\n     *             }\n     *         ]\n     *     };\n     *\n     * @alias module:echarts/model/OptionManager\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function OptionManager(api) {\n\n        /**\n         * @private\n         * @type {module:echarts/ExtensionAPI}\n         */\n        this._api = api;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._timelineOptions = [];\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._mediaList = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._mediaDefault;\n\n        /**\n         * -1, means default.\n         * empty means no media.\n         * @private\n         * @type {Array.<number>}\n         */\n        this._currentMediaIndices = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._optionBackup;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._newBaseOption;\n    }\n\n    // timeline.notMerge is not supported in ec3. Firstly there is rearly\n    // case that notMerge is needed. Secondly supporting 'notMerge' requires\n    // rawOption cloned and backuped when timeline changed, which does no\n    // good to performance. What's more, that both timeline and setOption\n    // method supply 'notMerge' brings complex and some problems.\n    // Consider this case:\n    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n    OptionManager.prototype = {\n\n        constructor: OptionManager,\n\n        /**\n         * @public\n         * @param {Object} rawOption Raw option.\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Array.<Function>} optionPreprocessorFuncs\n         * @return {Object} Init option\n         */\n        setOption: function (rawOption, optionPreprocessorFuncs) {\n            rawOption = clone(rawOption, true);\n\n            // FIXME\n            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n            var oldOptionBackup = this._optionBackup;\n            var newParsedOption = parseRawOption.call(\n                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup\n            );\n            this._newBaseOption = newParsedOption.baseOption;\n\n            // For setOption at second time (using merge mode);\n            if (oldOptionBackup) {\n                // Only baseOption can be merged.\n                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);\n\n                // For simplicity, timeline options and media options do not support merge,\n                // that is, if you `setOption` twice and both has timeline options, the latter\n                // timeline opitons will not be merged to the formers, but just substitude them.\n                if (newParsedOption.timelineOptions.length) {\n                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n                }\n                if (newParsedOption.mediaList.length) {\n                    oldOptionBackup.mediaList = newParsedOption.mediaList;\n                }\n                if (newParsedOption.mediaDefault) {\n                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n                }\n            }\n            else {\n                this._optionBackup = newParsedOption;\n            }\n        },\n\n        /**\n         * @param {boolean} isRecreate\n         * @return {Object}\n         */\n        mountOption: function (isRecreate) {\n            var optionBackup = this._optionBackup;\n\n            // TODO\n            // 如果没有reset功能则不clone。\n\n            this._timelineOptions = map(optionBackup.timelineOptions, clone);\n            this._mediaList = map(optionBackup.mediaList, clone);\n            this._mediaDefault = clone(optionBackup.mediaDefault);\n            this._currentMediaIndices = [];\n\n            return clone(isRecreate\n                // this._optionBackup.baseOption, which is created at the first `setOption`\n                // called, and is merged into every new option by inner method `mergeOption`\n                // each time `setOption` called, can be only used in `isRecreate`, because\n                // its reliability is under suspicion. In other cases option merge is\n                // performed by `model.mergeOption`.\n                ? optionBackup.baseOption : this._newBaseOption\n            );\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object}\n         */\n        getTimelineOption: function (ecModel) {\n            var option;\n            var timelineOptions = this._timelineOptions;\n\n            if (timelineOptions.length) {\n                // getTimelineOption can only be called after ecModel inited,\n                // so we can get currentIndex from timelineModel.\n                var timelineModel = ecModel.getComponent('timeline');\n                if (timelineModel) {\n                    option = clone(\n                        timelineOptions[timelineModel.getCurrentIndex()],\n                        true\n                    );\n                }\n            }\n\n            return option;\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Array.<Object>}\n         */\n        getMediaOption: function (ecModel) {\n            var ecWidth = this._api.getWidth();\n            var ecHeight = this._api.getHeight();\n            var mediaList = this._mediaList;\n            var mediaDefault = this._mediaDefault;\n            var indices = [];\n            var result = [];\n\n            // No media defined.\n            if (!mediaList.length && !mediaDefault) {\n                return result;\n            }\n\n            // Multi media may be applied, the latter defined media has higher priority.\n            for (var i = 0, len = mediaList.length; i < len; i++) {\n                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n                    indices.push(i);\n                }\n            }\n\n            // FIXME\n            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n            if (!indices.length && mediaDefault) {\n                indices = [-1];\n            }\n\n            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n                result = map(indices, function (index) {\n                    return clone(\n                        index === -1 ? mediaDefault.option : mediaList[index].option\n                    );\n                });\n            }\n            // Otherwise return nothing.\n\n            this._currentMediaIndices = indices;\n\n            return result;\n        }\n    };\n\n    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n        var timelineOptions = [];\n        var mediaList = [];\n        var mediaDefault;\n        var baseOption;\n\n        // Compatible with ec2.\n        var timelineOpt = rawOption.timeline;\n\n        if (rawOption.baseOption) {\n            baseOption = rawOption.baseOption;\n        }\n\n        // For timeline\n        if (timelineOpt || rawOption.options) {\n            baseOption = baseOption || {};\n            timelineOptions = (rawOption.options || []).slice();\n        }\n\n        // For media query\n        if (rawOption.media) {\n            baseOption = baseOption || {};\n            var media = rawOption.media;\n            each(media, function (singleMedia) {\n                if (singleMedia && singleMedia.option) {\n                    if (singleMedia.query) {\n                        mediaList.push(singleMedia);\n                    }\n                    else if (!mediaDefault) {\n                        // Use the first media default.\n                        mediaDefault = singleMedia;\n                    }\n                }\n            });\n        }\n\n        // For normal option\n        if (!baseOption) {\n            baseOption = rawOption;\n        }\n\n        // Set timelineOpt to baseOption in ec3,\n        // which is convenient for merge option.\n        if (!baseOption.timeline) {\n            baseOption.timeline = timelineOpt;\n        }\n\n        // Preprocess.\n        each([baseOption].concat(timelineOptions)\n            .concat(zrUtil.map(mediaList, function (media) {\n                return media.option;\n            })),\n            function (option) {\n                each(optionPreprocessorFuncs, function (preProcess) {\n                    preProcess(option, isNew);\n                });\n            }\n        );\n\n        return {\n            baseOption: baseOption,\n            timelineOptions: timelineOptions,\n            mediaDefault: mediaDefault,\n            mediaList: mediaList\n        };\n    }\n\n    /**\n     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n     * Support: width, height, aspectRatio\n     * Can use max or min as prefix.\n     */\n    function applyMediaQuery(query, ecWidth, ecHeight) {\n        var realMap = {\n            width: ecWidth,\n            height: ecHeight,\n            aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n        };\n\n        var applicatable = true;\n\n        zrUtil.each(query, function (value, attr) {\n            var matched = attr.match(QUERY_REG);\n\n            if (!matched || !matched[1] || !matched[2]) {\n                return;\n            }\n\n            var operator = matched[1];\n            var realAttr = matched[2].toLowerCase();\n\n            if (!compare(realMap[realAttr], value, operator)) {\n                applicatable = false;\n            }\n        });\n\n        return applicatable;\n    }\n\n    function compare(real, expect, operator) {\n        if (operator === 'min') {\n            return real >= expect;\n        }\n        else if (operator === 'max') {\n            return real <= expect;\n        }\n        else { // Equals\n            return real === expect;\n        }\n    }\n\n    function indicesEquals(indices1, indices2) {\n        // indices is always order by asc and has only finite number.\n        return indices1.join(',') === indices2.join(',');\n    }\n\n    /**\n     * Consider case:\n     * `chart.setOption(opt1);`\n     * Then user do some interaction like dataZoom, dataView changing.\n     * `chart.setOption(opt2);`\n     * Then user press 'reset button' in toolbox.\n     *\n     * After doing that all of the interaction effects should be reset, the\n     * chart should be the same as the result of invoke\n     * `chart.setOption(opt1); chart.setOption(opt2);`.\n     *\n     * Although it is not able ensure that\n     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n     * `chart.setOption(merge(opt1, opt2));` exactly,\n     * this might be the only simple way to implement that feature.\n     *\n     * MEMO: We've considered some other approaches:\n     * 1. Each model handle its self restoration but not uniform treatment.\n     *     (Too complex in logic and error-prone)\n     * 2. Use a shadow ecModel. (Performace expensive)\n     */\n    function mergeOption(oldOption, newOption) {\n        newOption = newOption || {};\n\n        each(newOption, function (newCptOpt, mainType) {\n            if (newCptOpt == null) {\n                return;\n            }\n\n            var oldCptOpt = oldOption[mainType];\n\n            if (!ComponentModel.hasClass(mainType)) {\n                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n            }\n            else {\n                newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n\n                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n\n                oldOption[mainType] = map(mapResult, function (item) {\n                    return (item.option && item.exist)\n                        ? merge(item.exist, item.option, true)\n                        : (item.exist || item.option);\n                });\n            }\n        });\n    }\n\n    module.exports = OptionManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/OptionManager.js\n// module id = 404\n// module chunks = 0 1 2 3 4","\n    var platform = '';\n    // Navigator not exists in node\n    if (typeof navigator !== 'undefined') {\n        platform = navigator.platform || '';\n    }\n    module.exports = {\n        // 全图默认背景\n        // backgroundColor: 'rgba(0,0,0,0)',\n\n        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n        // 浅色\n        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n        // 深色\n        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\n\n        // 默认需要 Grid 配置项\n        // grid: {},\n        // 主题，主题\n        textStyle: {\n            // color: '#000',\n            // decoration: 'none',\n            // PENDING\n            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n            // fontFamily: 'Arial, Verdana, sans-serif',\n            fontSize: 12,\n            fontStyle: 'normal',\n            fontWeight: 'normal'\n        },\n\n        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n        // Default is source-over\n        blendMode: null,\n\n        animation: true,\n        animationDuration: 1000,\n        animationDurationUpdate: 300,\n        animationEasing: 'exponentialOut',\n        animationEasingUpdate: 'cubicOut',\n\n        animationThreshold: 2000,\n        // Configuration for progressive/incremental rendering\n        progressiveThreshold: 3000,\n        progressive: 400,\n\n        // Threshold of if use single hover layer to optimize.\n        // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n        // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n        // which is unexpected.\n        // see example <echarts/test/heatmap-large.html>.\n        hoverLayerThreshold: 3000\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/globalDefault.js\n// module id = 405\n// module chunks = 0 1 2 3 4","\n    module.exports = {\n        getAreaStyle: require('./makeStyleMapper')(\n            [\n                ['fill', 'color'],\n                ['shadowBlur'],\n                ['shadowOffsetX'],\n                ['shadowOffsetY'],\n                ['opacity'],\n                ['shadowColor']\n            ]\n        )\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/areaStyle.js\n// module id = 406\n// module chunks = 0 1 2 3 4","\n\n    module.exports = {\n        getBoxLayoutParams: function () {\n            return {\n                left: this.get('left'),\n                top: this.get('top'),\n                right: this.get('right'),\n                bottom: this.get('bottom'),\n                width: this.get('width'),\n                height: this.get('height')\n            };\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/boxLayout.js\n// module id = 407\n// module chunks = 0 1 2 3 4","\n    var getItemStyle = require('./makeStyleMapper')(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor'],\n            ['textPosition'],\n            ['textAlign']\n        ]\n    );\n    module.exports = {\n        getItemStyle: function (excludes) {\n            var style = getItemStyle.call(this, excludes);\n            var lineDash = this.getBorderLineDash();\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getBorderLineDash: function () {\n            var lineType = this.get('borderType');\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/itemStyle.js\n// module id = 408\n// module chunks = 0 1 2 3 4","\n    var getLineStyle = require('./makeStyleMapper')(\n        [\n            ['lineWidth', 'width'],\n            ['stroke', 'color'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getLineStyle: function (excludes) {\n            var style = getLineStyle.call(this, excludes);\n            var lineDash = this.getLineDash(style.lineWidth);\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getLineDash: function (lineWidth) {\n            if (lineWidth == null) {\n                lineWidth = 1;\n            }\n            var lineType = this.get('type');\n            var dotSize = Math.max(lineWidth, 2);\n            var dashSize = lineWidth * 4;\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize]);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/lineStyle.js\n// module id = 409\n// module chunks = 0 1 2 3 4","\n\n    var textContain = require('zrender/lib/contain/text');\n\n    function getShallow(model, path) {\n        return model && model.getShallow(path);\n    }\n\n    module.exports = {\n        /**\n         * Get color property or get color from option.textStyle.color\n         * @return {string}\n         */\n        getTextColor: function () {\n            var ecModel = this.ecModel;\n            return this.getShallow('color')\n                || (ecModel && ecModel.get('textStyle.color'));\n        },\n\n        /**\n         * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n         * @return {string}\n         */\n        getFont: function () {\n            var ecModel = this.ecModel;\n            var gTextStyleModel = ecModel && ecModel.getModel('textStyle');\n            return [\n                // FIXME in node-canvas fontWeight is before fontStyle\n                this.getShallow('fontStyle') || getShallow(gTextStyleModel, 'fontStyle'),\n                this.getShallow('fontWeight') || getShallow(gTextStyleModel, 'fontWeight'),\n                (this.getShallow('fontSize') || getShallow(gTextStyleModel, 'fontSize') || 12) + 'px',\n                this.getShallow('fontFamily') || getShallow(gTextStyleModel, 'fontFamily') || 'sans-serif'\n            ].join(' ');\n        },\n\n        getTextRect: function (text) {\n            return textContain.getBoundingRect(\n                text,\n                this.getFont(),\n                this.getShallow('align'),\n                this.getShallow('baseline')\n            );\n        },\n\n        truncateText: function (text, containerWidth, ellipsis, options) {\n            return textContain.truncateText(\n                text, containerWidth, this.getFont(), ellipsis, options\n            );\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/textStyle.js\n// module id = 410\n// module chunks = 0 1 2 3 4","// Compatitable with 2.0\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var compatStyle = require('./helper/compatStyle');\n\n    function get(opt, path) {\n        path = path.split(',');\n        var obj = opt;\n        for (var i = 0; i < path.length; i++) {\n            obj = obj && obj[path[i]];\n            if (obj == null) {\n                break;\n            }\n        }\n        return obj;\n    }\n\n    function set(opt, path, val, overwrite) {\n        path = path.split(',');\n        var obj = opt;\n        var key;\n        for (var i = 0; i < path.length - 1; i++) {\n            key = path[i];\n            if (obj[key] == null) {\n                obj[key] = {};\n            }\n            obj = obj[key];\n        }\n        if (overwrite || obj[path[i]] == null) {\n            obj[path[i]] = val;\n        }\n    }\n\n    function compatLayoutProperties(option) {\n        each(LAYOUT_PROPERTIES, function (prop) {\n            if (prop[0] in option && !(prop[1] in option)) {\n                option[prop[1]] = option[prop[0]];\n            }\n        });\n    }\n\n    var LAYOUT_PROPERTIES = [\n        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']\n    ];\n\n    var COMPATITABLE_COMPONENTS = [\n        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'\n    ];\n\n    var COMPATITABLE_SERIES = [\n        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',\n        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',\n        'pie', 'radar', 'sankey', 'scatter', 'treemap'\n    ];\n\n    var each = zrUtil.each;\n\n    module.exports = function (option) {\n        each(option.series, function (seriesOpt) {\n            if (!zrUtil.isObject(seriesOpt)) {\n                return;\n            }\n\n            var seriesType = seriesOpt.type;\n\n            compatStyle(seriesOpt);\n\n            if (seriesType === 'pie' || seriesType === 'gauge') {\n                if (seriesOpt.clockWise != null) {\n                    seriesOpt.clockwise = seriesOpt.clockWise;\n                }\n            }\n            if (seriesType === 'gauge') {\n                var pointerColor = get(seriesOpt, 'pointer.color');\n                pointerColor != null\n                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n            }\n\n            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n                    compatLayoutProperties(seriesOpt);\n                    break;\n                }\n            }\n        });\n\n        // dataRange has changed to visualMap\n        if (option.dataRange) {\n            option.visualMap = option.dataRange;\n        }\n\n        each(COMPATITABLE_COMPONENTS, function (componentName) {\n            var options = option[componentName];\n            if (options) {\n                if (!zrUtil.isArray(options)) {\n                    options = [options];\n                }\n                each(options, function (option) {\n                    compatLayoutProperties(option);\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/preprocessor/backwardCompat.js\n// module id = 411\n// module chunks = 0 1 2 3 4","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var POSSIBLE_STYLES = [\n        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',\n        'chordStyle', 'label', 'labelLine'\n    ];\n\n    function compatItemStyle(opt) {\n        var itemStyleOpt = opt && opt.itemStyle;\n        if (itemStyleOpt) {\n            zrUtil.each(POSSIBLE_STYLES, function (styleName) {\n                var normalItemStyleOpt = itemStyleOpt.normal;\n                var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n                if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].normal) {\n                        opt[styleName].normal = normalItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n                    }\n                    normalItemStyleOpt[styleName] = null;\n                }\n                if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].emphasis) {\n                        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n                    }\n                    emphasisItemStyleOpt[styleName] = null;\n                }\n            });\n        }\n    }\n\n    module.exports = function (seriesOpt) {\n        if (!seriesOpt) {\n            return;\n        }\n        compatItemStyle(seriesOpt);\n        compatItemStyle(seriesOpt.markPoint);\n        compatItemStyle(seriesOpt.markLine);\n        var data = seriesOpt.data;\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                compatItemStyle(data[i]);\n            }\n            // mark point data\n            var markPoint = seriesOpt.markPoint;\n            if (markPoint && markPoint.data) {\n                var mpData = markPoint.data;\n                for (var i = 0; i < mpData.length; i++) {\n                    compatItemStyle(mpData[i]);\n                }\n            }\n            // mark line data\n            var markLine = seriesOpt.markLine;\n            if (markLine && markLine.data) {\n                var mlData = markLine.data;\n                for (var i = 0; i < mlData.length; i++) {\n                    if (zrUtil.isArray(mlData[i])) {\n                        compatItemStyle(mlData[i][0]);\n                        compatItemStyle(mlData[i][1]);\n                    }\n                    else {\n                        compatItemStyle(mlData[i]);\n                    }\n                }\n            }\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/preprocessor/helper/compatStyle.js\n// module id = 412\n// module chunks = 0 1 2 3 4","\n    var samplers = {\n        average: function (frame) {\n            var sum = 0;\n            var count = 0;\n            for (var i = 0; i < frame.length; i++) {\n                if (!isNaN(frame[i])) {\n                    sum += frame[i];\n                    count++;\n                }\n            }\n            // Return NaN if count is 0\n            return count === 0 ? NaN : sum / count;\n        },\n        sum: function (frame) {\n            var sum = 0;\n            for (var i = 0; i < frame.length; i++) {\n                // Ignore NaN\n                sum += frame[i] || 0;\n            }\n            return sum;\n        },\n        max: function (frame) {\n            var max = -Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] > max && (max = frame[i]);\n            }\n            return max;\n        },\n        min: function (frame) {\n            var min = Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] < min && (min = frame[i]);\n            }\n            return min;\n        },\n        // TODO\n        // Median\n        nearest: function (frame) {\n            return frame[0];\n        }\n    };\n\n    var indexSampler = function (frame, value) {\n        return Math.round(frame.length / 2);\n    };\n    module.exports = function (seriesType, ecModel, api) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var sampling = seriesModel.get('sampling');\n            var coordSys = seriesModel.coordinateSystem;\n            // Only cartesian2d support down sampling\n            if (coordSys.type === 'cartesian2d' && sampling) {\n                var baseAxis = coordSys.getBaseAxis();\n                var valueAxis = coordSys.getOtherAxis(baseAxis);\n                var extent = baseAxis.getExtent();\n                // Coordinste system has been resized\n                var size = extent[1] - extent[0];\n                var rate = Math.round(data.count() / size);\n                if (rate > 1) {\n                    var sampler;\n                    if (typeof sampling === 'string') {\n                        sampler = samplers[sampling];\n                    }\n                    else if (typeof sampling === 'function') {\n                        sampler = sampling;\n                    }\n                    if (sampler) {\n                        data = data.downSample(\n                            valueAxis.dim, 1 / rate, sampler, indexSampler\n                        );\n                        seriesModel.setData(data);\n                    }\n                }\n            }\n        }, this);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/processor/dataSample.js\n// module id = 413\n// module chunks = 0 1 2 3 4","/**\n * Log scale\n * @module echarts/scale/Log\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Scale = require('./Scale');\n    var numberUtil = require('../util/number');\n\n    // Use some method of IntervalScale\n    var IntervalScale = require('./Interval');\n\n    var scaleProto = Scale.prototype;\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n    var mathPow = Math.pow;\n\n    var mathLog = Math.log;\n\n    var LogScale = Scale.extend({\n\n        type: 'log',\n\n        base: 10,\n\n        $constructor: function () {\n            Scale.apply(this, arguments);\n            this._originalScale = new IntervalScale();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            var originalScale = this._originalScale;\n            var extent = this._extent;\n            var originalExtent = originalScale.getExtent();\n\n            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n                var powVal = numberUtil.round(mathPow(this.base, val));\n\n                // Fix #4158\n                powVal = (val === extent[0] && originalScale.__fixMin)\n                    ? fixRoundingError(powVal, originalExtent[0])\n                    : powVal;\n                powVal = (val === extent[1] && originalScale.__fixMax)\n                    ? fixRoundingError(powVal, originalExtent[1])\n                    : powVal;\n\n                return powVal;\n            }, this);\n        },\n\n        /**\n         * @param {number} val\n         * @return {string}\n         */\n        getLabel: intervalScaleProto.getLabel,\n\n        /**\n         * @param  {number} val\n         * @return {number}\n         */\n        scale: function (val) {\n            val = scaleProto.scale.call(this, val);\n            return mathPow(this.base, val);\n        },\n\n        /**\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var base = this.base;\n            start = mathLog(start) / mathLog(base);\n            end = mathLog(end) / mathLog(base);\n            intervalScaleProto.setExtent.call(this, start, end);\n        },\n\n        /**\n         * @return {number} end\n         */\n        getExtent: function () {\n            var base = this.base;\n            var extent = scaleProto.getExtent.call(this);\n            extent[0] = mathPow(base, extent[0]);\n            extent[1] = mathPow(base, extent[1]);\n\n            // Fix #4158\n            var originalScale = this._originalScale;\n            var originalExtent = originalScale.getExtent();\n            originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n            originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n\n            return extent;\n        },\n\n        /**\n         * @param  {Array.<number>} extent\n         */\n        unionExtent: function (extent) {\n            this._originalScale.unionExtent(extent);\n\n            var base = this.base;\n            extent[0] = mathLog(extent[0]) / mathLog(base);\n            extent[1] = mathLog(extent[1]) / mathLog(base);\n            scaleProto.unionExtent.call(this, extent);\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, true, function (val) {\n                return val > 0;\n            }));\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         * @param  {number} [approxTickNum = 10] Given approx tick number\n         */\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (span === Infinity || span <= 0) {\n                return;\n            }\n\n            var interval = numberUtil.quantity(span);\n            var err = approxTickNum / span * interval;\n\n            // Filter ticks to get closer to the desired count.\n            if (err <= 0.5) {\n                interval *= 10;\n            }\n\n            // Interval should be integer\n            while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n                interval *= 10;\n            }\n\n            var niceExtent = [\n                numberUtil.round(mathCeil(extent[0] / interval) * interval),\n                numberUtil.round(mathFloor(extent[1] / interval) * interval)\n            ];\n\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {number} [approxTickNum = 10] Given approx tick number\n         * @param {boolean} [fixMin=false]\n         * @param {boolean} [fixMax=false]\n         */\n        niceExtent: function (splitNumber, fixMin, fixMax) {\n            intervalScaleProto.niceExtent.call(this, splitNumber, fixMin, fixMax);\n\n            var originalScale = this._originalScale;\n            originalScale.__fixMin = fixMin;\n            originalScale.__fixMax = fixMax;\n        }\n\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        LogScale.prototype[methodName] = function (val) {\n            val = mathLog(val) / mathLog(this.base);\n            return scaleProto[methodName].call(this, val);\n        };\n    });\n\n    LogScale.create = function () {\n        return new LogScale();\n    };\n\n    function fixRoundingError(val, originalVal) {\n        return roundingErrorFix(val, getPrecisionSafe(originalVal));\n    }\n\n    module.exports = LogScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Log.js\n// module id = 414\n// module chunks = 0 1 2 3 4","/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n\n// FIXME only one data\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Scale = require('./Scale');\n\n    var scaleProto = Scale.prototype;\n\n    var OrdinalScale = Scale.extend({\n\n        type: 'ordinal',\n\n        init: function (data, extent) {\n            this._data = data;\n            this._extent = extent || [0, data.length - 1];\n        },\n\n        parse: function (val) {\n            return typeof val === 'string'\n                ? zrUtil.indexOf(this._data, val)\n                // val might be float.\n                : Math.round(val);\n        },\n\n        contain: function (rank) {\n            rank = this.parse(rank);\n            return scaleProto.contain.call(this, rank)\n                && this._data[rank] != null;\n        },\n\n        /**\n         * Normalize given rank or name to linear [0, 1]\n         * @param {number|string} [val]\n         * @return {number}\n         */\n        normalize: function (val) {\n            return scaleProto.normalize.call(this, this.parse(val));\n        },\n\n        scale: function (val) {\n            return Math.round(scaleProto.scale.call(this, val));\n        },\n\n        /**\n         * @return {Array}\n         */\n        getTicks: function () {\n            var ticks = [];\n            var extent = this._extent;\n            var rank = extent[0];\n\n            while (rank <= extent[1]) {\n                ticks.push(rank);\n                rank++;\n            }\n\n            return ticks;\n        },\n\n        /**\n         * Get item on rank n\n         * @param {number} n\n         * @return {string}\n         */\n        getLabel: function (n) {\n            return this._data[n];\n        },\n\n        /**\n         * @return {number}\n         */\n        count: function () {\n            return this._extent[1] - this._extent[0] + 1;\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, false));\n        },\n\n        niceTicks: zrUtil.noop,\n        niceExtent: zrUtil.noop\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    OrdinalScale.create = function () {\n        return new OrdinalScale();\n    };\n\n    module.exports = OrdinalScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Ordinal.js\n// module id = 415\n// module chunks = 0 1 2 3 4","/**\n * Interval scale\n * @module echarts/coord/scale/Time\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('../util/number');\n    var formatUtil = require('../util/format');\n\n    var IntervalScale = require('./Interval');\n\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var mathCeil = Math.ceil;\n    var mathFloor = Math.floor;\n    var ONE_SECOND = 1000;\n    var ONE_MINUTE = ONE_SECOND * 60;\n    var ONE_HOUR = ONE_MINUTE * 60;\n    var ONE_DAY = ONE_HOUR * 24;\n\n    // FIXME 公用？\n    var bisect = function (a, x, lo, hi) {\n        while (lo < hi) {\n            var mid = lo + hi >>> 1;\n            if (a[mid][2] < x) {\n                lo = mid + 1;\n            }\n            else {\n                hi  = mid;\n            }\n        }\n        return lo;\n    };\n\n    /**\n     * @alias module:echarts/coord/scale/Time\n     * @constructor\n     */\n    var TimeScale = IntervalScale.extend({\n        type: 'time',\n\n        // Overwrite\n        getLabel: function (val) {\n            var stepLvl = this._stepLvl;\n\n            var date = new Date(val);\n\n            return formatUtil.formatTime(stepLvl[0], date);\n        },\n\n        // Overwrite\n        niceExtent: function (approxTickNum, fixMin, fixMax) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                // Expand extent\n                extent[0] -= ONE_DAY;\n                extent[1] += ONE_DAY;\n            }\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (extent[1] === -Infinity && extent[0] === Infinity) {\n                var d = new Date();\n                extent[1] = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                extent[0] = extent[1] - ONE_DAY;\n            }\n\n            this.niceTicks(approxTickNum);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!fixMin) {\n                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!fixMax) {\n                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n            }\n        },\n\n        // Overwrite\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            var approxInterval = span / approxTickNum;\n            var scaleLevelsLen = scaleLevels.length;\n            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n\n            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n            var interval = level[2];\n            // Same with interval scale if span is much larger than 1 year\n            if (level[0] === 'year') {\n                var yearSpan = span / interval;\n\n                // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n                // var niceYearSpan = numberUtil.nice(yearSpan, false);\n                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n\n                interval *= yearStep;\n            }\n\n            var niceExtent = [\n                mathCeil(extent[0] / interval) * interval,\n                mathFloor(extent[1] / interval) * interval\n            ];\n\n            this._stepLvl = level;\n            // Interval will be used in getTicks\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        parse: function (val) {\n            // val might be float.\n            return +numberUtil.parseDate(val);\n        }\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        TimeScale.prototype[methodName] = function (val) {\n            return intervalScaleProto[methodName].call(this, this.parse(val));\n        };\n    });\n\n    // Steps from d3\n    var scaleLevels = [\n        // Format       step    interval\n        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s\n        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s\n        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s\n        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s\n        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s\n        ['hh:mm\\nMM-dd',1,      ONE_MINUTE],          // 1m\n        ['hh:mm\\nMM-dd',5,      ONE_MINUTE * 5],      // 5m\n        ['hh:mm\\nMM-dd',10,     ONE_MINUTE * 10],     // 10m\n        ['hh:mm\\nMM-dd',15,     ONE_MINUTE * 15],     // 15m\n        ['hh:mm\\nMM-dd',30,     ONE_MINUTE * 30],     // 30m\n        ['hh:mm\\nMM-dd',1,      ONE_HOUR],        // 1h\n        ['hh:mm\\nMM-dd',2,      ONE_HOUR * 2],    // 2h\n        ['hh:mm\\nMM-dd',6,      ONE_HOUR * 6],    // 6h\n        ['hh:mm\\nMM-dd',12,     ONE_HOUR * 12],   // 12h\n        ['MM-dd\\nyyyy', 1,      ONE_DAY],   // 1d\n        ['week',        7,      ONE_DAY * 7],        // 7d\n        ['month',       1,      ONE_DAY * 31],       // 1M\n        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M\n        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M\n        ['year',        1,      ONE_DAY * 380]       // 1Y\n    ];\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    TimeScale.create = function () {\n        return new TimeScale();\n    };\n\n    module.exports = TimeScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Time.js\n// module id = 416\n// module chunks = 0 1 2 3 4","\n    var Gradient = require('zrender/lib/graphic/Gradient');\n    module.exports = function (ecModel) {\n        function encodeColor(seriesModel) {\n            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n            var data = seriesModel.getData();\n            var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color\n\n            // FIXME Set color function or use the platte color\n            data.setVisual('color', color);\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof color === 'function' && !(color instanceof Gradient)) {\n                    data.each(function (idx) {\n                        data.setItemVisual(\n                            idx, 'color', color(seriesModel.getDataParams(idx))\n                        );\n                    });\n                }\n\n                // itemStyle in each data item\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var color = itemModel.get(colorAccessPath, true);\n                    if (color != null) {\n                        data.setItemVisual(idx, 'color', color);\n                    }\n                });\n            }\n        }\n        ecModel.eachRawSeries(encodeColor);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/visual/seriesColor.js\n// module id = 417\n// module chunks = 0 1 2 3 4","\n\n    module.exports = function (seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\n\n        // Encoding visual for all series include which is filtered for legend drawing\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n\n            var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n            var symbolSize = seriesModel.get('symbolSize');\n\n            data.setVisual({\n                legendSymbol: legendSymbol || symbolType,\n                symbol: symbolType,\n                symbolSize: symbolSize\n            });\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof symbolSize === 'function') {\n                    data.each(function (idx) {\n                        var rawValue = seriesModel.getRawValue(idx);\n                        // FIXME\n                        var params = seriesModel.getDataParams(idx);\n                        data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n                    });\n                }\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var itemSymbolType = itemModel.getShallow('symbol', true);\n                    var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n                    // If has item symbol\n                    if (itemSymbolType != null) {\n                        data.setItemVisual(idx, 'symbol', itemSymbolType);\n                    }\n                    if (itemSymbolSize != null) {\n                        // PENDING Transform symbolSize ?\n                        data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n                    }\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/visual/symbol.js\n// module id = 418\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\n\n\n    var util = require('./core/util');\n    var Draggable = require('./mixin/Draggable');\n\n    var Eventful = require('./mixin/Eventful');\n\n    function makeEventPacket(eveType, target, event) {\n        return {\n            type: eveType,\n            event: event,\n            target: target,\n            cancelBubble: false,\n            offsetX: event.zrX,\n            offsetY: event.zrY,\n            gestureEvent: event.gestureEvent,\n            pinchX: event.pinchX,\n            pinchY: event.pinchY,\n            pinchScale: event.pinchScale,\n            wheelDelta: event.zrDelta,\n            zrByTouch: event.zrByTouch\n        };\n    }\n\n    function EmptyProxy () {}\n    EmptyProxy.prototype.dispose = function () {};\n\n    var handlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n    /**\n     * @alias module:zrender/Handler\n     * @constructor\n     * @extends module:zrender/mixin/Eventful\n     * @param {module:zrender/Storage} storage Storage instance.\n     * @param {module:zrender/Painter} painter Painter instance.\n     * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n     * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n     */\n    var Handler = function(storage, painter, proxy, painterRoot) {\n        Eventful.call(this);\n\n        this.storage = storage;\n\n        this.painter = painter;\n\n        this.painterRoot = painterRoot;\n\n        proxy = proxy || new EmptyProxy();\n\n        /**\n         * Proxy of event. can be Dom, WebGLSurface, etc.\n         */\n        this.proxy = proxy;\n\n        // Attach handler\n        proxy.handler = this;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._hovered;\n\n        /**\n         * @private\n         * @type {Date}\n         */\n        this._lastTouchMoment;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastX;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastY;\n\n\n        Draggable.call(this);\n\n        util.each(handlerNames, function (name) {\n            proxy.on && proxy.on(name, this[name], this);\n        }, this);\n    };\n\n    Handler.prototype = {\n\n        constructor: Handler,\n\n        mousemove: function (event) {\n            var x = event.zrX;\n            var y = event.zrY;\n\n            var hovered = this.findHover(x, y, null);\n            var lastHovered = this._hovered;\n            var proxy = this.proxy;\n\n            this._hovered = hovered;\n\n            proxy.setCursor && proxy.setCursor(hovered ? hovered.cursor : 'default');\n\n            // Mouse out on previous hovered element\n            if (lastHovered && hovered !== lastHovered && lastHovered.__zr) {\n                this.dispatchToElement(lastHovered, 'mouseout', event);\n            }\n\n            // Mouse moving on one element\n            this.dispatchToElement(hovered, 'mousemove', event);\n\n            // Mouse over on a new element\n            if (hovered && hovered !== lastHovered) {\n                this.dispatchToElement(hovered, 'mouseover', event);\n            }\n        },\n\n        mouseout: function (event) {\n            this.dispatchToElement(this._hovered, 'mouseout', event);\n\n            // There might be some doms created by upper layer application\n            // at the same level of painter.getViewportRoot() (e.g., tooltip\n            // dom created by echarts), where 'globalout' event should not\n            // be triggered when mouse enters these doms. (But 'mouseout'\n            // should be triggered at the original hovered element as usual).\n            var element = event.toElement || event.relatedTarget;\n            var innerDom;\n            do {\n                element = element && element.parentNode;\n            }\n            while (element && element.nodeType != 9 && !(\n                innerDom = element === this.painterRoot\n            ));\n\n            !innerDom && this.trigger('globalout', {event: event});\n        },\n\n        /**\n         * Resize\n         */\n        resize: function (event) {\n            this._hovered = null;\n        },\n\n        /**\n         * Dispatch event\n         * @param {string} eventName\n         * @param {event=} eventArgs\n         */\n        dispatch: function (eventName, eventArgs) {\n            var handler = this[eventName];\n            handler && handler.call(this, eventArgs);\n        },\n\n        /**\n         * Dispose\n         */\n        dispose: function () {\n\n            this.proxy.dispose();\n\n            this.storage =\n            this.proxy =\n            this.painter = null;\n        },\n\n        /**\n         * 设置默认的cursor style\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(cursorStyle);\n        },\n\n        /**\n         * 事件分发代理\n         *\n         * @private\n         * @param {Object} targetEl 目标图形元素\n         * @param {string} eventName 事件名称\n         * @param {Object} event 事件对象\n         */\n        dispatchToElement: function (targetEl, eventName, event) {\n            var eventHandler = 'on' + eventName;\n            var eventPacket = makeEventPacket(eventName, targetEl, event);\n\n            var el = targetEl;\n\n            while (el) {\n                el[eventHandler]\n                    && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n\n                el.trigger(eventName, eventPacket);\n\n                el = el.parent;\n\n                if (eventPacket.cancelBubble) {\n                    break;\n                }\n            }\n\n            if (!eventPacket.cancelBubble) {\n                // 冒泡到顶级 zrender 对象\n                this.trigger(eventName, eventPacket);\n                // 分发事件到用户自定义层\n                // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n                this.painter && this.painter.eachOtherLayer(function (layer) {\n                    if (typeof(layer[eventHandler]) == 'function') {\n                        layer[eventHandler].call(layer, eventPacket);\n                    }\n                    if (layer.trigger) {\n                        layer.trigger(eventName, eventPacket);\n                    }\n                });\n            }\n        },\n\n        /**\n         * @private\n         * @param {number} x\n         * @param {number} y\n         * @param {module:zrender/graphic/Displayable} exclude\n         * @method\n         */\n        findHover: function(x, y, exclude) {\n            var list = this.storage.getDisplayList();\n            for (var i = list.length - 1; i >= 0 ; i--) {\n                if (!list[i].silent\n                 && list[i] !== exclude\n                 // getDisplayList may include ignored item in VML mode\n                 && !list[i].ignore\n                 && isHover(list[i], x, y)) {\n                    return list[i];\n                }\n            }\n        }\n    };\n\n    // Common handlers\n    util.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        Handler.prototype[name] = function (event) {\n            // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n            var hovered = this.findHover(event.zrX, event.zrY, null);\n\n            if (name === 'mousedown') {\n                this._downel = hovered;\n                // In case click triggered before mouseup\n                this._upel = hovered;\n            }\n            else if (name === 'mosueup') {\n                this._upel = hovered;\n            }\n            else if (name === 'click') {\n                if (this._downel !== this._upel) {\n                    return;\n                }\n            }\n\n            this.dispatchToElement(hovered, name, event);\n        };\n    });\n\n    function isHover(displayable, x, y) {\n        if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n            var el = displayable;\n            while (el) {\n                // If ancestor is silent or clipped by ancestor\n                if (el.silent || (el.clipPath && !el.clipPath.contain(x, y)))  {\n                    return false;\n                }\n                el = el.parent;\n            }\n            return true;\n        }\n\n        return false;\n    }\n\n    util.mixin(Handler, Eventful);\n    util.mixin(Handler, Draggable);\n\n    module.exports = Handler;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Handler.js\n// module id = 419\n// module chunks = 0 1 2 3 4","/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var util = require('./core/util');\n    var config = require('./config');\n    var Style = require('./graphic/Style');\n    var Pattern = require('./graphic/Pattern');\n\n    function returnFalse() {\n        return false;\n    }\n\n    /**\n     * 创建dom\n     *\n     * @inner\n     * @param {string} id dom id 待用\n     * @param {string} type dom type，such as canvas, div etc.\n     * @param {Painter} painter painter instance\n     * @param {number} number\n     */\n    function createDom(id, type, painter, dpr) {\n        var newDom = document.createElement(type);\n        var width = painter.getWidth();\n        var height = painter.getHeight();\n\n        var newDomStyle = newDom.style;\n        // 没append呢，请原谅我这样写，清晰~\n        newDomStyle.position = 'absolute';\n        newDomStyle.left = 0;\n        newDomStyle.top = 0;\n        newDomStyle.width = width + 'px';\n        newDomStyle.height = height + 'px';\n        newDom.width = width * dpr;\n        newDom.height = height * dpr;\n\n        // id不作为索引用，避免可能造成的重名，定义为私有属性\n        newDom.setAttribute('data-zr-dom-id', id);\n        return newDom;\n    }\n\n    /**\n     * @alias module:zrender/Layer\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @param {string} id\n     * @param {module:zrender/Painter} painter\n     * @param {number} [dpr]\n     */\n    var Layer = function(id, painter, dpr) {\n        var dom;\n        dpr = dpr || config.devicePixelRatio;\n        if (typeof id === 'string') {\n            dom = createDom(id, 'canvas', painter, dpr);\n        }\n        // Not using isDom because in node it will return false\n        else if (util.isObject(id)) {\n            dom = id;\n            id = dom.id;\n        }\n        this.id = id;\n        this.dom = dom;\n\n        var domStyle = dom.style;\n        if (domStyle) { // Not in node\n            dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n            domStyle['-webkit-user-select'] = 'none';\n            domStyle['user-select'] = 'none';\n            domStyle['-webkit-touch-callout'] = 'none';\n            domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n            domStyle['padding'] = 0;\n            domStyle['margin'] = 0;\n            domStyle['border-width'] = 0;\n        }\n\n        this.domBack = null;\n        this.ctxBack = null;\n\n        this.painter = painter;\n\n        this.config = null;\n\n        // Configs\n        /**\n         * 每次清空画布的颜色\n         * @type {string}\n         * @default 0\n         */\n        this.clearColor = 0;\n        /**\n         * 是否开启动态模糊\n         * @type {boolean}\n         * @default false\n         */\n        this.motionBlur = false;\n        /**\n         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         * @type {number}\n         * @default 0.7\n         */\n        this.lastFrameAlpha = 0.7;\n\n        /**\n         * Layer dpr\n         * @type {number}\n         */\n        this.dpr = dpr;\n    };\n\n    Layer.prototype = {\n\n        constructor: Layer,\n\n        elCount: 0,\n\n        __dirty: true,\n\n        initContext: function () {\n            this.ctx = this.dom.getContext('2d');\n\n            this.ctx.dpr = this.dpr;\n        },\n\n        createBackBuffer: function () {\n            var dpr = this.dpr;\n\n            this.domBack = createDom('back-' + this.id, 'canvas', this.painter, dpr);\n            this.ctxBack = this.domBack.getContext('2d');\n\n            if (dpr != 1) {\n                this.ctxBack.scale(dpr, dpr);\n            }\n        },\n\n        /**\n         * @param  {number} width\n         * @param  {number} height\n         */\n        resize: function (width, height) {\n            var dpr = this.dpr;\n\n            var dom = this.dom;\n            var domStyle = dom.style;\n            var domBack = this.domBack;\n\n            domStyle.width = width + 'px';\n            domStyle.height = height + 'px';\n\n            dom.width = width * dpr;\n            dom.height = height * dpr;\n\n            if (domBack) {\n                domBack.width = width * dpr;\n                domBack.height = height * dpr;\n\n                if (dpr != 1) {\n                    this.ctxBack.scale(dpr, dpr);\n                }\n            }\n        },\n\n        /**\n         * 清空该层画布\n         * @param {boolean} clearAll Clear all with out motion blur\n         */\n        clear: function (clearAll) {\n            var dom = this.dom;\n            var ctx = this.ctx;\n            var width = dom.width;\n            var height = dom.height;\n\n            var clearColor = this.clearColor;\n            var haveMotionBLur = this.motionBlur && !clearAll;\n            var lastFrameAlpha = this.lastFrameAlpha;\n\n            var dpr = this.dpr;\n\n            if (haveMotionBLur) {\n                if (!this.domBack) {\n                    this.createBackBuffer();\n                }\n\n                this.ctxBack.globalCompositeOperation = 'copy';\n                this.ctxBack.drawImage(\n                    dom, 0, 0,\n                    width / dpr,\n                    height / dpr\n                );\n            }\n\n            ctx.clearRect(0, 0, width, height);\n            if (clearColor) {\n                var clearColorGradientOrPattern;\n                // Gradient\n                if (clearColor.colorStops) {\n                    // Cache canvas gradient\n                    clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n                        x: 0,\n                        y: 0,\n                        width: width,\n                        height: height\n                    });\n\n                    clearColor.__canvasGradient = clearColorGradientOrPattern;\n                }\n                // Pattern\n                else if (clearColor.image) {\n                    clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n                }\n                ctx.save();\n                ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n                ctx.fillRect(0, 0, width, height);\n                ctx.restore();\n            }\n\n            if (haveMotionBLur) {\n                var domBack = this.domBack;\n                ctx.save();\n                ctx.globalAlpha = lastFrameAlpha;\n                ctx.drawImage(domBack, 0, 0, width, height);\n                ctx.restore();\n            }\n        }\n    };\n\n    module.exports = Layer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Layer.js\n// module id = 420\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n \n\n    var config = require('./config');\n    var util = require('./core/util');\n    var log = require('./core/log');\n    var BoundingRect = require('./core/BoundingRect');\n    var timsort = require('./core/timsort');\n\n    var Layer = require('./Layer');\n\n    var requestAnimationFrame = require('./animation/requestAnimationFrame');\n\n    // PENDIGN\n    // Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n    //\n    // Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\n    var MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\n    function parseInt10(val) {\n        return parseInt(val, 10);\n    }\n\n    function isLayerValid(layer) {\n        if (!layer) {\n            return false;\n        }\n\n        if (layer.isBuildin) {\n            return true;\n        }\n\n        if (typeof(layer.resize) !== 'function'\n            || typeof(layer.refresh) !== 'function'\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    function preProcessLayer(layer) {\n        layer.__unusedCount++;\n    }\n\n    function postProcessLayer(layer) {\n        if (layer.__unusedCount == 1) {\n            layer.clear();\n        }\n    }\n\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var viewRect = new BoundingRect(0, 0, 0, 0);\n    function isDisplayableCulled(el, width, height) {\n        tmpRect.copy(el.getBoundingRect());\n        if (el.transform) {\n            tmpRect.applyTransform(el.transform);\n        }\n        viewRect.width = width;\n        viewRect.height = height;\n        return !tmpRect.intersect(viewRect);\n    }\n\n    function isClipPathChanged(clipPaths, prevClipPaths) {\n        if (clipPaths == prevClipPaths) { // Can both be null or undefined\n            return false;\n        }\n\n        if (!clipPaths || !prevClipPaths || (clipPaths.length !== prevClipPaths.length)) {\n            return true;\n        }\n        for (var i = 0; i < clipPaths.length; i++) {\n            if (clipPaths[i] !== prevClipPaths[i]) {\n                return true;\n            }\n        }\n    }\n\n    function doClip(clipPaths, ctx) {\n        for (var i = 0; i < clipPaths.length; i++) {\n            var clipPath = clipPaths[i];\n            var path = clipPath.path;\n\n            clipPath.setTransform(ctx);\n            path.beginPath(ctx);\n            clipPath.buildPath(path, clipPath.shape);\n            ctx.clip();\n            // Transform back\n            clipPath.restoreTransform(ctx);\n        }\n    }\n\n    function createRoot(width, height) {\n        var domRoot = document.createElement('div');\n\n        // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n        domRoot.style.cssText = [\n            'position:relative',\n            'overflow:hidden',\n            'width:' + width + 'px',\n            'height:' + height + 'px',\n            'padding:0',\n            'margin:0',\n            'border-width:0'\n        ].join(';') + ';';\n\n        return domRoot;\n    }\n\n    /**\n     * @alias module:zrender/Painter\n     * @constructor\n     * @param {HTMLElement} root 绘图容器\n     * @param {module:zrender/Storage} storage\n     * @param {Ojbect} opts\n     */\n    var Painter = function (root, storage, opts) {\n        // In node environment using node-canvas\n        var singleCanvas = !root.nodeName // In node ?\n            || root.nodeName.toUpperCase() === 'CANVAS';\n\n        this._opts = opts = util.extend({}, opts || {});\n\n        /**\n         * @type {number}\n         */\n        this.dpr = opts.devicePixelRatio || config.devicePixelRatio;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._singleCanvas = singleCanvas;\n        /**\n         * 绘图容器\n         * @type {HTMLElement}\n         */\n        this.root = root;\n\n        var rootStyle = root.style;\n\n        if (rootStyle) {\n            rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n            rootStyle['-webkit-user-select'] =\n            rootStyle['user-select'] =\n            rootStyle['-webkit-touch-callout'] = 'none';\n\n            root.innerHTML = '';\n        }\n\n        /**\n         * @type {module:zrender/Storage}\n         */\n        this.storage = storage;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        var zlevelList = this._zlevelList = [];\n\n        /**\n         * @type {Object.<string, module:zrender/Layer>}\n         * @private\n         */\n        var layers = this._layers = {};\n\n        /**\n         * @type {Object.<string, Object>}\n         * @type {private}\n         */\n        this._layerConfig = {};\n\n        if (!singleCanvas) {\n            this._width = this._getSize(0);\n            this._height = this._getSize(1);\n\n            var domRoot = this._domRoot = createRoot(\n                this._width, this._height\n            );\n            root.appendChild(domRoot);\n        }\n        else {\n            // Use canvas width and height directly\n            var width = root.width;\n            var height = root.height;\n            this._width = width;\n            this._height = height;\n\n            // Create layer if only one given canvas\n            // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n            var mainLayer = new Layer(root, this, 1);\n            mainLayer.initContext();\n            // FIXME Use canvas width and height\n            // mainLayer.resize(width, height);\n            layers[0] = mainLayer;\n            zlevelList.push(0);\n\n            this._domRoot = root;\n        }\n\n        this.pathToImage = this._createPathToImage();\n\n        // Layers for progressive rendering\n        this._progressiveLayers = [];\n\n        /**\n         * @type {module:zrender/Layer}\n         * @private\n         */\n        this._hoverlayer;\n\n        this._hoverElements = [];\n    };\n\n    Painter.prototype = {\n\n        constructor: Painter,\n\n        /**\n         * If painter use a single canvas\n         * @return {boolean}\n         */\n        isSingleCanvas: function () {\n            return this._singleCanvas;\n        },\n        /**\n         * @return {HTMLDivElement}\n         */\n        getViewportRoot: function () {\n            return this._domRoot;\n        },\n\n        /**\n         * 刷新\n         * @param {boolean} [paintAll=false] 强制绘制所有displayable\n         */\n        refresh: function (paintAll) {\n\n            var list = this.storage.getDisplayList(true);\n\n            var zlevelList = this._zlevelList;\n\n            this._paintList(list, paintAll);\n\n            // Paint custum layers\n            for (var i = 0; i < zlevelList.length; i++) {\n                var z = zlevelList[i];\n                var layer = this._layers[z];\n                if (!layer.isBuildin && layer.refresh) {\n                    layer.refresh();\n                }\n            }\n\n            this.refreshHover();\n\n            if (this._progressiveLayers.length) {\n                this._startProgessive();\n            }\n\n            return this;\n        },\n\n        addHover: function (el, hoverStyle) {\n            if (el.__hoverMir) {\n                return;\n            }\n            var elMirror = new el.constructor({\n                style: el.style,\n                shape: el.shape\n            });\n            elMirror.__from = el;\n            el.__hoverMir = elMirror;\n            elMirror.setStyle(hoverStyle);\n            this._hoverElements.push(elMirror);\n        },\n\n        removeHover: function (el) {\n            var elMirror = el.__hoverMir;\n            var hoverElements = this._hoverElements;\n            var idx = util.indexOf(hoverElements, elMirror);\n            if (idx >= 0) {\n                hoverElements.splice(idx, 1);\n            }\n            el.__hoverMir = null;\n        },\n\n        clearHover: function (el) {\n            var hoverElements = this._hoverElements;\n            for (var i = 0; i < hoverElements.length; i++) {\n                var from = hoverElements[i].__from;\n                if (from) {\n                    from.__hoverMir = null;\n                }\n            }\n            hoverElements.length = 0;\n        },\n\n        refreshHover: function () {\n            var hoverElements = this._hoverElements;\n            var len = hoverElements.length;\n            var hoverLayer = this._hoverlayer;\n            hoverLayer && hoverLayer.clear();\n\n            if (!len) {\n                return;\n            }\n            timsort(hoverElements, this.storage.displayableSortFunc);\n\n            // Use a extream large zlevel\n            // FIXME?\n            if (!hoverLayer) {\n                hoverLayer = this._hoverlayer = this.getLayer(1e5);\n            }\n\n            var scope = {};\n            hoverLayer.ctx.save();\n            for (var i = 0; i < len;) {\n                var el = hoverElements[i];\n                var originalEl = el.__from;\n                // Original el is removed\n                // PENDING\n                if (!(originalEl && originalEl.__zr)) {\n                    hoverElements.splice(i, 1);\n                    originalEl.__hoverMir = null;\n                    len--;\n                    continue;\n                }\n                i++;\n\n                // Use transform\n                // FIXME style and shape ?\n                if (!originalEl.invisible) {\n                    el.transform = originalEl.transform;\n                    el.invTransform = originalEl.invTransform;\n                    el.__clipPaths = originalEl.__clipPaths;\n                    // el.\n                    this._doPaintEl(el, hoverLayer, true, scope);\n                }\n            }\n            hoverLayer.ctx.restore();\n        },\n\n        _startProgessive: function () {\n            var self = this;\n\n            if (!self._furtherProgressive) {\n                return;\n            }\n\n            // Use a token to stop progress steps triggered by\n            // previous zr.refresh calling.\n            var token = self._progressiveToken = +new Date();\n\n            self._progress++;\n            requestAnimationFrame(step);\n\n            function step() {\n                // In case refreshed or disposed\n                if (token === self._progressiveToken && self.storage) {\n\n                    self._doPaintList(self.storage.getDisplayList());\n\n                    if (self._furtherProgressive) {\n                        self._progress++;\n                        requestAnimationFrame(step);\n                    }\n                    else {\n                        self._progressiveToken = -1;\n                    }\n                }\n            }\n        },\n\n        _clearProgressive: function () {\n            this._progressiveToken = -1;\n            this._progress = 0;\n            util.each(this._progressiveLayers, function (layer) {\n                layer.__dirty && layer.clear();\n            });\n        },\n\n        _paintList: function (list, paintAll) {\n\n            if (paintAll == null) {\n                paintAll = false;\n            }\n\n            this._updateLayerStatus(list);\n\n            this._clearProgressive();\n\n            this.eachBuildinLayer(preProcessLayer);\n\n            this._doPaintList(list, paintAll);\n\n            this.eachBuildinLayer(postProcessLayer);\n        },\n\n        _doPaintList: function (list, paintAll) {\n            var currentLayer;\n            var currentZLevel;\n            var ctx;\n\n            // var invTransform = [];\n            var scope;\n\n            var progressiveLayerIdx = 0;\n            var currentProgressiveLayer;\n\n            var width = this._width;\n            var height = this._height;\n            var layerProgress;\n            var frame = this._progress;\n            function flushProgressiveLayer(layer) {\n                var dpr = ctx.dpr || 1;\n                ctx.save();\n                ctx.globalAlpha = 1;\n                ctx.shadowBlur = 0;\n                // Avoid layer don't clear in next progressive frame\n                currentLayer.__dirty = true;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n                ctx.restore();\n            }\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n\n                var elFrame = el.__frame;\n\n                // Flush at current context\n                // PENDING\n                if (elFrame < 0 && currentProgressiveLayer) {\n                    flushProgressiveLayer(currentProgressiveLayer);\n                    currentProgressiveLayer = null;\n                }\n\n                // Change draw layer\n                if (currentZLevel !== elZLevel) {\n                    if (ctx) {\n                        ctx.restore();\n                    }\n\n                    // Reset scope\n                    scope = {};\n\n                    // Only 0 zlevel if only has one canvas\n                    currentZLevel = elZLevel;\n                    currentLayer = this.getLayer(currentZLevel);\n\n                    if (!currentLayer.isBuildin) {\n                        log(\n                            'ZLevel ' + currentZLevel\n                            + ' has been used by unkown layer ' + currentLayer.id\n                        );\n                    }\n\n                    ctx = currentLayer.ctx;\n                    ctx.save();\n\n                    // Reset the count\n                    currentLayer.__unusedCount = 0;\n\n                    if (currentLayer.__dirty || paintAll) {\n                        currentLayer.clear();\n                    }\n                }\n\n                if (!(currentLayer.__dirty || paintAll)) {\n                    continue;\n                }\n\n                if (elFrame >= 0) {\n                    // Progressive layer changed\n                    if (!currentProgressiveLayer) {\n                        currentProgressiveLayer = this._progressiveLayers[\n                            Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)\n                        ];\n\n                        currentProgressiveLayer.ctx.save();\n                        currentProgressiveLayer.renderScope = {};\n\n                        if (currentProgressiveLayer\n                            && (currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress)\n                        ) {\n                            // flushProgressiveLayer(currentProgressiveLayer);\n                            // Quick jump all progressive elements\n                            // All progressive element are not dirty, jump over and flush directly\n                            i = currentProgressiveLayer.__nextIdxNotProg - 1;\n                            // currentProgressiveLayer = null;\n                            continue;\n                        }\n\n                        layerProgress = currentProgressiveLayer.__progress;\n\n                        if (!currentProgressiveLayer.__dirty) {\n                            // Keep rendering\n                            frame = layerProgress;\n                        }\n\n                        currentProgressiveLayer.__progress = frame + 1;\n                    }\n\n                    if (elFrame === frame) {\n                        this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n                    }\n                }\n                else {\n                    this._doPaintEl(el, currentLayer, paintAll, scope);\n                }\n\n                el.__dirty = false;\n            }\n\n            if (currentProgressiveLayer) {\n                flushProgressiveLayer(currentProgressiveLayer);\n            }\n\n            // Restore the lastLayer ctx\n            ctx && ctx.restore();\n            // If still has clipping state\n            // if (scope.prevElClipPaths) {\n            //     ctx.restore();\n            // }\n\n            this._furtherProgressive = false;\n            util.each(this._progressiveLayers, function (layer) {\n                if (layer.__maxProgress >= layer.__progress) {\n                    this._furtherProgressive = true;\n                }\n            }, this);\n        },\n\n        _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n            var ctx = currentLayer.ctx;\n            var m = el.transform;\n            if (\n                (currentLayer.__dirty || forcePaint)\n                // Ignore invisible element\n                && !el.invisible\n                // Ignore transparent element\n                && el.style.opacity !== 0\n                // Ignore scale 0 element, in some environment like node-canvas\n                // Draw a scale 0 element can cause all following draw wrong\n                // And setTransform with scale 0 will cause set back transform failed.\n                && !(m && !m[0] && !m[3])\n                // Ignore culled element\n                && !(el.culling && isDisplayableCulled(el, this._width, this._height))\n            ) {\n\n                var clipPaths = el.__clipPaths;\n\n                // Optimize when clipping on group with several elements\n                if (scope.prevClipLayer !== currentLayer\n                    || isClipPathChanged(clipPaths, scope.prevElClipPaths)\n                ) {\n                    // If has previous clipping state, restore from it\n                    if (scope.prevElClipPaths) {\n                        scope.prevClipLayer.ctx.restore();\n                        scope.prevClipLayer = scope.prevElClipPaths = null;\n\n                        // Reset prevEl since context has been restored\n                        scope.prevEl = null;\n                    }\n                    // New clipping state\n                    if (clipPaths) {\n                        ctx.save();\n                        doClip(clipPaths, ctx);\n                        scope.prevClipLayer = currentLayer;\n                        scope.prevElClipPaths = clipPaths;\n                    }\n                }\n                el.beforeBrush && el.beforeBrush(ctx);\n\n                el.brush(ctx, scope.prevEl || null);\n                scope.prevEl = el;\n\n                el.afterBrush && el.afterBrush(ctx);\n            }\n        },\n\n        /**\n         * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n         * @param {number} zlevel\n         * @return {module:zrender/Layer}\n         */\n        getLayer: function (zlevel) {\n            if (this._singleCanvas) {\n                return this._layers[0];\n            }\n\n            var layer = this._layers[zlevel];\n            if (!layer) {\n                // Create a new layer\n                layer = new Layer('zr_' + zlevel, this, this.dpr);\n                layer.isBuildin = true;\n\n                if (this._layerConfig[zlevel]) {\n                    util.merge(layer, this._layerConfig[zlevel], true);\n                }\n\n                this.insertLayer(zlevel, layer);\n\n                // Context is created after dom inserted to document\n                // Or excanvas will get 0px clientWidth and clientHeight\n                layer.initContext();\n            }\n\n            return layer;\n        },\n\n        insertLayer: function (zlevel, layer) {\n\n            var layersMap = this._layers;\n            var zlevelList = this._zlevelList;\n            var len = zlevelList.length;\n            var prevLayer = null;\n            var i = -1;\n            var domRoot = this._domRoot;\n\n            if (layersMap[zlevel]) {\n                log('ZLevel ' + zlevel + ' has been used already');\n                return;\n            }\n            // Check if is a valid layer\n            if (!isLayerValid(layer)) {\n                log('Layer of zlevel ' + zlevel + ' is not valid');\n                return;\n            }\n\n            if (len > 0 && zlevel > zlevelList[0]) {\n                for (i = 0; i < len - 1; i++) {\n                    if (\n                        zlevelList[i] < zlevel\n                        && zlevelList[i + 1] > zlevel\n                    ) {\n                        break;\n                    }\n                }\n                prevLayer = layersMap[zlevelList[i]];\n            }\n            zlevelList.splice(i + 1, 0, zlevel);\n\n            if (prevLayer) {\n                var prevDom = prevLayer.dom;\n                if (prevDom.nextSibling) {\n                    domRoot.insertBefore(\n                        layer.dom,\n                        prevDom.nextSibling\n                    );\n                }\n                else {\n                    domRoot.appendChild(layer.dom);\n                }\n            }\n            else {\n                if (domRoot.firstChild) {\n                    domRoot.insertBefore(layer.dom, domRoot.firstChild);\n                }\n                else {\n                    domRoot.appendChild(layer.dom);\n                }\n            }\n\n            layersMap[zlevel] = layer;\n        },\n\n        // Iterate each layer\n        eachLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                cb.call(context, this._layers[z], z);\n            }\n        },\n\n        // Iterate each buildin layer\n        eachBuildinLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (layer.isBuildin) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        // Iterate each other layer except buildin layer\n        eachOtherLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (! layer.isBuildin) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        /**\n         * 获取所有已创建的层\n         * @param {Array.<module:zrender/Layer>} [prevLayer]\n         */\n        getLayers: function () {\n            return this._layers;\n        },\n\n        _updateLayerStatus: function (list) {\n\n            var layers = this._layers;\n            var progressiveLayers = this._progressiveLayers;\n\n            var elCountsLastFrame = {};\n            var progressiveElCountsLastFrame = {};\n\n            this.eachBuildinLayer(function (layer, z) {\n                elCountsLastFrame[z] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            util.each(progressiveLayers, function (layer, idx) {\n                progressiveElCountsLastFrame[idx] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            var progressiveLayerCount = 0;\n            var currentProgressiveLayer;\n            var lastProgressiveKey;\n            var frameCount = 0;\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var zlevel = this._singleCanvas ? 0 : el.zlevel;\n                var layer = layers[zlevel];\n                var elProgress = el.progressive;\n                if (layer) {\n                    layer.elCount++;\n                    layer.__dirty = layer.__dirty || el.__dirty;\n                }\n\n                /////// Update progressive\n                if (elProgress >= 0) {\n                    // Fix wrong progressive sequence problem.\n                    if (lastProgressiveKey !== elProgress) {\n                        lastProgressiveKey = elProgress;\n                        frameCount++;\n                    }\n                    var elFrame = el.__frame = frameCount - 1;\n                    if (!currentProgressiveLayer) {\n                        var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n                        currentProgressiveLayer = progressiveLayers[idx];\n                        if (!currentProgressiveLayer) {\n                            currentProgressiveLayer = progressiveLayers[idx] = new Layer(\n                                'progressive', this, this.dpr\n                            );\n                            currentProgressiveLayer.initContext();\n                        }\n                        currentProgressiveLayer.__maxProgress = 0;\n                    }\n                    currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n                    currentProgressiveLayer.elCount++;\n\n                    currentProgressiveLayer.__maxProgress = Math.max(\n                        currentProgressiveLayer.__maxProgress, elFrame\n                    );\n\n                    if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n                        // Should keep rendering this  layer because progressive rendering is not finished yet\n                        layer.__dirty = true;\n                    }\n                }\n                else {\n                    el.__frame = -1;\n\n                    if (currentProgressiveLayer) {\n                        currentProgressiveLayer.__nextIdxNotProg = i;\n                        progressiveLayerCount++;\n                        currentProgressiveLayer = null;\n                    }\n                }\n            }\n\n            if (currentProgressiveLayer) {\n                progressiveLayerCount++;\n                currentProgressiveLayer.__nextIdxNotProg = i;\n            }\n\n            // 层中的元素数量有发生变化\n            this.eachBuildinLayer(function (layer, z) {\n                if (elCountsLastFrame[z] !== layer.elCount) {\n                    layer.__dirty = true;\n                }\n            });\n\n            progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n            util.each(progressiveLayers, function (layer, idx) {\n                if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n                    el.__dirty = true;\n                }\n                if (layer.__dirty) {\n                    layer.__progress = 0;\n                }\n            });\n        },\n\n        /**\n         * 清除hover层外所有内容\n         */\n        clear: function () {\n            this.eachBuildinLayer(this._clearLayer);\n            return this;\n        },\n\n        _clearLayer: function (layer) {\n            layer.clear();\n        },\n\n        /**\n         * 修改指定zlevel的绘制参数\n         *\n         * @param {string} zlevel\n         * @param {Object} config 配置对象\n         * @param {string} [config.clearColor=0] 每次清空画布的颜色\n         * @param {string} [config.motionBlur=false] 是否开启动态模糊\n         * @param {number} [config.lastFrameAlpha=0.7]\n         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         */\n        configLayer: function (zlevel, config) {\n            if (config) {\n                var layerConfig = this._layerConfig;\n                if (!layerConfig[zlevel]) {\n                    layerConfig[zlevel] = config;\n                }\n                else {\n                    util.merge(layerConfig[zlevel], config, true);\n                }\n\n                var layer = this._layers[zlevel];\n\n                if (layer) {\n                    util.merge(layer, layerConfig[zlevel], true);\n                }\n            }\n        },\n\n        /**\n         * 删除指定层\n         * @param {number} zlevel 层所在的zlevel\n         */\n        delLayer: function (zlevel) {\n            var layers = this._layers;\n            var zlevelList = this._zlevelList;\n            var layer = layers[zlevel];\n            if (!layer) {\n                return;\n            }\n            layer.dom.parentNode.removeChild(layer.dom);\n            delete layers[zlevel];\n\n            zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n        },\n\n        /**\n         * 区域大小变化后重绘\n         */\n        resize: function (width, height) {\n            var domRoot = this._domRoot;\n            // FIXME Why ?\n            domRoot.style.display = 'none';\n\n            // Save input w/h\n            var opts = this._opts;\n            width != null && (opts.width = width);\n            height != null && (opts.height = height);\n\n            width = this._getSize(0);\n            height = this._getSize(1);\n\n            domRoot.style.display = '';\n\n            // 优化没有实际改变的resize\n            if (this._width != width || height != this._height) {\n                domRoot.style.width = width + 'px';\n                domRoot.style.height = height + 'px';\n\n                for (var id in this._layers) {\n                    if (this._layers.hasOwnProperty(id)) {\n                        this._layers[id].resize(width, height);\n                    }\n                }\n                util.each(this._progressiveLayers, function (layer) {\n                    layer.resize(width, height);\n                });\n\n                this.refresh(true);\n            }\n\n            this._width = width;\n            this._height = height;\n\n            return this;\n        },\n\n        /**\n         * 清除单独的一个层\n         * @param {number} zlevel\n         */\n        clearLayer: function (zlevel) {\n            var layer = this._layers[zlevel];\n            if (layer) {\n                layer.clear();\n            }\n        },\n\n        /**\n         * 释放\n         */\n        dispose: function () {\n            this.root.innerHTML = '';\n\n            this.root =\n            this.storage =\n\n            this._domRoot =\n            this._layers = null;\n        },\n\n        /**\n         * Get canvas which has all thing rendered\n         * @param {Object} opts\n         * @param {string} [opts.backgroundColor]\n         */\n        getRenderedCanvas: function (opts) {\n            opts = opts || {};\n            if (this._singleCanvas) {\n                return this._layers[0].dom;\n            }\n\n            var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n            imageLayer.initContext();\n\n            imageLayer.clearColor = opts.backgroundColor;\n            imageLayer.clear();\n\n            var displayList = this.storage.getDisplayList(true);\n\n            var scope = {};\n            for (var i = 0; i < displayList.length; i++) {\n                var el = displayList[i];\n                this._doPaintEl(el, imageLayer, true, scope);\n            }\n\n            return imageLayer.dom;\n        },\n        /**\n         * 获取绘图区域宽度\n         */\n        getWidth: function () {\n            return this._width;\n        },\n\n        /**\n         * 获取绘图区域高度\n         */\n        getHeight: function () {\n            return this._height;\n        },\n\n        _getSize: function (whIdx) {\n            var opts = this._opts;\n            var wh = ['width', 'height'][whIdx];\n            var cwh = ['clientWidth', 'clientHeight'][whIdx];\n            var plt = ['paddingLeft', 'paddingTop'][whIdx];\n            var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n            if (opts[wh] != null && opts[wh] !== 'auto') {\n                return parseFloat(opts[wh]);\n            }\n\n            var root = this.root;\n            var stl = document.defaultView.getComputedStyle(root);\n\n            return (\n                (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\n                - (parseInt10(stl[plt]) || 0)\n                - (parseInt10(stl[prb]) || 0)\n            ) | 0;\n        },\n\n        _pathToImage: function (id, path, width, height, dpr) {\n            var canvas = document.createElement('canvas');\n            var ctx = canvas.getContext('2d');\n\n            canvas.width = width * dpr;\n            canvas.height = height * dpr;\n\n            ctx.clearRect(0, 0, width * dpr, height * dpr);\n\n            var pathTransform = {\n                position: path.position,\n                rotation: path.rotation,\n                scale: path.scale\n            };\n            path.position = [0, 0, 0];\n            path.rotation = 0;\n            path.scale = [1, 1];\n            if (path) {\n                path.brush(ctx);\n            }\n\n            var ImageShape = require('./graphic/Image');\n            var imgShape = new ImageShape({\n                id: id,\n                style: {\n                    x: 0,\n                    y: 0,\n                    image: canvas\n                }\n            });\n\n            if (pathTransform.position != null) {\n                imgShape.position = path.position = pathTransform.position;\n            }\n\n            if (pathTransform.rotation != null) {\n                imgShape.rotation = path.rotation = pathTransform.rotation;\n            }\n\n            if (pathTransform.scale != null) {\n                imgShape.scale = path.scale = pathTransform.scale;\n            }\n\n            return imgShape;\n        },\n\n        _createPathToImage: function () {\n            var me = this;\n\n            return function (id, e, width, height) {\n                return me._pathToImage(\n                    id, e, width, height, me.dpr\n                );\n            };\n        }\n    };\n\n    module.exports = Painter;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Painter.js\n// module id = 421\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n\n\n    var util = require('./core/util');\n    var env = require('./core/env');\n\n    var Group = require('./container/Group');\n\n    // Use timsort because in most case elements are partially sorted\n    // https://jsfiddle.net/pissang/jr4x7mdm/8/\n    var timsort = require('./core/timsort');\n\n    function shapeCompareFunc(a, b) {\n        if (a.zlevel === b.zlevel) {\n            if (a.z === b.z) {\n                // if (a.z2 === b.z2) {\n                //     // FIXME Slow has renderidx compare\n                //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n                //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n                //     return a.__renderidx - b.__renderidx;\n                // }\n                return a.z2 - b.z2;\n            }\n            return a.z - b.z;\n        }\n        return a.zlevel - b.zlevel;\n    }\n    /**\n     * 内容仓库 (M)\n     * @alias module:zrender/Storage\n     * @constructor\n     */\n    var Storage = function () {\n        // 所有常规形状，id索引的map\n        this._elements = {};\n\n        this._roots = [];\n\n        this._displayList = [];\n\n        this._displayListLen = 0;\n    };\n\n    Storage.prototype = {\n\n        constructor: Storage,\n\n        /**\n         * @param  {Function} cb\n         *\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._roots.length; i++) {\n                this._roots[i].traverse(cb, context);\n            }\n        },\n\n        /**\n         * 返回所有图形的绘制队列\n         * @param {boolean} [update=false] 是否在返回前更新该数组\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n         *\n         * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n         * @return {Array.<module:zrender/graphic/Displayable>}\n         */\n        getDisplayList: function (update, includeIgnore) {\n            includeIgnore = includeIgnore || false;\n            if (update) {\n                this.updateDisplayList(includeIgnore);\n            }\n            return this._displayList;\n        },\n\n        /**\n         * 更新图形的绘制队列。\n         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n         */\n        updateDisplayList: function (includeIgnore) {\n            this._displayListLen = 0;\n            var roots = this._roots;\n            var displayList = this._displayList;\n            for (var i = 0, len = roots.length; i < len; i++) {\n                this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n            }\n            displayList.length = this._displayListLen;\n\n            // for (var i = 0, len = displayList.length; i < len; i++) {\n            //     displayList[i].__renderidx = i;\n            // }\n\n            // displayList.sort(shapeCompareFunc);\n            env.canvasSupported && timsort(displayList, shapeCompareFunc);\n        },\n\n        _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n\n            if (el.ignore && !includeIgnore) {\n                return;\n            }\n\n            el.beforeUpdate();\n\n            if (el.__dirty) {\n\n                el.update();\n\n            }\n\n            el.afterUpdate();\n\n            var userSetClipPath = el.clipPath;\n            if (userSetClipPath) {\n\n                // FIXME 效率影响\n                if (clipPaths) {\n                    clipPaths = clipPaths.slice();\n                }\n                else {\n                    clipPaths = [];\n                }\n\n                var currentClipPath = userSetClipPath;\n                var parentClipPath = el;\n                // Recursively add clip path\n                while (currentClipPath) {\n                    // clipPath 的变换是基于使用这个 clipPath 的元素\n                    currentClipPath.parent = parentClipPath;\n                    currentClipPath.updateTransform();\n\n                    clipPaths.push(currentClipPath);\n\n                    parentClipPath = currentClipPath;\n                    currentClipPath = currentClipPath.clipPath;\n                }\n            }\n\n            if (el.isGroup) {\n                var children = el._children;\n\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i];\n\n                    // Force to mark as dirty if group is dirty\n                    // FIXME __dirtyPath ?\n                    if (el.__dirty) {\n                        child.__dirty = true;\n                    }\n\n                    this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n                }\n\n                // Mark group clean here\n                el.__dirty = false;\n\n            }\n            else {\n                el.__clipPaths = clipPaths;\n\n                this._displayList[this._displayListLen++] = el;\n            }\n        },\n\n        /**\n         * 添加图形(Shape)或者组(Group)到根节点\n         * @param {module:zrender/Element} el\n         */\n        addRoot: function (el) {\n            // Element has been added\n            if (this._elements[el.id]) {\n                return;\n            }\n\n            if (el instanceof Group) {\n                el.addChildrenToStorage(this);\n            }\n\n            this.addToMap(el);\n            this._roots.push(el);\n        },\n\n        /**\n         * 删除指定的图形(Shape)或者组(Group)\n         * @param {string|Array.<string>} [elId] 如果为空清空整个Storage\n         */\n        delRoot: function (elId) {\n            if (elId == null) {\n                // 不指定elId清空\n                for (var i = 0; i < this._roots.length; i++) {\n                    var root = this._roots[i];\n                    if (root instanceof Group) {\n                        root.delChildrenFromStorage(this);\n                    }\n                }\n\n                this._elements = {};\n                this._roots = [];\n                this._displayList = [];\n                this._displayListLen = 0;\n\n                return;\n            }\n\n            if (elId instanceof Array) {\n                for (var i = 0, l = elId.length; i < l; i++) {\n                    this.delRoot(elId[i]);\n                }\n                return;\n            }\n\n            var el;\n            if (typeof(elId) == 'string') {\n                el = this._elements[elId];\n            }\n            else {\n                el = elId;\n            }\n\n            var idx = util.indexOf(this._roots, el);\n            if (idx >= 0) {\n                this.delFromMap(el.id);\n                this._roots.splice(idx, 1);\n                if (el instanceof Group) {\n                    el.delChildrenFromStorage(this);\n                }\n            }\n        },\n\n        addToMap: function (el) {\n            if (el instanceof Group) {\n                el.__storage = this;\n            }\n            el.dirty(false);\n\n            this._elements[el.id] = el;\n\n            return this;\n        },\n\n        get: function (elId) {\n            return this._elements[elId];\n        },\n\n        delFromMap: function (elId) {\n            var elements = this._elements;\n            var el = elements[elId];\n            if (el) {\n                delete elements[elId];\n                if (el instanceof Group) {\n                    el.__storage = null;\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * 清空并且释放Storage\n         */\n        dispose: function () {\n            this._elements =\n            this._renderList =\n            this._roots = null;\n        },\n\n        displayableSortFunc: shapeCompareFunc\n    };\n\n    module.exports = Storage;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Storage.js\n// module id = 422\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n\n    var util = require('../core/util');\n    var Dispatcher = require('../core/event').Dispatcher;\n\n    var requestAnimationFrame = require('./requestAnimationFrame');\n\n    var Animator = require('./Animator');\n    /**\n     * @typedef {Object} IZRenderStage\n     * @property {Function} update\n     */\n\n    /**\n     * @alias module:zrender/animation/Animation\n     * @constructor\n     * @param {Object} [options]\n     * @param {Function} [options.onframe]\n     * @param {IZRenderStage} [options.stage]\n     * @example\n     *     var animation = new Animation();\n     *     var obj = {\n     *         x: 100,\n     *         y: 100\n     *     };\n     *     animation.animate(node.position)\n     *         .when(1000, {\n     *             x: 500,\n     *             y: 500\n     *         })\n     *         .when(2000, {\n     *             x: 100,\n     *             y: 100\n     *         })\n     *         .start('spline');\n     */\n    var Animation = function (options) {\n\n        options = options || {};\n\n        this.stage = options.stage || {};\n\n        this.onframe = options.onframe || function() {};\n\n        // private properties\n        this._clips = [];\n\n        this._running = false;\n\n        this._time;\n\n        this._pausedTime;\n\n        this._pauseStart;\n\n        this._paused = false;\n\n        Dispatcher.call(this);\n    };\n\n    Animation.prototype = {\n\n        constructor: Animation,\n        /**\n         * 添加 clip\n         * @param {module:zrender/animation/Clip} clip\n         */\n        addClip: function (clip) {\n            this._clips.push(clip);\n        },\n        /**\n         * 添加 animator\n         * @param {module:zrender/animation/Animator} animator\n         */\n        addAnimator: function (animator) {\n            animator.animation = this;\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.addClip(clips[i]);\n            }\n        },\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Clip} clip\n         */\n        removeClip: function(clip) {\n            var idx = util.indexOf(this._clips, clip);\n            if (idx >= 0) {\n                this._clips.splice(idx, 1);\n            }\n        },\n\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Animator} animator\n         */\n        removeAnimator: function (animator) {\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.removeClip(clips[i]);\n            }\n            animator.animation = null;\n        },\n\n        _update: function() {\n\n            var time = new Date().getTime() - this._pausedTime;\n            var delta = time - this._time;\n            var clips = this._clips;\n            var len = clips.length;\n\n            var deferredEvents = [];\n            var deferredClips = [];\n            for (var i = 0; i < len; i++) {\n                var clip = clips[i];\n                var e = clip.step(time);\n                // Throw out the events need to be called after\n                // stage.update, like destroy\n                if (e) {\n                    deferredEvents.push(e);\n                    deferredClips.push(clip);\n                }\n            }\n\n            // Remove the finished clip\n            for (var i = 0; i < len;) {\n                if (clips[i]._needsRemove) {\n                    clips[i] = clips[len - 1];\n                    clips.pop();\n                    len--;\n                }\n                else {\n                    i++;\n                }\n            }\n\n            len = deferredEvents.length;\n            for (var i = 0; i < len; i++) {\n                deferredClips[i].fire(deferredEvents[i]);\n            }\n\n            this._time = time;\n\n            this.onframe(delta);\n\n            this.trigger('frame', delta);\n\n            if (this.stage.update) {\n                this.stage.update();\n            }\n        },\n\n        _startLoop: function () {\n            var self = this;\n\n            this._running = true;\n\n            function step() {\n                if (self._running) {\n\n                    requestAnimationFrame(step);\n\n                    !self._paused && self._update();\n                }\n            }\n\n            requestAnimationFrame(step);\n        },\n\n        /**\n         * 开始运行动画\n         */\n        start: function () {\n\n            this._time = new Date().getTime();\n            this._pausedTime = 0;\n\n            this._startLoop();\n        },\n        /**\n         * 停止运行动画\n         */\n        stop: function () {\n            this._running = false;\n        },\n\n        /**\n         * Pause\n         */\n        pause: function () {\n            if (!this._paused) {\n                this._pauseStart = new Date().getTime();\n                this._paused = true;\n            }\n        },\n\n        /**\n         * Resume\n         */\n        resume: function () {\n            if (this._paused) {\n                this._pausedTime += (new Date().getTime()) - this._pauseStart;\n                this._paused = false;\n            }\n        },\n\n        /**\n         * 清除所有动画片段\n         */\n        clear: function () {\n            this._clips = [];\n        },\n        /**\n         * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n         * @param  {Object} target\n         * @param  {Object} options\n         * @param  {boolean} [options.loop=false] 是否循环播放动画\n         * @param  {Function} [options.getter=null]\n         *         如果指定getter函数，会通过getter函数取属性值\n         * @param  {Function} [options.setter=null]\n         *         如果指定setter函数，会通过setter函数设置属性值\n         * @return {module:zrender/animation/Animation~Animator}\n         */\n        // TODO Gap\n        animate: function (target, options) {\n            options = options || {};\n\n            var animator = new Animator(\n                target,\n                options.loop,\n                options.getter,\n                options.setter\n            );\n\n            this.addAnimator(animator);\n\n            return animator;\n        }\n    };\n\n    util.mixin(Animation, Dispatcher);\n\n    module.exports = Animation;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Animation.js\n// module id = 423\n// module chunks = 0 1 2 3 4","/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\n\n\n    var easingFuncs = require('./easing');\n\n    function Clip(options) {\n\n        this._target = options.target;\n\n        // 生命周期\n        this._life = options.life || 1000;\n        // 延时\n        this._delay = options.delay || 0;\n        // 开始时间\n        // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n        this._initialized = false;\n\n        // 是否循环\n        this.loop = options.loop == null ? false : options.loop;\n\n        this.gap = options.gap || 0;\n\n        this.easing = options.easing || 'Linear';\n\n        this.onframe = options.onframe;\n        this.ondestroy = options.ondestroy;\n        this.onrestart = options.onrestart;\n    }\n\n    Clip.prototype = {\n\n        constructor: Clip,\n\n        step: function (globalTime) {\n            // Set startTime on first step, or _startTime may has milleseconds different between clips\n            // PENDING\n            if (!this._initialized) {\n                this._startTime = globalTime + this._delay;\n                this._initialized = true;\n            }\n\n            var percent = (globalTime - this._startTime) / this._life;\n\n            // 还没开始\n            if (percent < 0) {\n                return;\n            }\n\n            percent = Math.min(percent, 1);\n\n            var easing = this.easing;\n            var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n            var schedule = typeof easingFunc === 'function'\n                ? easingFunc(percent)\n                : percent;\n\n            this.fire('frame', schedule);\n\n            // 结束\n            if (percent == 1) {\n                if (this.loop) {\n                    this.restart (globalTime);\n                    // 重新开始周期\n                    // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n                    return 'restart';\n                }\n\n                // 动画完成将这个控制器标识为待删除\n                // 在Animation.update中进行批量删除\n                this._needsRemove = true;\n                return 'destroy';\n            }\n\n            return null;\n        },\n\n        restart: function (globalTime) {\n            var remainder = (globalTime - this._startTime) % this._life;\n            this._startTime = globalTime - remainder + this.gap;\n\n            this._needsRemove = false;\n        },\n\n        fire: function(eventType, arg) {\n            eventType = 'on' + eventType;\n            if (this[eventType]) {\n                this[eventType](this._target, arg);\n            }\n        }\n    };\n\n    module.exports = Clip;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Clip.js\n// module id = 424\n// module chunks = 0 1 2 3 4","/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\n\n    var easing = {\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        linear: function (k) {\n            return k;\n        },\n\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticIn: function (k) {\n            return k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticOut: function (k) {\n            return k * (2 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k;\n            }\n            return -0.5 * (--k * (k - 2) - 1);\n        },\n\n        // 三次方的缓动（t^3）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicIn: function (k) {\n            return k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicOut: function (k) {\n            return --k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k + 2);\n        },\n\n        // 四次方的缓动（t^4）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticIn: function (k) {\n            return k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticOut: function (k) {\n            return 1 - (--k * k * k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k;\n            }\n            return -0.5 * ((k -= 2) * k * k * k - 2);\n        },\n\n        // 五次方的缓动（t^5）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticIn: function (k) {\n            return k * k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticOut: function (k) {\n            return --k * k * k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k * k * k + 2);\n        },\n\n        // 正弦曲线的缓动（sin(t)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalIn: function (k) {\n            return 1 - Math.cos(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalOut: function (k) {\n            return Math.sin(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalInOut: function (k) {\n            return 0.5 * (1 - Math.cos(Math.PI * k));\n        },\n\n        // 指数曲线的缓动（2^t）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialIn: function (k) {\n            return k === 0 ? 0 : Math.pow(1024, k - 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialOut: function (k) {\n            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialInOut: function (k) {\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if ((k *= 2) < 1) {\n                return 0.5 * Math.pow(1024, k - 1);\n            }\n            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n        },\n\n        // 圆形曲线的缓动（sqrt(1-t^2)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularIn: function (k) {\n            return 1 - Math.sqrt(1 - k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularOut: function (k) {\n            return Math.sqrt(1 - (--k * k));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return -0.5 * (Math.sqrt(1 - k * k) - 1);\n            }\n            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n        },\n\n        // 创建类似于弹簧在停止前来回振荡的动画\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticIn: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return -(a * Math.pow(2, 10 * (k -= 1)) *\n                        Math.sin((k - s) * (2 * Math.PI) / p));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return (a * Math.pow(2, -10 * k) *\n                    Math.sin((k - s) * (2 * Math.PI) / p) + 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticInOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            if ((k *= 2) < 1) {\n                return -0.5 * (a * Math.pow(2, 10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p));\n            }\n            return a * Math.pow(2, -10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\n        },\n\n        // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backIn: function (k) {\n            var s = 1.70158;\n            return k * k * ((s + 1) * k - s);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backOut: function (k) {\n            var s = 1.70158;\n            return --k * k * ((s + 1) * k + s) + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backInOut: function (k) {\n            var s = 1.70158 * 1.525;\n            if ((k *= 2) < 1) {\n                return 0.5 * (k * k * ((s + 1) * k - s));\n            }\n            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n        },\n\n        // 创建弹跳效果\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceIn: function (k) {\n            return 1 - easing.bounceOut(1 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceOut: function (k) {\n            if (k < (1 / 2.75)) {\n                return 7.5625 * k * k;\n            }\n            else if (k < (2 / 2.75)) {\n                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n            }\n            else if (k < (2.5 / 2.75)) {\n                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n            }\n            else {\n                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n            }\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceInOut: function (k) {\n            if (k < 0.5) {\n                return easing.bounceIn(k * 2) * 0.5;\n            }\n            return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n        }\n    };\n\n    module.exports = easing;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/easing.js\n// module id = 425\n// module chunks = 0 1 2 3 4","\n\n    var normalizeRadian = require('./util').normalizeRadian;\n    var PI2 = Math.PI * 2;\n\n    module.exports = {\n        /**\n         * 圆弧描边包含判断\n         * @param  {number}  cx\n         * @param  {number}  cy\n         * @param  {number}  r\n         * @param  {number}  startAngle\n         * @param  {number}  endAngle\n         * @param  {boolean}  anticlockwise\n         * @param  {number} lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {Boolean}\n         */\n        containStroke: function (\n            cx, cy, r, startAngle, endAngle, anticlockwise,\n            lineWidth, x, y\n        ) {\n\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n\n            x -= cx;\n            y -= cy;\n            var d = Math.sqrt(x * x + y * y);\n\n            if ((d - _l > r) || (d + _l < r)) {\n                return false;\n            }\n            if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n                // Is a circle\n                return true;\n            }\n            if (anticlockwise) {\n                var tmp = startAngle;\n                startAngle = normalizeRadian(endAngle);\n                endAngle = normalizeRadian(tmp);\n            } else {\n                startAngle = normalizeRadian(startAngle);\n                endAngle = normalizeRadian(endAngle);\n            }\n            if (startAngle > endAngle) {\n                endAngle += PI2;\n            }\n\n            var angle = Math.atan2(y, x);\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return (angle >= startAngle && angle <= endAngle)\n                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/arc.js\n// module id = 426\n// module chunks = 0 1 2 3 4","\n\n    var curve = require('../core/curve');\n\n    module.exports = {\n        /**\n         * 三次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  x3\n         * @param  {number}  y3\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.cubicProjectPoint(\n                x0, y0, x1, y1, x2, y2, x3, y3,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/cubic.js\n// module id = 427\n// module chunks = 0 1 2 3 4","\n    module.exports = {\n        /**\n         * 线段包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            var _a = 0;\n            var _b = x0;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l)\n                || (y < y0 - _l && y < y1 - _l)\n                || (x > x0 + _l && x > x1 + _l)\n                || (x < x0 - _l && x < x1 - _l)\n            ) {\n                return false;\n            }\n\n            if (x0 !== x1) {\n                _a = (y0 - y1) / (x0 - x1);\n                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;\n            }\n            else {\n                return Math.abs(x - x0) <= _l / 2;\n            }\n            var tmp = _a * x - y + _b;\n            var _s = tmp * tmp / (_a * _a + 1);\n            return _s <= _l / 2 * _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/line.js\n// module id = 428\n// module chunks = 0 1 2 3 4","'use strict';\n\n\n    var CMD = require('../core/PathProxy').CMD;\n    var line = require('./line');\n    var cubic = require('./cubic');\n    var quadratic = require('./quadratic');\n    var arc = require('./arc');\n    var normalizeRadian = require('./util').normalizeRadian;\n    var curve = require('../core/curve');\n\n    var windingLine = require('./windingLine');\n\n    var containStroke = line.containStroke;\n\n    var PI2 = Math.PI * 2;\n\n    var EPSILON = 1e-4;\n\n    function isAroundEqual(a, b) {\n        return Math.abs(a - b) < EPSILON;\n    }\n\n    // 临时数组\n    var roots = [-1, -1, -1];\n    var extrema = [-1, -1];\n\n    function swapExtrema() {\n        var tmp = extrema[0];\n        extrema[0] = extrema[1];\n        extrema[1] = tmp;\n    }\n\n    function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2 && y > y3)\n            || (y < y0 && y < y1 && y < y2 && y < y3)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var w = 0;\n            var nExtrema = -1;\n            var y0_, y1_;\n            for (var i = 0; i < nRoots; i++) {\n                var t = roots[i];\n\n                // Avoid winding error when intersection point is the connect point of two line of polygon\n                var unit = (t === 0 || t === 1) ? 0.5 : 1;\n\n                var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n                if (x_ < x) { // Quick reject\n                    continue;\n                }\n                if (nExtrema < 0) {\n                    nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n                    if (extrema[1] < extrema[0] && nExtrema > 1) {\n                        swapExtrema();\n                    }\n                    y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n                    if (nExtrema > 1) {\n                        y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n                    }\n                }\n                if (nExtrema == 2) {\n                    // 分成三段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else if (t < extrema[1]) {\n                        w += y1_ < y0_ ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y1_ ? unit : -unit;\n                    }\n                }\n                else {\n                    // 分成两段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y0_ ? unit : -unit;\n                    }\n                }\n            }\n            return w;\n        }\n    }\n\n    function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2)\n            || (y < y0 && y < y1 && y < y2)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var t = curve.quadraticExtremum(y0, y1, y2);\n            if (t >= 0 && t <= 1) {\n                var w = 0;\n                var y_ = curve.quadraticAt(y0, y1, y2, t);\n                for (var i = 0; i < nRoots; i++) {\n                    // Remove one endpoint.\n                    var unit = (roots[i] === 0 || roots[i] === 1) ? 0.5 : 1;\n\n                    var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n                    if (x_ < x) {   // Quick reject\n                        continue;\n                    }\n                    if (roots[i] < t) {\n                        w += y_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y2 < y_ ? unit : -unit;\n                    }\n                }\n                return w;\n            }\n            else {\n                // Remove one endpoint.\n                var unit = (roots[0] === 0 || roots[0] === 1) ? 0.5 : 1;\n\n                var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n                if (x_ < x) {   // Quick reject\n                    return 0;\n                }\n                return y2 < y0 ? unit : -unit;\n            }\n        }\n    }\n\n    // TODO\n    // Arc 旋转\n    function windingArc(\n        cx, cy, r, startAngle, endAngle, anticlockwise, x, y\n    ) {\n        y -= cy;\n        if (y > r || y < -r) {\n            return 0;\n        }\n        var tmp = Math.sqrt(r * r - y * y);\n        roots[0] = -tmp;\n        roots[1] = tmp;\n\n        var diff = Math.abs(startAngle - endAngle);\n        if (diff < 1e-4) {\n            return 0;\n        }\n        if (diff % PI2 < 1e-4) {\n            // Is a circle\n            startAngle = 0;\n            endAngle = PI2;\n            var dir = anticlockwise ? 1 : -1;\n            if (x >= roots[0] + cx && x <= roots[1] + cx) {\n                return dir;\n            } else {\n                return 0;\n            }\n        }\n\n        if (anticlockwise) {\n            var tmp = startAngle;\n            startAngle = normalizeRadian(endAngle);\n            endAngle = normalizeRadian(tmp);\n        }\n        else {\n            startAngle = normalizeRadian(startAngle);\n            endAngle = normalizeRadian(endAngle);\n        }\n        if (startAngle > endAngle) {\n            endAngle += PI2;\n        }\n\n        var w = 0;\n        for (var i = 0; i < 2; i++) {\n            var x_ = roots[i];\n            if (x_ + cx > x) {\n                var angle = Math.atan2(y, x_);\n                var dir = anticlockwise ? 1 : -1;\n                if (angle < 0) {\n                    angle = PI2 + angle;\n                }\n                if (\n                    (angle >= startAngle && angle <= endAngle)\n                    || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)\n                ) {\n                    if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n                        dir = -dir;\n                    }\n                    w += dir;\n                }\n            }\n        }\n        return w;\n    }\n\n    function containPath(data, lineWidth, isStroke, x, y) {\n        var w = 0;\n        var xi = 0;\n        var yi = 0;\n        var x0 = 0;\n        var y0 = 0;\n\n        for (var i = 0; i < data.length;) {\n            var cmd = data[i++];\n            // Begin a new subpath\n            if (cmd === CMD.M && i > 1) {\n                // Close previous subpath\n                if (!isStroke) {\n                    w += windingLine(xi, yi, x0, y0, x, y);\n                }\n                // 如果被任何一个 subpath 包含\n                // if (w !== 0) {\n                //     return true;\n                // }\n            }\n\n            if (i == 1) {\n                // 如果第一个命令是 L, C, Q\n                // 则 previous point 同绘制命令的第一个 point\n                //\n                // 第一个命令为 Arc 的情况下会在后面特殊处理\n                xi = data[i];\n                yi = data[i + 1];\n\n                x0 = xi;\n                y0 = yi;\n            }\n\n            switch (cmd) {\n                case CMD.M:\n                    // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                    // 在 closePath 的时候使用\n                    x0 = data[i++];\n                    y0 = data[i++];\n                    xi = x0;\n                    yi = y0;\n                    break;\n                case CMD.L:\n                    if (isStroke) {\n                        if (containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n                        w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.C:\n                    if (isStroke) {\n                        if (cubic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingCubic(\n                            xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.Q:\n                    if (isStroke) {\n                        if (quadratic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingQuadratic(\n                            xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.A:\n                    // TODO Arc 判断的开销比较大\n                    var cx = data[i++];\n                    var cy = data[i++];\n                    var rx = data[i++];\n                    var ry = data[i++];\n                    var theta = data[i++];\n                    var dTheta = data[i++];\n                    // TODO Arc 旋转\n                    var psi = data[i++];\n                    var anticlockwise = 1 - data[i++];\n                    var x1 = Math.cos(theta) * rx + cx;\n                    var y1 = Math.sin(theta) * ry + cy;\n                    // 不是直接使用 arc 命令\n                    if (i > 1) {\n                        w += windingLine(xi, yi, x1, y1, x, y);\n                    }\n                    else {\n                        // 第一个命令起点还未定义\n                        x0 = x1;\n                        y0 = y1;\n                    }\n                    // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n                    var _x = (x - cx) * ry / rx + cx;\n                    if (isStroke) {\n                        if (arc.containStroke(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            lineWidth, _x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingArc(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            _x, y\n                        );\n                    }\n                    xi = Math.cos(theta + dTheta) * rx + cx;\n                    yi = Math.sin(theta + dTheta) * ry + cy;\n                    break;\n                case CMD.R:\n                    x0 = xi = data[i++];\n                    y0 = yi = data[i++];\n                    var width = data[i++];\n                    var height = data[i++];\n                    var x1 = x0 + width;\n                    var y1 = y0 + height;\n                    if (isStroke) {\n                        if (containStroke(x0, y0, x1, y0, lineWidth, x, y)\n                          || containStroke(x1, y0, x1, y1, lineWidth, x, y)\n                          || containStroke(x1, y1, x0, y1, lineWidth, x, y)\n                          || containStroke(x0, y1, x0, y0, lineWidth, x, y)\n                        ) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // FIXME Clockwise ?\n                        w += windingLine(x1, y0, x1, y1, x, y);\n                        w += windingLine(x0, y1, x0, y0, x, y);\n                    }\n                    break;\n                case CMD.Z:\n                    if (isStroke) {\n                        if (containStroke(\n                            xi, yi, x0, y0, lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // Close a subpath\n                        w += windingLine(xi, yi, x0, y0, x, y);\n                        // 如果被任何一个 subpath 包含\n                        // FIXME subpaths may overlap\n                        // if (w !== 0) {\n                        //     return true;\n                        // }\n                    }\n                    xi = x0;\n                    yi = y0;\n                    break;\n            }\n        }\n        if (!isStroke && !isAroundEqual(yi, y0)) {\n            w += windingLine(xi, yi, x0, y0, x, y) || 0;\n        }\n        return w !== 0;\n    }\n\n    module.exports = {\n        contain: function (pathData, x, y) {\n            return containPath(pathData, 0, false, x, y);\n        },\n\n        containStroke: function (pathData, lineWidth, x, y) {\n            return containPath(pathData, lineWidth, true, x, y);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/path.js\n// module id = 429\n// module chunks = 0 1 2 3 4","\n\n    var curve = require('../core/curve');\n\n    module.exports = {\n        /**\n         * 二次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.quadraticProjectPoint(\n                x0, y0, x1, y1, x2, y2,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/quadratic.js\n// module id = 430\n// module chunks = 0 1 2 3 4","\n    module.exports = function windingLine(x0, y0, x1, y1, x, y) {\n        if ((y > y0 && y > y1) || (y < y0 && y < y1)) {\n            return 0;\n        }\n        // Ignore horizontal line\n        if (y1 === y0) {\n            return 0;\n        }\n        var dir = y1 < y0 ? 1 : -1;\n        var t = (y - y0) / (y1 - y0);\n\n        // Avoid winding error when intersection point is the connect point of two line of polygon\n        if (t === 1 || t === 0) {\n            dir = y1 < y0 ? 0.5 : -0.5;\n        }\n\n        var x_ = t * (x1 - x0) + x0;\n\n        return x_ > x ? dir : 0;\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/windingLine.js\n// module id = 431\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * Only implements needed gestures for mobile.\n */\n\n\n    var eventUtil = require('./event');\n\n    var GestureMgr = function () {\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._track = [];\n    };\n\n    GestureMgr.prototype = {\n\n        constructor: GestureMgr,\n\n        recognize: function (event, target, root) {\n            this._doTrack(event, target, root);\n            return this._recognize(event);\n        },\n\n        clear: function () {\n            this._track.length = 0;\n            return this;\n        },\n\n        _doTrack: function (event, target, root) {\n            var touches = event.touches;\n\n            if (!touches) {\n                return;\n            }\n\n            var trackItem = {\n                points: [],\n                touches: [],\n                target: target,\n                event: event\n            };\n\n            for (var i = 0, len = touches.length; i < len; i++) {\n                var touch = touches[i];\n                var pos = eventUtil.clientToLocal(root, touch, {});\n                trackItem.points.push([pos.zrX, pos.zrY]);\n                trackItem.touches.push(touch);\n            }\n\n            this._track.push(trackItem);\n        },\n\n        _recognize: function (event) {\n            for (var eventName in recognizers) {\n                if (recognizers.hasOwnProperty(eventName)) {\n                    var gestureInfo = recognizers[eventName](this._track, event);\n                    if (gestureInfo) {\n                        return gestureInfo;\n                    }\n                }\n            }\n        }\n    };\n\n    function dist(pointPair) {\n        var dx = pointPair[1][0] - pointPair[0][0];\n        var dy = pointPair[1][1] - pointPair[0][1];\n\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    function center(pointPair) {\n        return [\n            (pointPair[0][0] + pointPair[1][0]) / 2,\n            (pointPair[0][1] + pointPair[1][1]) / 2\n        ];\n    }\n\n    var recognizers = {\n\n        pinch: function (track, event) {\n            var trackLen = track.length;\n\n            if (!trackLen) {\n                return;\n            }\n\n            var pinchEnd = (track[trackLen - 1] || {}).points;\n            var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n            if (pinchPre\n                && pinchPre.length > 1\n                && pinchEnd\n                && pinchEnd.length > 1\n            ) {\n                var pinchScale = dist(pinchEnd) / dist(pinchPre);\n                !isFinite(pinchScale) && (pinchScale = 1);\n\n                event.pinchScale = pinchScale;\n\n                var pinchCenter = center(pinchEnd);\n                event.pinchX = pinchCenter[0];\n                event.pinchY = pinchCenter[1];\n\n                return {\n                    type: 'pinch',\n                    target: track[0].target,\n                    event: event\n                };\n            }\n        }\n\n        // Only pinch currently.\n    };\n\n    module.exports = GestureMgr;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/GestureMgr.js\n// module id = 432\n// module chunks = 0 1 2 3 4","// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n\n    /**\n     * Simple double linked list. Compared with array, it has O(1) remove operation.\n     * @constructor\n     */\n    var LinkedList = function() {\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.head = null;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.tail = null;\n\n        this._len = 0;\n    };\n\n    var linkedListProto = LinkedList.prototype;\n    /**\n     * Insert a new value at the tail\n     * @param  {} val\n     * @return {module:zrender/core/LRU~Entry}\n     */\n    linkedListProto.insert = function(val) {\n        var entry = new Entry(val);\n        this.insertEntry(entry);\n        return entry;\n    };\n\n    /**\n     * Insert an entry at the tail\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.insertEntry = function(entry) {\n        if (!this.head) {\n            this.head = this.tail = entry;\n        }\n        else {\n            this.tail.next = entry;\n            entry.prev = this.tail;\n            this.tail = entry;\n        }\n        this._len++;\n    };\n\n    /**\n     * Remove entry.\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.remove = function(entry) {\n        var prev = entry.prev;\n        var next = entry.next;\n        if (prev) {\n            prev.next = next;\n        }\n        else {\n            // Is head\n            this.head = next;\n        }\n        if (next) {\n            next.prev = prev;\n        }\n        else {\n            // Is tail\n            this.tail = prev;\n        }\n        entry.next = entry.prev = null;\n        this._len--;\n    };\n\n    /**\n     * @return {number}\n     */\n    linkedListProto.len = function() {\n        return this._len;\n    };\n\n    /**\n     * @constructor\n     * @param {} val\n     */\n    var Entry = function(val) {\n        /**\n         * @type {}\n         */\n        this.value = val;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.next;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.prev;\n    };\n\n    /**\n     * LRU Cache\n     * @constructor\n     * @alias module:zrender/core/LRU\n     */\n    var LRU = function(maxSize) {\n\n        this._list = new LinkedList();\n\n        this._map = {};\n\n        this._maxSize = maxSize || 10;\n    };\n\n    var LRUProto = LRU.prototype;\n\n    /**\n     * @param  {string} key\n     * @param  {} value\n     */\n    LRUProto.put = function(key, value) {\n        var list = this._list;\n        var map = this._map;\n        if (map[key] == null) {\n            var len = list.len();\n            if (len >= this._maxSize && len > 0) {\n                // Remove the least recently used\n                var leastUsedEntry = list.head;\n                list.remove(leastUsedEntry);\n                delete map[leastUsedEntry.key];\n            }\n\n            var entry = list.insert(value);\n            entry.key = key;\n            map[key] = entry;\n        }\n    };\n\n    /**\n     * @param  {string} key\n     * @return {}\n     */\n    LRUProto.get = function(key) {\n        var entry = this._map[key];\n        var list = this._list;\n        if (entry != null) {\n            // Put the latest used entry in the tail\n            if (entry !== list.tail) {\n                list.remove(entry);\n                list.insertEntry(entry);\n            }\n\n            return entry.value;\n        }\n    };\n\n    /**\n     * Clear the cache\n     */\n    LRUProto.clear = function() {\n        this._list.clear();\n        this._map = {};\n    };\n\n    module.exports = LRU;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/LRU.js\n// module id = 433\n// module chunks = 0 1 2 3 4","/**\n * @author Yi Shen(https://github.com/pissang)\n */\n\n\n    var vec2 = require('./vector');\n    var curve = require('./curve');\n\n    var bbox = {};\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n\n    var start = vec2.create();\n    var end = vec2.create();\n    var extremity = vec2.create();\n\n    var PI2 = Math.PI * 2;\n    /**\n     * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n     * @module zrender/core/bbox\n     * @param {Array<Object>} points 顶点数组\n     * @param {number} min\n     * @param {number} max\n     */\n    bbox.fromPoints = function(points, min, max) {\n        if (points.length === 0) {\n            return;\n        }\n        var p = points[0];\n        var left = p[0];\n        var right = p[0];\n        var top = p[1];\n        var bottom = p[1];\n        var i;\n\n        for (i = 1; i < points.length; i++) {\n            p = points[i];\n            left = mathMin(left, p[0]);\n            right = mathMax(right, p[0]);\n            top = mathMin(top, p[1]);\n            bottom = mathMax(bottom, p[1]);\n        }\n\n        min[0] = left;\n        min[1] = top;\n        max[0] = right;\n        max[1] = bottom;\n    };\n\n    /**\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromLine = function (x0, y0, x1, y1, min, max) {\n        min[0] = mathMin(x0, x1);\n        min[1] = mathMin(y0, y1);\n        max[0] = mathMax(x0, x1);\n        max[1] = mathMax(y0, y1);\n    };\n\n    var xDim = [];\n    var yDim = [];\n    /**\n     * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromCubic = function(\n        x0, y0, x1, y1, x2, y2, x3, y3, min, max\n    ) {\n        var cubicExtrema = curve.cubicExtrema;\n        var cubicAt = curve.cubicAt;\n        var i;\n        var n = cubicExtrema(x0, x1, x2, x3, xDim);\n        min[0] = Infinity;\n        min[1] = Infinity;\n        max[0] = -Infinity;\n        max[1] = -Infinity;\n\n        for (i = 0; i < n; i++) {\n            var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n            min[0] = mathMin(x, min[0]);\n            max[0] = mathMax(x, max[0]);\n        }\n        n = cubicExtrema(y0, y1, y2, y3, yDim);\n        for (i = 0; i < n; i++) {\n            var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n            min[1] = mathMin(y, min[1]);\n            max[1] = mathMax(y, max[1]);\n        }\n\n        min[0] = mathMin(x0, min[0]);\n        max[0] = mathMax(x0, max[0]);\n        min[0] = mathMin(x3, min[0]);\n        max[0] = mathMax(x3, max[0]);\n\n        min[1] = mathMin(y0, min[1]);\n        max[1] = mathMax(y0, max[1]);\n        min[1] = mathMin(y3, min[1]);\n        max[1] = mathMax(y3, max[1]);\n    };\n\n    /**\n     * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromQuadratic = function(x0, y0, x1, y1, x2, y2, min, max) {\n        var quadraticExtremum = curve.quadraticExtremum;\n        var quadraticAt = curve.quadraticAt;\n        // Find extremities, where derivative in x dim or y dim is zero\n        var tx =\n            mathMax(\n                mathMin(quadraticExtremum(x0, x1, x2), 1), 0\n            );\n        var ty =\n            mathMax(\n                mathMin(quadraticExtremum(y0, y1, y2), 1), 0\n            );\n\n        var x = quadraticAt(x0, x1, x2, tx);\n        var y = quadraticAt(y0, y1, y2, ty);\n\n        min[0] = mathMin(x0, x2, x);\n        min[1] = mathMin(y0, y2, y);\n        max[0] = mathMax(x0, x2, x);\n        max[1] = mathMax(y0, y2, y);\n    };\n\n    /**\n     * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n     * @method\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x\n     * @param {number} y\n     * @param {number} rx\n     * @param {number} ry\n     * @param {number} startAngle\n     * @param {number} endAngle\n     * @param {number} anticlockwise\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromArc = function (\n        x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max\n    ) {\n        var vec2Min = vec2.min;\n        var vec2Max = vec2.max;\n\n        var diff = Math.abs(startAngle - endAngle);\n\n\n        if (diff % PI2 < 1e-4 && diff > 1e-4) {\n            // Is a circle\n            min[0] = x - rx;\n            min[1] = y - ry;\n            max[0] = x + rx;\n            max[1] = y + ry;\n            return;\n        }\n\n        start[0] = mathCos(startAngle) * rx + x;\n        start[1] = mathSin(startAngle) * ry + y;\n\n        end[0] = mathCos(endAngle) * rx + x;\n        end[1] = mathSin(endAngle) * ry + y;\n\n        vec2Min(min, start, end);\n        vec2Max(max, start, end);\n\n        // Thresh to [0, Math.PI * 2]\n        startAngle = startAngle % (PI2);\n        if (startAngle < 0) {\n            startAngle = startAngle + PI2;\n        }\n        endAngle = endAngle % (PI2);\n        if (endAngle < 0) {\n            endAngle = endAngle + PI2;\n        }\n\n        if (startAngle > endAngle && !anticlockwise) {\n            endAngle += PI2;\n        }\n        else if (startAngle < endAngle && anticlockwise) {\n            startAngle += PI2;\n        }\n        if (anticlockwise) {\n            var tmp = endAngle;\n            endAngle = startAngle;\n            startAngle = tmp;\n        }\n\n        // var number = 0;\n        // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n        for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n            if (angle > startAngle) {\n                extremity[0] = mathCos(angle) * rx + x;\n                extremity[1] = mathSin(angle) * ry + y;\n\n                vec2Min(min, extremity, min);\n                vec2Max(max, extremity, max);\n            }\n        }\n    };\n\n    module.exports = bbox;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/bbox.js\n// module id = 434\n// module chunks = 0 1 2 3 4","\n\n    var eventTool = require('../core/event');\n    var zrUtil = require('../core/util');\n    var Eventful = require('../mixin/Eventful');\n    var env = require('../core/env');\n    var GestureMgr = require('../core/GestureMgr');\n\n    var addEventListener = eventTool.addEventListener;\n    var removeEventListener = eventTool.removeEventListener;\n    var normalizeEvent = eventTool.normalizeEvent;\n\n    var TOUCH_CLICK_DELAY = 300;\n\n    var mouseHandlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n\n    var touchHandlerNames = [\n        'touchstart', 'touchend', 'touchmove'\n    ];\n\n    var pointerEventNames = {\n        pointerdown: 1, pointerup: 1, pointermove: 1, pointerout: 1\n    };\n\n    var pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n        var nm = name.replace('mouse', 'pointer');\n        return pointerEventNames[nm] ? nm : name;\n    });\n\n    function eventNameFix(name) {\n        return (name === 'mousewheel' && env.browser.firefox) ? 'DOMMouseScroll' : name;\n    }\n\n    function processGesture(proxy, event, stage) {\n        var gestureMgr = proxy._gestureMgr;\n\n        stage === 'start' && gestureMgr.clear();\n\n        var gestureInfo = gestureMgr.recognize(\n            event,\n            proxy.handler.findHover(event.zrX, event.zrY, null),\n            proxy.dom\n        );\n\n        stage === 'end' && gestureMgr.clear();\n\n        // Do not do any preventDefault here. Upper application do that if necessary.\n        if (gestureInfo) {\n            var type = gestureInfo.type;\n            event.gestureEvent = type;\n\n            proxy.handler.dispatchToElement(gestureInfo.target, type, gestureInfo.event);\n        }\n    }\n\n    // function onMSGestureChange(proxy, event) {\n    //     if (event.translationX || event.translationY) {\n    //         // mousemove is carried by MSGesture to reduce the sensitivity.\n    //         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n    //     }\n    //     if (event.scale !== 1) {\n    //         event.pinchX = event.offsetX;\n    //         event.pinchY = event.offsetY;\n    //         event.pinchScale = event.scale;\n    //         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n    //     }\n    // }\n\n    /**\n     * Prevent mouse event from being dispatched after Touch Events action\n     * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n     * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n     * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n     * Result: Blocking Mouse Events for 700ms.\n     */\n    function setTouchTimer(instance) {\n        instance._touching = true;\n        clearTimeout(instance._touchTimer);\n        instance._touchTimer = setTimeout(function () {\n            instance._touching = false;\n        }, 700);\n    }\n\n\n    var domHandlers = {\n        /**\n         * Mouse move handler\n         * @inner\n         * @param {Event} event\n         */\n        mousemove: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            this.trigger('mousemove', event);\n        },\n\n        /**\n         * Mouse out handler\n         * @inner\n         * @param {Event} event\n         */\n        mouseout: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            var element = event.toElement || event.relatedTarget;\n            if (element != this.dom) {\n                while (element && element.nodeType != 9) {\n                    // 忽略包含在root中的dom引起的mouseOut\n                    if (element === this.dom) {\n                        return;\n                    }\n\n                    element = element.parentNode;\n                }\n            }\n\n            this.trigger('mouseout', event);\n        },\n\n        /**\n         * Touch开始响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchstart: function (event) {\n            // Default mouse behaviour should not be disabled here.\n            // For example, page may needs to be slided.\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            this._lastTouchMoment = new Date();\n\n            processGesture(this, event, 'start');\n\n            // In touch device, trigger `mousemove`(`mouseover`) should\n            // be triggered, and must before `mousedown` triggered.\n            domHandlers.mousemove.call(this, event);\n\n            domHandlers.mousedown.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch移动响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchmove: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'change');\n\n            // Mouse move should always be triggered no matter whether\n            // there is gestrue event, because mouse move and pinch may\n            // be used at the same time.\n            domHandlers.mousemove.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch结束响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchend: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'end');\n\n            domHandlers.mouseup.call(this, event);\n\n            // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n            // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n            // we can conveniently implement \"hover style\" in both PC and touch device just\n            // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n            // to remove \"hover style\" on an element, without any additional code for\n            // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n            // style\" will remain for user view)\n\n            // click event should always be triggered no matter whether\n            // there is gestrue event. System click can not be prevented.\n            if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n                domHandlers.click.call(this, event);\n            }\n\n            setTouchTimer(this);\n        },\n\n        pointerdown: function (event) {\n            domHandlers.mousedown.call(this, event);\n\n            // if (useMSGuesture(this, event)) {\n            //     this._msGesture.addPointer(event.pointerId);\n            // }\n        },\n\n        pointermove: function (event) {\n            // FIXME\n            // pointermove is so sensitive that it always triggered when\n            // tap(click) on touch screen, which affect some judgement in\n            // upper application. So, we dont support mousemove on MS touch\n            // device yet.\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mousemove.call(this, event);\n            }\n        },\n\n        pointerup: function (event) {\n            domHandlers.mouseup.call(this, event);\n        },\n\n        pointerout: function (event) {\n            // pointerout will be triggered when tap on touch screen\n            // (IE11+/Edge on MS Surface) after click event triggered,\n            // which is inconsistent with the mousout behavior we defined\n            // in touchend. So we unify them.\n            // (check domHandlers.touchend for detailed explanation)\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mouseout.call(this, event);\n            }\n        }\n    };\n\n    function isPointerFromTouch(event) {\n        var pointerType = event.pointerType;\n        return pointerType === 'pen' || pointerType === 'touch';\n    }\n\n    // function useMSGuesture(handlerProxy, event) {\n    //     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n    // }\n\n    // Common handlers\n    zrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        domHandlers[name] = function (event) {\n            event = normalizeEvent(this.dom, event);\n            this.trigger(name, event);\n        };\n    });\n\n    /**\n     * 为控制类实例初始化dom 事件处理函数\n     *\n     * @inner\n     * @param {module:zrender/Handler} instance 控制类实例\n     */\n    function initDomHandler(instance) {\n        zrUtil.each(touchHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(pointerHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(mouseHandlerNames, function (name) {\n            instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n        });\n\n        function makeMouseHandler(fn, instance) {\n            return function () {\n                if (instance._touching) {\n                    return;\n                }\n                return fn.apply(instance, arguments);\n            };\n        }\n    }\n\n\n    function HandlerDomProxy(dom) {\n        Eventful.call(this);\n\n        this.dom = dom;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._touching = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._touchTimer;\n\n        /**\n         * @private\n         * @type {module:zrender/core/GestureMgr}\n         */\n        this._gestureMgr = new GestureMgr();\n\n        this._handlers = {};\n\n        initDomHandler(this);\n\n        if (env.pointerEventsSupported) { // Only IE11+/Edge\n            // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n            // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n            // at the same time.\n            // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n            // screen, which do not occurs in pointer event.\n            // So we use pointer event to both detect touch gesture and mouse behavior.\n            mountHandlers(pointerHandlerNames, this);\n\n            // FIXME\n            // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n            // which does not prevent defuault behavior occasionally (which may cause view port\n            // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n            // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n            // touch screen. And we only support click behavior on MS touch screen now.\n\n            // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n            // We dont support touch on IE on win7.\n            // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n            // if (typeof MSGesture === 'function') {\n            //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n            //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n            // }\n        }\n        else {\n            if (env.touchEventsSupported) {\n                mountHandlers(touchHandlerNames, this);\n                // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n                // addEventListener(root, 'mouseout', this._mouseoutHandler);\n            }\n\n            // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n            // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n            // mouse event can not be handle in those devices.\n            // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n            // mouseevent after touch event triggered, see `setTouchTimer`.\n            mountHandlers(mouseHandlerNames, this);\n        }\n\n        function mountHandlers(handlerNames, instance) {\n            zrUtil.each(handlerNames, function (name) {\n                addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n            }, instance);\n        }\n    }\n\n    var handlerDomProxyProto = HandlerDomProxy.prototype;\n    handlerDomProxyProto.dispose = function () {\n        var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n        for (var i = 0; i < handlerNames.length; i++) {\n            var name = handlerNames[i];\n            removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n        }\n    };\n\n    handlerDomProxyProto.setCursor = function (cursorStyle) {\n        this.dom.style.cursor = cursorStyle || 'default';\n    };\n\n    zrUtil.mixin(HandlerDomProxy, Eventful);\n\n    module.exports = HandlerDomProxy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/dom/HandlerProxy.js\n// module id = 435\n// module chunks = 0 1 2 3 4","// CompoundPath to improve performance\n\n\n    var Path = require('./Path');\n    module.exports = Path.extend({\n\n        type: 'compound',\n\n        shape: {\n\n            paths: null\n        },\n\n        _updatePathDirty: function () {\n            var dirtyPath = this.__dirtyPath;\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                // Mark as dirty if any subpath is dirty\n                dirtyPath = dirtyPath || paths[i].__dirtyPath;\n            }\n            this.__dirtyPath = dirtyPath;\n            this.__dirty = this.__dirty || dirtyPath;\n        },\n\n        beforeBrush: function () {\n            this._updatePathDirty();\n            var paths = this.shape.paths || [];\n            var scale = this.getGlobalScale();\n            // Update path scale\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].path.setScale(scale[0], scale[1]);\n            }\n        },\n\n        buildPath: function (ctx, shape) {\n            var paths = shape.paths || [];\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].buildPath(ctx, paths[i].shape, true);\n            }\n        },\n\n        afterBrush: function () {\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].__dirtyPath = false;\n            }\n        },\n\n        getBoundingRect: function () {\n            this._updatePathDirty();\n            return Path.prototype.getBoundingRect.call(this);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/CompoundPath.js\n// module id = 436\n// module chunks = 0 1 2 3 4","'use strict';\n\n\n    var zrUtil = require('../core/util');\n\n    var Gradient = require('./Gradient');\n\n    /**\n     * x, y, r are all percent from 0 to 1\n     * @param {number} [x=0.5]\n     * @param {number} [y=0.5]\n     * @param {number} [r=0.5]\n     * @param {Array.<Object>} [colorStops]\n     * @param {boolean} [globalCoord=false]\n     */\n    var RadialGradient = function (x, y, r, colorStops, globalCoord) {\n        this.x = x == null ? 0.5 : x;\n\n        this.y = y == null ? 0.5 : y;\n\n        this.r = r == null ? 0.5 : r;\n\n        // Can be cloned\n        this.type = 'radial';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    RadialGradient.prototype = {\n\n        constructor: RadialGradient\n    };\n\n    zrUtil.inherits(RadialGradient, Gradient);\n\n    module.exports = RadialGradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/RadialGradient.js\n// module id = 437\n// module chunks = 0 1 2 3 4","/**\n * Text element\n * @module zrender/graphic/Text\n *\n * TODO Wrapping\n *\n * Text not support gradient\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var zrUtil = require('../core/util');\n    var textContain = require('../contain/text');\n\n    /**\n     * @alias zrender/graphic/Text\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    var Text = function (opts) {\n        Displayable.call(this, opts);\n    };\n\n    Text.prototype = {\n\n        constructor: Text,\n\n        type: 'text',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var x = style.x || 0;\n            var y = style.y || 0;\n            // Convert to string\n            var text = style.text;\n\n            // Convert to string\n            text != null && (text += '');\n\n            // Always bind style\n            style.bind(ctx, this, prevEl);\n\n            if (text) {\n\n                this.setTransform(ctx);\n\n                var textBaseline;\n                var textAlign = style.textAlign;\n                var font = style.textFont || style.font;\n                if (style.textVerticalAlign) {\n                    var rect = textContain.getBoundingRect(\n                        text, font, style.textAlign, 'top'\n                    );\n                    // Ignore textBaseline\n                    textBaseline = 'middle';\n                    switch (style.textVerticalAlign) {\n                        case 'middle':\n                            y -= rect.height / 2 - rect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= rect.height - rect.lineHeight / 2;\n                            break;\n                        default:\n                            y += rect.lineHeight / 2;\n                    }\n                }\n                else {\n                    textBaseline = style.textBaseline;\n                }\n\n                // TODO Invalid font\n                ctx.font = font || '12px sans-serif';\n                ctx.textAlign = textAlign || 'left';\n                // Use canvas default left textAlign. Giving invalid value will cause state not change\n                if (ctx.textAlign !== textAlign) {\n                    ctx.textAlign = 'left';\n                }\n                ctx.textBaseline = textBaseline || 'alphabetic';\n                // Use canvas default alphabetic baseline\n                if (ctx.textBaseline !== textBaseline) {\n                    ctx.textBaseline = 'alphabetic';\n                }\n\n                var lineHeight = textContain.measureText('国', ctx.font).width;\n\n                var textLines = text.split('\\n');\n                for (var i = 0; i < textLines.length; i++) {\n                    style.hasFill() && ctx.fillText(textLines[i], x, y);\n                    style.hasStroke() && ctx.strokeText(textLines[i], x, y);\n                    y += lineHeight;\n                }\n\n                this.restoreTransform(ctx);\n            }\n        },\n\n        getBoundingRect: function () {\n            if (!this._rect) {\n                var style = this.style;\n                var textVerticalAlign = style.textVerticalAlign;\n                var rect = textContain.getBoundingRect(\n                    style.text + '', style.textFont || style.font, style.textAlign,\n                    textVerticalAlign ? 'top' : style.textBaseline\n                );\n                switch (textVerticalAlign) {\n                    case 'middle':\n                        rect.y -= rect.height / 2;\n                        break;\n                    case 'bottom':\n                        rect.y -= rect.height;\n                        break;\n                }\n                rect.x += style.x || 0;\n                rect.y += style.y || 0;\n                this._rect = rect;\n            }\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(Text, Displayable);\n\n    module.exports = Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Text.js\n// module id = 438\n// module chunks = 0 1 2 3 4","\n\n    module.exports = {\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            var r = shape.r;\n            var r1;\n            var r2;\n            var r3;\n            var r4;\n\n            // Convert width and height to positive for better borderRadius\n            if (width < 0) {\n                x = x + width;\n                width = -width;\n            }\n            if (height < 0) {\n                y = y + height;\n                height = -height;\n            }\n\n            if (typeof r === 'number') {\n                r1 = r2 = r3 = r4 = r;\n            }\n            else if (r instanceof Array) {\n                if (r.length === 1) {\n                    r1 = r2 = r3 = r4 = r[0];\n                }\n                else if (r.length === 2) {\n                    r1 = r3 = r[0];\n                    r2 = r4 = r[1];\n                }\n                else if (r.length === 3) {\n                    r1 = r[0];\n                    r2 = r4 = r[1];\n                    r3 = r[2];\n                }\n                else {\n                    r1 = r[0];\n                    r2 = r[1];\n                    r3 = r[2];\n                    r4 = r[3];\n                }\n            }\n            else {\n                r1 = r2 = r3 = r4 = 0;\n            }\n\n            var total;\n            if (r1 + r2 > width) {\n                total = r1 + r2;\n                r1 *= width / total;\n                r2 *= width / total;\n            }\n            if (r3 + r4 > width) {\n                total = r3 + r4;\n                r3 *= width / total;\n                r4 *= width / total;\n            }\n            if (r2 + r3 > height) {\n                total = r2 + r3;\n                r2 *= height / total;\n                r3 *= height / total;\n            }\n            if (r1 + r4 > height) {\n                total = r1 + r4;\n                r1 *= height / total;\n                r4 *= height / total;\n            }\n            ctx.moveTo(x + r1, y);\n            ctx.lineTo(x + width - r2, y);\n            r2 !== 0 && ctx.quadraticCurveTo(\n                x + width, y, x + width, y + r2\n            );\n            ctx.lineTo(x + width, y + height - r3);\n            r3 !== 0 && ctx.quadraticCurveTo(\n                x + width, y + height, x + width - r3, y + height\n            );\n            ctx.lineTo(x + r4, y + height);\n            r4 !== 0 && ctx.quadraticCurveTo(\n                x, y + height, x, y + height - r4\n            );\n            ctx.lineTo(x, y + r1);\n            r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/roundRect.js\n// module id = 439\n// module chunks = 0 1 2 3 4","/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n\n    var vec2 = require('../../core/vector');\n    var v2Min = vec2.min;\n    var v2Max = vec2.max;\n    var v2Scale = vec2.scale;\n    var v2Distance = vec2.distance;\n    var v2Add = vec2.add;\n\n    /**\n     * 贝塞尔平滑曲线\n     * @alias module:zrender/shape/util/smoothBezier\n     * @param {Array} points 线段顶点数组\n     * @param {number} smooth 平滑等级, 0-1\n     * @param {boolean} isLoop\n     * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n     *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n     *                           整个折线的包围盒做一个并集用来约束控制点。\n     * @param {Array} 计算出来的控制点数组\n     */\n    module.exports = function (points, smooth, isLoop, constraint) {\n        var cps = [];\n\n        var v = [];\n        var v1 = [];\n        var v2 = [];\n        var prevPoint;\n        var nextPoint;\n\n        var min, max;\n        if (constraint) {\n            min = [Infinity, Infinity];\n            max = [-Infinity, -Infinity];\n            for (var i = 0, len = points.length; i < len; i++) {\n                v2Min(min, min, points[i]);\n                v2Max(max, max, points[i]);\n            }\n            // 与指定的包围盒做并集\n            v2Min(min, min, constraint[0]);\n            v2Max(max, max, constraint[1]);\n        }\n\n        for (var i = 0, len = points.length; i < len; i++) {\n            var point = points[i];\n\n            if (isLoop) {\n                prevPoint = points[i ? i - 1 : len - 1];\n                nextPoint = points[(i + 1) % len];\n            }\n            else {\n                if (i === 0 || i === len - 1) {\n                    cps.push(vec2.clone(points[i]));\n                    continue;\n                }\n                else {\n                    prevPoint = points[i - 1];\n                    nextPoint = points[i + 1];\n                }\n            }\n\n            vec2.sub(v, nextPoint, prevPoint);\n\n            // use degree to scale the handle length\n            v2Scale(v, v, smooth);\n\n            var d0 = v2Distance(point, prevPoint);\n            var d1 = v2Distance(point, nextPoint);\n            var sum = d0 + d1;\n            if (sum !== 0) {\n                d0 /= sum;\n                d1 /= sum;\n            }\n\n            v2Scale(v1, v, -d0);\n            v2Scale(v2, v, d1);\n            var cp0 = v2Add([], point, v1);\n            var cp1 = v2Add([], point, v2);\n            if (constraint) {\n                v2Max(cp0, cp0, min);\n                v2Min(cp0, cp0, max);\n                v2Max(cp1, cp1, min);\n                v2Min(cp1, cp1, max);\n            }\n            cps.push(cp0);\n            cps.push(cp1);\n        }\n\n        if (isLoop) {\n            cps.push(cps.shift());\n        }\n\n        return cps;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/smoothBezier.js\n// module id = 440\n// module chunks = 0 1 2 3 4","/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n    var vec2 = require('../../core/vector');\n\n    /**\n     * @inner\n     */\n    function interpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    /**\n     * @alias module:zrender/shape/util/smoothSpline\n     * @param {Array} points 线段顶点数组\n     * @param {boolean} isLoop\n     * @return {Array}\n     */\n    module.exports = function (points, isLoop) {\n        var len = points.length;\n        var ret = [];\n\n        var distance = 0;\n        for (var i = 1; i < len; i++) {\n            distance += vec2.distance(points[i - 1], points[i]);\n        }\n\n        var segs = distance / 2;\n        segs = segs < len ? len : segs;\n        for (var i = 0; i < segs; i++) {\n            var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n            var idx = Math.floor(pos);\n\n            var w = pos - idx;\n\n            var p0;\n            var p1 = points[idx % len];\n            var p2;\n            var p3;\n            if (!isLoop) {\n                p0 = points[idx === 0 ? idx : idx - 1];\n                p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n                p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n            }\n            else {\n                p0 = points[(idx - 1 + len) % len];\n                p2 = points[(idx + 1) % len];\n                p3 = points[(idx + 2) % len];\n            }\n\n            var w2 = w * w;\n            var w3 = w * w2;\n\n            ret.push([\n                interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3),\n                interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)\n            ]);\n        }\n        return ret;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/smoothSpline.js\n// module id = 441\n// module chunks = 0 1 2 3 4","/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\n\n\n\n    var textContain = require('../../contain/text');\n    var BoundingRect = require('../../core/BoundingRect');\n\n    var tmpRect = new BoundingRect();\n\n    var RectText = function () {};\n\n    function parsePercent(value, maxValue) {\n        if (typeof value === 'string') {\n            if (value.lastIndexOf('%') >= 0) {\n                return parseFloat(value) / 100 * maxValue;\n            }\n            return parseFloat(value);\n        }\n        return value;\n    }\n\n    RectText.prototype = {\n\n        constructor: RectText,\n\n        /**\n         * Draw text in a rect with specified position.\n         * @param  {CanvasRenderingContext} ctx\n         * @param  {Object} rect Displayable rect\n         * @return {Object} textRect Alternative precalculated text bounding rect\n         */\n        drawRectText: function (ctx, rect, textRect) {\n            var style = this.style;\n            var text = style.text;\n            // Convert to string\n            text != null && (text += '');\n            if (!text) {\n                return;\n            }\n\n            // FIXME\n            ctx.save();\n\n            var x;\n            var y;\n            var textPosition = style.textPosition;\n            var textOffset = style.textOffset;\n            var distance = style.textDistance;\n            var align = style.textAlign;\n            var font = style.textFont || style.font;\n            var baseline = style.textBaseline;\n            var verticalAlign = style.textVerticalAlign;\n\n            textRect = textRect || textContain.getBoundingRect(text, font, align, baseline);\n\n            // Transform rect to view space\n            var transform = this.transform;\n            if (!style.textTransform) {\n                if (transform) {\n                    tmpRect.copy(rect);\n                    tmpRect.applyTransform(transform);\n                    rect = tmpRect;\n                }\n            }\n            else {\n                this.setTransform(ctx);\n            }\n\n            // Text position represented by coord\n            if (textPosition instanceof Array) {\n                // Percent\n                x = rect.x + parsePercent(textPosition[0], rect.width);\n                y = rect.y + parsePercent(textPosition[1], rect.height);\n                align = align || 'left';\n                baseline = baseline || 'top';\n\n                if (verticalAlign) {\n                    switch (verticalAlign) {\n                        case 'middle':\n                            y -= textRect.height / 2 - textRect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= textRect.height - textRect.lineHeight / 2;\n                            break;\n                        default:\n                            y += textRect.lineHeight / 2;\n                    }\n                    // Force bseline to be middle\n                    baseline = 'middle';\n                }\n            }\n            else {\n                var res = textContain.adjustTextPositionOnRect(\n                    textPosition, rect, textRect, distance\n                );\n                x = res.x;\n                y = res.y;\n                // Default align and baseline when has textPosition\n                align = align || res.textAlign;\n                baseline = baseline || res.textBaseline;\n            }\n\n            if (textOffset) {\n                x += textOffset[0];\n                y += textOffset[1];\n            }\n\n            // Use canvas default left textAlign. Giving invalid value will cause state not change\n            ctx.textAlign = align || 'left';\n            // Use canvas default alphabetic baseline\n            ctx.textBaseline = baseline || 'alphabetic';\n\n            var textFill = style.textFill;\n            var textStroke = style.textStroke;\n            textFill && (ctx.fillStyle = textFill);\n            textStroke && (ctx.strokeStyle = textStroke);\n\n            // TODO Invalid font\n            ctx.font = font || '12px sans-serif';\n\n            // Text shadow\n            // Always set shadowBlur and shadowOffset to avoid leak from displayable\n            ctx.shadowBlur = style.textShadowBlur;\n            ctx.shadowColor = style.textShadowColor || 'transparent';\n            ctx.shadowOffsetX = style.textShadowOffsetX;\n            ctx.shadowOffsetY = style.textShadowOffsetY;\n\n            var textLines = text.split('\\n');\n\n            if (style.textRotation) {\n                transform && ctx.translate(transform[4], transform[5]);\n                ctx.rotate(style.textRotation);\n                transform && ctx.translate(-transform[4], -transform[5]);\n            }\n\n            for (var i = 0; i < textLines.length; i++) {\n                textFill && ctx.fillText(textLines[i], x, y);\n                textStroke && ctx.strokeText(textLines[i], x, y);\n                y += textRect.lineHeight;\n            }\n\n            ctx.restore();\n        }\n    };\n\n    module.exports = RectText;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/mixin/RectText.js\n// module id = 442\n// module chunks = 0 1 2 3 4","/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\n \n\n    module.exports = require('../Path').extend({\n\n        type: 'arc',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        style: {\n\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r + x, unitY * r + y);\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Arc.js\n// module id = 443\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\n\n\n    var curveTool = require('../../core/curve');\n    var vec2 = require('../../core/vector');\n    var quadraticSubdivide = curveTool.quadraticSubdivide;\n    var cubicSubdivide = curveTool.cubicSubdivide;\n    var quadraticAt = curveTool.quadraticAt;\n    var cubicAt = curveTool.cubicAt;\n    var quadraticDerivativeAt = curveTool.quadraticDerivativeAt;\n    var cubicDerivativeAt = curveTool.cubicDerivativeAt;\n\n    var out = [];\n\n    function someVectorAt(shape, t, isTangent) {\n        var cpx2 = shape.cpx2;\n        var cpy2 = shape.cpy2;\n        if (cpx2 === null || cpy2 === null) {\n            return [\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t),\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)\n            ];\n        }\n        else {\n            return [\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t),\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)\n            ];\n        }\n    }\n    module.exports = require('../Path').extend({\n\n        type: 'bezier-curve',\n\n        shape: {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n            cpx1: 0,\n            cpy1: 0,\n            // cpx2: 0,\n            // cpy2: 0\n\n            // Curve show percent, for animating\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var cpx1 = shape.cpx1;\n            var cpy1 = shape.cpy1;\n            var cpx2 = shape.cpx2;\n            var cpy2 = shape.cpy2;\n            var percent = shape.percent;\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (cpx2 == null || cpy2 == null) {\n                if (percent < 1) {\n                    quadraticSubdivide(\n                        x1, cpx1, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    x2 = out[2];\n                    quadraticSubdivide(\n                        y1, cpy1, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    y2 = out[2];\n                }\n\n                ctx.quadraticCurveTo(\n                    cpx1, cpy1,\n                    x2, y2\n                );\n            }\n            else {\n                if (percent < 1) {\n                    cubicSubdivide(\n                        x1, cpx1, cpx2, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    cpx2 = out[2];\n                    x2 = out[3];\n                    cubicSubdivide(\n                        y1, cpy1, cpy2, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    cpy2 = out[2];\n                    y2 = out[3];\n                }\n                ctx.bezierCurveTo(\n                    cpx1, cpy1,\n                    cpx2, cpy2,\n                    x2, y2\n                );\n            }\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        pointAt: function (t) {\n            return someVectorAt(this.shape, t, false);\n        },\n\n        /**\n         * Get tangent at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        tangentAt: function (t) {\n            var p = someVectorAt(this.shape, t, true);\n            return vec2.normalize(p, p);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/BezierCurve.js\n// module id = 444\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\n\n\n\n    module.exports = require('../Path').extend({\n\n        type: 'circle',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0\n        },\n\n\n        buildPath : function (ctx, shape, inBundle) {\n            // Better stroking in ShapeBundle\n            // Always do it may have performence issue ( fill may be 2x more cost)\n            if (inBundle) {\n                ctx.moveTo(shape.cx + shape.r, shape.cy);\n            }\n            // Better stroking in ShapeBundle\n            // ctx.moveTo(shape.cx + shape.r, shape.cy);\n            ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Circle.js\n// module id = 445\n// module chunks = 0 1 2 3 4","/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\n\n    module.exports = require('../Path').extend({\n\n        type: 'line',\n\n        shape: {\n            // Start point\n            x1: 0,\n            y1: 0,\n            // End point\n            x2: 0,\n            y2: 0,\n\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var percent = shape.percent;\n\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (percent < 1) {\n                x2 = x1 * (1 - percent) + x2 * percent;\n                y2 = y1 * (1 - percent) + y2 * percent;\n            }\n            ctx.lineTo(x2, y2);\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} percent\n         * @return {Array.<number>}\n         */\n        pointAt: function (p) {\n            var shape = this.shape;\n            return [\n                shape.x1 * (1 - p) + shape.x2 * p,\n                shape.y1 * (1 - p) + shape.y2 * p\n            ];\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Line.js\n// module id = 446\n// module chunks = 0 1 2 3 4","/**\n * 多边形\n * @module zrender/shape/Polygon\n */\n\n\n    var polyHelper = require('../helper/poly');\n\n    module.exports = require('../Path').extend({\n        \n        type: 'polygon',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, true);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Polygon.js\n// module id = 447\n// module chunks = 0 1 2 3 4","/**\n * @module zrender/graphic/shape/Polyline\n */\n\n\n    var polyHelper = require('../helper/poly');\n\n    module.exports = require('../Path').extend({\n        \n        type: 'polyline',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        style: {\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, false);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Polyline.js\n// module id = 448\n// module chunks = 0 1 2 3 4","/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\n\n\n    var roundRectHelper = require('../helper/roundRect');\n\n    module.exports = require('../Path').extend({\n\n        type: 'rect',\n\n        shape: {\n            // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n            // r缩写为1         相当于 [1, 1, 1, 1]\n            // r缩写为[1]       相当于 [1, 1, 1, 1]\n            // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n            // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n            r: 0,\n\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            if (!shape.r) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, shape);\n            }\n            ctx.closePath();\n            return;\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Rect.js\n// module id = 449\n// module chunks = 0 1 2 3 4","/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\n\n\n    module.exports = require('../Path').extend({\n\n        type: 'ring',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0,\n            r0: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.cx;\n            var y = shape.cy;\n            var PI2 = Math.PI * 2;\n            ctx.moveTo(x + shape.r, y);\n            ctx.arc(x, y, shape.r, 0, PI2, false);\n            ctx.moveTo(x + shape.r0, y);\n            ctx.arc(x, y, shape.r0, 0, PI2, true);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Ring.js\n// module id = 450\n// module chunks = 0 1 2 3 4","/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\n\n\n\n    var env = require('../../core/env');\n    var Path = require('../Path');\n\n    var shadowTemp = [\n        ['shadowBlur', 0],\n        ['shadowColor', '#000'],\n        ['shadowOffsetX', 0],\n        ['shadowOffsetY', 0]\n    ];\n\n    module.exports = Path.extend({\n\n        type: 'sector',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r0: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        brush: (env.browser.ie && env.browser.version >= 11) // version: '11.0'\n            // Fix weird bug in some version of IE11 (like 11.0.9600.17801),\n            // where exception \"unexpected call to method or property access\"\n            // might be thrown when calling ctx.fill after a path whose area size\n            // is zero is drawn and ctx.clip() is called and shadowBlur is set.\n            // (e.g.,\n            //  ctx.moveTo(10, 10);\n            //  ctx.lineTo(20, 10);\n            //  ctx.closePath();\n            //  ctx.clip();\n            //  ctx.shadowBlur = 10;\n            //  ...\n            //  ctx.fill();\n            // )\n            ? function () {\n                var clipPaths = this.__clipPaths;\n                var style = this.style;\n                var modified;\n\n                if (clipPaths) {\n                    for (var i = 0; i < clipPaths.length; i++) {\n                        var shape = clipPaths[i] && clipPaths[i].shape;\n                        if (shape && shape.startAngle === shape.endAngle) {\n                            for (var j = 0; j < shadowTemp.length; j++) {\n                                shadowTemp[j][2] = style[shadowTemp[j][0]];\n                                style[shadowTemp[j][0]] = shadowTemp[j][1];\n                            }\n                            modified = true;\n                            break;\n                        }\n                    }\n                }\n\n                Path.prototype.brush.apply(this, arguments);\n\n                if (modified) {\n                    for (var j = 0; j < shadowTemp.length; j++) {\n                        style[shadowTemp[j][0]] = shadowTemp[j][2];\n                    }\n                }\n            }\n            : Path.prototype.brush,\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r0 = Math.max(shape.r0 || 0, 0);\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n\n            ctx.lineTo(unitX * r + x, unitY * r + y);\n\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n\n            ctx.lineTo(\n                Math.cos(endAngle) * r0 + x,\n                Math.sin(endAngle) * r0 + y\n            );\n\n            if (r0 !== 0) {\n                ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n            }\n\n            ctx.closePath();\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Sector.js\n// module id = 451\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * @module zrender/mixin/Animatable\n */\n\n\n    var Animator = require('../animation/Animator');\n    var util = require('../core/util');\n    var isString = util.isString;\n    var isFunction = util.isFunction;\n    var isObject = util.isObject;\n    var log = require('../core/log');\n\n    /**\n     * @alias modue:zrender/mixin/Animatable\n     * @constructor\n     */\n    var Animatable = function () {\n\n        /**\n         * @type {Array.<module:zrender/animation/Animator>}\n         * @readOnly\n         */\n        this.animators = [];\n    };\n\n    Animatable.prototype = {\n\n        constructor: Animatable,\n\n        /**\n         * 动画\n         *\n         * @param {string} path 需要添加动画的属性获取路径，可以通过a.b.c来获取深层的属性\n         * @param {boolean} [loop] 动画是否循环\n         * @return {module:zrender/animation/Animator}\n         * @example:\n         *     el.animate('style', false)\n         *         .when(1000, {x: 10} )\n         *         .done(function(){ // Animation done })\n         *         .start()\n         */\n        animate: function (path, loop) {\n            var target;\n            var animatingShape = false;\n            var el = this;\n            var zr = this.__zr;\n            if (path) {\n                var pathSplitted = path.split('.');\n                var prop = el;\n                // If animating shape\n                animatingShape = pathSplitted[0] === 'shape';\n                for (var i = 0, l = pathSplitted.length; i < l; i++) {\n                    if (!prop) {\n                        continue;\n                    }\n                    prop = prop[pathSplitted[i]];\n                }\n                if (prop) {\n                    target = prop;\n                }\n            }\n            else {\n                target = el;\n            }\n\n            if (!target) {\n                log(\n                    'Property \"'\n                    + path\n                    + '\" is not existed in element '\n                    + el.id\n                );\n                return;\n            }\n\n            var animators = el.animators;\n\n            var animator = new Animator(target, loop);\n\n            animator.during(function (target) {\n                el.dirty(animatingShape);\n            })\n            .done(function () {\n                // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n                animators.splice(util.indexOf(animators, animator), 1);\n            });\n\n            animators.push(animator);\n\n            // If animate after added to the zrender\n            if (zr) {\n                zr.animation.addAnimator(animator);\n            }\n\n            return animator;\n        },\n\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stopAnimation: function (forwardToLast) {\n            var animators = this.animators;\n            var len = animators.length;\n            for (var i = 0; i < len; i++) {\n                animators[i].stop(forwardToLast);\n            }\n            animators.length = 0;\n\n            return this;\n        },\n\n        /**\n         * @param {Object} target\n         * @param {number} [time=500] Time in ms\n         * @param {string} [easing='linear']\n         * @param {number} [delay=0]\n         * @param {Function} [callback]\n         *\n         * @example\n         *  // Animate position\n         *  el.animateTo({\n         *      position: [10, 10]\n         *  }, function () { // done })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n         *  el.animateTo({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100, 'cubicOut', function () { // done })\n         */\n         // TODO Return animation key\n        animateTo: function (target, time, delay, easing, callback) {\n            // animateTo(target, time, easing, callback);\n            if (isString(delay)) {\n                callback = easing;\n                easing = delay;\n                delay = 0;\n            }\n            // animateTo(target, time, delay, callback);\n            else if (isFunction(easing)) {\n                callback = easing;\n                easing = 'linear';\n                delay = 0;\n            }\n            // animateTo(target, time, callback);\n            else if (isFunction(delay)) {\n                callback = delay;\n                delay = 0;\n            }\n            // animateTo(target, callback)\n            else if (isFunction(time)) {\n                callback = time;\n                time = 500;\n            }\n            // animateTo(target)\n            else if (!time) {\n                time = 500;\n            }\n            // Stop all previous animations\n            this.stopAnimation();\n            this._animateToShallow('', this, target, time, delay, easing, callback);\n\n            // Animators may be removed immediately after start\n            // if there is nothing to animate\n            var animators = this.animators.slice();\n            var count = animators.length;\n            function done() {\n                count--;\n                if (!count) {\n                    callback && callback();\n                }\n            }\n\n            // No animators. This should be checked before animators[i].start(),\n            // because 'done' may be executed immediately if no need to animate.\n            if (!count) {\n                callback && callback();\n            }\n            // Start after all animators created\n            // Incase any animator is done immediately when all animation properties are not changed\n            for (var i = 0; i < animators.length; i++) {\n                animators[i]\n                    .done(done)\n                    .start(easing);\n            }\n        },\n\n        /**\n         * @private\n         * @param {string} path=''\n         * @param {Object} source=this\n         * @param {Object} target\n         * @param {number} [time=500]\n         * @param {number} [delay=0]\n         *\n         * @example\n         *  // Animate position\n         *  el._animateToShallow({\n         *      position: [10, 10]\n         *  })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms\n         *  el._animateToShallow({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100)\n         */\n        _animateToShallow: function (path, source, target, time, delay) {\n            var objShallow = {};\n            var propertyCount = 0;\n            for (var name in target) {\n                if (!target.hasOwnProperty(name)) {\n                    continue;\n                }\n\n                if (source[name] != null) {\n                    if (isObject(target[name]) && !util.isArrayLike(target[name])) {\n                        this._animateToShallow(\n                            path ? path + '.' + name : name,\n                            source[name],\n                            target[name],\n                            time,\n                            delay\n                        );\n                    }\n                    else {\n                        objShallow[name] = target[name];\n                        propertyCount++;\n                    }\n                }\n                else if (target[name] != null) {\n                    // Attr directly if not has property\n                    // FIXME, if some property not needed for element ?\n                    if (!path) {\n                        this.attr(name, target[name]);\n                    }\n                    else {  // Shape or style\n                        var props = {};\n                        props[path] = {};\n                        props[path][name] = target[name];\n                        this.attr(props);\n                    }\n                }\n            }\n\n            if (propertyCount > 0) {\n                this.animate(path, false)\n                    .when(time == null ? 500 : time, objShallow)\n                    .delay(delay || 0);\n            }\n\n            return this;\n        }\n    };\n\n    module.exports = Animatable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Animatable.js\n// module id = 452\n// module chunks = 0 1 2 3 4","// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\n\n    function Draggable() {\n\n        this.on('mousedown', this._dragStart, this);\n        this.on('mousemove', this._drag, this);\n        this.on('mouseup', this._dragEnd, this);\n        this.on('globalout', this._dragEnd, this);\n        // this._dropTarget = null;\n        // this._draggingTarget = null;\n\n        // this._x = 0;\n        // this._y = 0;\n    }\n\n    Draggable.prototype = {\n\n        constructor: Draggable,\n\n        _dragStart: function (e) {\n            var draggingTarget = e.target;\n            if (draggingTarget && draggingTarget.draggable) {\n                this._draggingTarget = draggingTarget;\n                draggingTarget.dragging = true;\n                this._x = e.offsetX;\n                this._y = e.offsetY;\n\n                this.dispatchToElement(draggingTarget, 'dragstart', e.event);\n            }\n        },\n\n        _drag: function (e) {\n            var draggingTarget = this._draggingTarget;\n            if (draggingTarget) {\n\n                var x = e.offsetX;\n                var y = e.offsetY;\n\n                var dx = x - this._x;\n                var dy = y - this._y;\n                this._x = x;\n                this._y = y;\n\n                draggingTarget.drift(dx, dy, e);\n                this.dispatchToElement(draggingTarget, 'drag', e.event);\n\n                var dropTarget = this.findHover(x, y, draggingTarget);\n                var lastDropTarget = this._dropTarget;\n                this._dropTarget = dropTarget;\n\n                if (draggingTarget !== dropTarget) {\n                    if (lastDropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(lastDropTarget, 'dragleave', e.event);\n                    }\n                    if (dropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(dropTarget, 'dragenter', e.event);\n                    }\n                }\n            }\n        },\n\n        _dragEnd: function (e) {\n            var draggingTarget = this._draggingTarget;\n\n            if (draggingTarget) {\n                draggingTarget.dragging = false;\n            }\n\n            this.dispatchToElement(draggingTarget, 'dragend', e.event);\n\n            if (this._dropTarget) {\n                this.dispatchToElement(this._dropTarget, 'drop', e.event);\n            }\n\n            this._draggingTarget = null;\n            this._dropTarget = null;\n        }\n\n    };\n\n    module.exports = Draggable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Draggable.js\n// module id = 453\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\n\n\n    var matrix = require('../core/matrix');\n    var vector = require('../core/vector');\n    var mIdentity = matrix.identity;\n\n    var EPSILON = 5e-5;\n\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n\n    /**\n     * @alias module:zrender/mixin/Transformable\n     * @constructor\n     */\n    var Transformable = function (opts) {\n        opts = opts || {};\n        // If there are no given position, rotation, scale\n        if (!opts.position) {\n            /**\n             * 平移\n             * @type {Array.<number>}\n             * @default [0, 0]\n             */\n            this.position = [0, 0];\n        }\n        if (opts.rotation == null) {\n            /**\n             * 旋转\n             * @type {Array.<number>}\n             * @default 0\n             */\n            this.rotation = 0;\n        }\n        if (!opts.scale) {\n            /**\n             * 缩放\n             * @type {Array.<number>}\n             * @default [1, 1]\n             */\n            this.scale = [1, 1];\n        }\n        /**\n         * 旋转和缩放的原点\n         * @type {Array.<number>}\n         * @default null\n         */\n        this.origin = this.origin || null;\n    };\n\n    var transformableProto = Transformable.prototype;\n    transformableProto.transform = null;\n\n    /**\n     * 判断是否需要有坐标变换\n     * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n     */\n    transformableProto.needLocalTransform = function () {\n        return isNotAroundZero(this.rotation)\n            || isNotAroundZero(this.position[0])\n            || isNotAroundZero(this.position[1])\n            || isNotAroundZero(this.scale[0] - 1)\n            || isNotAroundZero(this.scale[1] - 1);\n    };\n\n    transformableProto.updateTransform = function () {\n        var parent = this.parent;\n        var parentHasTransform = parent && parent.transform;\n        var needLocalTransform = this.needLocalTransform();\n\n        var m = this.transform;\n        if (!(needLocalTransform || parentHasTransform)) {\n            m && mIdentity(m);\n            return;\n        }\n\n        m = m || matrix.create();\n\n        if (needLocalTransform) {\n            this.getLocalTransform(m);\n        }\n        else {\n            mIdentity(m);\n        }\n\n        // 应用父节点变换\n        if (parentHasTransform) {\n            if (needLocalTransform) {\n                matrix.mul(m, parent.transform, m);\n            }\n            else {\n                matrix.copy(m, parent.transform);\n            }\n        }\n        // 保存这个变换矩阵\n        this.transform = m;\n\n        this.invTransform = this.invTransform || matrix.create();\n        matrix.invert(this.invTransform, m);\n    };\n\n    transformableProto.getLocalTransform = function (m) {\n        m = m || [];\n        mIdentity(m);\n\n        var origin = this.origin;\n\n        var scale = this.scale;\n        var rotation = this.rotation;\n        var position = this.position;\n        if (origin) {\n            // Translate to origin\n            m[4] -= origin[0];\n            m[5] -= origin[1];\n        }\n        matrix.scale(m, m, scale);\n        if (rotation) {\n            matrix.rotate(m, m, rotation);\n        }\n        if (origin) {\n            // Translate back from origin\n            m[4] += origin[0];\n            m[5] += origin[1];\n        }\n\n        m[4] += position[0];\n        m[5] += position[1];\n\n        return m;\n    };\n    /**\n     * 将自己的transform应用到context上\n     * @param {Context2D} ctx\n     */\n    transformableProto.setTransform = function (ctx) {\n        var m = this.transform;\n        var dpr = ctx.dpr || 1;\n        if (m) {\n            ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n        }\n        else {\n            ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n        }\n    };\n\n    transformableProto.restoreTransform = function (ctx) {\n        var m = this.transform;\n        var dpr = ctx.dpr || 1;\n        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n    }\n\n    var tmpTransform = [];\n\n    /**\n     * 分解`transform`矩阵到`position`, `rotation`, `scale`\n     */\n    transformableProto.decomposeTransform = function () {\n        if (!this.transform) {\n            return;\n        }\n        var parent = this.parent;\n        var m = this.transform;\n        if (parent && parent.transform) {\n            // Get local transform and decompose them to position, scale, rotation\n            matrix.mul(tmpTransform, parent.invTransform, m);\n            m = tmpTransform;\n        }\n        var sx = m[0] * m[0] + m[1] * m[1];\n        var sy = m[2] * m[2] + m[3] * m[3];\n        var position = this.position;\n        var scale = this.scale;\n        if (isNotAroundZero(sx - 1)) {\n            sx = Math.sqrt(sx);\n        }\n        if (isNotAroundZero(sy - 1)) {\n            sy = Math.sqrt(sy);\n        }\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        position[0] = m[4];\n        position[1] = m[5];\n        scale[0] = sx;\n        scale[1] = sy;\n        this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n    };\n\n    /**\n     * Get global scale\n     * @return {Array.<number>}\n     */\n    transformableProto.getGlobalScale = function () {\n        var m = this.transform;\n        if (!m) {\n            return [1, 1];\n        }\n        var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        return [sx, sy];\n    };\n    /**\n     * 变换坐标位置到 shape 的局部坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToLocal = function (x, y) {\n        var v2 = [x, y];\n        var invTransform = this.invTransform;\n        if (invTransform) {\n            vector.applyTransform(v2, v2, invTransform);\n        }\n        return v2;\n    };\n\n    /**\n     * 变换局部坐标位置到全局坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToGlobal = function (x, y) {\n        var v2 = [x, y];\n        var transform = this.transform;\n        if (transform) {\n            vector.applyTransform(v2, v2, transform);\n        }\n        return v2;\n    };\n\n    module.exports = Transformable;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Transformable.js\n// module id = 454\n// module chunks = 0 1 2 3 4","\n\n    var Path = require('../graphic/Path');\n    var PathProxy = require('../core/PathProxy');\n    var transformPath = require('./transformPath');\n    var matrix = require('../core/matrix');\n\n    // command chars\n    var cc = [\n        'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',\n        'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'\n    ];\n\n    var mathSqrt = Math.sqrt;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n    var PI = Math.PI;\n\n    var vMag = function(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n    };\n    var vRatio = function(u, v) {\n        return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n    };\n    var vAngle = function(u, v) {\n        return (u[0] * v[1] < u[1] * v[0] ? -1 : 1)\n                * Math.acos(vRatio(u, v));\n    };\n\n    function processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n        var psi = psiDeg * (PI / 180.0);\n        var xp = mathCos(psi) * (x1 - x2) / 2.0\n                 + mathSin(psi) * (y1 - y2) / 2.0;\n        var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0\n                 + mathCos(psi) * (y1 - y2) / 2.0;\n\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n\n        if (lambda > 1) {\n            rx *= mathSqrt(lambda);\n            ry *= mathSqrt(lambda);\n        }\n\n        var f = (fa === fs ? -1 : 1)\n            * mathSqrt((((rx * rx) * (ry * ry))\n                    - ((rx * rx) * (yp * yp))\n                    - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp)\n                    + (ry * ry) * (xp * xp))\n                ) || 0;\n\n        var cxp = f * rx * yp / ry;\n        var cyp = f * -ry * xp / rx;\n\n        var cx = (x1 + x2) / 2.0\n                 + mathCos(psi) * cxp\n                 - mathSin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0\n                + mathSin(psi) * cxp\n                + mathCos(psi) * cyp;\n\n        var theta = vAngle([ 1, 0 ], [ (xp - cxp) / rx, (yp - cyp) / ry ]);\n        var u = [ (xp - cxp) / rx, (yp - cyp) / ry ];\n        var v = [ (-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry ];\n        var dTheta = vAngle(u, v);\n\n        if (vRatio(u, v) <= -1) {\n            dTheta = PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * PI;\n        }\n\n        path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n    }\n\n    function createPathProxyFromString(data) {\n        if (!data) {\n            return [];\n        }\n\n        // command string\n        var cs = data.replace(/-/g, ' -')\n            .replace(/  /g, ' ')\n            .replace(/ /g, ',')\n            .replace(/,,/g, ',');\n\n        var n;\n        // create pipes so that we can split the data\n        for (n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n\n        // create array\n        var arr = cs.split('|');\n        // init context point\n        var cpx = 0;\n        var cpy = 0;\n\n        var path = new PathProxy();\n        var CMD = PathProxy.CMD;\n\n        var prevCmd;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            var off = 0;\n            var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n            var cmd;\n\n            if (p.length > 0 && p[0] === '') {\n                p.shift();\n            }\n\n            for (var i = 0; i < p.length; i++) {\n                p[i] = parseFloat(p[i]);\n            }\n            while (off < p.length && !isNaN(p[off])) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var ctlPtx;\n                var ctlPty;\n\n                var rx;\n                var ry;\n                var psi;\n                var fa;\n                var fs;\n\n                var x1 = cpx;\n                var y1 = cpy;\n\n                // convert l, H, h, V, and v to L\n                switch (c) {\n                    case 'l':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'm':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'C':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]\n                        );\n                        cpx = p[off - 2];\n                        cpy = p[off - 1];\n                        break;\n                    case 'c':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy\n                        );\n                        cpx += p[off - 2];\n                        cpy += p[off - 1];\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = cpx + p[off++];\n                        y1 = cpy + p[off++];\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 'Q':\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'q':\n                        x1 = p[off++] + cpx;\n                        y1 = p[off++] + cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                    case 'a':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                }\n            }\n\n            if (c === 'z' || c === 'Z') {\n                cmd = CMD.Z;\n                path.addData(cmd);\n            }\n\n            prevCmd = cmd;\n        }\n\n        path.toStatic();\n\n        return path;\n    }\n\n    // TODO Optimize double memory cost problem\n    function createPathOptions(str, opts) {\n        var pathProxy = createPathProxyFromString(str);\n        var transform;\n        opts = opts || {};\n        opts.buildPath = function (path) {\n            path.setData(pathProxy.data);\n            transform && transformPath(path, transform);\n            // Svg and vml renderer don't have context\n            var ctx = path.getContext();\n            if (ctx) {\n                path.rebuildPath(ctx);\n            }\n        };\n\n        opts.applyTransform = function (m) {\n            if (!transform) {\n                transform = matrix.create();\n            }\n            matrix.mul(transform, m, transform);\n            this.dirty(true);\n        };\n\n        return opts;\n    }\n\n    module.exports = {\n        /**\n         * Create a Path object from path string data\n         * http://www.w3.org/TR/SVG/paths.html#PathData\n         * @param  {Object} opts Other options\n         */\n        createFromString: function (str, opts) {\n            return new Path(createPathOptions(str, opts));\n        },\n\n        /**\n         * Create a Path class from path string data\n         * @param  {string} str\n         * @param  {Object} opts Other options\n         */\n        extendFromString: function (str, opts) {\n            return Path.extend(createPathOptions(str, opts));\n        },\n\n        /**\n         * Merge multiple paths\n         */\n        // TODO Apply transform\n        // TODO stroke dash\n        // TODO Optimize double memory cost problem\n        mergePath: function (pathEls, opts) {\n            var pathList = [];\n            var len = pathEls.length;\n            for (var i = 0; i < len; i++) {\n                var pathEl = pathEls[i];\n                if (pathEl.__dirty) {\n                    pathEl.buildPath(pathEl.path, pathEl.shape, true);\n                }\n                pathList.push(pathEl.path);\n            }\n\n            var pathBundle = new Path(opts);\n            pathBundle.buildPath = function (path) {\n                path.appendPath(pathList);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            };\n\n            return pathBundle;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/path.js\n// module id = 455\n// module chunks = 0 1 2 3 4","\n\n    var CMD = require('../core/PathProxy').CMD;\n    var vec2 = require('../core/vector');\n    var v2ApplyTransform = vec2.applyTransform;\n\n    var points = [[], [], []];\n    var mathSqrt = Math.sqrt;\n    var mathAtan2 = Math.atan2;\n    function transformPath(path, m) {\n        var data = path.data;\n        var cmd;\n        var nPoint;\n        var i;\n        var j;\n        var k;\n        var p;\n\n        var M = CMD.M;\n        var C = CMD.C;\n        var L = CMD.L;\n        var R = CMD.R;\n        var A = CMD.A;\n        var Q = CMD.Q;\n\n        for (i = 0, j = 0; i < data.length;) {\n            cmd = data[i++];\n            j = i;\n            nPoint = 0;\n\n            switch (cmd) {\n                case M:\n                    nPoint = 1;\n                    break;\n                case L:\n                    nPoint = 1;\n                    break;\n                case C:\n                    nPoint = 3;\n                    break;\n                case Q:\n                    nPoint = 2;\n                    break;\n                case A:\n                    var x = m[4];\n                    var y = m[5];\n                    var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n                    var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n                    var angle = mathAtan2(-m[1] / sy, m[0] / sx);\n                    // cx\n                    data[i++] += x;\n                    // cy\n                    data[i++] += y;\n                    // Scale rx and ry\n                    // FIXME Assume psi is 0 here\n                    data[i++] *= sx;\n                    data[i++] *= sy;\n\n                    // Start angle\n                    data[i++] += angle;\n                    // end angle\n                    data[i++] += angle;\n                    // FIXME psi\n                    i += 2;\n                    j = i;\n                    break;\n                case R:\n                    // x0, y0\n                    p[0] = data[i++];\n                    p[1] = data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n                    // x1, y1\n                    p[0] += data[i++];\n                    p[1] += data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n            }\n\n            for (k = 0; k < nPoint; k++) {\n                var p = points[k];\n                p[0] = data[i++];\n                p[1] = data[i++];\n\n                v2ApplyTransform(p, p, m);\n                // Write back\n                data[j++] = p[0];\n                data[j++] = p[1];\n            }\n        }\n    }\n\n    module.exports = transformPath;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/transformPath.js\n// module id = 456\n// module chunks = 0 1 2 3 4","/*!\n * ZRender, a high performance 2d drawing library.\n *\n * Copyright (c) 2013, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n */\n// Global defines\n\n    var guid = require('./core/guid');\n    var env = require('./core/env');\n    var zrUtil = require('./core/util');\n\n    var Handler = require('./Handler');\n    var Storage = require('./Storage');\n    var Animation = require('./animation/Animation');\n    var HandlerProxy = require('./dom/HandlerProxy');\n\n    var useVML = !env.canvasSupported;\n\n    var painterCtors = {\n        canvas: require('./Painter')\n    };\n\n    var instances = {};    // ZRender实例map索引\n\n    var zrender = {};\n\n    /**\n     * @type {string}\n     */\n    zrender.version = '3.3.0';\n\n    /**\n     * Initializing a zrender instance\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @return {module:zrender/ZRender}\n     */\n    zrender.init = function(dom, opts) {\n        var zr = new ZRender(guid(), dom, opts);\n        instances[zr.id] = zr;\n        return zr;\n    };\n\n    /**\n     * Dispose zrender instance\n     * @param {module:zrender/ZRender} zr\n     */\n    zrender.dispose = function (zr) {\n        if (zr) {\n            zr.dispose();\n        }\n        else {\n            for (var key in instances) {\n                if (instances.hasOwnProperty(key)) {\n                    instances[key].dispose();\n                }\n            }\n            instances = {};\n        }\n\n        return zrender;\n    };\n\n    /**\n     * Get zrender instance by id\n     * @param {string} id zrender instance id\n     * @return {module:zrender/ZRender}\n     */\n    zrender.getInstance = function (id) {\n        return instances[id];\n    };\n\n    zrender.registerPainter = function (name, Ctor) {\n        painterCtors[name] = Ctor;\n    };\n\n    function delInstance(id) {\n        delete instances[id];\n    }\n\n    /**\n     * @module zrender/ZRender\n     */\n    /**\n     * @constructor\n     * @alias module:zrender/ZRender\n     * @param {string} id\n     * @param {HTMLDomElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     */\n    var ZRender = function(id, dom, opts) {\n\n        opts = opts || {};\n\n        /**\n         * @type {HTMLDomElement}\n         */\n        this.dom = dom;\n\n        /**\n         * @type {string}\n         */\n        this.id = id;\n\n        var self = this;\n        var storage = new Storage();\n\n        var rendererType = opts.renderer;\n        if (useVML) {\n            if (!painterCtors.vml) {\n                throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n            }\n            rendererType = 'vml';\n        }\n        else if (!rendererType || !painterCtors[rendererType]) {\n            rendererType = 'canvas';\n        }\n        var painter = new painterCtors[rendererType](dom, storage, opts);\n\n        this.storage = storage;\n        this.painter = painter;\n\n        var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n        this.handler = new Handler(storage, painter, handerProxy, painter.root);\n\n        /**\n         * @type {module:zrender/animation/Animation}\n         */\n        this.animation = new Animation({\n            stage: {\n                update: zrUtil.bind(this.flush, this)\n            }\n        });\n        this.animation.start();\n\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._needsRefresh;\n\n        // 修改 storage.delFromMap, 每次删除元素之前删除动画\n        // FIXME 有点ugly\n        var oldDelFromMap = storage.delFromMap;\n        var oldAddToMap = storage.addToMap;\n\n        storage.delFromMap = function (elId) {\n            var el = storage.get(elId);\n\n            oldDelFromMap.call(storage, elId);\n\n            el && el.removeSelfFromZr(self);\n        };\n\n        storage.addToMap = function (el) {\n            oldAddToMap.call(storage, el);\n\n            el.addSelfToZr(self);\n        };\n    };\n\n    ZRender.prototype = {\n\n        constructor: ZRender,\n        /**\n         * 获取实例唯一标识\n         * @return {string}\n         */\n        getId: function () {\n            return this.id;\n        },\n\n        /**\n         * 添加元素\n         * @param  {module:zrender/Element} el\n         */\n        add: function (el) {\n            this.storage.addRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * 删除元素\n         * @param  {module:zrender/Element} el\n         */\n        remove: function (el) {\n            this.storage.delRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Change configuration of layer\n         * @param {string} zLevel\n         * @param {Object} config\n         * @param {string} [config.clearColor=0] Clear color\n         * @param {string} [config.motionBlur=false] If enable motion blur\n         * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n        */\n        configLayer: function (zLevel, config) {\n            this.painter.configLayer(zLevel, config);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Repaint the canvas immediately\n         */\n        refreshImmediately: function () {\n            // Clear needsRefresh ahead to avoid something wrong happens in refresh\n            // Or it will cause zrender refreshes again and again.\n            this._needsRefresh = false;\n            this.painter.refresh();\n            /**\n             * Avoid trigger zr.refresh in Element#beforeUpdate hook\n             */\n            this._needsRefresh = false;\n        },\n\n        /**\n         * Mark and repaint the canvas in the next frame of browser\n         */\n        refresh: function() {\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Perform all refresh\n         */\n        flush: function () {\n            if (this._needsRefresh) {\n                this.refreshImmediately();\n            }\n            if (this._needsRefreshHover) {\n                this.refreshHoverImmediately();\n            }\n        },\n\n        /**\n         * Add element to hover layer\n         * @param  {module:zrender/Element} el\n         * @param {Object} style\n         */\n        addHover: function (el, style) {\n            if (this.painter.addHover) {\n                this.painter.addHover(el, style);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Add element from hover layer\n         * @param  {module:zrender/Element} el\n         */\n        removeHover: function (el) {\n            if (this.painter.removeHover) {\n                this.painter.removeHover(el);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Clear all hover elements in hover layer\n         * @param  {module:zrender/Element} el\n         */\n        clearHover: function () {\n            if (this.painter.clearHover) {\n                this.painter.clearHover();\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Refresh hover in next frame\n         */\n        refreshHover: function () {\n            this._needsRefreshHover = true;\n        },\n\n        /**\n         * Refresh hover immediately\n         */\n        refreshHoverImmediately: function () {\n            this._needsRefreshHover = false;\n            this.painter.refreshHover && this.painter.refreshHover();\n        },\n\n        /**\n         * Resize the canvas.\n         * Should be invoked when container size is changed\n         * @param {Object} [opts]\n         * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n         * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n         */\n        resize: function(opts) {\n            opts = opts || {};\n            this.painter.resize(opts.width, opts.height);\n            this.handler.resize();\n        },\n\n        /**\n         * Stop and clear all animation immediately\n         */\n        clearAnimation: function () {\n            this.animation.clear();\n        },\n\n        /**\n         * Get container width\n         */\n        getWidth: function() {\n            return this.painter.getWidth();\n        },\n\n        /**\n         * Get container height\n         */\n        getHeight: function() {\n            return this.painter.getHeight();\n        },\n\n        /**\n         * Export the canvas as Base64 URL\n         * @param {string} type\n         * @param {string} [backgroundColor='#fff']\n         * @return {string} Base64 URL\n         */\n        // toDataURL: function(type, backgroundColor) {\n        //     return this.painter.getRenderedCanvas({\n        //         backgroundColor: backgroundColor\n        //     }).toDataURL(type);\n        // },\n\n        /**\n         * Converting a path to image.\n         * It has much better performance of drawing image rather than drawing a vector path.\n         * @param {module:zrender/graphic/Path} e\n         * @param {number} width\n         * @param {number} height\n         */\n        pathToImage: function(e, width, height) {\n            var id = guid();\n            return this.painter.pathToImage(id, e, width, height);\n        },\n\n        /**\n         * Set default cursor\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            this.handler.setCursorStyle(cursorStyle);\n        },\n\n        /**\n         * Bind event\n         *\n         * @param {string} eventName Event name\n         * @param {Function} eventHandler Handler function\n         * @param {Object} [context] Context object\n         */\n        on: function(eventName, eventHandler, context) {\n            this.handler.on(eventName, eventHandler, context);\n        },\n\n        /**\n         * Unbind event\n         * @param {string} eventName Event name\n         * @param {Function} [eventHandler] Handler function\n         */\n        off: function(eventName, eventHandler) {\n            this.handler.off(eventName, eventHandler);\n        },\n\n        /**\n         * Trigger event manually\n         *\n         * @param {string} eventName Event name\n         * @param {event=} event Event object\n         */\n        trigger: function (eventName, event) {\n            this.handler.trigger(eventName, event);\n        },\n\n\n        /**\n         * Clear all objects and the canvas.\n         */\n        clear: function () {\n            this.storage.delRoot();\n            this.painter.clear();\n        },\n\n        /**\n         * Dispose self.\n         */\n        dispose: function () {\n            this.animation.stop();\n\n            this.clear();\n            this.storage.dispose();\n            this.painter.dispose();\n            this.handler.dispose();\n\n            this.animation =\n            this.storage =\n            this.painter =\n            this.handler = null;\n\n            delInstance(this.id);\n        }\n    };\n\n    module.exports = zrender;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/zrender.js\n// module id = 457\n// module chunks = 0 1 2 3 4","import { fetch } from 'utils/fetch';\n\nexport function getList() {\n  return fetch({\n    url: '/article/list',\n    method: 'get'\n  });\n}\n\nexport function getArticle() {\n  return fetch({\n    url: '/article/detail',\n    method: 'get'\n  });\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/article.js","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    require('../coord/cartesian/Grid');\n\n    require('./bar/BarSeries');\n    require('./bar/BarView');\n\n    var barLayoutGrid = require('../layout/barGrid');\n    var echarts = require('../echarts');\n\n    echarts.registerLayout(zrUtil.curry(barLayoutGrid, 'bar'));\n    // Visual coding for legend\n    echarts.registerVisual(function (ecModel) {\n        ecModel.eachSeriesByType('bar', function (seriesModel) {\n            var data = seriesModel.getData();\n            data.setVisual('legendSymbol', 'roundRect');\n        });\n    });\n\n    // In case developer forget to include grid component\n    require('../component/grid');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar.js\n// module id = 459\n// module chunks = 0 1 2 3","\n\n    module.exports = require('./BaseBarSeries').extend({\n\n        type: 'series.bar',\n\n        dependencies: ['grid', 'polar'],\n\n        brushSelector: 'rect'\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar/BarSeries.js\n// module id = 460\n// module chunks = 0 1 2 3","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var helper = require('./helper');\n\n    var BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'normal', 'barBorderWidth'];\n\n    // FIXME\n    // Just for compatible with ec2.\n    zrUtil.extend(require('../../model/Model').prototype, require('./barItemStyle'));\n\n    var BarView = require('../../echarts').extendChartView({\n\n        type: 'bar',\n\n        render: function (seriesModel, ecModel, api) {\n            var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n            if (coordinateSystemType === 'cartesian2d') {\n                this._renderOnCartesian(seriesModel, ecModel, api);\n            }\n\n            return this.group;\n        },\n\n        dispose: zrUtil.noop,\n\n        _renderOnCartesian: function (seriesModel, ecModel, api) {\n            var group = this.group;\n            var data = seriesModel.getData();\n            var oldData = this._data;\n\n            var cartesian = seriesModel.coordinateSystem;\n            var baseAxis = cartesian.getBaseAxis();\n            var isHorizontal = baseAxis.isHorizontal();\n            var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n\n            data.diff(oldData)\n                .add(function (dataIndex) {\n                    if (!data.hasValue(dataIndex)) {\n                        return;\n                    }\n\n                    var itemModel = data.getItemModel(dataIndex);\n                    var layout = getRectItemLayout(data, dataIndex, itemModel);\n                    var el = createRect(data, dataIndex, itemModel, layout, isHorizontal, animationModel);\n                    data.setItemGraphicEl(dataIndex, el);\n                    group.add(el);\n\n                    updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal);\n                })\n                .update(function (newIndex, oldIndex) {\n                    var el = oldData.getItemGraphicEl(oldIndex);\n\n                    if (!data.hasValue(newIndex)) {\n                        group.remove(el);\n                        return;\n                    }\n\n                    var itemModel = data.getItemModel(newIndex);\n                    var layout = getRectItemLayout(data, newIndex, itemModel);\n\n                    if (el) {\n                        graphic.updateProps(el, {shape: layout}, animationModel, newIndex);\n                    }\n                    else {\n                        el = createRect(data, newIndex, itemModel, layout, isHorizontal, animationModel, true);\n                    }\n\n                    data.setItemGraphicEl(newIndex, el);\n                    // Add back\n                    group.add(el);\n\n                    updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontal);\n                })\n                .remove(function (dataIndex) {\n                    var el = oldData.getItemGraphicEl(dataIndex);\n                    el && removeRect(dataIndex, animationModel, el);\n                })\n                .execute();\n\n            this._data = data;\n        },\n\n        remove: function (ecModel, api) {\n            var group = this.group;\n            var data = this._data;\n            if (ecModel.get('animation')) {\n                if (data) {\n                    data.eachItemGraphicEl(function (el) {\n                        removeRect(el.dataIndex, ecModel, el);\n                    });\n                }\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    });\n\n    function createRect(data, dataIndex, itemModel, layout, isHorizontal, animationModel, isUpdate) {\n        var rect = new graphic.Rect({shape: zrUtil.extend({}, layout)});\n\n        // Animation\n        if (animationModel) {\n            var rectShape = rect.shape;\n            var animateProperty = isHorizontal ? 'height' : 'width';\n            var animateTarget = {};\n            rectShape[animateProperty] = 0;\n            animateTarget[animateProperty] = layout[animateProperty];\n            graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n                shape: animateTarget\n            }, animationModel, dataIndex);\n        }\n\n        return rect;\n    }\n\n    function removeRect(dataIndex, animationModel, el) {\n        // Not show text when animating\n        el.style.text = '';\n        graphic.updateProps(el, {\n            shape: {\n                width: 0\n            }\n        }, animationModel, dataIndex, function () {\n            el.parent && el.parent.remove(el);\n        });\n    }\n\n    function getRectItemLayout(data, dataIndex, itemModel) {\n        var layout = data.getItemLayout(dataIndex);\n        var fixedLineWidth = getLineWidth(itemModel, layout);\n\n        // fix layout with lineWidth\n        var signX = layout.width > 0 ? 1 : -1;\n        var signY = layout.height > 0 ? 1 : -1;\n        return {\n            x: layout.x + signX * fixedLineWidth / 2,\n            y: layout.y + signY * fixedLineWidth / 2,\n            width: layout.width - signX * fixedLineWidth,\n            height: layout.height - signY * fixedLineWidth\n        };\n    }\n\n    function updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal) {\n        var color = data.getItemVisual(dataIndex, 'color');\n        var opacity = data.getItemVisual(dataIndex, 'opacity');\n        var itemStyleModel = itemModel.getModel('itemStyle.normal');\n        var hoverStyle = itemModel.getModel('itemStyle.emphasis').getBarItemStyle();\n\n        el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n\n        el.useStyle(zrUtil.defaults(\n            {\n                fill: color,\n                opacity: opacity\n            },\n            itemStyleModel.getBarItemStyle()\n        ));\n\n        var labelPositionOutside = isHorizontal\n            ? (layout.height > 0 ? 'bottom' : 'top')\n            : (layout.width > 0 ? 'left' : 'right');\n\n        helper.setLabel(\n            el.style, hoverStyle, itemModel, color,\n            seriesModel, dataIndex, labelPositionOutside\n        );\n\n        graphic.setHoverStyle(el, hoverStyle);\n    }\n\n    // In case width or height are too small.\n    function getLineWidth(itemModel, rawLayout) {\n        var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n        return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n    }\n\n    module.exports = BarView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar/BarView.js\n// module id = 461\n// module chunks = 0 1 2 3","'use strict';\n\n\n    var SeriesModel = require('../../model/Series');\n    var createListFromArray = require('../helper/createListFromArray');\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.__base_bar__',\n\n        getInitialData: function (option, ecModel) {\n            if (__DEV__) {\n                var coordSys = option.coordinateSystem;\n                if (coordSys !== 'cartesian2d') {\n                    throw new Error('Bar only support cartesian2d coordinateSystem');\n                }\n            }\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        getMarkerPosition: function (value) {\n            var coordSys = this.coordinateSystem;\n            if (coordSys) {\n                // PENDING if clamp ?\n                var pt = coordSys.dataToPoint(value, true);\n                var data = this.getData();\n                var offset = data.getLayout('offset');\n                var size = data.getLayout('size');\n                var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n                pt[offsetIndex] += offset + size / 2;\n                return pt;\n            }\n            return [NaN, NaN];\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n            // stack: null\n\n            // Cartesian coordinate system\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // 最小高度改为0\n            barMinHeight: 0,\n\n            // barMaxWidth: null,\n            // 默认自适应\n            // barWidth: null,\n            // 柱间距离，默认为柱形宽度的30%，可设固定值\n            // barGap: '30%',\n            // 类目间柱形距离，默认为类目间距的20%，可设固定值\n            // barCategoryGap: '20%',\n            // label: {\n            //     normal: {\n            //         show: false\n            //     }\n            // },\n            itemStyle: {\n                normal: {\n                    // color: '各异'\n                },\n                emphasis: {}\n            }\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar/BaseBarSeries.js\n// module id = 462\n// module chunks = 0 1 2 3","\n\n\n    var getBarItemStyle = require('../../model/mixin/makeStyleMapper')(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            // Compatitable with 2\n            ['stroke', 'barBorderColor'],\n            ['lineWidth', 'barBorderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getBarItemStyle: function (excludes) {\n            var style = getBarItemStyle.call(this, excludes);\n            if (this.getBorderLineDash) {\n                var lineDash = this.getBorderLineDash();\n                lineDash && (style.lineDash = lineDash);\n            }\n            return style;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar/barItemStyle.js\n// module id = 463\n// module chunks = 0 1 2 3","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n\n    var helper = {};\n\n    helper.setLabel = function (\n        normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside\n    ) {\n        var labelModel = itemModel.getModel('label.normal');\n        var hoverLabelModel = itemModel.getModel('label.emphasis');\n\n        if (labelModel.get('show')) {\n            setLabel(\n                normalStyle, labelModel, color,\n                zrUtil.retrieve(\n                    seriesModel.getFormattedLabel(dataIndex, 'normal'),\n                    seriesModel.getRawValue(dataIndex)\n                ),\n                labelPositionOutside\n            );\n        }\n        else {\n            normalStyle.text = '';\n        }\n\n        if (hoverLabelModel.get('show')) {\n            setLabel(\n                hoverStyle, hoverLabelModel, color,\n                zrUtil.retrieve(\n                    seriesModel.getFormattedLabel(dataIndex, 'emphasis'),\n                    seriesModel.getRawValue(dataIndex)\n                ),\n                labelPositionOutside\n            );\n        }\n        else {\n            hoverStyle.text = '';\n        }\n    };\n\n    function setLabel(style, model, color, labelText, labelPositionOutside) {\n        graphic.setText(style, model, color);\n        style.text = labelText;\n        if (style.textPosition === 'outside') {\n            style.textPosition = labelPositionOutside;\n        }\n    }\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar/helper.js\n// module id = 464\n// module chunks = 0 1 2 3","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('../util/number');\n    var parsePercent = numberUtil.parsePercent;\n\n    function getSeriesStackId(seriesModel) {\n        return seriesModel.get('stack') || '__ec_stack_' + seriesModel.seriesIndex;\n    }\n\n    function getAxisKey(axis) {\n        return axis.dim + axis.index;\n    }\n\n    function calBarWidthAndOffset(barSeries, api) {\n        // Columns info on each category axis. Key is cartesian name\n        var columnsMap = {};\n\n        zrUtil.each(barSeries, function (seriesModel, idx) {\n            var data = seriesModel.getData();\n            var cartesian = seriesModel.coordinateSystem;\n\n            var baseAxis = cartesian.getBaseAxis();\n            var axisExtent = baseAxis.getExtent();\n            var bandWidth = baseAxis.type === 'category'\n                ? baseAxis.getBandWidth()\n                : (Math.abs(axisExtent[1] - axisExtent[0]) / data.count());\n\n            var columnsOnAxis = columnsMap[getAxisKey(baseAxis)] || {\n                bandWidth: bandWidth,\n                remainedWidth: bandWidth,\n                autoWidthCount: 0,\n                categoryGap: '20%',\n                gap: '30%',\n                stacks: {}\n            };\n            var stacks = columnsOnAxis.stacks;\n            columnsMap[getAxisKey(baseAxis)] = columnsOnAxis;\n\n            var stackId = getSeriesStackId(seriesModel);\n\n            if (!stacks[stackId]) {\n                columnsOnAxis.autoWidthCount++;\n            }\n            stacks[stackId] = stacks[stackId] || {\n                width: 0,\n                maxWidth: 0\n            };\n\n            var barWidth = parsePercent(\n                seriesModel.get('barWidth'), bandWidth\n            );\n            var barMaxWidth = parsePercent(\n                seriesModel.get('barMaxWidth'), bandWidth\n            );\n            var barGap = seriesModel.get('barGap');\n            var barCategoryGap = seriesModel.get('barCategoryGap');\n\n            // Caution: In a single coordinate system, these barGrid attributes\n            // will be shared by series. Consider that they have default values,\n            // only the attributes set on the last series will work.\n            // Do not change this fact unless there will be a break change.\n\n            // TODO\n            if (barWidth && !stacks[stackId].width) {\n                barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n                stacks[stackId].width = barWidth;\n                columnsOnAxis.remainedWidth -= barWidth;\n            }\n\n            barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n            (barGap != null) && (columnsOnAxis.gap = barGap);\n            (barCategoryGap != null) && (columnsOnAxis.categoryGap = barCategoryGap);\n        });\n\n        var result = {};\n\n        zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n\n            result[coordSysName] = {};\n\n            var stacks = columnsOnAxis.stacks;\n            var bandWidth = columnsOnAxis.bandWidth;\n            var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n            var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n\n            var remainedWidth = columnsOnAxis.remainedWidth;\n            var autoWidthCount = columnsOnAxis.autoWidthCount;\n            var autoWidth = (remainedWidth - categoryGap)\n                / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n            autoWidth = Math.max(autoWidth, 0);\n\n            // Find if any auto calculated bar exceeded maxBarWidth\n            zrUtil.each(stacks, function (column, stack) {\n                var maxWidth = column.maxWidth;\n                if (!column.width && maxWidth && maxWidth < autoWidth) {\n                    maxWidth = Math.min(maxWidth, remainedWidth);\n                    remainedWidth -= maxWidth;\n                    column.width = maxWidth;\n                    autoWidthCount--;\n                }\n            });\n\n            // Recalculate width again\n            autoWidth = (remainedWidth - categoryGap)\n                / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n            autoWidth = Math.max(autoWidth, 0);\n\n            var widthSum = 0;\n            var lastColumn;\n            zrUtil.each(stacks, function (column, idx) {\n                if (!column.width) {\n                    column.width = autoWidth;\n                }\n                lastColumn = column;\n                widthSum += column.width * (1 + barGapPercent);\n            });\n            if (lastColumn) {\n                widthSum -= lastColumn.width * barGapPercent;\n            }\n\n            var offset = -widthSum / 2;\n            zrUtil.each(stacks, function (column, stackId) {\n                result[coordSysName][stackId] = result[coordSysName][stackId] || {\n                    offset: offset,\n                    width: column.width\n                };\n\n                offset += column.width * (1 + barGapPercent);\n            });\n        });\n\n        return result;\n    }\n\n    /**\n     * @param {string} seriesType\n     * @param {module:echarts/model/Global} ecModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function barLayoutGrid(seriesType, ecModel, api) {\n\n        var barWidthAndOffset = calBarWidthAndOffset(\n            zrUtil.filter(\n                ecModel.getSeriesByType(seriesType),\n                function (seriesModel) {\n                    return !ecModel.isSeriesFiltered(seriesModel)\n                        && seriesModel.coordinateSystem\n                        && seriesModel.coordinateSystem.type === 'cartesian2d';\n                }\n            )\n        );\n\n        var lastStackCoords = {};\n        var lastStackCoordsOrigin = {};\n\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n\n            var data = seriesModel.getData();\n            var cartesian = seriesModel.coordinateSystem;\n            var baseAxis = cartesian.getBaseAxis();\n\n            var stackId = getSeriesStackId(seriesModel);\n            var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n            var columnOffset = columnLayoutInfo.offset;\n            var columnWidth = columnLayoutInfo.width;\n            var valueAxis = cartesian.getOtherAxis(baseAxis);\n\n            var barMinHeight = seriesModel.get('barMinHeight') || 0;\n\n            var valueAxisStart = baseAxis.onZero\n                ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0))\n                : valueAxis.getGlobalExtent()[0];\n\n            var coords = cartesian.dataToPoints(data, true);\n            lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n            lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n            data.setLayout({\n                offset: columnOffset,\n                size: columnWidth\n            });\n\n            data.each(valueAxis.dim, function (value, idx) {\n                if (isNaN(value)) {\n                    return;\n                }\n\n                if (!lastStackCoords[stackId][idx]) {\n                    lastStackCoords[stackId][idx] = {\n                        p: valueAxisStart, // Positive stack\n                        n: valueAxisStart  // Negative stack\n                    };\n                    lastStackCoordsOrigin[stackId][idx] = {\n                        p: valueAxisStart, // Positive stack\n                        n: valueAxisStart  // Negative stack\n                    };\n                }\n                var sign = value >= 0 ? 'p' : 'n';\n                var coord = coords[idx];\n                var lastCoord = lastStackCoords[stackId][idx][sign];\n                var lastCoordOrigin = lastStackCoordsOrigin[stackId][idx][sign];\n                var x;\n                var y;\n                var width;\n                var height;\n\n                if (valueAxis.isHorizontal()) {\n                    x = lastCoord;\n                    y = coord[1] + columnOffset;\n                    width = coord[0] - lastCoordOrigin;\n                    height = columnWidth;\n\n                    lastStackCoordsOrigin[stackId][idx][sign] += width;\n                    if (Math.abs(width) < barMinHeight) {\n                        width = (width < 0 ? -1 : 1) * barMinHeight;\n                    }\n                    lastStackCoords[stackId][idx][sign] += width;\n                }\n                else {\n                    x = coord[0] + columnOffset;\n                    y = lastCoord;\n                    width = columnWidth;\n                    height = coord[1] - lastCoordOrigin;\n\n                    lastStackCoordsOrigin[stackId][idx][sign] += height;\n                    if (Math.abs(height) < barMinHeight) {\n                        // Include zero to has a positive bar\n                        height = (height <= 0 ? -1 : 1) * barMinHeight;\n                    }\n                    lastStackCoords[stackId][idx][sign] += height;\n                }\n\n                data.setItemLayout(idx, {\n                    x: x,\n                    y: y,\n                    width: width,\n                    height: height\n                });\n            }, true);\n\n        }, this);\n    }\n\n    module.exports = barLayoutGrid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/layout/barGrid.js\n// module id = 466\n// module chunks = 0 1 2 3","\n/* styles */\nrequire(\"!!../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-33891d58\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n\nvar Component = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"),\n  /* template */\n  require(\"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-33891d58\\\"}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"),\n  /* scopeId */\n  \"data-v-33891d58\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/PanThumb/index.vue\n// module id = 468\n// module chunks = 0 10 12","<template>\n    <div class=\"pan-item\" :style=\"{zIndex:zIndex,height:height,width:width}\">\n        <div class=\"pan-info\">\n            <div class=\"pan-info-roles-container\">\n                <slot>pan</slot>\n            </div>\n        </div>\n        <img class=\"pan-thumb\" :src=\"image\">\n    </div>\n</template>\n<script>\n    export default {\n      name: 'PanThumb',\n      props: {\n        image: {\n          type: String,\n          required: true\n        },\n        zIndex: {\n          type: Number,\n          default: 100\n        },\n        width: {\n          type: String,\n          default: '150px'\n        },\n        height: {\n          type: String,\n          default: '150px'\n        }\n      },\n      data() {\n        return {};\n      }\n    };\n</script>\n\n<style scoped>\n    .pan-item {\n        width: 200px;\n        height: 200px;\n        border-radius: 50%;\n        display: inline-block;\n        position: relative;\n        cursor: default;\n        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);\n    }\n\n    .pan-info-roles-container {\n        padding: 20px;\n        text-align: center;\n    }\n\n    .pan-thumb {\n        width: 100%;\n        height: 100%;\n        background-size: 100%;\n        border-radius: 50%;\n        overflow: hidden;\n        position: absolute;\n        transform-origin: 95% 40%;\n        transition: all 0.3s ease-in-out;\n    }\n\n    .pan-thumb:after {\n        content: '';\n        width: 8px;\n        height: 8px;\n        position: absolute;\n        border-radius: 50%;\n        top: 40%;\n        left: 95%;\n        margin: -4px 0 0 -4px;\n        background: radial-gradient(ellipse at center, rgba(14, 14, 14, 1) 0%, rgba(125, 126, 125, 1) 100%);\n        box-shadow: 0 0 1px rgba(255, 255, 255, 0.9);\n    }\n\n    .pan-info {\n        position: absolute;\n        width: inherit;\n        height: inherit;\n        border-radius: 50%;\n        overflow: hidden;\n        box-shadow: inset 0 0 0 5px rgba(0, 0, 0, 0.05);\n    }\n\n    .pan-info h3 {\n        color: #fff;\n        text-transform: uppercase;\n        position: relative;\n        letter-spacing: 2px;\n        font-size: 18px;\n        margin: 0 60px;\n        padding: 22px 0 0 0;\n        height: 85px;\n        font-family: 'Open Sans', Arial, sans-serif;\n        text-shadow: 0 0 1px #fff,\n        0 1px 2px rgba(0, 0, 0, 0.3);\n    }\n\n    .pan-info p {\n        color: #fff;\n        padding: 10px 5px;\n        font-style: italic;\n        margin: 0 30px;\n        font-size: 12px;\n        border-top: 1px solid rgba(255, 255, 255, 0.5);\n    }\n\n    .pan-info p a {\n        display: block;\n        color: #333;\n        width: 80px;\n        height: 80px;\n        background: rgba(255, 255, 255, 0.3);\n        border-radius: 50%;\n        color: #fff;\n        font-style: normal;\n        font-weight: 700;\n        text-transform: uppercase;\n        font-size: 9px;\n        letter-spacing: 1px;\n        padding-top: 24px;\n        margin: 7px auto 0;\n        font-family: 'Open Sans', Arial, sans-serif;\n        opacity: 0;\n        transition: transform 0.3s ease-in-out 0.2s,\n        opacity 0.3s ease-in-out 0.2s,\n        background 0.2s linear 0s;\n        transform: translateX(60px) rotate(90deg);\n    }\n\n    .pan-info p a:hover {\n        background: rgba(255, 255, 255, 0.5);\n    }\n\n    .pan-item:hover .pan-thumb {\n        transform: rotate(-110deg);\n    }\n\n    .pan-item:hover .pan-info p a {\n        opacity: 1;\n        transform: translateX(0px) rotate(0deg);\n    }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// index.vue?1aad41d9","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".pan-item[data-v-33891d58]{width:200px;height:200px;border-radius:50%;display:inline-block;position:relative;cursor:default;box-shadow:0 1px 3px rgba(0,0,0,.2)}.pan-info-roles-container[data-v-33891d58]{padding:20px;text-align:center}.pan-thumb[data-v-33891d58]{width:100%;height:100%;background-size:100%;border-radius:50%;overflow:hidden;position:absolute;transform-origin:95% 40%;transition:all .3s ease-in-out}.pan-thumb[data-v-33891d58]:after{content:\\\"\\\";width:8px;height:8px;position:absolute;border-radius:50%;top:40%;left:95%;margin:-4px 0 0 -4px;background:radial-gradient(ellipse at center,#0e0e0e 0,#7d7e7d 100%);box-shadow:0 0 1px hsla(0,0%,100%,.9)}.pan-info[data-v-33891d58]{position:absolute;width:inherit;height:inherit;border-radius:50%;overflow:hidden;box-shadow:inset 0 0 0 5px rgba(0,0,0,.05)}.pan-info h3[data-v-33891d58]{color:#fff;text-transform:uppercase;position:relative;letter-spacing:2px;font-size:18px;margin:0 60px;padding:22px 0 0;height:85px;font-family:Open Sans,Arial,sans-serif;text-shadow:0 0 1px #fff,0 1px 2px rgba(0,0,0,.3)}.pan-info p[data-v-33891d58]{color:#fff;padding:10px 5px;font-style:italic;margin:0 30px;font-size:12px;border-top:1px solid hsla(0,0%,100%,.5)}.pan-info p a[data-v-33891d58]{display:block;color:#333;width:80px;height:80px;background:hsla(0,0%,100%,.3);border-radius:50%;color:#fff;font-style:normal;font-weight:700;text-transform:uppercase;font-size:9px;letter-spacing:1px;padding-top:24px;margin:7px auto 0;font-family:Open Sans,Arial,sans-serif;opacity:0;transition:transform .3s ease-in-out .2s,opacity .3s ease-in-out .2s,background .2s linear 0s;transform:translateX(60px) rotate(90deg)}.pan-info p a[data-v-33891d58]:hover{background:hsla(0,0%,100%,.5)}.pan-item:hover .pan-thumb[data-v-33891d58]{transform:rotate(-110deg)}.pan-item:hover .pan-info p a[data-v-33891d58]{opacity:1;transform:translateX(0) rotate(0deg)}\", \"\", {\"version\":3,\"sources\":[\"/./src/components/PanThumb/index.vue\"],\"names\":[],\"mappings\":\"AACA,2BACI,YAAa,AACb,aAAc,AACd,kBAAmB,AACnB,qBAAsB,AACtB,kBAAmB,AACnB,eAAgB,AAChB,mCAAyC,CAC5C,AACD,2CACI,aAAc,AACd,iBAAmB,CACtB,AACD,4BACI,WAAY,AACZ,YAAa,AACb,qBAAsB,AACtB,kBAAmB,AACnB,gBAAiB,AACjB,kBAAmB,AACnB,yBAA0B,AAC1B,8BAAiC,CACpC,AACD,kCACI,WAAY,AACZ,UAAW,AACX,WAAY,AACZ,kBAAmB,AACnB,kBAAmB,AACnB,QAAS,AACT,SAAU,AACV,qBAAsB,AACtB,qEAAoG,AACpG,qCAA6C,CAChD,AACD,2BACI,kBAAmB,AACnB,cAAe,AACf,eAAgB,AAChB,kBAAmB,AACnB,gBAAiB,AACjB,0CAAgD,CACnD,AACD,8BACI,WAAY,AACZ,yBAA0B,AAC1B,kBAAmB,AACnB,mBAAoB,AACpB,eAAgB,AAChB,cAAe,AACf,iBAAoB,AACpB,YAAa,AACb,uCAA4C,AAC5C,iDAC6B,CAChC,AACD,6BACI,WAAY,AACZ,iBAAkB,AAClB,kBAAmB,AACnB,cAAe,AACf,eAAgB,AAChB,uCAA+C,CAClD,AACD,+BACI,cAAe,AACf,WAAY,AACZ,WAAY,AACZ,YAAa,AACb,8BAAqC,AACrC,kBAAmB,AACnB,WAAY,AACZ,kBAAmB,AACnB,gBAAiB,AACjB,yBAA0B,AAC1B,cAAe,AACf,mBAAoB,AACpB,iBAAkB,AAClB,kBAAmB,AACnB,uCAA4C,AAC5C,UAAW,AACX,8FAE0B,AAC1B,wCAA0C,CAC7C,AACD,qCACI,6BAAqC,CACxC,AACD,4CACI,yBAA2B,CAC9B,AACD,+CACI,UAAW,AACX,oCAAwC,CAC3C\",\"file\":\"index.vue\",\"sourcesContent\":[\"\\n.pan-item[data-v-33891d58] {\\n    width: 200px;\\n    height: 200px;\\n    border-radius: 50%;\\n    display: inline-block;\\n    position: relative;\\n    cursor: default;\\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);\\n}\\n.pan-info-roles-container[data-v-33891d58] {\\n    padding: 20px;\\n    text-align: center;\\n}\\n.pan-thumb[data-v-33891d58] {\\n    width: 100%;\\n    height: 100%;\\n    background-size: 100%;\\n    border-radius: 50%;\\n    overflow: hidden;\\n    position: absolute;\\n    transform-origin: 95% 40%;\\n    transition: all 0.3s ease-in-out;\\n}\\n.pan-thumb[data-v-33891d58]:after {\\n    content: '';\\n    width: 8px;\\n    height: 8px;\\n    position: absolute;\\n    border-radius: 50%;\\n    top: 40%;\\n    left: 95%;\\n    margin: -4px 0 0 -4px;\\n    background: radial-gradient(ellipse at center, rgba(14, 14, 14, 1) 0%, rgba(125, 126, 125, 1) 100%);\\n    box-shadow: 0 0 1px rgba(255, 255, 255, 0.9);\\n}\\n.pan-info[data-v-33891d58] {\\n    position: absolute;\\n    width: inherit;\\n    height: inherit;\\n    border-radius: 50%;\\n    overflow: hidden;\\n    box-shadow: inset 0 0 0 5px rgba(0, 0, 0, 0.05);\\n}\\n.pan-info h3[data-v-33891d58] {\\n    color: #fff;\\n    text-transform: uppercase;\\n    position: relative;\\n    letter-spacing: 2px;\\n    font-size: 18px;\\n    margin: 0 60px;\\n    padding: 22px 0 0 0;\\n    height: 85px;\\n    font-family: 'Open Sans', Arial, sans-serif;\\n    text-shadow: 0 0 1px #fff,\\n    0 1px 2px rgba(0, 0, 0, 0.3);\\n}\\n.pan-info p[data-v-33891d58] {\\n    color: #fff;\\n    padding: 10px 5px;\\n    font-style: italic;\\n    margin: 0 30px;\\n    font-size: 12px;\\n    border-top: 1px solid rgba(255, 255, 255, 0.5);\\n}\\n.pan-info p a[data-v-33891d58] {\\n    display: block;\\n    color: #333;\\n    width: 80px;\\n    height: 80px;\\n    background: rgba(255, 255, 255, 0.3);\\n    border-radius: 50%;\\n    color: #fff;\\n    font-style: normal;\\n    font-weight: 700;\\n    text-transform: uppercase;\\n    font-size: 9px;\\n    letter-spacing: 1px;\\n    padding-top: 24px;\\n    margin: 7px auto 0;\\n    font-family: 'Open Sans', Arial, sans-serif;\\n    opacity: 0;\\n    transition: transform 0.3s ease-in-out 0.2s,\\n    opacity 0.3s ease-in-out 0.2s,\\n    background 0.2s linear 0s;\\n    transform: translateX(60px) rotate(90deg);\\n}\\n.pan-info p a[data-v-33891d58]:hover {\\n    background: rgba(255, 255, 255, 0.5);\\n}\\n.pan-item:hover .pan-thumb[data-v-33891d58] {\\n    transform: rotate(-110deg);\\n}\\n.pan-item:hover .pan-info p a[data-v-33891d58] {\\n    opacity: 1;\\n    transform: translateX(0px) rotate(0deg);\\n}\\n\"],\"sourceRoot\":\"webpack://\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-33891d58\",\"scoped\":true,\"hasInlineConfig\":false}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/components/PanThumb/index.vue\n// module id = 470\n// module chunks = 0 10 12","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-33891d58\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./index.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"9deb0e08\", content, true);\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-33891d58\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./index.vue\", function() {\n     var newContent = require(\"!!../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-33891d58\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./index.vue\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/vue-style-loader!./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-33891d58\",\"scoped\":true,\"hasInlineConfig\":false}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/components/PanThumb/index.vue\n// module id = 480\n// module chunks = 0 10 12","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"pan-item\",\n    style: ({\n      zIndex: _vm.zIndex,\n      height: _vm.height,\n      width: _vm.width\n    })\n  }, [_c('div', {\n    staticClass: \"pan-info\"\n  }, [_c('div', {\n    staticClass: \"pan-info-roles-container\"\n  }, [_vm._t(\"default\", [_vm._v(\"pan\")])], 2)]), _vm._v(\" \"), _c('img', {\n    staticClass: \"pan-thumb\",\n    attrs: {\n      \"src\": _vm.image\n    }\n  })])\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-33891d58\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/PanThumb/index.vue\n// module id = 482\n// module chunks = 0 10 12","!function(t,e){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(\"CountTo\",[],e):\"object\"==typeof exports?exports.CountTo=e():t.CountTo=e()}(this,function(){return function(t){function e(n){if(i[n])return i[n].exports;var a=i[n]={i:n,l:!1,exports:{}};return t[n].call(a.exports,a,a.exports,e),a.l=!0,a.exports}var i={};return e.m=t,e.c=i,e.i=function(t){return t},e.d=function(t,i,n){e.o(t,i)||Object.defineProperty(t,i,{configurable:!1,enumerable:!0,get:n})},e.n=function(t){var i=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(i,\"a\",i),i},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p=\"/dist/\",e(e.s=5)}([function(t,e,i){var n=i(3)(i(1),i(4),null,null);t.exports=n.exports},function(t,e,i){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var n=i(2);e.default={props:{startVal:{type:Number,required:!1,default:0},endVal:{type:Number,required:!1,default:2017},duration:{type:Number,required:!1,default:3e3},autoplay:{type:Boolean,required:!1,default:!0},decimals:{type:Number,required:!1,default:0,validator:function(t){return t>=0}},decimal:{type:String,required:!1,default:\".\"},separator:{type:String,required:!1,default:\",\"},prefix:{type:String,required:!1,default:\"\"},suffix:{type:String,required:!1,default:\"\"},useEasing:{type:Boolean,required:!1,default:!0},easingFn:{type:Function,default:function(t,e,i,n){return i*(1-Math.pow(2,-10*t/n))*1024/1023+e}}},data:function(){return{localStartVal:this.startVal,displayValue:this.formatNumber(this.startVal),printVal:null,paused:!1,localDuration:this.duration,startTime:null,timestamp:null,remaining:null,rAF:null}},computed:{countDown:function(){return this.startVal>this.endVal}},mounted:function(){this.autoplay&&this.start(),this.$emit(\"mountedCallback\")},methods:{start:function(){this.localStartVal=this.startVal,this.startTime=null,this.localDuration=this.duration,this.paused=!1,this.rAF=(0,n.requestAnimationFrame)(this.count)},pauseResume:function(){this.paused?(this.resume(),this.paused=!1):(this.pause(),this.paused=!0)},pause:function(){(0,n.cancelAnimationFrame)(this.rAF)},resume:function(){this.startTime=null,this.localDuration=+this.remaining,this.localStartVal=+this.printVal,(0,n.requestAnimationFrame)(this.count)},reset:function(){this.startTime=null,(0,n.cancelAnimationFrame)(this.rAF),this.displayValue=this.formatNumber(this.startVal)},count:function(t){this.startTime||(this.startTime=t),this.timestamp=t;var e=t-this.startTime;this.remaining=this.localDuration-e,this.useEasing?this.countDown?this.printVal=this.localStartVal-this.easingFn(e,0,this.localStartVal-this.endVal,this.localDuration):this.printVal=this.easingFn(e,this.localStartVal,this.endVal-this.localStartVal,this.localDuration):this.countDown?this.printVal=this.localStartVal-(this.localStartVal-this.endVal)*(e/this.localDuration):this.printVal=this.localStartVal+(this.localStartVal-this.startVal)*(e/this.localDuration),this.countDown?this.printVal=this.printVal<this.endVal?this.endVal:this.printVal:this.printVal=this.printVal>this.endVal?this.endVal:this.printVal,this.displayValue=this.formatNumber(this.printVal),e<this.localDuration?this.rAF=(0,n.requestAnimationFrame)(this.count):this.callback&&this.$emit(\"callback\")},isNumber:function(t){return!isNaN(parseFloat(t))},formatNumber:function(t){t=t.toFixed(this.decimals),t+=\"\";var e=t.split(\".\"),i=e[0],n=e.length>1?this.decimal+e[1]:\"\",a=/(\\d+)(\\d{3})/;if(this.separator&&!this.isNumber(this.separator))for(;a.test(i);)i=i.replace(a,\"$1\"+this.separator+\"$2\");return this.prefix+i+n+this.suffix}},destroyed:function(){(0,n.cancelAnimationFrame)(this.rAF)}}},function(t,e,i){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});for(var n=0,a=\"webkit moz ms o\".split(\" \"),r=window.requestAnimationFrame,s=window.cancelAnimationFrame,o=void 0,u=0;u<a.length&&(!r||!s);u++)o=a[u],e.requestAnimationFrame=r=r||window[o+\"RequestAnimationFrame\"],e.cancelAnimationFrame=s=s||window[o+\"CancelAnimationFrame\"]||window[o+\"CancelRequestAnimationFrame\"];r&&s||(e.requestAnimationFrame=r=function(t){var e=(new Date).getTime(),i=Math.max(0,16-(e-n)),a=window.setTimeout(function(){t(e+i)},i);return n=e+i,a},e.cancelAnimationFrame=s=function(t){window.clearTimeout(t)}),e.requestAnimationFrame=r,e.cancelAnimationFrame=s},function(t,e){t.exports=function(t,e,i,n){var a,r=t=t||{},s=typeof t.default;\"object\"!==s&&\"function\"!==s||(a=t,r=t.default);var o=\"function\"==typeof r?r.options:r;if(e&&(o.render=e.render,o.staticRenderFns=e.staticRenderFns),i&&(o._scopeId=i),n){var u=Object.create(o.computed||null);Object.keys(n).forEach(function(t){var e=n[t];u[t]=function(){return e}}),o.computed=u}return{esModule:a,exports:r,options:o}}},function(t,e){t.exports={render:function(){var t=this,e=t.$createElement;return(t._self._c||e)(\"span\",[t._v(\"\\n  \"+t._s(t.displayValue)+\"\\n\")])},staticRenderFns:[]}},function(t,e,i){\"use strict\";function n(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(e,\"__esModule\",{value:!0});var a=i(0),r=n(a);e.default=r.default,\"undefined\"!=typeof window&&window.Vue&&window.Vue.component(\"count-to\",r.default)}])});\n//# sourceMappingURL=vue-count-to.min.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-count-to/dist/vue-count-to.min.js\n// module id = 521\n// module chunks = 0 18","\n\n    var modelUtil = require('../../util/model');\n    var zrUtil = require('zrender/lib/core/util');\n    var env = require('zrender/lib/core/env');\n\n    var formatUtil = require('../../util/format');\n    var addCommas = formatUtil.addCommas;\n    var encodeHTML = formatUtil.encodeHTML;\n\n    function fillLabel(opt) {\n        modelUtil.defaultEmphasis(\n            opt.label,\n            modelUtil.LABEL_OPTIONS\n        );\n    }\n    var MarkerModel = require('../../echarts').extendComponentModel({\n\n        type: 'marker',\n\n        dependencies: ['series', 'grid', 'polar', 'geo'],\n        /**\n         * @overrite\n         */\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            if (__DEV__) {\n                if (this.type === 'marker') {\n                    throw new Error('Marker component is abstract component. Use markLine, markPoint, markArea instead.');\n                }\n            }\n            this.mergeDefaultAndTheme(option, ecModel);\n            this.mergeOption(option, ecModel, extraOpt.createdBySelf, true);\n        },\n\n        /**\n         * @return {boolean}\n         */\n        isAnimationEnabled: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var hostSeries = this.__hostSeries;\n            return this.getShallow('animation') && hostSeries && hostSeries.isAnimationEnabled();\n        },\n\n        mergeOption: function (newOpt, ecModel, createdBySelf, isInit) {\n            var MarkerModel = this.constructor;\n            var modelPropName = this.mainType + 'Model';\n            if (!createdBySelf) {\n                ecModel.eachSeries(function (seriesModel) {\n\n                    var markerOpt = seriesModel.get(this.mainType);\n\n                    var markerModel = seriesModel[modelPropName];\n                    if (!markerOpt || !markerOpt.data) {\n                        seriesModel[modelPropName] = null;\n                        return;\n                    }\n                    if (!markerModel) {\n                        if (isInit) {\n                            // Default label emphasis `position` and `show`\n                            fillLabel(markerOpt);\n                        }\n                        zrUtil.each(markerOpt.data, function (item) {\n                            // FIXME Overwrite fillLabel method ?\n                            if (item instanceof Array) {\n                                fillLabel(item[0]);\n                                fillLabel(item[1]);\n                            }\n                            else {\n                                fillLabel(item);\n                            }\n                        });\n\n                        markerModel = new MarkerModel(\n                            markerOpt, this, ecModel\n                        );\n\n                        zrUtil.extend(markerModel, {\n                            mainType: this.mainType,\n                            // Use the same series index and name\n                            seriesIndex: seriesModel.seriesIndex,\n                            name: seriesModel.name,\n                            createdBySelf: true\n                        });\n\n                        markerModel.__hostSeries = seriesModel;\n                    }\n                    else {\n                        markerModel.mergeOption(markerOpt, ecModel, true);\n                    }\n                    seriesModel[modelPropName] = markerModel;\n                }, this);\n            }\n        },\n\n        formatTooltip: function (dataIndex) {\n            var data = this.getData();\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = zrUtil.isArray(value)\n                ? zrUtil.map(value, addCommas).join(', ') : addCommas(value);\n            var name = data.getName(dataIndex);\n            var html = encodeHTML(this.name);\n            if (value != null || name) {\n                html += '<br />';\n            }\n            if (name) {\n                html += encodeHTML(name);\n                if (value != null) {\n                    html += ' : ';\n                }\n            }\n            if (value != null) {\n                html += encodeHTML(formattedValue);\n            }\n            return html;\n        },\n\n        getData: function () {\n            return this._data;\n        },\n\n        setData: function (data) {\n            this._data = data;\n        }\n    });\n\n    zrUtil.mixin(MarkerModel, modelUtil.dataFormatMixin);\n\n    module.exports = MarkerModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/marker/MarkerModel.js\n// module id = 538\n// module chunks = 0","\n\n    module.exports = require('../../echarts').extendComponentView({\n\n        type: 'marker',\n\n        init: function () {\n            /**\n             * Markline grouped by series\n             * @private\n             * @type {Object}\n             */\n            this.markerGroupMap = {};\n        },\n\n        render: function (markerModel, ecModel, api) {\n            var markerGroupMap = this.markerGroupMap;\n            for (var name in markerGroupMap) {\n                if (markerGroupMap.hasOwnProperty(name)) {\n                    markerGroupMap[name].__keep = false;\n                }\n            }\n\n            var markerModelKey = this.type + 'Model';\n            ecModel.eachSeries(function (seriesModel) {\n                var markerModel = seriesModel[markerModelKey];\n                markerModel && this.renderSeries(seriesModel, markerModel, ecModel, api);\n            }, this);\n\n            for (var name in markerGroupMap) {\n                if (markerGroupMap.hasOwnProperty(name) && !markerGroupMap[name].__keep) {\n                    this.group.remove(markerGroupMap[name].group);\n                }\n            }\n        },\n\n        renderSeries: function () {}\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/marker/MarkerView.js\n// module id = 539\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('../../util/number');\n    var indexOf = zrUtil.indexOf;\n\n    function hasXOrY(item) {\n        return !(isNaN(parseFloat(item.x)) && isNaN(parseFloat(item.y)));\n    }\n\n    function hasXAndY(item) {\n        return !isNaN(parseFloat(item.x)) && !isNaN(parseFloat(item.y));\n    }\n\n    function getPrecision(data, valueAxisDim, dataIndex) {\n        var precision = -1;\n        do {\n            precision = Math.max(\n                numberUtil.getPrecision(data.get(\n                    valueAxisDim, dataIndex\n                )),\n                precision\n            );\n            data = data.stackedOn;\n        } while (data);\n\n        return precision;\n    }\n\n    function markerTypeCalculatorWithExtent(\n        mlType, data, otherDataDim, targetDataDim, otherCoordIndex, targetCoordIndex\n    ) {\n        var coordArr = [];\n        var value = numCalculate(data, targetDataDim, mlType);\n\n        var dataIndex = data.indexOfNearest(targetDataDim, value, true);\n        coordArr[otherCoordIndex] = data.get(otherDataDim, dataIndex, true);\n        coordArr[targetCoordIndex] = data.get(targetDataDim, dataIndex, true);\n\n        var precision = getPrecision(data, targetDataDim, dataIndex);\n        if (precision >= 0) {\n            coordArr[targetCoordIndex] = +coordArr[targetCoordIndex].toFixed(precision);\n        }\n\n        return coordArr;\n    }\n\n    var curry = zrUtil.curry;\n    // TODO Specified percent\n    var markerTypeCalculator = {\n        /**\n         * @method\n         * @param {module:echarts/data/List} data\n         * @param {string} baseAxisDim\n         * @param {string} valueAxisDim\n         */\n        min: curry(markerTypeCalculatorWithExtent, 'min'),\n        /**\n         * @method\n         * @param {module:echarts/data/List} data\n         * @param {string} baseAxisDim\n         * @param {string} valueAxisDim\n         */\n        max: curry(markerTypeCalculatorWithExtent, 'max'),\n\n        /**\n         * @method\n         * @param {module:echarts/data/List} data\n         * @param {string} baseAxisDim\n         * @param {string} valueAxisDim\n         */\n        average: curry(markerTypeCalculatorWithExtent, 'average')\n    };\n\n    /**\n     * Transform markPoint data item to format used in List by do the following\n     * 1. Calculate statistic like `max`, `min`, `average`\n     * 2. Convert `item.xAxis`, `item.yAxis` to `item.coord` array\n     * @param  {module:echarts/model/Series} seriesModel\n     * @param  {module:echarts/coord/*} [coordSys]\n     * @param  {Object} item\n     * @return {Object}\n     */\n    var dataTransform = function (seriesModel, item) {\n        var data = seriesModel.getData();\n        var coordSys = seriesModel.coordinateSystem;\n\n        // 1. If not specify the position with pixel directly\n        // 2. If `coord` is not a data array. Which uses `xAxis`,\n        // `yAxis` to specify the coord on each dimension\n\n        // parseFloat first because item.x and item.y can be percent string like '20%'\n        if (item && !hasXAndY(item) && !zrUtil.isArray(item.coord) && coordSys) {\n            var dims = coordSys.dimensions;\n            var axisInfo = getAxisInfo(item, data, coordSys, seriesModel);\n\n            // Clone the option\n            // Transform the properties xAxis, yAxis, radiusAxis, angleAxis, geoCoord to value\n            item = zrUtil.clone(item);\n\n            if (item.type\n                && markerTypeCalculator[item.type]\n                && axisInfo.baseAxis && axisInfo.valueAxis\n            ) {\n                var otherCoordIndex = indexOf(dims, axisInfo.baseAxis.dim);\n                var targetCoordIndex = indexOf(dims, axisInfo.valueAxis.dim);\n\n                item.coord = markerTypeCalculator[item.type](\n                    data, axisInfo.baseDataDim, axisInfo.valueDataDim,\n                    otherCoordIndex, targetCoordIndex\n                );\n                // Force to use the value of calculated value.\n                item.value = item.coord[targetCoordIndex];\n            }\n            else {\n                // FIXME Only has one of xAxis and yAxis.\n                var coord = [\n                    item.xAxis != null ? item.xAxis : item.radiusAxis,\n                    item.yAxis != null ? item.yAxis : item.angleAxis\n                ];\n                // Each coord support max, min, average\n                for (var i = 0; i < 2; i++) {\n                    if (markerTypeCalculator[coord[i]]) {\n                        var dataDim = seriesModel.coordDimToDataDim(dims[i])[0];\n                        coord[i] = numCalculate(data, dataDim, coord[i]);\n                    }\n                }\n                item.coord = coord;\n            }\n        }\n        return item;\n    };\n\n    var getAxisInfo = function (item, data, coordSys, seriesModel) {\n        var ret = {};\n\n        if (item.valueIndex != null || item.valueDim != null) {\n            ret.valueDataDim = item.valueIndex != null\n                ? data.getDimension(item.valueIndex) : item.valueDim;\n            ret.valueAxis = coordSys.getAxis(seriesModel.dataDimToCoordDim(ret.valueDataDim));\n            ret.baseAxis = coordSys.getOtherAxis(ret.valueAxis);\n            ret.baseDataDim = seriesModel.coordDimToDataDim(ret.baseAxis.dim)[0];\n        }\n        else {\n            ret.baseAxis = seriesModel.getBaseAxis();\n            ret.valueAxis = coordSys.getOtherAxis(ret.baseAxis);\n            ret.baseDataDim = seriesModel.coordDimToDataDim(ret.baseAxis.dim)[0];\n            ret.valueDataDim = seriesModel.coordDimToDataDim(ret.valueAxis.dim)[0];\n        }\n\n        return ret;\n    };\n\n    /**\n     * Filter data which is out of coordinateSystem range\n     * [dataFilter description]\n     * @param  {module:echarts/coord/*} [coordSys]\n     * @param  {Object} item\n     * @return {boolean}\n     */\n    var dataFilter = function (coordSys, item) {\n        // Alwalys return true if there is no coordSys\n        return (coordSys && coordSys.containData && item.coord && !hasXOrY(item))\n            ? coordSys.containData(item.coord) : true;\n    };\n\n    var dimValueGetter = function (item, dimName, dataIndex, dimIndex) {\n        // x, y, radius, angle\n        if (dimIndex < 2) {\n            return item.coord && item.coord[dimIndex];\n        }\n        return item.value;\n    };\n\n    var numCalculate = function (data, valueDataDim, type) {\n        if (type === 'average') {\n            var sum = 0;\n            var count = 0;\n            data.each(valueDataDim, function (val, idx) {\n                if (!isNaN(val)) {\n                    sum += val;\n                    count++;\n                }\n            }, true);\n            return sum / count;\n        }\n        else {\n            return data.getDataExtent(valueDataDim, true)[type === 'max' ? 1 : 0];\n        }\n    };\n\n    module.exports = {\n        dataTransform: dataTransform,\n        dataFilter: dataFilter,\n        dimValueGetter: dimValueGetter,\n        getAxisInfo: getAxisInfo,\n        numCalculate: numCalculate\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/marker/markerHelper.js\n// module id = 540\n// module chunks = 0","<template>\n    <div :class=\"className\" :id=\"id\" :style=\"{height:height,width:width}\"></div>\n</template>\n<script>\n    // 引入 ECharts 主模块\n    const echarts = require('echarts/lib/echarts');\n    // 引入柱状图\n    require('echarts/lib/chart/bar');\n    // 引入提示框和标题组件\n    require('echarts/lib/component/tooltip');\n    export default {\n      name: 'barPercent',\n      props: {\n        className: {\n          type: String,\n          default: 'bar-percent-chart'\n        },\n        id: {\n          type: String,\n          default: 'bar-percent-chart'\n        },\n        width: {\n          type: String,\n          default: '100px'\n        },\n        height: {\n          type: String,\n          default: '80px'\n        },\n        dataNum: {\n          type: Number,\n          default: 0\n        }\n      },\n      data() {\n        return {\n          chart: null\n        };\n      },\n      watch: {\n        dataNum() {\n          this.setOptions()\n        }\n      },\n      mounted() {\n        this.initBar();\n      },\n      methods: {\n        initBar() {\n          this.chart = echarts.init(document.getElementById(this.id));\n          this.setOptions();\n        },\n        setOptions() {\n          this.chart.setOption({\n            tooltip: {\n              show: true,\n              formatter(params) {\n                return '已完成' + params.value + '篇<br/>目标90篇<br/>完成进度' + Math.round((params.value / 90) * 100) + '%'\n              }\n            },\n            grid: {\n              left: 0,\n              right: 0,\n              bottom: 0,\n              top: 0,\n              containLabel: false\n            },\n            xAxis: [{\n              type: 'category',\n              data: ['文章完成比例']\n            }],\n            yAxis: [{\n              type: 'value',\n              data: [],\n              show: false\n            }],\n            animationDelay: 1000,\n            series: [{\n              type: 'bar',\n              name: '初诊',\n              itemStyle: {\n                normal: {\n                  color: '#e5e5e5'\n                }\n              },\n              silent: true,\n              barGap: '-100%', // Make series be overlap\n              data: [150]\n            }, {\n              type: 'bar',\n              name: 'app',\n              itemStyle: {\n                normal: {\n                  color: '#30b08f'\n                }\n              },\n              z: 10,\n              data: [this.dataNum]\n            }]\n          })\n        }\n      }\n    }\n</script>\n\n\n\n// WEBPACK FOOTER //\n// barPercent.vue?e63b380c","<template>\n    <div :class=\"className\" :id=\"id\" :style=\"{height:height,width:width}\"></div>\n</template>\n<script>\n    // 引入 ECharts 主模块\n    const echarts = require('echarts/lib/echarts');\n    // 引入图\n    require('echarts/lib/chart/line');\n    // 引入提示框和标题组件\n    require('echarts/lib/component/markLine');\n    require('echarts/lib/component/markPoint');\n    require('echarts/lib/component/tooltip');\n    export default {\n      name: 'lineChart',\n      props: {\n        className: {\n          type: String,\n          default: 'line-chart'\n        },\n        id: {\n          type: String,\n          default: 'line-chart'\n        },\n        width: {\n          type: String,\n          default: '100%'\n        },\n        height: {\n          type: String,\n          default: '280px'\n        },\n        listData: {\n          type: Array,\n          require: true\n        }\n      },\n      data() {\n        return {\n          chart: null\n        };\n      },\n      watch: {\n        listData(dataList) {\n          this.setLine(dataList)\n        }\n      },\n      mounted() {\n        this.chart = echarts.init(document.getElementById(this.id));\n        this.setLine(this.listData);\n      },\n      methods: {\n        setLine(dataList) {\n          const xAxisData = [];\n          const data = [];\n          for (let i = 0; i < dataList.length; i++) {\n            const item = dataList[i]\n            xAxisData.push(item.week.substring(item.week.length - 2) + '周');\n            data.push(item.count)\n          }\n          const markLineData = [];\n          for (let i = 1; i < data.length; i++) {\n            markLineData.push([{\n              xAxis: i - 1,\n              yAxis: data[i - 1],\n              value: data[i] - data[i - 1]\n            }, {\n              xAxis: i,\n              yAxis: data[i]\n            }]);\n          }\n          this.chart.setOption({\n            title: {\n              text: 'Awesome Chart'\n            },\n            grid: {\n              left: 0,\n              right: 0,\n              bottom: 20,\n\n              containLabel: true\n            },\n            tooltip: {\n              trigger: 'axis'\n            },\n            animationDelay: 1000,\n            xAxis: {\n              data: xAxisData,\n              axisLine: {\n                show: false\n              },\n              axisTick: {\n                show: false\n              }\n//                        axisLabel:{\n//                            show:false\n//                        },\n            },\n\n            yAxis: {\n              splitLine: {\n                show: false\n              },\n              show: false\n              // min: 90\n            },\n            series: [{\n              name: '撸文数',\n              type: 'line',\n              data,\n              markPoint: {\n                data: [\n                    { type: 'max', name: '最大值' },\n                    { type: 'min', name: '最小值' }\n                ]\n              },\n              itemStyle: {\n                normal: {\n                  color: '#30b08f'\n                }\n              },\n              markLine: {\n                silent: true,\n                smooth: true,\n                effect: {\n                  show: true\n                },\n                animationDuration(idx) {\n                  return idx * 100;\n                },\n                animationDelay: 1000,\n                animationEasing: 'quadraticInOut',\n                distance: 1,\n                label: {\n                  normal: {\n                    position: 'middle'\n                  }\n                },\n                symbol: ['none', 'none'],\n                data: markLineData\n              }\n            }]\n          })\n        }\n      }\n    }\n</script>\n\n\n\n// WEBPACK FOOTER //\n// line.vue?5d1f88ec","<template>\n    <div class=\"dashboard-editor-container\">\n        <div class=\" clearfix\">\n            <PanThumb style=\"float: left\" :image=\"avatar\"> 你的权限:\n                <span class=\"pan-info-roles\" v-for=\"item in roles\">{{item}}</span>\n            </PanThumb>\n            <div class=\"info-container\">\n                <span class=\"display_name\">{{name}}</span>\n                <span style='font-size:20px;padding-top:20px;display:inline-block;'>赶紧把你们想要的快捷键报给产品锦鲤!</span>\n            </div>\n        </div>\n        <div>\n            <img class='emptyGif' :src=\"emptyGif\" >\n        </div>\n\n    </div>\n</template>\n\n<script>\n    import { mapGetters } from 'vuex';\n    import PanThumb from 'components/PanThumb';\n    export default {\n      name: 'dashboard-default',\n      components: { PanThumb },\n      data() {\n        return {\n          emptyGif: 'https://wpimg.wallstcn.com/0e03b7da-db9e-4819-ba10-9016ddfdaed3'\n        }\n      },\n      computed: {\n        ...mapGetters([\n          'name',\n          'avatar',\n          'email',\n          'uid',\n          'introduction',\n          'roles'\n        ])\n      }\n    }\n</script>\n\n<style rel=\"stylesheet/scss\" lang=\"scss\" scoped>\n    .emptyGif {\n       display: block;\n       width: 45%;\n       margin: 0 auto;\n    }\n    .dashboard-editor-container {\n        background-color: #e3e3e3;\n        min-height: 100vh;\n        margin-top: -50px;\n        padding: 100px 60px 0px;\n        .pan-info-roles {\n            font-size: 12px;\n            font-weight: 700;\n            color: #333;\n            display: block;\n        }\n        .info-container {\n            position: relative;\n            margin-left: 190px;\n            height: 150px;\n            line-height: 200px;\n            .display_name {\n                font-size: 48px;\n                line-height: 48px;\n                color: #212121;\n                position: absolute;\n                top: 25px;\n            }\n        }\n    }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// index.vue?463f5651","<template>\n    <div class=\"articlesChart-container\">\n        <span class=\"articlesChart-container-title\">每天撸文</span>\n        <line-chart :listData='listData' ></line-chart>\n    </div>\n</template>\n<script>\n    import LineChart from 'components/Charts/line';\n    export default {\n      name: 'articlesChart',\n      components: { LineChart },\n      props: {\n        listData: {\n          type: Array,\n          default: [],\n          require: true\n        }\n      },\n      data() {\n        return {}\n      }\n    }\n</script>\n<style>\n    .articlesChart-container {\n        width: 100%;\n    }\n    .articlesChart-container-title {\n        color: #7F8C8D;\n        font-size: 16px;\n        display: inline-block;\n        margin-top: 10px;\n    }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// articlesChart.vue?4b71ea0e","<template>\n    <div class=\"dashboard-editor-container\">\n        <div class=\" clearfix\">\n            <PanThumb style=\"float: left\" :image=\"avatar\"> 你的权限:\n                <span class=\"pan-info-roles\" v-for=\"item in roles\">{{item}}</span>\n            </PanThumb>\n            <div class=\"info-container\">\n                <span class=\"display_name\">{{name}}</span>\n                <div class=\"info-wrapper\">\n                    <div class=\"info-item\" :to=\"'/article/wscnlist?uid='+uid\">\n                         <countTo class=\"info-item-num\" :startVal='0' :endVal='statisticsData.article_count' :duration='3400'></countTo>\n                        <span class=\"info-item-text\">文章</span>\n                        <wscn-icon-svg icon-class=\"a\" class=\"dashboard-editor-icon\"/>\n                    </div>\n                    <div class=\"info-item\" style=\"cursor: auto\">\n                        <countTo class=\"info-item-num\"  :startVal='0' :endVal='statisticsData.pageviews_count' :duration='3600'></countTo>\n                        <span class=\"info-item-text\">浏览量</span>\n                        <wscn-icon-svg icon-class=\"b\" class=\"dashboard-editor-icon\"/>\n                    </div>\n                    <div class=\"info-item\" :to=\"'/comment/commentslist?res_author_id='+uid\">\n                         <countTo class=\"info-item-num\" ref='countTo3' :startVal='0' :endVal='statisticsData.comment_count' :duration='3800'></countTo>\n                        <span class=\"info-item-text\">评论</span>\n                        <wscn-icon-svg icon-class=\"c\" class=\"dashboard-editor-icon\"/>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"btn-group\">\n            <router-link class=\"pan-btn blue-btn\" to=\"/components/index\">组价</router-link>\n            <router-link class=\"pan-btn light-blue-btn\" to=\"/charts/index\">图表</router-link>\n            <router-link class=\"pan-btn red-btn\" to=\"/errorpage/404\">错误页面</router-link>\n            <router-link class=\"pan-btn pink-btn\" to=\"/errlog/log\">错误日志</router-link>\n            <router-link class=\"pan-btn green-btn\" to=\"/article/wscnlist\">导出excel</router-link>\n            <router-link class=\"pan-btn tiffany-btn\" to=\"/excel/download\">实时列表</router-link>\n        </div>\n\n        <div class=\"clearfix main-dashboard-container\">\n            <div class=\"chart-container\">\n                <MonthKpi style=\"border-bottom: 1px solid #DEE1E2;\"\n                          :articlesComplete='statisticsData.month_article_count'></MonthKpi>\n                <ArticlesChart :listData='statisticsData.week_article'></ArticlesChart>\n            </div>\n            <div class=\"recent-articles-container\">\n                <div class=\"recent-articles-title\">最近撸了</div>\n                <div class=\"recent-articles-wrapper\">\n                    <template v-if=\"recentArticles.length!=0\">\n                        <div class=\"recent-articles-item\" v-for=\"item in  recentArticles\">\n                            <span class=\"recent-articles-status\">{{item.status | statusFilter}}</span>\n                             <span class=\"recent-articles-content\" :to=\"'/article/edit/'+item.id\">\n                                {{item.title}}\n                            </span>\n                            <span class=\"recent-articles-time\">{{item.author}}</span>\n                        </div>\n                    </template>\n                    <template v-else>\n                        <div class=\"recent-articles-emptyTitle\">你太懒了最近都没有撸</div>\n                        <!--<img class=\"emptyGif\" :src=\"emptyGif\">-->\n                    </template>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    import { mapGetters } from 'vuex';\n    import PanThumb from 'components/PanThumb';\n    import MonthKpi from './monthKpi';\n    import ArticlesChart from './articlesChart';\n    import { getList } from 'api/article';\n    import emptyGif from 'assets/compbig.gif';\n    import countTo from 'vue-count-to';\n    export default {\n      name: 'dashboard-editor',\n      components: { PanThumb, MonthKpi, ArticlesChart, countTo },\n      data() {\n        return {\n          chart: null,\n          statisticsData: {\n            article_count: 1024,\n            comment_count: 102400,\n            latest_article: [],\n            month_article_count: 28,\n            pageviews_count: 1024,\n            week_article: [\n               { count: 30, week: '201716' },\n                { count: 26, week: '201715' },\n                { count: 31, week: '201714' },\n                { count: 28, week: '201713' },\n                { count: 40, week: '201712' },\n                { count: 41, week: '201711' },\n                { count: 50, week: '201710' },\n                { count: 42, week: '201709' },\n                { count: 36, week: '201708' },\n                { count: 32, week: '201707' },\n                { count: 40, week: '201706' },\n                { count: 41, week: '201705' }\n            ]\n          },\n          list: [],\n          emptyGif\n        }\n      },\n      created() {\n        this.fetchData();\n      },\n      computed: {\n        ...mapGetters([\n          'name',\n          'avatar',\n          'email',\n          'uid',\n          'introduction',\n          'roles'\n        ]),\n        recentArticles() {\n          return this.list.slice(0, 7)\n        }\n      },\n      methods: {\n        fetchData() {\n          getList(this.listQuery).then(response => {\n            console.log(response.data)\n            this.list = response.data;\n          })\n        }\n      },\n      filters: {\n        statusFilter(status) {\n          const statusMap = {\n            published: '已发布',\n            draft: '草稿中',\n            deleted: '已删除'\n          };\n          return statusMap[status];\n        }\n      }\n    }\n</script>\n\n<style rel=\"stylesheet/scss\" lang=\"scss\" scoped>\n    .emptyGif {\n        width: 100%;\n        height: 100%;\n    }\n\n    .recent-articles-emptyTitle {\n        font-size: 16px;\n        color: #95A5A6;\n        padding-top: 20px;\n        text-align: center;\n    }\n\n    .dashboard-editor-container {\n        padding: 30px 50px;\n        .pan-info-roles {\n            font-size: 12px;\n            font-weight: 700;\n            color: #333;\n            display: block;\n        }\n        .info-container {\n            position: relative;\n            margin-left: 190px;\n            height: 150px;\n            line-height: 200px;\n            .display_name {\n                font-size: 48px;\n                line-height: 48px;\n                color: #212121;\n                position: absolute;\n                top: 25px;\n            }\n            .info-wrapper {\n                line-height: 40px;\n                position: absolute;\n                bottom: 0px;\n                .info-item {\n                    cursor: pointer;\n                    display: inline-block;\n                    margin-right: 95px;\n                    .info-item-num {\n                        color: #212121;\n                        font-size: 24px;\n                        display: inline-block;\n                        padding-right: 5px;\n                    }\n                    .info-item-text {\n                        color: #727272;\n                        font-size: 14px;\n                        padding-right: 5px;\n                        display: inline-block;\n                    }\n                }\n            }\n            .dashboard-editor-icon {\n                width: 22px;\n                height: 22px;\n            }\n        }\n\n        .btn-group {\n            margin: 30px 36px 30px 0;\n        }\n        .main-dashboard-container {\n            width: 100%;\n            position: relative;\n            border: 1px solid #DEE1E2;\n            padding: 0 10px;\n        }\n        .chart-container {\n            float: left;\n            position: relative;\n            padding-right: 10px;\n            width: 40%;\n            border-right: 1px solid #DEE1E2;\n        }\n        .recent-articles-container {\n            padding: 12px 12px 0px;\n            float: left;\n            width: 60%;\n            position: relative;\n            .recent-articles- {\n                &title {\n                    font-size: 16px;\n                    color: #95A5A6;\n                    letter-spacing: 1px;\n                    padding-left: 15px;\n                    padding-bottom: 10px;\n                    border-bottom: 1px solid #DEE1E2;\n                }\n                &more {\n                    color: #2C3E50;\n                    font-size: 12px;\n                    float: right;\n                    margin-right: 25px;\n                    line-height: 40px;\n                    &:hover {\n                        color: #3A71A8;\n                    }\n                }\n                &wrapper {\n                    padding: 0 20px 0 22px;\n                    .recent-articles- {\n                        &item {\n                            cursor: pointer;\n                            padding: 16px 100px 16px 16px;\n                            border-bottom: 1px solid #DEE1E2;\n                            position: relative;\n                            &:before {\n                                content: \"\";\n                                height: 104%;\n                                width: 0px;\n                                background: #30B08F;\n                                display: inline-block;\n                                position: absolute;\n                                opacity: 0;\n                                left: 0px;\n                                top: -2px;\n                                transition: 0.3s ease all;\n                            }\n                            &:hover {\n                                &:before {\n                                    opacity: 1;\n                                    width: 3px;\n                                }\n                            }\n                        }\n                        &status {\n                            font-size: 12px;\n                            display: inline-block;\n                            color: #9B9B9B;\n                            padding-right: 6px;\n                        }\n                        &content {\n                            font-size: 13px;\n                            color: #2C3E50;\n                            &:hover {\n                                color: #3A71A8;\n                            }\n                        }\n                        &time {\n                            position: absolute;\n                            right: 16px;\n                            top: 16px;\n                            color: #9B9B9B;\n                        }\n                    }\n                }\n            }\n\n        }\n    }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// index.vue?1abd8f51","<template>\n    <div class=\"monthKpi-container\">\n        <span class=\"monthKpi-container-title\">{{month}}月</span>\n        <BarPercent class=\"monthKpi-container-chart\" :dataNum='articlesComplete'></BarPercent>\n        <span class=\"monthKpi-container-text\">文章完成比例</span>\n        <span class=\"monthKpi-container-count\">{{articlesComplete}}<b>篇</b></span>\n    </div>\n</template>\n\n<script>\n    import BarPercent from 'components/Charts/barPercent';\n    export default {\n      name: 'monthKpi',\n      components: { BarPercent },\n      props: {\n        articlesComplete: {\n          type: Number\n        }\n      },\n      data() {\n        return {\n          month: new Date().getMonth() + 1\n        }\n      }\n    }\n</script>\n<style rel=\"stylesheet/scss\" lang=\"scss\" scoped>\n    .monthKpi-container{\n        width: 100%;\n    }\n    .monthKpi-container-title {\n        color: #7F8C8D;\n        font-size: 16px;\n        display: inline-block;\n        margin-top: 10px;\n    }\n\n    .monthKpi-container-chart {\n        margin-left: 100px;\n        margin-bottom: 4px;\n    }\n\n    .monthKpi-container-text {\n        margin-left: 112px;\n        color: #9EA7B3;\n        font-size: 12px;\n    }\n\n    .monthKpi-container-count {\n        color: #30B08F;\n        font-size: 34px;\n        position: absolute;\n        left: 260px;\n        top: 60px;\n        b {\n            padding-left: 10px;\n            color: #9EA7B3;\n            font-size: 12px;\n        }\n    }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// monthKpi.vue?2b122983","<template>\n    <div class=\"dashboard-container\">\n        <component v-bind:is=\"currentRole\"> </component>\n    </div>\n</template>\n\n<script>\n    import { mapGetters } from 'vuex';\n    import EditorDashboard from './editor/index';\n    import DefaultDashboard from './default/index';\n    export default {\n      name: 'dashboard',\n      components: { EditorDashboard, DefaultDashboard },\n      data() {\n        return {\n          currentRole: 'EditorDashboard'\n        }\n      },\n      computed: {\n        ...mapGetters([\n          'name',\n          'avatar',\n          'email',\n          'introduction',\n          'roles'\n        ])\n      },\n      created() {\n        if (this.roles.indexOf('admin') >= 0) {\n          return;\n        }\n        const isEditor = this.roles.some(v => v.indexOf('editor') >= 0)\n        if (!isEditor) {\n          this.currentRole = 'DefaultDashboard';\n        }\n      }\n    }\n</script>\n\n\n\n// WEBPACK FOOTER //\n// index.vue?0e8104f0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".emptyGif[data-v-086af447]{display:block;width:45%;margin:0 auto}.dashboard-editor-container[data-v-086af447]{background-color:#e3e3e3;min-height:100vh;margin-top:-50px;padding:100px 60px 0}.dashboard-editor-container .pan-info-roles[data-v-086af447]{font-size:12px;font-weight:700;color:#333;display:block}.dashboard-editor-container .info-container[data-v-086af447]{position:relative;margin-left:190px;height:150px;line-height:200px}.dashboard-editor-container .info-container .display_name[data-v-086af447]{font-size:48px;line-height:48px;color:#212121;position:absolute;top:25px}\", \"\", {\"version\":3,\"sources\":[\"/./src/views/dashboard/default/index.vue\"],\"names\":[],\"mappings\":\"AACA,2BACE,cAAe,AACf,UAAW,AACX,aAAe,CAChB,AACD,6CACE,yBAA0B,AAC1B,iBAAkB,AAClB,iBAAkB,AAClB,oBAAwB,CACzB,AACD,6DACI,eAAgB,AAChB,gBAAiB,AACjB,WAAY,AACZ,aAAe,CAClB,AACD,6DACI,kBAAmB,AACnB,kBAAmB,AACnB,aAAc,AACd,iBAAmB,CACtB,AACD,2EACM,eAAgB,AAChB,iBAAkB,AAClB,cAAe,AACf,kBAAmB,AACnB,QAAU,CACf\",\"file\":\"index.vue\",\"sourcesContent\":[\"\\n.emptyGif[data-v-086af447] {\\n  display: block;\\n  width: 45%;\\n  margin: 0 auto;\\n}\\n.dashboard-editor-container[data-v-086af447] {\\n  background-color: #e3e3e3;\\n  min-height: 100vh;\\n  margin-top: -50px;\\n  padding: 100px 60px 0px;\\n}\\n.dashboard-editor-container .pan-info-roles[data-v-086af447] {\\n    font-size: 12px;\\n    font-weight: 700;\\n    color: #333;\\n    display: block;\\n}\\n.dashboard-editor-container .info-container[data-v-086af447] {\\n    position: relative;\\n    margin-left: 190px;\\n    height: 150px;\\n    line-height: 200px;\\n}\\n.dashboard-editor-container .info-container .display_name[data-v-086af447] {\\n      font-size: 48px;\\n      line-height: 48px;\\n      color: #212121;\\n      position: absolute;\\n      top: 25px;\\n}\\n\"],\"sourceRoot\":\"webpack://\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-086af447\",\"scoped\":true,\"hasInlineConfig\":false}!./~/sass-loader?{\"sourceMap\":true}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/views/dashboard/default/index.vue\n// module id = 606\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".emptyGif[data-v-2b4edebd]{width:100%;height:100%}.recent-articles-emptyTitle[data-v-2b4edebd]{font-size:16px;color:#95a5a6;padding-top:20px;text-align:center}.dashboard-editor-container[data-v-2b4edebd]{padding:30px 50px}.dashboard-editor-container .pan-info-roles[data-v-2b4edebd]{font-size:12px;font-weight:700;color:#333;display:block}.dashboard-editor-container .info-container[data-v-2b4edebd]{position:relative;margin-left:190px;height:150px;line-height:200px}.dashboard-editor-container .info-container .display_name[data-v-2b4edebd]{font-size:48px;line-height:48px;color:#212121;position:absolute;top:25px}.dashboard-editor-container .info-container .info-wrapper[data-v-2b4edebd]{line-height:40px;position:absolute;bottom:0}.dashboard-editor-container .info-container .info-wrapper .info-item[data-v-2b4edebd]{cursor:pointer;display:inline-block;margin-right:95px}.dashboard-editor-container .info-container .info-wrapper .info-item .info-item-num[data-v-2b4edebd]{color:#212121;font-size:24px;display:inline-block;padding-right:5px}.dashboard-editor-container .info-container .info-wrapper .info-item .info-item-text[data-v-2b4edebd]{color:#727272;font-size:14px;padding-right:5px;display:inline-block}.dashboard-editor-container .info-container .dashboard-editor-icon[data-v-2b4edebd]{width:22px;height:22px}.dashboard-editor-container .btn-group[data-v-2b4edebd]{margin:30px 36px 30px 0}.dashboard-editor-container .main-dashboard-container[data-v-2b4edebd]{width:100%;position:relative;border:1px solid #dee1e2;padding:0 10px}.dashboard-editor-container .chart-container[data-v-2b4edebd]{float:left;position:relative;padding-right:10px;width:40%;border-right:1px solid #dee1e2}.dashboard-editor-container .recent-articles-container[data-v-2b4edebd]{padding:12px 12px 0;float:left;width:60%;position:relative}.dashboard-editor-container .recent-articles-container .recent-articles-title[data-v-2b4edebd]{font-size:16px;color:#95a5a6;letter-spacing:1px;padding-left:15px;padding-bottom:10px;border-bottom:1px solid #dee1e2}.dashboard-editor-container .recent-articles-container .recent-articles-more[data-v-2b4edebd]{color:#2c3e50;font-size:12px;float:right;margin-right:25px;line-height:40px}.dashboard-editor-container .recent-articles-container .recent-articles-more[data-v-2b4edebd]:hover{color:#3a71a8}.dashboard-editor-container .recent-articles-container .recent-articles-wrapper[data-v-2b4edebd]{padding:0 20px 0 22px}.dashboard-editor-container .recent-articles-container .recent-articles-wrapper .recent-articles-item[data-v-2b4edebd]{cursor:pointer;padding:16px 100px 16px 16px;border-bottom:1px solid #dee1e2;position:relative}.dashboard-editor-container .recent-articles-container .recent-articles-wrapper .recent-articles-item[data-v-2b4edebd]:before{content:\\\"\\\";height:104%;width:0;background:#30b08f;display:inline-block;position:absolute;opacity:0;left:0;top:-2px;transition:all .3s ease}.dashboard-editor-container .recent-articles-container .recent-articles-wrapper .recent-articles-item[data-v-2b4edebd]:hover:before{opacity:1;width:3px}.dashboard-editor-container .recent-articles-container .recent-articles-wrapper .recent-articles-status[data-v-2b4edebd]{font-size:12px;display:inline-block;color:#9b9b9b;padding-right:6px}.dashboard-editor-container .recent-articles-container .recent-articles-wrapper .recent-articles-content[data-v-2b4edebd]{font-size:13px;color:#2c3e50}.dashboard-editor-container .recent-articles-container .recent-articles-wrapper .recent-articles-content[data-v-2b4edebd]:hover{color:#3a71a8}.dashboard-editor-container .recent-articles-container .recent-articles-wrapper .recent-articles-time[data-v-2b4edebd]{position:absolute;right:16px;top:16px;color:#9b9b9b}\", \"\", {\"version\":3,\"sources\":[\"/./src/views/dashboard/editor/index.vue\"],\"names\":[],\"mappings\":\"AACA,2BACE,WAAY,AACZ,WAAa,CACd,AACD,6CACE,eAAgB,AAChB,cAAe,AACf,iBAAkB,AAClB,iBAAmB,CACpB,AACD,6CACE,iBAAmB,CACpB,AACD,6DACI,eAAgB,AAChB,gBAAiB,AACjB,WAAY,AACZ,aAAe,CAClB,AACD,6DACI,kBAAmB,AACnB,kBAAmB,AACnB,aAAc,AACd,iBAAmB,CACtB,AACD,2EACM,eAAgB,AAChB,iBAAkB,AAClB,cAAe,AACf,kBAAmB,AACnB,QAAU,CACf,AACD,2EACM,iBAAkB,AAClB,kBAAmB,AACnB,QAAY,CACjB,AACD,sFACQ,eAAgB,AAChB,qBAAsB,AACtB,iBAAmB,CAC1B,AACD,qGACU,cAAe,AACf,eAAgB,AAChB,qBAAsB,AACtB,iBAAmB,CAC5B,AACD,sGACU,cAAe,AACf,eAAgB,AAChB,kBAAmB,AACnB,oBAAsB,CAC/B,AACD,oFACM,WAAY,AACZ,WAAa,CAClB,AACD,wDACI,uBAAyB,CAC5B,AACD,uEACI,WAAY,AACZ,kBAAmB,AACnB,yBAA0B,AAC1B,cAAgB,CACnB,AACD,8DACI,WAAY,AACZ,kBAAmB,AACnB,mBAAoB,AACpB,UAAW,AACX,8BAAgC,CACnC,AACD,wEACI,oBAAuB,AACvB,WAAY,AACZ,UAAW,AACX,iBAAmB,CACtB,AACD,+FACM,eAAgB,AAChB,cAAe,AACf,mBAAoB,AACpB,kBAAmB,AACnB,oBAAqB,AACrB,+BAAiC,CACtC,AACD,8FACM,cAAe,AACf,eAAgB,AAChB,YAAa,AACb,kBAAmB,AACnB,gBAAkB,CACvB,AACD,oGACQ,aAAe,CACtB,AACD,iGACM,qBAAuB,CAC5B,AACD,uHACQ,eAAgB,AAChB,6BAA8B,AAC9B,gCAAiC,AACjC,iBAAmB,CAC1B,AACD,8HACU,WAAY,AACZ,YAAa,AACb,QAAW,AACX,mBAAoB,AACpB,qBAAsB,AACtB,kBAAmB,AACnB,UAAW,AACX,OAAU,AACV,SAAU,AACV,uBAA0B,CACnC,AACD,oIACU,UAAW,AACX,SAAW,CACpB,AACD,yHACQ,eAAgB,AAChB,qBAAsB,AACtB,cAAe,AACf,iBAAmB,CAC1B,AACD,0HACQ,eAAgB,AAChB,aAAe,CACtB,AACD,gIACU,aAAe,CACxB,AACD,uHACQ,kBAAmB,AACnB,WAAY,AACZ,SAAU,AACV,aAAe,CACtB\",\"file\":\"index.vue\",\"sourcesContent\":[\"\\n.emptyGif[data-v-2b4edebd] {\\n  width: 100%;\\n  height: 100%;\\n}\\n.recent-articles-emptyTitle[data-v-2b4edebd] {\\n  font-size: 16px;\\n  color: #95A5A6;\\n  padding-top: 20px;\\n  text-align: center;\\n}\\n.dashboard-editor-container[data-v-2b4edebd] {\\n  padding: 30px 50px;\\n}\\n.dashboard-editor-container .pan-info-roles[data-v-2b4edebd] {\\n    font-size: 12px;\\n    font-weight: 700;\\n    color: #333;\\n    display: block;\\n}\\n.dashboard-editor-container .info-container[data-v-2b4edebd] {\\n    position: relative;\\n    margin-left: 190px;\\n    height: 150px;\\n    line-height: 200px;\\n}\\n.dashboard-editor-container .info-container .display_name[data-v-2b4edebd] {\\n      font-size: 48px;\\n      line-height: 48px;\\n      color: #212121;\\n      position: absolute;\\n      top: 25px;\\n}\\n.dashboard-editor-container .info-container .info-wrapper[data-v-2b4edebd] {\\n      line-height: 40px;\\n      position: absolute;\\n      bottom: 0px;\\n}\\n.dashboard-editor-container .info-container .info-wrapper .info-item[data-v-2b4edebd] {\\n        cursor: pointer;\\n        display: inline-block;\\n        margin-right: 95px;\\n}\\n.dashboard-editor-container .info-container .info-wrapper .info-item .info-item-num[data-v-2b4edebd] {\\n          color: #212121;\\n          font-size: 24px;\\n          display: inline-block;\\n          padding-right: 5px;\\n}\\n.dashboard-editor-container .info-container .info-wrapper .info-item .info-item-text[data-v-2b4edebd] {\\n          color: #727272;\\n          font-size: 14px;\\n          padding-right: 5px;\\n          display: inline-block;\\n}\\n.dashboard-editor-container .info-container .dashboard-editor-icon[data-v-2b4edebd] {\\n      width: 22px;\\n      height: 22px;\\n}\\n.dashboard-editor-container .btn-group[data-v-2b4edebd] {\\n    margin: 30px 36px 30px 0;\\n}\\n.dashboard-editor-container .main-dashboard-container[data-v-2b4edebd] {\\n    width: 100%;\\n    position: relative;\\n    border: 1px solid #DEE1E2;\\n    padding: 0 10px;\\n}\\n.dashboard-editor-container .chart-container[data-v-2b4edebd] {\\n    float: left;\\n    position: relative;\\n    padding-right: 10px;\\n    width: 40%;\\n    border-right: 1px solid #DEE1E2;\\n}\\n.dashboard-editor-container .recent-articles-container[data-v-2b4edebd] {\\n    padding: 12px 12px 0px;\\n    float: left;\\n    width: 60%;\\n    position: relative;\\n}\\n.dashboard-editor-container .recent-articles-container .recent-articles-title[data-v-2b4edebd] {\\n      font-size: 16px;\\n      color: #95A5A6;\\n      letter-spacing: 1px;\\n      padding-left: 15px;\\n      padding-bottom: 10px;\\n      border-bottom: 1px solid #DEE1E2;\\n}\\n.dashboard-editor-container .recent-articles-container .recent-articles-more[data-v-2b4edebd] {\\n      color: #2C3E50;\\n      font-size: 12px;\\n      float: right;\\n      margin-right: 25px;\\n      line-height: 40px;\\n}\\n.dashboard-editor-container .recent-articles-container .recent-articles-more[data-v-2b4edebd]:hover {\\n        color: #3A71A8;\\n}\\n.dashboard-editor-container .recent-articles-container .recent-articles-wrapper[data-v-2b4edebd] {\\n      padding: 0 20px 0 22px;\\n}\\n.dashboard-editor-container .recent-articles-container .recent-articles-wrapper .recent-articles-item[data-v-2b4edebd] {\\n        cursor: pointer;\\n        padding: 16px 100px 16px 16px;\\n        border-bottom: 1px solid #DEE1E2;\\n        position: relative;\\n}\\n.dashboard-editor-container .recent-articles-container .recent-articles-wrapper .recent-articles-item[data-v-2b4edebd]:before {\\n          content: \\\"\\\";\\n          height: 104%;\\n          width: 0px;\\n          background: #30B08F;\\n          display: inline-block;\\n          position: absolute;\\n          opacity: 0;\\n          left: 0px;\\n          top: -2px;\\n          transition: 0.3s ease all;\\n}\\n.dashboard-editor-container .recent-articles-container .recent-articles-wrapper .recent-articles-item[data-v-2b4edebd]:hover:before {\\n          opacity: 1;\\n          width: 3px;\\n}\\n.dashboard-editor-container .recent-articles-container .recent-articles-wrapper .recent-articles-status[data-v-2b4edebd] {\\n        font-size: 12px;\\n        display: inline-block;\\n        color: #9B9B9B;\\n        padding-right: 6px;\\n}\\n.dashboard-editor-container .recent-articles-container .recent-articles-wrapper .recent-articles-content[data-v-2b4edebd] {\\n        font-size: 13px;\\n        color: #2C3E50;\\n}\\n.dashboard-editor-container .recent-articles-container .recent-articles-wrapper .recent-articles-content[data-v-2b4edebd]:hover {\\n          color: #3A71A8;\\n}\\n.dashboard-editor-container .recent-articles-container .recent-articles-wrapper .recent-articles-time[data-v-2b4edebd] {\\n        position: absolute;\\n        right: 16px;\\n        top: 16px;\\n        color: #9B9B9B;\\n}\\n\"],\"sourceRoot\":\"webpack://\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-2b4edebd\",\"scoped\":true,\"hasInlineConfig\":false}!./~/sass-loader?{\"sourceMap\":true}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/views/dashboard/editor/index.vue\n// module id = 610\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".monthKpi-container[data-v-32c30469]{width:100%}.monthKpi-container-title[data-v-32c30469]{color:#7f8c8d;font-size:16px;display:inline-block;margin-top:10px}.monthKpi-container-chart[data-v-32c30469]{margin-left:100px;margin-bottom:4px}.monthKpi-container-text[data-v-32c30469]{margin-left:112px;color:#9ea7b3;font-size:12px}.monthKpi-container-count[data-v-32c30469]{color:#30b08f;font-size:34px;position:absolute;left:260px;top:60px}.monthKpi-container-count b[data-v-32c30469]{padding-left:10px;color:#9ea7b3;font-size:12px}\", \"\", {\"version\":3,\"sources\":[\"/./src/views/dashboard/editor/monthKpi.vue\"],\"names\":[],\"mappings\":\"AACA,qCACE,UAAY,CACb,AACD,2CACE,cAAe,AACf,eAAgB,AAChB,qBAAsB,AACtB,eAAiB,CAClB,AACD,2CACE,kBAAmB,AACnB,iBAAmB,CACpB,AACD,0CACE,kBAAmB,AACnB,cAAe,AACf,cAAgB,CACjB,AACD,2CACE,cAAe,AACf,eAAgB,AAChB,kBAAmB,AACnB,WAAY,AACZ,QAAU,CACX,AACD,6CACI,kBAAmB,AACnB,cAAe,AACf,cAAgB,CACnB\",\"file\":\"monthKpi.vue\",\"sourcesContent\":[\"\\n.monthKpi-container[data-v-32c30469] {\\n  width: 100%;\\n}\\n.monthKpi-container-title[data-v-32c30469] {\\n  color: #7F8C8D;\\n  font-size: 16px;\\n  display: inline-block;\\n  margin-top: 10px;\\n}\\n.monthKpi-container-chart[data-v-32c30469] {\\n  margin-left: 100px;\\n  margin-bottom: 4px;\\n}\\n.monthKpi-container-text[data-v-32c30469] {\\n  margin-left: 112px;\\n  color: #9EA7B3;\\n  font-size: 12px;\\n}\\n.monthKpi-container-count[data-v-32c30469] {\\n  color: #30B08F;\\n  font-size: 34px;\\n  position: absolute;\\n  left: 260px;\\n  top: 60px;\\n}\\n.monthKpi-container-count b[data-v-32c30469] {\\n    padding-left: 10px;\\n    color: #9EA7B3;\\n    font-size: 12px;\\n}\\n\"],\"sourceRoot\":\"webpack://\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-32c30469\",\"scoped\":true,\"hasInlineConfig\":false}!./~/sass-loader?{\"sourceMap\":true}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/views/dashboard/editor/monthKpi.vue\n// module id = 611\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".articlesChart-container{width:100%}.articlesChart-container-title{color:#7f8c8d;font-size:16px;display:inline-block;margin-top:10px}\", \"\", {\"version\":3,\"sources\":[\"/./src/views/dashboard/editor/articlesChart.vue\"],\"names\":[],\"mappings\":\"AACA,yBACI,UAAY,CACf,AACD,+BACI,cAAe,AACf,eAAgB,AAChB,qBAAsB,AACtB,eAAiB,CACpB\",\"file\":\"articlesChart.vue\",\"sourcesContent\":[\"\\n.articlesChart-container {\\n    width: 100%;\\n}\\n.articlesChart-container-title {\\n    color: #7F8C8D;\\n    font-size: 16px;\\n    display: inline-block;\\n    margin-top: 10px;\\n}\\n\"],\"sourceRoot\":\"webpack://\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-6d3ab1e8\",\"scoped\":false,\"hasInlineConfig\":false}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/views/dashboard/editor/articlesChart.vue\n// module id = 623\n// module chunks = 0","/**\n * @module echarts/chart/helper/Line\n */\n\n\n    var symbolUtil = require('../../util/symbol');\n    var vector = require('zrender/lib/core/vector');\n    // var matrix = require('zrender/lib/core/matrix');\n    var LinePath = require('./LinePath');\n    var graphic = require('../../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('../../util/number');\n\n    var SYMBOL_CATEGORIES = ['fromSymbol', 'toSymbol'];\n    function makeSymbolTypeKey(symbolCategory) {\n        return '_' + symbolCategory + 'Type';\n    }\n    /**\n     * @inner\n     */\n    function createSymbol(name, lineData, idx) {\n        var color = lineData.getItemVisual(idx, 'color');\n        var symbolType = lineData.getItemVisual(idx, name);\n        var symbolSize = lineData.getItemVisual(idx, name + 'Size');\n\n        if (!symbolType || symbolType === 'none') {\n            return;\n        }\n\n        if (!zrUtil.isArray(symbolSize)) {\n            symbolSize = [symbolSize, symbolSize];\n        }\n        var symbolPath = symbolUtil.createSymbol(\n            symbolType, -symbolSize[0] / 2, -symbolSize[1] / 2,\n            symbolSize[0], symbolSize[1], color\n        );\n\n        symbolPath.name = name;\n\n        return symbolPath;\n    }\n\n    function createLine(points) {\n        var line = new LinePath({\n            name: 'line'\n        });\n        setLinePoints(line.shape, points);\n        return line;\n    }\n\n    function setLinePoints(targetShape, points) {\n        var p1 = points[0];\n        var p2 = points[1];\n        var cp1 = points[2];\n        targetShape.x1 = p1[0];\n        targetShape.y1 = p1[1];\n        targetShape.x2 = p2[0];\n        targetShape.y2 = p2[1];\n        targetShape.percent = 1;\n\n        if (cp1) {\n            targetShape.cpx1 = cp1[0];\n            targetShape.cpy1 = cp1[1];\n        }\n        else {\n            targetShape.cpx1 = NaN;\n            targetShape.cpy1 = NaN;\n        }\n    }\n\n    function updateSymbolAndLabelBeforeLineUpdate () {\n        var lineGroup = this;\n        var symbolFrom = lineGroup.childOfName('fromSymbol');\n        var symbolTo = lineGroup.childOfName('toSymbol');\n        var label = lineGroup.childOfName('label');\n        // Quick reject\n        if (!symbolFrom && !symbolTo && label.ignore) {\n            return;\n        }\n\n        var invScale = 1;\n        var parentNode = this.parent;\n        while (parentNode) {\n            if (parentNode.scale) {\n                invScale /= parentNode.scale[0];\n            }\n            parentNode = parentNode.parent;\n        }\n\n        var line = lineGroup.childOfName('line');\n        // If line not changed\n        // FIXME Parent scale changed\n        if (!this.__dirty && !line.__dirty) {\n            return;\n        }\n\n        var percent = line.shape.percent;\n        var fromPos = line.pointAt(0);\n        var toPos = line.pointAt(percent);\n\n        var d = vector.sub([], toPos, fromPos);\n        vector.normalize(d, d);\n\n        if (symbolFrom) {\n            symbolFrom.attr('position', fromPos);\n            var tangent = line.tangentAt(0);\n            symbolFrom.attr('rotation', Math.PI / 2 - Math.atan2(\n                tangent[1], tangent[0]\n            ));\n            symbolFrom.attr('scale', [invScale * percent, invScale * percent]);\n        }\n        if (symbolTo) {\n            symbolTo.attr('position', toPos);\n            var tangent = line.tangentAt(1);\n            symbolTo.attr('rotation', -Math.PI / 2 - Math.atan2(\n                tangent[1], tangent[0]\n            ));\n            symbolTo.attr('scale', [invScale * percent, invScale * percent]);\n        }\n\n        if (!label.ignore) {\n            label.attr('position', toPos);\n\n            var textPosition;\n            var textAlign;\n            var textVerticalAlign;\n\n            var distance = 5 * invScale;\n            // End\n            if (label.__position === 'end') {\n                textPosition = [d[0] * distance + toPos[0], d[1] * distance + toPos[1]];\n                textAlign = d[0] > 0.8 ? 'left' : (d[0] < -0.8 ? 'right' : 'center');\n                textVerticalAlign = d[1] > 0.8 ? 'top' : (d[1] < -0.8 ? 'bottom' : 'middle');\n            }\n            // Middle\n            else if (label.__position === 'middle') {\n                var halfPercent = percent / 2;\n                var tangent = line.tangentAt(halfPercent);\n                var n = [tangent[1], -tangent[0]];\n                var cp = line.pointAt(halfPercent);\n                if (n[1] > 0) {\n                    n[0] = -n[0];\n                    n[1] = -n[1];\n                }\n                textPosition = [cp[0] + n[0] * distance, cp[1] + n[1] * distance];\n                textAlign = 'center';\n                textVerticalAlign = 'bottom';\n                var rotation = -Math.atan2(tangent[1], tangent[0]);\n                if (toPos[0] < fromPos[0]) {\n                    rotation = Math.PI + rotation;\n                }\n                label.attr('rotation', rotation);\n            }\n            // Start\n            else {\n                textPosition = [-d[0] * distance + fromPos[0], -d[1] * distance + fromPos[1]];\n                textAlign = d[0] > 0.8 ? 'right' : (d[0] < -0.8 ? 'left' : 'center');\n                textVerticalAlign = d[1] > 0.8 ? 'bottom' : (d[1] < -0.8 ? 'top' : 'middle');\n            }\n            label.attr({\n                style: {\n                    // Use the user specified text align and baseline first\n                    textVerticalAlign: label.__verticalAlign || textVerticalAlign,\n                    textAlign: label.__textAlign || textAlign\n                },\n                position: textPosition,\n                scale: [invScale, invScale]\n            });\n        }\n    }\n\n    /**\n     * @constructor\n     * @extends {module:zrender/graphic/Group}\n     * @alias {module:echarts/chart/helper/Line}\n     */\n    function Line(lineData, idx, seriesScope) {\n        graphic.Group.call(this);\n\n        this._createLine(lineData, idx, seriesScope);\n    }\n\n    var lineProto = Line.prototype;\n\n    // Update symbol position and rotation\n    lineProto.beforeUpdate = updateSymbolAndLabelBeforeLineUpdate;\n\n    lineProto._createLine = function (lineData, idx, seriesScope) {\n        var seriesModel = lineData.hostModel;\n        var linePoints = lineData.getItemLayout(idx);\n\n        var line = createLine(linePoints);\n        line.shape.percent = 0;\n        graphic.initProps(line, {\n            shape: {\n                percent: 1\n            }\n        }, seriesModel, idx);\n\n        this.add(line);\n\n        var label = new graphic.Text({\n            name: 'label'\n        });\n        this.add(label);\n\n        zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n            var symbol = createSymbol(symbolCategory, lineData, idx);\n            // symbols must added after line to make sure\n            // it will be updated after line#update.\n            // Or symbol position and rotation update in line#beforeUpdate will be one frame slow\n            this.add(symbol);\n            this[makeSymbolTypeKey(symbolCategory)] = lineData.getItemVisual(idx, symbolCategory);\n        }, this);\n\n        this._updateCommonStl(lineData, idx, seriesScope);\n    };\n\n    lineProto.updateData = function (lineData, idx, seriesScope) {\n        var seriesModel = lineData.hostModel;\n\n        var line = this.childOfName('line');\n        var linePoints = lineData.getItemLayout(idx);\n        var target = {\n            shape: {}\n        };\n        setLinePoints(target.shape, linePoints);\n        graphic.updateProps(line, target, seriesModel, idx);\n\n        zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n            var symbolType = lineData.getItemVisual(idx, symbolCategory);\n            var key = makeSymbolTypeKey(symbolCategory);\n            // Symbol changed\n            if (this[key] !== symbolType) {\n                this.remove(this.childOfName(symbolCategory));\n                var symbol = createSymbol(symbolCategory, lineData, idx);\n                this.add(symbol);\n            }\n            this[key] = symbolType;\n        }, this);\n\n        this._updateCommonStl(lineData, idx, seriesScope);\n    };\n\n    lineProto._updateCommonStl = function (lineData, idx, seriesScope) {\n        var seriesModel = lineData.hostModel;\n\n        var line = this.childOfName('line');\n\n        var lineStyle = seriesScope && seriesScope.lineStyle;\n        var hoverLineStyle = seriesScope && seriesScope.hoverLineStyle;\n        var labelModel = seriesScope && seriesScope.labelModel;\n        var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n\n        // Optimization for large dataset\n        if (!seriesScope || lineData.hasItemOption) {\n            var itemModel = lineData.getItemModel(idx);\n\n            lineStyle = itemModel.getModel('lineStyle.normal').getLineStyle();\n            hoverLineStyle = itemModel.getModel('lineStyle.emphasis').getLineStyle();\n\n            labelModel = itemModel.getModel('label.normal');\n            hoverLabelModel = itemModel.getModel('label.emphasis');\n        }\n\n        var visualColor = lineData.getItemVisual(idx, 'color');\n        var visualOpacity = zrUtil.retrieve(\n            lineData.getItemVisual(idx, 'opacity'),\n            lineStyle.opacity,\n            1\n        );\n\n        line.useStyle(zrUtil.defaults(\n            {\n                strokeNoScale: true,\n                fill: 'none',\n                stroke: visualColor,\n                opacity: visualOpacity\n            },\n            lineStyle\n        ));\n        line.hoverStyle = hoverLineStyle;\n\n        // Update symbol\n        zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n            var symbol = this.childOfName(symbolCategory);\n            if (symbol) {\n                symbol.setColor(visualColor);\n                symbol.setStyle({\n                    opacity: visualOpacity\n                });\n            }\n        }, this);\n\n        var showLabel = labelModel.getShallow('show');\n        var hoverShowLabel = hoverLabelModel.getShallow('show');\n\n        var label = this.childOfName('label');\n        var defaultLabelColor;\n        var defaultText;\n\n        if (showLabel || hoverShowLabel) {\n            var rawVal = seriesModel.getRawValue(idx);\n            defaultText = rawVal == null\n                ? defaultText = lineData.getName(idx)\n                : isFinite(rawVal)\n                ? numberUtil.round(rawVal)\n                : rawVal;\n            defaultLabelColor = visualColor || '#000';\n        }\n\n        // label.afterUpdate = lineAfterUpdate;\n        if (showLabel) {\n            var textStyleModel = labelModel.getModel('textStyle');\n            label.setStyle({\n                text: zrUtil.retrieve(\n                    seriesModel.getFormattedLabel(idx, 'normal', lineData.dataType),\n                    defaultText\n                ),\n                textFont: textStyleModel.getFont(),\n                fill: textStyleModel.getTextColor() || defaultLabelColor\n            });\n\n            label.__textAlign = textStyleModel.get('align');\n            label.__verticalAlign = textStyleModel.get('baseline');\n            label.__position = labelModel.get('position');\n        }\n        else {\n            label.setStyle('text', '');\n        }\n        if (hoverShowLabel) {\n            var textStyleHoverModel = hoverLabelModel.getModel('textStyle');\n\n            label.hoverStyle = {\n                text: zrUtil.retrieve(\n                    seriesModel.getFormattedLabel(idx, 'emphasis', lineData.dataType),\n                    defaultText\n                ),\n                textFont: textStyleHoverModel.getFont(),\n                fill: textStyleHoverModel.getTextColor() || defaultLabelColor\n            };\n        }\n        else {\n            label.hoverStyle = {\n                text: ''\n            };\n        }\n\n        label.ignore = !showLabel && !hoverShowLabel;\n\n        graphic.setHoverStyle(this);\n    };\n\n    lineProto.updateLayout = function (lineData, idx) {\n        this.setLinePoints(lineData.getItemLayout(idx));\n    };\n\n    lineProto.setLinePoints = function (points) {\n        var linePath = this.childOfName('line');\n        setLinePoints(linePath.shape, points);\n        linePath.dirty();\n    };\n\n    zrUtil.inherits(Line, graphic.Group);\n\n    module.exports = Line;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/Line.js\n// module id = 633\n// module chunks = 0","/**\n * @module echarts/chart/helper/LineDraw\n */\n\n\n    var graphic = require('../../util/graphic');\n    var LineGroup = require('./Line');\n\n\n    function isPointNaN(pt) {\n        return isNaN(pt[0]) || isNaN(pt[1]);\n    }\n    function lineNeedsDraw(pts) {\n        return !isPointNaN(pts[0]) && !isPointNaN(pts[1]);\n    }\n    /**\n     * @alias module:echarts/component/marker/LineDraw\n     * @constructor\n     */\n    function LineDraw(ctor) {\n        this._ctor = ctor || LineGroup;\n        this.group = new graphic.Group();\n    }\n\n    var lineDrawProto = LineDraw.prototype;\n\n    /**\n     * @param {module:echarts/data/List} lineData\n     */\n    lineDrawProto.updateData = function (lineData) {\n\n        var oldLineData = this._lineData;\n        var group = this.group;\n        var LineCtor = this._ctor;\n\n        var hostModel = lineData.hostModel;\n\n        var seriesScope = {\n            lineStyle: hostModel.getModel('lineStyle.normal').getLineStyle(),\n            hoverLineStyle: hostModel.getModel('lineStyle.emphasis').getLineStyle(),\n            labelModel: hostModel.getModel('label.normal'),\n            hoverLabelModel: hostModel.getModel('label.emphasis')\n        };\n\n        lineData.diff(oldLineData)\n            .add(function (idx) {\n                if (!lineNeedsDraw(lineData.getItemLayout(idx))) {\n                    return;\n                }\n                var lineGroup = new LineCtor(lineData, idx, seriesScope);\n\n                lineData.setItemGraphicEl(idx, lineGroup);\n\n                group.add(lineGroup);\n            })\n            .update(function (newIdx, oldIdx) {\n                var lineGroup = oldLineData.getItemGraphicEl(oldIdx);\n                if (!lineNeedsDraw(lineData.getItemLayout(newIdx))) {\n                    group.remove(lineGroup);\n                    return;\n                }\n\n                if (!lineGroup) {\n                    lineGroup = new LineCtor(lineData, newIdx, seriesScope);\n                }\n                else {\n                    lineGroup.updateData(lineData, newIdx, seriesScope);\n                }\n\n                lineData.setItemGraphicEl(newIdx, lineGroup);\n\n                group.add(lineGroup);\n            })\n            .remove(function (idx) {\n                group.remove(oldLineData.getItemGraphicEl(idx));\n            })\n            .execute();\n\n        this._lineData = lineData;\n    };\n\n    lineDrawProto.updateLayout = function () {\n        var lineData = this._lineData;\n        lineData.eachItemGraphicEl(function (el, idx) {\n            el.updateLayout(lineData, idx);\n        }, this);\n    };\n\n    lineDrawProto.remove = function () {\n        this.group.removeAll();\n    };\n\n    module.exports = LineDraw;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/LineDraw.js\n// module id = 634\n// module chunks = 0","/**\n * Line path for bezier and straight line draw\n */\n\n    var graphic = require('../../util/graphic');\n    var vec2 = require('zrender/lib/core/vector');\n\n    var straightLineProto = graphic.Line.prototype;\n    var bezierCurveProto = graphic.BezierCurve.prototype;\n\n    function isLine(shape) {\n        return isNaN(+shape.cpx1) || isNaN(+shape.cpy1);\n    }\n\n    module.exports = graphic.extendShape({\n\n        type: 'ec-line',\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        shape: {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n            percent: 1,\n            cpx1: null,\n            cpy1: null\n        },\n\n        buildPath: function (ctx, shape) {\n            (isLine(shape) ? straightLineProto : bezierCurveProto).buildPath(ctx, shape);\n        },\n\n        pointAt: function (t) {\n            return isLine(this.shape)\n                ? straightLineProto.pointAt.call(this, t)\n                : bezierCurveProto.pointAt.call(this, t);\n        },\n\n        tangentAt: function (t) {\n            var shape = this.shape;\n            var p = isLine(shape)\n                ? [shape.x2 - shape.x1, shape.y2 - shape.y1]\n                : bezierCurveProto.tangentAt.call(this, t);\n            return vec2.normalize(p, p);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/LinePath.js\n// module id = 635\n// module chunks = 0","\n\n    require('./marker/MarkLineModel');\n    require('./marker/MarkLineView');\n\n    require('../echarts').registerPreprocessor(function (opt) {\n        // Make sure markLine component is enabled\n        opt.markLine = opt.markLine || {};\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/markLine.js\n// module id = 648\n// module chunks = 0","// HINT Markpoint can't be used too much\n\n\n    require('./marker/MarkPointModel');\n    require('./marker/MarkPointView');\n\n    require('../echarts').registerPreprocessor(function (opt) {\n        // Make sure markPoint component is enabled\n        opt.markPoint = opt.markPoint || {};\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/markPoint.js\n// module id = 649\n// module chunks = 0","\n\n    module.exports = require('./MarkerModel').extend({\n\n        type: 'markLine',\n\n        defaultOption: {\n            zlevel: 0,\n            z: 5,\n\n            symbol: ['circle', 'arrow'],\n            symbolSize: [8, 16],\n\n            //symbolRotate: 0,\n\n            precision: 2,\n            tooltip: {\n                trigger: 'item'\n            },\n            label: {\n                normal: {\n                    show: true,\n                    position: 'end'\n                },\n                emphasis: {\n                    show: true\n                }\n            },\n            lineStyle: {\n                normal: {\n                    type: 'dashed'\n                },\n                emphasis: {\n                    width: 3\n                }\n            },\n            animationEasing: 'linear'\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/marker/MarkLineModel.js\n// module id = 650\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var List = require('../../data/List');\n    var numberUtil = require('../../util/number');\n\n    var markerHelper = require('./markerHelper');\n\n    var LineDraw = require('../../chart/helper/LineDraw');\n\n    var markLineTransform = function (seriesModel, coordSys, mlModel, item) {\n        var data = seriesModel.getData();\n        // Special type markLine like 'min', 'max', 'average'\n        var mlType = item.type;\n\n        if (!zrUtil.isArray(item)\n            && (\n                mlType === 'min' || mlType === 'max' || mlType === 'average'\n                // In case\n                // data: [{\n                //   yAxis: 10\n                // }]\n                || (item.xAxis != null || item.yAxis != null)\n            )\n        ) {\n            var valueAxis;\n            var valueDataDim;\n            var value;\n\n            if (item.yAxis != null || item.xAxis != null) {\n                valueDataDim = item.yAxis != null ? 'y' : 'x';\n                valueAxis = coordSys.getAxis(valueDataDim);\n\n                value = zrUtil.retrieve(item.yAxis, item.xAxis);\n            }\n            else {\n                var axisInfo = markerHelper.getAxisInfo(item, data, coordSys, seriesModel);\n                valueDataDim = axisInfo.valueDataDim;\n                valueAxis = axisInfo.valueAxis;\n                value = markerHelper.numCalculate(data, valueDataDim, mlType);\n            }\n            var valueIndex = valueDataDim === 'x' ? 0 : 1;\n            var baseIndex = 1 - valueIndex;\n\n            var mlFrom = zrUtil.clone(item);\n            var mlTo = {};\n\n            mlFrom.type = null;\n\n            mlFrom.coord = [];\n            mlTo.coord = [];\n            mlFrom.coord[baseIndex] = -Infinity;\n            mlTo.coord[baseIndex] = Infinity;\n\n            var precision = mlModel.get('precision');\n            if (precision >= 0 && typeof value === 'number') {\n                value = +value.toFixed(precision);\n            }\n\n            mlFrom.coord[valueIndex] = mlTo.coord[valueIndex] = value;\n\n            item = [mlFrom, mlTo, { // Extra option for tooltip and label\n                type: mlType,\n                valueIndex: item.valueIndex,\n                // Force to use the value of calculated value.\n                value: value\n            }];\n        }\n\n        item = [\n            markerHelper.dataTransform(seriesModel, item[0]),\n            markerHelper.dataTransform(seriesModel, item[1]),\n            zrUtil.extend({}, item[2])\n        ];\n\n        // Avoid line data type is extended by from(to) data type\n        item[2].type = item[2].type || '';\n\n        // Merge from option and to option into line option\n        zrUtil.merge(item[2], item[0]);\n        zrUtil.merge(item[2], item[1]);\n\n        return item;\n    };\n\n    function isInifinity(val) {\n        return !isNaN(val) && !isFinite(val);\n    }\n\n    // If a markLine has one dim\n    function ifMarkLineHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\n        var otherDimIndex = 1 - dimIndex;\n        var dimName = coordSys.dimensions[dimIndex];\n        return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex])\n            && fromCoord[dimIndex] === toCoord[dimIndex] && coordSys.getAxis(dimName).containData(fromCoord[dimIndex]);\n    }\n\n    function markLineFilter(coordSys, item) {\n        if (coordSys.type === 'cartesian2d') {\n            var fromCoord = item[0].coord;\n            var toCoord = item[1].coord;\n            // In case\n            // {\n            //  markLine: {\n            //    data: [{ yAxis: 2 }]\n            //  }\n            // }\n            if (\n                fromCoord && toCoord &&\n                (ifMarkLineHasOnlyDim(1, fromCoord, toCoord, coordSys)\n                || ifMarkLineHasOnlyDim(0, fromCoord, toCoord, coordSys))\n            ) {\n                return true;\n            }\n        }\n        return markerHelper.dataFilter(coordSys, item[0])\n            && markerHelper.dataFilter(coordSys, item[1]);\n    }\n\n    function updateSingleMarkerEndLayout(\n        data, idx, isFrom, seriesModel, api\n    ) {\n        var coordSys = seriesModel.coordinateSystem;\n        var itemModel = data.getItemModel(idx);\n\n        var point;\n        var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\n        var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\n        if (!isNaN(xPx) && !isNaN(yPx)) {\n            point = [xPx, yPx];\n        }\n        else {\n            // Chart like bar may have there own marker positioning logic\n            if (seriesModel.getMarkerPosition) {\n                // Use the getMarkerPoisition\n                point = seriesModel.getMarkerPosition(\n                    data.getValues(data.dimensions, idx)\n                );\n            }\n            else {\n                var dims = coordSys.dimensions;\n                var x = data.get(dims[0], idx);\n                var y = data.get(dims[1], idx);\n                point = coordSys.dataToPoint([x, y]);\n            }\n            // Expand line to the edge of grid if value on one axis is Inifnity\n            // In case\n            //  markLine: {\n            //    data: [{\n            //      yAxis: 2\n            //      // or\n            //      type: 'average'\n            //    }]\n            //  }\n            if (coordSys.type === 'cartesian2d') {\n                var xAxis = coordSys.getAxis('x');\n                var yAxis = coordSys.getAxis('y');\n                var dims = coordSys.dimensions;\n                if (isInifinity(data.get(dims[0], idx))) {\n                    point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[isFrom ? 0 : 1]);\n                }\n                else if (isInifinity(data.get(dims[1], idx))) {\n                    point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[isFrom ? 0 : 1]);\n                }\n            }\n\n            // Use x, y if has any\n            if (!isNaN(xPx)) {\n                point[0] = xPx;\n            }\n            if (!isNaN(yPx)) {\n                point[1] = yPx;\n            }\n        }\n\n        data.setItemLayout(idx, point);\n    }\n\n    require('./MarkerView').extend({\n\n        type: 'markLine',\n\n        updateLayout: function (markLineModel, ecModel, api) {\n            ecModel.eachSeries(function (seriesModel) {\n                var mlModel = seriesModel.markLineModel;\n                if (mlModel) {\n                    var mlData = mlModel.getData();\n                    var fromData = mlModel.__from;\n                    var toData = mlModel.__to;\n                    // Update visual and layout of from symbol and to symbol\n                    fromData.each(function (idx) {\n                        updateSingleMarkerEndLayout(fromData, idx, true, seriesModel, api);\n                        updateSingleMarkerEndLayout(toData, idx, false, seriesModel, api);\n                    });\n                    // Update layout of line\n                    mlData.each(function (idx) {\n                        mlData.setItemLayout(idx, [\n                            fromData.getItemLayout(idx),\n                            toData.getItemLayout(idx)\n                        ]);\n                    });\n\n                    this.markerGroupMap[seriesModel.name].updateLayout();\n\n                }\n            }, this);\n        },\n\n        renderSeries: function (seriesModel, mlModel, ecModel, api) {\n            var coordSys = seriesModel.coordinateSystem;\n            var seriesName = seriesModel.name;\n            var seriesData = seriesModel.getData();\n\n            var lineDrawMap = this.markerGroupMap;\n            var lineDraw = lineDrawMap[seriesName];\n            if (!lineDraw) {\n                lineDraw = lineDrawMap[seriesName] = new LineDraw();\n            }\n            this.group.add(lineDraw.group);\n\n            var mlData = createList(coordSys, seriesModel, mlModel);\n\n            var fromData = mlData.from;\n            var toData = mlData.to;\n            var lineData = mlData.line;\n\n            mlModel.__from = fromData;\n            mlModel.__to = toData;\n            // Line data for tooltip and formatter\n            mlModel.setData(lineData);\n\n            var symbolType = mlModel.get('symbol');\n            var symbolSize = mlModel.get('symbolSize');\n            if (!zrUtil.isArray(symbolType)) {\n                symbolType = [symbolType, symbolType];\n            }\n            if (typeof symbolSize === 'number') {\n                symbolSize = [symbolSize, symbolSize];\n            }\n\n            // Update visual and layout of from symbol and to symbol\n            mlData.from.each(function (idx) {\n                updateDataVisualAndLayout(fromData, idx, true);\n                updateDataVisualAndLayout(toData, idx, false);\n            });\n\n            // Update visual and layout of line\n            lineData.each(function (idx) {\n                var lineColor = lineData.getItemModel(idx).get('lineStyle.normal.color');\n                lineData.setItemVisual(idx, {\n                    color: lineColor || fromData.getItemVisual(idx, 'color')\n                });\n                lineData.setItemLayout(idx, [\n                    fromData.getItemLayout(idx),\n                    toData.getItemLayout(idx)\n                ]);\n\n                lineData.setItemVisual(idx, {\n                    'fromSymbolSize': fromData.getItemVisual(idx, 'symbolSize'),\n                    'fromSymbol': fromData.getItemVisual(idx, 'symbol'),\n                    'toSymbolSize': toData.getItemVisual(idx, 'symbolSize'),\n                    'toSymbol': toData.getItemVisual(idx, 'symbol')\n                });\n            });\n\n            lineDraw.updateData(lineData);\n\n            // Set host model for tooltip\n            // FIXME\n            mlData.line.eachItemGraphicEl(function (el, idx) {\n                el.traverse(function (child) {\n                    child.dataModel = mlModel;\n                });\n            });\n\n            function updateDataVisualAndLayout(data, idx, isFrom) {\n                var itemModel = data.getItemModel(idx);\n\n                updateSingleMarkerEndLayout(\n                    data, idx, isFrom, seriesModel, api\n                );\n\n                data.setItemVisual(idx, {\n                    symbolSize: itemModel.get('symbolSize') || symbolSize[isFrom ? 0 : 1],\n                    symbol: itemModel.get('symbol', true) || symbolType[isFrom ? 0 : 1],\n                    color: itemModel.get('itemStyle.normal.color') || seriesData.getVisual('color')\n                });\n            }\n\n            lineDraw.__keep = true;\n\n            lineDraw.group.silent = mlModel.get('silent') || seriesModel.get('silent');\n        }\n    });\n\n    /**\n     * @inner\n     * @param {module:echarts/coord/*} coordSys\n     * @param {module:echarts/model/Series} seriesModel\n     * @param {module:echarts/model/Model} mpModel\n     */\n    function createList(coordSys, seriesModel, mlModel) {\n\n        var coordDimsInfos;\n        if (coordSys) {\n            coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n                var info = seriesModel.getData().getDimensionInfo(\n                    seriesModel.coordDimToDataDim(coordDim)[0]\n                ) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n                info.name = coordDim;\n                return info;\n            });\n        }\n        else {\n            coordDimsInfos =[{\n                name: 'value',\n                type: 'float'\n            }];\n        }\n\n        var fromData = new List(coordDimsInfos, mlModel);\n        var toData = new List(coordDimsInfos, mlModel);\n        // No dimensions\n        var lineData = new List([], mlModel);\n\n        var optData = zrUtil.map(mlModel.get('data'), zrUtil.curry(\n            markLineTransform, seriesModel, coordSys, mlModel\n        ));\n        if (coordSys) {\n            optData = zrUtil.filter(\n                optData, zrUtil.curry(markLineFilter, coordSys)\n            );\n        }\n        var dimValueGetter = coordSys ? markerHelper.dimValueGetter : function (item) {\n            return item.value;\n        };\n        fromData.initData(\n            zrUtil.map(optData, function (item) { return item[0]; }),\n            null, dimValueGetter\n        );\n        toData.initData(\n            zrUtil.map(optData, function (item) { return item[1]; }),\n            null, dimValueGetter\n        );\n        lineData.initData(\n            zrUtil.map(optData, function (item) { return item[2]; })\n        );\n        lineData.hasItemOption = true;\n        return {\n            from: fromData,\n            to: toData,\n            line: lineData\n        };\n    }\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/marker/MarkLineView.js\n// module id = 651\n// module chunks = 0","\n\n    module.exports = require('./MarkerModel').extend({\n\n        type: 'markPoint',\n\n        defaultOption: {\n            zlevel: 0,\n            z: 5,\n            symbol: 'pin',\n            symbolSize: 50,\n            //symbolRotate: 0,\n            //symbolOffset: [0, 0]\n            tooltip: {\n                trigger: 'item'\n            },\n            label: {\n                normal: {\n                    show: true,\n                    position: 'inside'\n                },\n                emphasis: {\n                    show: true\n                }\n            },\n            itemStyle: {\n                normal: {\n                    borderWidth: 2\n                }\n            }\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/marker/MarkPointModel.js\n// module id = 652\n// module chunks = 0","\n\n    var SymbolDraw = require('../../chart/helper/SymbolDraw');\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('../../util/number');\n\n    var List = require('../../data/List');\n\n    var markerHelper = require('./markerHelper');\n\n    function updateMarkerLayout(mpData, seriesModel, api) {\n        var coordSys = seriesModel.coordinateSystem;\n        mpData.each(function (idx) {\n            var itemModel = mpData.getItemModel(idx);\n            var point;\n            var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\n            var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                point = [xPx, yPx];\n            }\n            // Chart like bar may have there own marker positioning logic\n            else if (seriesModel.getMarkerPosition) {\n                // Use the getMarkerPoisition\n                point = seriesModel.getMarkerPosition(\n                    mpData.getValues(mpData.dimensions, idx)\n                );\n            }\n            else if (coordSys) {\n                var x = mpData.get(coordSys.dimensions[0], idx);\n                var y = mpData.get(coordSys.dimensions[1], idx);\n                point = coordSys.dataToPoint([x, y]);\n\n            }\n\n            // Use x, y if has any\n            if (!isNaN(xPx)) {\n                point[0] = xPx;\n            }\n            if (!isNaN(yPx)) {\n                point[1] = yPx;\n            }\n\n            mpData.setItemLayout(idx, point);\n        });\n    }\n\n    require('./MarkerView').extend({\n\n        type: 'markPoint',\n\n        updateLayout: function (markPointModel, ecModel, api) {\n            ecModel.eachSeries(function (seriesModel) {\n                var mpModel = seriesModel.markPointModel;\n                if (mpModel) {\n                    updateMarkerLayout(mpModel.getData(), seriesModel, api);\n                    this.markerGroupMap[seriesModel.name].updateLayout(mpModel);\n                }\n            }, this);\n        },\n\n        renderSeries: function (seriesModel, mpModel, ecModel, api) {\n            var coordSys = seriesModel.coordinateSystem;\n            var seriesName = seriesModel.name;\n            var seriesData = seriesModel.getData();\n\n            var symbolDrawMap = this.markerGroupMap;\n            var symbolDraw = symbolDrawMap[seriesName];\n            if (!symbolDraw) {\n                symbolDraw = symbolDrawMap[seriesName] = new SymbolDraw();\n            }\n\n            var mpData = createList(coordSys, seriesModel, mpModel);\n\n            // FIXME\n            mpModel.setData(mpData);\n\n            updateMarkerLayout(mpModel.getData(), seriesModel, api);\n\n            mpData.each(function (idx) {\n                var itemModel = mpData.getItemModel(idx);\n                var symbolSize = itemModel.getShallow('symbolSize');\n                if (typeof symbolSize === 'function') {\n                    // FIXME 这里不兼容 ECharts 2.x，2.x 貌似参数是整个数据？\n                    symbolSize = symbolSize(\n                        mpModel.getRawValue(idx), mpModel.getDataParams(idx)\n                    );\n                }\n                mpData.setItemVisual(idx, {\n                    symbolSize: symbolSize,\n                    color: itemModel.get('itemStyle.normal.color')\n                        || seriesData.getVisual('color'),\n                    symbol: itemModel.getShallow('symbol')\n                });\n            });\n\n            // TODO Text are wrong\n            symbolDraw.updateData(mpData);\n            this.group.add(symbolDraw.group);\n\n            // Set host model for tooltip\n            // FIXME\n            mpData.eachItemGraphicEl(function (el) {\n                el.traverse(function (child) {\n                    child.dataModel = mpModel;\n                });\n            });\n\n            symbolDraw.__keep = true;\n\n            symbolDraw.group.silent = mpModel.get('silent') || seriesModel.get('silent');\n        }\n    });\n\n    /**\n     * @inner\n     * @param {module:echarts/coord/*} [coordSys]\n     * @param {module:echarts/model/Series} seriesModel\n     * @param {module:echarts/model/Model} mpModel\n     */\n    function createList(coordSys, seriesModel, mpModel) {\n        var coordDimsInfos;\n        if (coordSys) {\n            coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n                var info = seriesModel.getData().getDimensionInfo(\n                    seriesModel.coordDimToDataDim(coordDim)[0]\n                ) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n                info.name = coordDim;\n                return info;\n            });\n        }\n        else {\n            coordDimsInfos =[{\n                name: 'value',\n                type: 'float'\n            }];\n        }\n\n        var mpData = new List(coordDimsInfos, mpModel);\n        var dataOpt = zrUtil.map(mpModel.get('data'), zrUtil.curry(\n                markerHelper.dataTransform, seriesModel\n            ));\n        if (coordSys) {\n            dataOpt = zrUtil.filter(\n                dataOpt, zrUtil.curry(markerHelper.dataFilter, coordSys)\n            );\n        }\n\n        mpData.initData(dataOpt, null,\n            coordSys ? markerHelper.dimValueGetter : function (item) {\n                return item.value;\n            }\n        );\n        return mpData;\n    }\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/marker/MarkPointView.js\n// module id = 653\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-086af447\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../node_modules/sass-loader/index.js?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./index.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"0dfdc4dc\", content, true);\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-086af447\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../node_modules/sass-loader/index.js?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./index.vue\", function() {\n     var newContent = require(\"!!../../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-086af447\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../node_modules/sass-loader/index.js?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./index.vue\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/vue-style-loader!./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-086af447\",\"scoped\":true,\"hasInlineConfig\":false}!./~/sass-loader?{\"sourceMap\":true}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/views/dashboard/default/index.vue\n// module id = 661\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-2b4edebd\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../node_modules/sass-loader/index.js?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./index.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"f51c7688\", content, true);\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-2b4edebd\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../node_modules/sass-loader/index.js?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./index.vue\", function() {\n     var newContent = require(\"!!../../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-2b4edebd\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../node_modules/sass-loader/index.js?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./index.vue\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/vue-style-loader!./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-2b4edebd\",\"scoped\":true,\"hasInlineConfig\":false}!./~/sass-loader?{\"sourceMap\":true}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/views/dashboard/editor/index.vue\n// module id = 665\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-32c30469\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../node_modules/sass-loader/index.js?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./monthKpi.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"565f29b4\", content, true);\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-32c30469\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../node_modules/sass-loader/index.js?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./monthKpi.vue\", function() {\n     var newContent = require(\"!!../../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-32c30469\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../node_modules/sass-loader/index.js?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./monthKpi.vue\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/vue-style-loader!./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-32c30469\",\"scoped\":true,\"hasInlineConfig\":false}!./~/sass-loader?{\"sourceMap\":true}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/views/dashboard/editor/monthKpi.vue\n// module id = 666\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-6d3ab1e8\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./articlesChart.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"26205cbc\", content, true);\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-6d3ab1e8\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./articlesChart.vue\", function() {\n     var newContent = require(\"!!../../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-6d3ab1e8\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./articlesChart.vue\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/vue-style-loader!./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-6d3ab1e8\",\"scoped\":false,\"hasInlineConfig\":false}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/views/dashboard/editor/articlesChart.vue\n// module id = 678\n// module chunks = 0","module.exports = __webpack_public_path__ + \"img/compbig.167fe5e.gif\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/compbig.gif\n// module id = 704\n// module chunks = 0","var Component = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./barPercent.vue\"),\n  /* template */\n  require(\"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-cf9fa5f8\\\"}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./barPercent.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Charts/barPercent.vue\n// module id = 705\n// module chunks = 0","var Component = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./line.vue\"),\n  /* template */\n  require(\"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-c855aa74\\\"}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./line.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Charts/line.vue\n// module id = 708\n// module chunks = 0","\n/* styles */\nrequire(\"!!../../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-086af447\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n\nvar Component = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"),\n  /* template */\n  require(\"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-086af447\\\"}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"),\n  /* scopeId */\n  \"data-v-086af447\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/dashboard/default/index.vue\n// module id = 720\n// module chunks = 0","\n/* styles */\nrequire(\"!!../../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-6d3ab1e8\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./articlesChart.vue\")\n\nvar Component = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./articlesChart.vue\"),\n  /* template */\n  require(\"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-6d3ab1e8\\\"}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./articlesChart.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/dashboard/editor/articlesChart.vue\n// module id = 721\n// module chunks = 0","\n/* styles */\nrequire(\"!!../../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-2b4edebd\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n\nvar Component = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"),\n  /* template */\n  require(\"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-2b4edebd\\\"}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"),\n  /* scopeId */\n  \"data-v-2b4edebd\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/dashboard/editor/index.vue\n// module id = 722\n// module chunks = 0","\n/* styles */\nrequire(\"!!../../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-32c30469\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./monthKpi.vue\")\n\nvar Component = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./monthKpi.vue\"),\n  /* template */\n  require(\"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-32c30469\\\"}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./monthKpi.vue\"),\n  /* scopeId */\n  \"data-v-32c30469\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/dashboard/editor/monthKpi.vue\n// module id = 723\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"dashboard-editor-container\"\n  }, [_c('div', {\n    staticClass: \" clearfix\"\n  }, [_c('PanThumb', {\n    staticStyle: {\n      \"float\": \"left\"\n    },\n    attrs: {\n      \"image\": _vm.avatar\n    }\n  }, [_vm._v(\" 你的权限:\\n            \"), _vm._l((_vm.roles), function(item) {\n    return _c('span', {\n      staticClass: \"pan-info-roles\"\n    }, [_vm._v(_vm._s(item))])\n  })], 2), _vm._v(\" \"), _c('div', {\n    staticClass: \"info-container\"\n  }, [_c('span', {\n    staticClass: \"display_name\"\n  }, [_vm._v(_vm._s(_vm.name))]), _vm._v(\" \"), _c('span', {\n    staticStyle: {\n      \"font-size\": \"20px\",\n      \"padding-top\": \"20px\",\n      \"display\": \"inline-block\"\n    }\n  }, [_vm._v(\"赶紧把你们想要的快捷键报给产品锦鲤!\")])])], 1), _vm._v(\" \"), _c('div', [_c('img', {\n    staticClass: \"emptyGif\",\n    attrs: {\n      \"src\": _vm.emptyGif\n    }\n  })])])\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-086af447\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/views/dashboard/default/index.vue\n// module id = 728\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"dashboard-editor-container\"\n  }, [_c('div', {\n    staticClass: \" clearfix\"\n  }, [_c('PanThumb', {\n    staticStyle: {\n      \"float\": \"left\"\n    },\n    attrs: {\n      \"image\": _vm.avatar\n    }\n  }, [_vm._v(\" 你的权限:\\n            \"), _vm._l((_vm.roles), function(item) {\n    return _c('span', {\n      staticClass: \"pan-info-roles\"\n    }, [_vm._v(_vm._s(item))])\n  })], 2), _vm._v(\" \"), _c('div', {\n    staticClass: \"info-container\"\n  }, [_c('span', {\n    staticClass: \"display_name\"\n  }, [_vm._v(_vm._s(_vm.name))]), _vm._v(\" \"), _c('div', {\n    staticClass: \"info-wrapper\"\n  }, [_c('div', {\n    staticClass: \"info-item\",\n    attrs: {\n      \"to\": '/article/wscnlist?uid=' + _vm.uid\n    }\n  }, [_c('countTo', {\n    staticClass: \"info-item-num\",\n    attrs: {\n      \"startVal\": 0,\n      \"endVal\": _vm.statisticsData.article_count,\n      \"duration\": 3400\n    }\n  }), _vm._v(\" \"), _c('span', {\n    staticClass: \"info-item-text\"\n  }, [_vm._v(\"文章\")]), _vm._v(\" \"), _c('wscn-icon-svg', {\n    staticClass: \"dashboard-editor-icon\",\n    attrs: {\n      \"icon-class\": \"a\"\n    }\n  })], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"info-item\",\n    staticStyle: {\n      \"cursor\": \"auto\"\n    }\n  }, [_c('countTo', {\n    staticClass: \"info-item-num\",\n    attrs: {\n      \"startVal\": 0,\n      \"endVal\": _vm.statisticsData.pageviews_count,\n      \"duration\": 3600\n    }\n  }), _vm._v(\" \"), _c('span', {\n    staticClass: \"info-item-text\"\n  }, [_vm._v(\"浏览量\")]), _vm._v(\" \"), _c('wscn-icon-svg', {\n    staticClass: \"dashboard-editor-icon\",\n    attrs: {\n      \"icon-class\": \"b\"\n    }\n  })], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"info-item\",\n    attrs: {\n      \"to\": '/comment/commentslist?res_author_id=' + _vm.uid\n    }\n  }, [_c('countTo', {\n    ref: \"countTo3\",\n    staticClass: \"info-item-num\",\n    attrs: {\n      \"startVal\": 0,\n      \"endVal\": _vm.statisticsData.comment_count,\n      \"duration\": 3800\n    }\n  }), _vm._v(\" \"), _c('span', {\n    staticClass: \"info-item-text\"\n  }, [_vm._v(\"评论\")]), _vm._v(\" \"), _c('wscn-icon-svg', {\n    staticClass: \"dashboard-editor-icon\",\n    attrs: {\n      \"icon-class\": \"c\"\n    }\n  })], 1)])])], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"btn-group\"\n  }, [_c('router-link', {\n    staticClass: \"pan-btn blue-btn\",\n    attrs: {\n      \"to\": \"/components/index\"\n    }\n  }, [_vm._v(\"组价\")]), _vm._v(\" \"), _c('router-link', {\n    staticClass: \"pan-btn light-blue-btn\",\n    attrs: {\n      \"to\": \"/charts/index\"\n    }\n  }, [_vm._v(\"图表\")]), _vm._v(\" \"), _c('router-link', {\n    staticClass: \"pan-btn red-btn\",\n    attrs: {\n      \"to\": \"/errorpage/404\"\n    }\n  }, [_vm._v(\"错误页面\")]), _vm._v(\" \"), _c('router-link', {\n    staticClass: \"pan-btn pink-btn\",\n    attrs: {\n      \"to\": \"/errlog/log\"\n    }\n  }, [_vm._v(\"错误日志\")]), _vm._v(\" \"), _c('router-link', {\n    staticClass: \"pan-btn green-btn\",\n    attrs: {\n      \"to\": \"/article/wscnlist\"\n    }\n  }, [_vm._v(\"导出excel\")]), _vm._v(\" \"), _c('router-link', {\n    staticClass: \"pan-btn tiffany-btn\",\n    attrs: {\n      \"to\": \"/excel/download\"\n    }\n  }, [_vm._v(\"实时列表\")])], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"clearfix main-dashboard-container\"\n  }, [_c('div', {\n    staticClass: \"chart-container\"\n  }, [_c('MonthKpi', {\n    staticStyle: {\n      \"border-bottom\": \"1px solid #DEE1E2\"\n    },\n    attrs: {\n      \"articlesComplete\": _vm.statisticsData.month_article_count\n    }\n  }), _vm._v(\" \"), _c('ArticlesChart', {\n    attrs: {\n      \"listData\": _vm.statisticsData.week_article\n    }\n  })], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"recent-articles-container\"\n  }, [_c('div', {\n    staticClass: \"recent-articles-title\"\n  }, [_vm._v(\"最近撸了\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"recent-articles-wrapper\"\n  }, [(_vm.recentArticles.length != 0) ? _vm._l((_vm.recentArticles), function(item) {\n    return _c('div', {\n      staticClass: \"recent-articles-item\"\n    }, [_c('span', {\n      staticClass: \"recent-articles-status\"\n    }, [_vm._v(_vm._s(_vm._f(\"statusFilter\")(item.status)))]), _vm._v(\" \"), _c('span', {\n      staticClass: \"recent-articles-content\",\n      attrs: {\n        \"to\": '/article/edit/' + item.id\n      }\n    }, [_vm._v(\"\\n                            \" + _vm._s(item.title) + \"\\n                        \")]), _vm._v(\" \"), _c('span', {\n      staticClass: \"recent-articles-time\"\n    }, [_vm._v(_vm._s(item.author))])])\n  }) : [_c('div', {\n    staticClass: \"recent-articles-emptyTitle\"\n  }, [_vm._v(\"你太懒了最近都没有撸\")])]], 2)])])])\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-2b4edebd\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/views/dashboard/editor/index.vue\n// module id = 733\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"monthKpi-container\"\n  }, [_c('span', {\n    staticClass: \"monthKpi-container-title\"\n  }, [_vm._v(_vm._s(_vm.month) + \"月\")]), _vm._v(\" \"), _c('BarPercent', {\n    staticClass: \"monthKpi-container-chart\",\n    attrs: {\n      \"dataNum\": _vm.articlesComplete\n    }\n  }), _vm._v(\" \"), _c('span', {\n    staticClass: \"monthKpi-container-text\"\n  }, [_vm._v(\"文章完成比例\")]), _vm._v(\" \"), _c('span', {\n    staticClass: \"monthKpi-container-count\"\n  }, [_vm._v(_vm._s(_vm.articlesComplete)), _c('b', [_vm._v(\"篇\")])])], 1)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-32c30469\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/views/dashboard/editor/monthKpi.vue\n// module id = 735\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"dashboard-container\"\n  }, [_c(_vm.currentRole, {\n    tag: \"component\"\n  })], 1)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-58845cd6\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/views/dashboard/index.vue\n// module id = 746\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"articlesChart-container\"\n  }, [_c('span', {\n    staticClass: \"articlesChart-container-title\"\n  }, [_vm._v(\"每天撸文\")]), _vm._v(\" \"), _c('line-chart', {\n    attrs: {\n      \"listData\": _vm.listData\n    }\n  })], 1)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-6d3ab1e8\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/views/dashboard/editor/articlesChart.vue\n// module id = 754\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    class: _vm.className,\n    style: ({\n      height: _vm.height,\n      width: _vm.width\n    }),\n    attrs: {\n      \"id\": _vm.id\n    }\n  })\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-c855aa74\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/Charts/line.vue\n// module id = 766\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    class: _vm.className,\n    style: ({\n      height: _vm.height,\n      width: _vm.width\n    }),\n    attrs: {\n      \"id\": _vm.id\n    }\n  })\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-cf9fa5f8\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/Charts/barPercent.vue\n// module id = 768\n// module chunks = 0"],"sourceRoot":""}