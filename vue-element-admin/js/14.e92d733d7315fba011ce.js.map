{"version":3,"sources":["webpack:///js/14.e92d733d7315fba011ce.js","webpack:///./src/views/example/table.vue","webpack:///./src/api/article_table.js","webpack:///./src/utils/index.js","webpack:///./~/babel-runtime/core-js/get-iterator.js?1b08","webpack:///./~/core-js/library/fn/get-iterator.js?2cf7","webpack:///./~/core-js/library/modules/core.get-iterator.js?aca7","webpack:///./~/showdown/dist/showdown.js","webpack:///table.vue","webpack:///./src/views/example/table.vue?f1d6"],"names":["webpackJsonp","315","module","exports","__webpack_require__","Component","472","fetchList","query","_fetch","fetch","url","method","params","fetchPv","pv","Object","defineProperty","value","492","_interopRequireDefault","obj","__esModule","default","parseTime","time","cFormat","arguments","length","format","date","_typeof3","parseInt","Date","formatObj","y","getFullYear","m","getMonth","d","getDate","h","getHours","i","getMinutes","s","getSeconds","a","getDay","replace","result","key","formatTime","option","now","diff","Math","ceil","getQueryObject","window","location","href","search","substring","lastIndexOf","reg","rs","$1","$2","name","decodeURIComponent","val","String","getByteLen","len","match","floor","cleanArray","actual","newArray","push","param","json","_keys2","map","undefined","encodeURIComponent","join","html2Text","div","document","createElement","innerHTML","textContent","innerText","objectMerge","target","source","Array","isArray","slice","property","hasOwnProperty","sourceProperty","scrollTo","element","to","duration","difference","scrollTop","perTick","setTimeout","console","log","toggleClass","className","classString","nameIndex","indexOf","substr","getTime","type","toDateString","showdownMD","md","converter","makeHtml","pickerOptions","_keys","_typeof2","_showdown","_showdown2","Converter","text","onClick","picker","end","start","setTime","$emit","493","494","495","anObject","get","getIterator","it","iterFn","TypeError","call","524","__WEBPACK_AMD_DEFINE_RESULT__","getDefaultOpts","simple","defaultOptions","omitExtraWLInCodeBlocks","defaultValue","describe","noHeaderId","prefixHeaderId","ghCompatibleHeaderId","headerLevelStart","parseImgDimensions","simplifiedAutoLink","excludeTrailingPunctuationFromURLs","literalMidWordUnderscores","strikethrough","tables","tablesHeaderId","ghCodeBlocks","tasklists","smoothLivePreview","smartIndentationFix","description","disableForced4SpacesIndentedSublists","simpleLineBreaks","requireSpaceBeforeHeadingText","ghMentions","ghMentionsLink","encodeEmails","JSON","parse","stringify","ret","opt","allOptionsOn","options","validate","extension","errMsg","valid","error","showdown","helper","baseMsg","ext","isString","toLowerCase","isUndefined","listeners","filter","regex","ln","RegExp","escapeCharactersCallback","wholeMatch","m1","charCodeAt","parsers","extensions","globalOptions","setFlavor","flavor","github","original","ghost","vanilla","allOn","setOption","this","getOption","getOptions","resetOptions","Error","preset","getFlavor","getFlavorOptions","getDefaultOptions","subParser","func","stdExtName","validExtension","getAllExtensions","removeExtension","resetExtensions","validateExtension","warn","isFunction","getType","toString","constructor","forEach","callback","prop","escapeCharacters","charsToEscape","afterBackslash","regexString","rgxFindMatchPos","str","left","right","flags","t","f","g","x","l","pos","exec","test","lastIndex","index","matchRecursiveRegExp","matchPos","results","replaceRecursiveRegExp","replacement","repStr","finalStr","lng","bits","encodeEmailAddress","mail","encode","ch","random","r","msg","alert","regexes","asteriskAndDash","converterOptions","_constructor","gOpt","_parseExtension","legacyExtensionLoading","validExt","langExtensions","outputModifiers","listen","rTrimInputText","rsp","rgx","setConvFlavor","_dispatch","evtName","globals","ei","nText","gHtmlBlocks","gHtmlMdBlocks","gHtmlSpans","gUrls","gTitles","gDimensions","gListLevel","hashLinkCounts","addExtension","useExtension","extensionName","splice","ii","language","output","writeAnchorTag","m2","m3","m4","m5","m6","m7","linkText","linkId","title","wm","st","escape","mentions","username","replaceLink","link","trailingPunctuation","lnkTxt","append","replaceMail","b","simpleURLRegex","simpleURLRegex2","delimUrlRegex","simpleMailRegex","delimMailRegex","bq","pre","pattern","codeblock","nextChar","c","leadingText","numSpaces","repFunc","blockText","blockTags","txt","hashHTMLSpan","html","repText","limit","num","headerId","ghHeaderId","isNaN","setextRegexH1","setextRegexH2","spanGamut","hID","hLevel","hashBlock","matchFound","atxStyle","span","header","writeImageTag","altText","width","height","gDims","inlineRegExp","referenceRegExp","processListItems","listStr","trimTrailing","isParagraphed","taskbtn","checked","trim","item","bulletStyle","otp","wm2","parseConsecutiveLists","list","listType","olRgx","ulRgx","counterRxg","parseCL","grafs","split","grafsOut","grafsOutIt","codeFlag","delim","re","blankLines","parseStyles","sLine","parseHeaders","style","id","tableHeaderId","parseCells","cell","buildTable","headers","cells","tb","tblLgn","tableRgx","rawTable","tableLines","rawHeaders","rawStyles","rawCells","styles","shift","row","charCodeToReplace","fromCharCode","588","_getIterator2","_getIterator3","_article_table","_utils","calendarTypeOptions","display_name","calendarTypeKeyValue","reduce","acc","cur","data","total","listLoading","listQuery","page","importance","sort","temp","remark","timestamp","status","importanceOptions","sortOptions","label","statusOptions","dialogFormVisible","dialogStatus","textMap","update","create","dialogPvVisible","pvData","showAuditor","tableKey","created","getList","filters","statusFilter","published","draft","deleted","typeFilter","methods","_this","then","response","items","handleFilter","handleSizeChange","handleCurrentChange","timeFilter","handleModifyStatus","$message","message","handleCreate","resetTemp","handleUpdate","handleDelete","$notify","author","unshift","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","next","done","v","err","return","handleFetchPv","_this2","handleDownload","_this3","e","_require","export_json_to_excel","tHeader","filterVal","formatJson","bind","catch","oe","jsonData","j","747","render","_vm","_h","$createElement","_c","_self","staticClass","staticStyle","attrs","placeholder","nativeOn","keyup","$event","_k","keyCode","model","$$v","expression","_v","clearable","_l","on","change","directives","rawName","icon","click","margin-left","modifiers","body","border","fit","highlight-current-row","align","scopedSlots","_u","scope","_s","_f","min-width","color","auditor","_e","n","icon-class","pageviews","class-name","size","current-page","page-sizes","page-size","layout","size-change","current-change","label-position","label-width","margin-top","colors","autosize","minRows","maxRows","slot","staticRenderFns"],"mappings":"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","file":"js/14.e92d733d7315fba011ce.js","sourcesContent":["webpackJsonp([14,32],{\n\n/***/ 315:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(1)(\n  /* script */\n  __webpack_require__(588),\n  /* template */\n  __webpack_require__(747),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 472:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fetchList = fetchList;\nexports.fetchPv = fetchPv;\n\nvar _fetch = __webpack_require__(109);\n\nfunction fetchList(query) {\n  return (0, _fetch.fetch)({\n    url: '/article_table/list',\n    method: 'get',\n    params: query\n  });\n}\n\nfunction fetchPv(pv) {\n  return (0, _fetch.fetch)({\n    url: '/article_table/pv',\n    method: 'get',\n    params: { pv: pv }\n  });\n}\n\n/***/ }),\n\n/***/ 492:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.pickerOptions = undefined;\n\nvar _keys = __webpack_require__(61);\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _typeof2 = __webpack_require__(33);\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nexports.parseTime = parseTime;\nexports.formatTime = formatTime;\nexports.getQueryObject = getQueryObject;\nexports.getByteLen = getByteLen;\nexports.cleanArray = cleanArray;\nexports.param = param;\nexports.html2Text = html2Text;\nexports.objectMerge = objectMerge;\nexports.scrollTo = scrollTo;\nexports.toggleClass = toggleClass;\nexports.getTime = getTime;\nexports.showdownMD = showdownMD;\n\nvar _showdown = __webpack_require__(524);\n\nvar _showdown2 = _interopRequireDefault(_showdown);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar converter = new _showdown2.default.Converter();\n\nfunction parseTime(time, cFormat) {\n  if (arguments.length === 0) {\n    return null;\n  }\n  var format = cFormat || '{y}-{m}-{d} {h}:{i}:{s}';\n  var date = void 0;\n  if ((typeof time === 'undefined' ? 'undefined' : (0, _typeof3.default)(time)) == 'object') {\n    date = time;\n  } else {\n    if (('' + time).length === 10) time = parseInt(time) * 1000;\n    date = new Date(time);\n  }\n  var formatObj = {\n    y: date.getFullYear(),\n    m: date.getMonth() + 1,\n    d: date.getDate(),\n    h: date.getHours(),\n    i: date.getMinutes(),\n    s: date.getSeconds(),\n    a: date.getDay()\n  };\n  var time_str = format.replace(/{(y|m|d|h|i|s|a)+}/g, function (result, key) {\n    var value = formatObj[key];\n    if (key === 'a') return ['一', '二', '三', '四', '五', '六', '日'][value - 1];\n    if (result.length > 0 && value < 10) {\n      value = '0' + value;\n    }\n    return value || 0;\n  });\n  return time_str;\n}\n\nfunction formatTime(time, option) {\n  time = +time * 1000;\n  var d = new Date(time);\n  var now = Date.now();\n\n  var diff = (now - d) / 1000;\n\n  if (diff < 30) {\n    return '刚刚';\n  } else if (diff < 3600) {\n    return Math.ceil(diff / 60) + '分钟前';\n  } else if (diff < 3600 * 24) {\n    return Math.ceil(diff / 3600) + '小时前';\n  } else if (diff < 3600 * 24 * 2) {\n    return '1天前';\n  }\n  if (option) {\n    return parseTime(time, option);\n  } else {\n    return d.getMonth() + 1 + '月' + d.getDate() + '日' + d.getHours() + '时' + d.getMinutes() + '分';\n  }\n}\n\nfunction getQueryObject(url) {\n  url = url == null ? window.location.href : url;\n  var search = url.substring(url.lastIndexOf('?') + 1);\n  var obj = {};\n  var reg = /([^?&=]+)=([^?&=]*)/g;\n  search.replace(reg, function (rs, $1, $2) {\n    var name = decodeURIComponent($1);\n    var val = decodeURIComponent($2);\n    val = String(val);\n    obj[name] = val;\n    return rs;\n  });\n  return obj;\n}\n\nfunction getByteLen(val) {\n  var len = 0;\n  for (var i = 0; i < val.length; i++) {\n    if (val[i].match(/[^\\x00-\\xff]/ig) != null) {\n      len += 1;\n    } else {\n      len += 0.5;\n    }\n  }\n  return Math.floor(len);\n}\n\nfunction cleanArray(actual) {\n  var newArray = [];\n  for (var i = 0; i < actual.length; i++) {\n    if (actual[i]) {\n      newArray.push(actual[i]);\n    }\n  }\n  return newArray;\n}\n\nfunction param(json) {\n  if (!json) return '';\n  return cleanArray((0, _keys2.default)(json).map(function (key) {\n    if (json[key] === undefined) return '';\n    return encodeURIComponent(key) + '=' + encodeURIComponent(json[key]);\n  })).join('&');\n}\n\nfunction html2Text(val) {\n  var div = document.createElement('div');\n  div.innerHTML = val;\n  return div.textContent || div.innerText;\n}\n\nfunction objectMerge(target, source) {\n\n  if ((typeof target === 'undefined' ? 'undefined' : (0, _typeof3.default)(target)) !== 'object') {\n    target = {};\n  }\n  if (Array.isArray(source)) {\n    return source.slice();\n  }\n  for (var property in source) {\n    if (source.hasOwnProperty(property)) {\n      var sourceProperty = source[property];\n      if ((typeof sourceProperty === 'undefined' ? 'undefined' : (0, _typeof3.default)(sourceProperty)) === 'object') {\n        target[property] = objectMerge(target[property], sourceProperty);\n        continue;\n      }\n      target[property] = sourceProperty;\n    }\n  }\n  return target;\n}\n\nfunction scrollTo(element, to, duration) {\n  if (duration <= 0) return;\n  var difference = to - element.scrollTop;\n  var perTick = difference / duration * 10;\n  setTimeout(function () {\n    console.log(new Date());\n    element.scrollTop = element.scrollTop + perTick;\n    if (element.scrollTop === to) return;\n    scrollTo(element, to, duration - 10);\n  }, 10);\n}\n\nfunction toggleClass(element, className) {\n  if (!element || !className) {\n    return;\n  }\n  var classString = element.className;\n  var nameIndex = classString.indexOf(className);\n  if (nameIndex === -1) {\n    classString += '' + className;\n  } else {\n    classString = classString.substr(0, nameIndex) + classString.substr(nameIndex + className.length);\n  }\n  element.className = classString;\n}\n\nvar pickerOptions = exports.pickerOptions = [{\n  text: '今天',\n  onClick: function onClick(picker) {\n    var end = new Date();\n    var start = new Date(new Date().toDateString());\n    end.setTime(start.getTime());\n    picker.$emit('pick', [start, end]);\n  }\n}, {\n  text: '最近一周',\n  onClick: function onClick(picker) {\n    var end = new Date(new Date().toDateString());\n    var start = new Date();\n    start.setTime(end.getTime() - 3600 * 1000 * 24 * 7);\n    picker.$emit('pick', [start, end]);\n  }\n}, {\n  text: '最近一个月',\n  onClick: function onClick(picker) {\n    var end = new Date(new Date().toDateString());\n    var start = new Date();\n    start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n    picker.$emit('pick', [start, end]);\n  }\n}, {\n  text: '最近三个月',\n  onClick: function onClick(picker) {\n    var end = new Date(new Date().toDateString());\n    var start = new Date();\n    start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n    picker.$emit('pick', [start, end]);\n  }\n}];\n\nfunction getTime(type) {\n  if (type === 'start') {\n    return new Date().getTime() - 3600 * 1000 * 24 * 90;\n  } else {\n    return new Date(new Date().toDateString());\n  }\n}\n\nfunction showdownMD(md) {\n  return converter.makeHtml(md);\n}\n\n/***/ }),\n\n/***/ 493:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(494), __esModule: true };\n\n/***/ }),\n\n/***/ 494:\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(63);\n__webpack_require__(62);\nmodule.exports = __webpack_require__(495);\n\n/***/ }),\n\n/***/ 495:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar anObject = __webpack_require__(8)\n  , get      = __webpack_require__(111);\nmodule.exports = __webpack_require__(7).getIterator = function(it){\n  var iterFn = get(it);\n  if(typeof iterFn != 'function')throw TypeError(it + ' is not iterable!');\n  return anObject(iterFn.call(it));\n};\n\n/***/ }),\n\n/***/ 524:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;;/*! showdown 06-02-2017 */\r\n(function(){\r\n/**\n * Created by Tivie on 13-07-2015.\n */\n\nfunction getDefaultOpts (simple) {\n  'use strict';\n\n  var defaultOptions = {\n    omitExtraWLInCodeBlocks: {\n      defaultValue: false,\n      describe: 'Omit the default extra whiteline added to code blocks',\n      type: 'boolean'\n    },\n    noHeaderId: {\n      defaultValue: false,\n      describe: 'Turn on/off generated header id',\n      type: 'boolean'\n    },\n    prefixHeaderId: {\n      defaultValue: false,\n      describe: 'Specify a prefix to generated header ids',\n      type: 'string'\n    },\n    ghCompatibleHeaderId: {\n      defaultValue: false,\n      describe: 'Generate header ids compatible with github style (spaces are replaced with dashes, a bunch of non alphanumeric chars are removed)',\n      type: 'boolean'\n    },\n    headerLevelStart: {\n      defaultValue: false,\n      describe: 'The header blocks level start',\n      type: 'integer'\n    },\n    parseImgDimensions: {\n      defaultValue: false,\n      describe: 'Turn on/off image dimension parsing',\n      type: 'boolean'\n    },\n    simplifiedAutoLink: {\n      defaultValue: false,\n      describe: 'Turn on/off GFM autolink style',\n      type: 'boolean'\n    },\n    excludeTrailingPunctuationFromURLs: {\n      defaultValue: false,\n      describe: 'Excludes trailing punctuation from links generated with autoLinking',\n      type: 'boolean'\n    },\n    literalMidWordUnderscores: {\n      defaultValue: false,\n      describe: 'Parse midword underscores as literal underscores',\n      type: 'boolean'\n    },\n    strikethrough: {\n      defaultValue: false,\n      describe: 'Turn on/off strikethrough support',\n      type: 'boolean'\n    },\n    tables: {\n      defaultValue: false,\n      describe: 'Turn on/off tables support',\n      type: 'boolean'\n    },\n    tablesHeaderId: {\n      defaultValue: false,\n      describe: 'Add an id to table headers',\n      type: 'boolean'\n    },\n    ghCodeBlocks: {\n      defaultValue: true,\n      describe: 'Turn on/off GFM fenced code blocks support',\n      type: 'boolean'\n    },\n    tasklists: {\n      defaultValue: false,\n      describe: 'Turn on/off GFM tasklist support',\n      type: 'boolean'\n    },\n    smoothLivePreview: {\n      defaultValue: false,\n      describe: 'Prevents weird effects in live previews due to incomplete input',\n      type: 'boolean'\n    },\n    smartIndentationFix: {\n      defaultValue: false,\n      description: 'Tries to smartly fix indentation in es6 strings',\n      type: 'boolean'\n    },\n    disableForced4SpacesIndentedSublists: {\n      defaultValue: false,\n      description: 'Disables the requirement of indenting nested sublists by 4 spaces',\n      type: 'boolean'\n    },\n    simpleLineBreaks: {\n      defaultValue: false,\n      description: 'Parses simple line breaks as <br> (GFM Style)',\n      type: 'boolean'\n    },\n    requireSpaceBeforeHeadingText: {\n      defaultValue: false,\n      description: 'Makes adding a space between `#` and the header text mandatory (GFM Style)',\n      type: 'boolean'\n    },\n    ghMentions: {\n      defaultValue: false,\n      description: 'Enables github @mentions',\n      type: 'boolean'\n    },\n    ghMentionsLink: {\n      defaultValue: 'https://github.com/{u}',\n      description: 'Changes the link generated by @mentions. Only applies if ghMentions option is enabled.',\n      type: 'string'\n    },\n    encodeEmails: {\n      defaultValue: true,\n      description: 'Encode e-mail addresses through the use of Character Entities, transforming ASCII e-mail addresses into its equivalent decimal entities',\n      type: 'boolean'\n    }\n  };\n  if (simple === false) {\n    return JSON.parse(JSON.stringify(defaultOptions));\n  }\n  var ret = {};\n  for (var opt in defaultOptions) {\n    if (defaultOptions.hasOwnProperty(opt)) {\n      ret[opt] = defaultOptions[opt].defaultValue;\n    }\n  }\n  return ret;\n}\n\nfunction allOptionsOn () {\n  'use strict';\n  var options = getDefaultOpts(true),\n      ret = {};\n  for (var opt in options) {\n    if (options.hasOwnProperty(opt)) {\n      ret[opt] = true;\n    }\n  }\n  return ret;\n}\n\r\n/**\n * Created by Tivie on 06-01-2015.\n */\n\n// Private properties\nvar showdown = {},\n    parsers = {},\n    extensions = {},\n    globalOptions = getDefaultOpts(true),\n    setFlavor = 'vanilla',\n    flavor = {\n      github: {\n        omitExtraWLInCodeBlocks:              true,\n        simplifiedAutoLink:                   true,\n        excludeTrailingPunctuationFromURLs:   true,\n        literalMidWordUnderscores:            true,\n        strikethrough:                        true,\n        tables:                               true,\n        tablesHeaderId:                       true,\n        ghCodeBlocks:                         true,\n        tasklists:                            true,\n        disableForced4SpacesIndentedSublists: true,\n        simpleLineBreaks:                     true,\n        requireSpaceBeforeHeadingText:        true,\n        ghCompatibleHeaderId:                 true,\n        ghMentions:                           true\n      },\n      original: {\n        noHeaderId:                           true,\n        ghCodeBlocks:                         false\n      },\n      ghost: {\n        omitExtraWLInCodeBlocks:              true,\n        parseImgDimensions:                   true,\n        simplifiedAutoLink:                   true,\n        excludeTrailingPunctuationFromURLs:   true,\n        literalMidWordUnderscores:            true,\n        strikethrough:                        true,\n        tables:                               true,\n        tablesHeaderId:                       true,\n        ghCodeBlocks:                         true,\n        tasklists:                            true,\n        smoothLivePreview:                    true,\n        simpleLineBreaks:                     true,\n        requireSpaceBeforeHeadingText:        true,\n        ghMentions:                           false,\n        encodeEmails:                         true\n      },\n      vanilla: getDefaultOpts(true),\n      allOn: allOptionsOn()\n    };\n\n/**\n * helper namespace\n * @type {{}}\n */\nshowdown.helper = {};\n\n/**\n * TODO LEGACY SUPPORT CODE\n * @type {{}}\n */\nshowdown.extensions = {};\n\n/**\n * Set a global option\n * @static\n * @param {string} key\n * @param {*} value\n * @returns {showdown}\n */\nshowdown.setOption = function (key, value) {\n  'use strict';\n  globalOptions[key] = value;\n  return this;\n};\n\n/**\n * Get a global option\n * @static\n * @param {string} key\n * @returns {*}\n */\nshowdown.getOption = function (key) {\n  'use strict';\n  return globalOptions[key];\n};\n\n/**\n * Get the global options\n * @static\n * @returns {{}}\n */\nshowdown.getOptions = function () {\n  'use strict';\n  return globalOptions;\n};\n\n/**\n * Reset global options to the default values\n * @static\n */\nshowdown.resetOptions = function () {\n  'use strict';\n  globalOptions = getDefaultOpts(true);\n};\n\n/**\n * Set the flavor showdown should use as default\n * @param {string} name\n */\nshowdown.setFlavor = function (name) {\n  'use strict';\n  if (!flavor.hasOwnProperty(name)) {\n    throw Error(name + ' flavor was not found');\n  }\n  var preset = flavor[name];\n  setFlavor = name;\n  for (var option in preset) {\n    if (preset.hasOwnProperty(option)) {\n      globalOptions[option] = preset[option];\n    }\n  }\n};\n\n/**\n * Get the currently set flavor\n * @returns {string}\n */\nshowdown.getFlavor = function () {\n  'use strict';\n  return setFlavor;\n};\n\n/**\n * Get the options of a specified flavor. Returns undefined if the flavor was not found\n * @param {string} name Name of the flavor\n * @returns {{}|undefined}\n */\nshowdown.getFlavorOptions = function (name) {\n  'use strict';\n  if (flavor.hasOwnProperty(name)) {\n    return flavor[name];\n  }\n};\n\n/**\n * Get the default options\n * @static\n * @param {boolean} [simple=true]\n * @returns {{}}\n */\nshowdown.getDefaultOptions = function (simple) {\n  'use strict';\n  return getDefaultOpts(simple);\n};\n\n/**\n * Get or set a subParser\n *\n * subParser(name)       - Get a registered subParser\n * subParser(name, func) - Register a subParser\n * @static\n * @param {string} name\n * @param {function} [func]\n * @returns {*}\n */\nshowdown.subParser = function (name, func) {\n  'use strict';\n  if (showdown.helper.isString(name)) {\n    if (typeof func !== 'undefined') {\n      parsers[name] = func;\n    } else {\n      if (parsers.hasOwnProperty(name)) {\n        return parsers[name];\n      } else {\n        throw Error('SubParser named ' + name + ' not registered!');\n      }\n    }\n  }\n};\n\n/**\n * Gets or registers an extension\n * @static\n * @param {string} name\n * @param {object|function=} ext\n * @returns {*}\n */\nshowdown.extension = function (name, ext) {\n  'use strict';\n\n  if (!showdown.helper.isString(name)) {\n    throw Error('Extension \\'name\\' must be a string');\n  }\n\n  name = showdown.helper.stdExtName(name);\n\n  // Getter\n  if (showdown.helper.isUndefined(ext)) {\n    if (!extensions.hasOwnProperty(name)) {\n      throw Error('Extension named ' + name + ' is not registered!');\n    }\n    return extensions[name];\n\n    // Setter\n  } else {\n    // Expand extension if it's wrapped in a function\n    if (typeof ext === 'function') {\n      ext = ext();\n    }\n\n    // Ensure extension is an array\n    if (!showdown.helper.isArray(ext)) {\n      ext = [ext];\n    }\n\n    var validExtension = validate(ext, name);\n\n    if (validExtension.valid) {\n      extensions[name] = ext;\n    } else {\n      throw Error(validExtension.error);\n    }\n  }\n};\n\n/**\n * Gets all extensions registered\n * @returns {{}}\n */\nshowdown.getAllExtensions = function () {\n  'use strict';\n  return extensions;\n};\n\n/**\n * Remove an extension\n * @param {string} name\n */\nshowdown.removeExtension = function (name) {\n  'use strict';\n  delete extensions[name];\n};\n\n/**\n * Removes all extensions\n */\nshowdown.resetExtensions = function () {\n  'use strict';\n  extensions = {};\n};\n\n/**\n * Validate extension\n * @param {array} extension\n * @param {string} name\n * @returns {{valid: boolean, error: string}}\n */\nfunction validate (extension, name) {\n  'use strict';\n\n  var errMsg = (name) ? 'Error in ' + name + ' extension->' : 'Error in unnamed extension',\n      ret = {\n        valid: true,\n        error: ''\n      };\n\n  if (!showdown.helper.isArray(extension)) {\n    extension = [extension];\n  }\n\n  for (var i = 0; i < extension.length; ++i) {\n    var baseMsg = errMsg + ' sub-extension ' + i + ': ',\n        ext = extension[i];\n    if (typeof ext !== 'object') {\n      ret.valid = false;\n      ret.error = baseMsg + 'must be an object, but ' + typeof ext + ' given';\n      return ret;\n    }\n\n    if (!showdown.helper.isString(ext.type)) {\n      ret.valid = false;\n      ret.error = baseMsg + 'property \"type\" must be a string, but ' + typeof ext.type + ' given';\n      return ret;\n    }\n\n    var type = ext.type = ext.type.toLowerCase();\n\n    // normalize extension type\n    if (type === 'language') {\n      type = ext.type = 'lang';\n    }\n\n    if (type === 'html') {\n      type = ext.type = 'output';\n    }\n\n    if (type !== 'lang' && type !== 'output' && type !== 'listener') {\n      ret.valid = false;\n      ret.error = baseMsg + 'type ' + type + ' is not recognized. Valid values: \"lang/language\", \"output/html\" or \"listener\"';\n      return ret;\n    }\n\n    if (type === 'listener') {\n      if (showdown.helper.isUndefined(ext.listeners)) {\n        ret.valid = false;\n        ret.error = baseMsg + '. Extensions of type \"listener\" must have a property called \"listeners\"';\n        return ret;\n      }\n    } else {\n      if (showdown.helper.isUndefined(ext.filter) && showdown.helper.isUndefined(ext.regex)) {\n        ret.valid = false;\n        ret.error = baseMsg + type + ' extensions must define either a \"regex\" property or a \"filter\" method';\n        return ret;\n      }\n    }\n\n    if (ext.listeners) {\n      if (typeof ext.listeners !== 'object') {\n        ret.valid = false;\n        ret.error = baseMsg + '\"listeners\" property must be an object but ' + typeof ext.listeners + ' given';\n        return ret;\n      }\n      for (var ln in ext.listeners) {\n        if (ext.listeners.hasOwnProperty(ln)) {\n          if (typeof ext.listeners[ln] !== 'function') {\n            ret.valid = false;\n            ret.error = baseMsg + '\"listeners\" property must be an hash of [event name]: [callback]. listeners.' + ln +\n              ' must be a function but ' + typeof ext.listeners[ln] + ' given';\n            return ret;\n          }\n        }\n      }\n    }\n\n    if (ext.filter) {\n      if (typeof ext.filter !== 'function') {\n        ret.valid = false;\n        ret.error = baseMsg + '\"filter\" must be a function, but ' + typeof ext.filter + ' given';\n        return ret;\n      }\n    } else if (ext.regex) {\n      if (showdown.helper.isString(ext.regex)) {\n        ext.regex = new RegExp(ext.regex, 'g');\n      }\n      if (!(ext.regex instanceof RegExp)) {\n        ret.valid = false;\n        ret.error = baseMsg + '\"regex\" property must either be a string or a RegExp object, but ' + typeof ext.regex + ' given';\n        return ret;\n      }\n      if (showdown.helper.isUndefined(ext.replace)) {\n        ret.valid = false;\n        ret.error = baseMsg + '\"regex\" extensions must implement a replace string or function';\n        return ret;\n      }\n    }\n  }\n  return ret;\n}\n\n/**\n * Validate extension\n * @param {object} ext\n * @returns {boolean}\n */\nshowdown.validateExtension = function (ext) {\n  'use strict';\n\n  var validateExtension = validate(ext, null);\n  if (!validateExtension.valid) {\n    console.warn(validateExtension.error);\n    return false;\n  }\n  return true;\n};\n\r\n/**\n * showdownjs helper functions\n */\n\nif (!showdown.hasOwnProperty('helper')) {\n  showdown.helper = {};\n}\n\n/**\n * Check if var is string\n * @static\n * @param {string} a\n * @returns {boolean}\n */\nshowdown.helper.isString = function (a) {\n  'use strict';\n  return (typeof a === 'string' || a instanceof String);\n};\n\n/**\n * Check if var is a function\n * @static\n * @param {*} a\n * @returns {boolean}\n */\nshowdown.helper.isFunction = function (a) {\n  'use strict';\n  var getType = {};\n  return a && getType.toString.call(a) === '[object Function]';\n};\n\n/**\n * isArray helper function\n * @static\n * @param {*} a\n * @returns {boolean}\n */\nshowdown.helper.isArray = function (a) {\n  'use strict';\n  return a.constructor === Array;\n};\n\n/**\n * Check if value is undefined\n * @static\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n */\nshowdown.helper.isUndefined = function (value) {\n  'use strict';\n  return typeof value === 'undefined';\n};\n\n/**\n * ForEach helper function\n * Iterates over Arrays and Objects (own properties only)\n * @static\n * @param {*} obj\n * @param {function} callback Accepts 3 params: 1. value, 2. key, 3. the original array/object\n */\nshowdown.helper.forEach = function (obj, callback) {\n  'use strict';\n  // check if obj is defined\n  if (showdown.helper.isUndefined(obj)) {\n    throw new Error('obj param is required');\n  }\n\n  if (showdown.helper.isUndefined(callback)) {\n    throw new Error('callback param is required');\n  }\n\n  if (!showdown.helper.isFunction(callback)) {\n    throw new Error('callback param must be a function/closure');\n  }\n\n  if (typeof obj.forEach === 'function') {\n    obj.forEach(callback);\n  } else if (showdown.helper.isArray(obj)) {\n    for (var i = 0; i < obj.length; i++) {\n      callback(obj[i], i, obj);\n    }\n  } else if (typeof (obj) === 'object') {\n    for (var prop in obj) {\n      if (obj.hasOwnProperty(prop)) {\n        callback(obj[prop], prop, obj);\n      }\n    }\n  } else {\n    throw new Error('obj does not seem to be an array or an iterable object');\n  }\n};\n\n/**\n * Standardidize extension name\n * @static\n * @param {string} s extension name\n * @returns {string}\n */\nshowdown.helper.stdExtName = function (s) {\n  'use strict';\n  return s.replace(/[_?*+\\/\\\\.^-]/g, '').replace(/\\s/g, '').toLowerCase();\n};\n\nfunction escapeCharactersCallback (wholeMatch, m1) {\n  'use strict';\n  var charCodeToEscape = m1.charCodeAt(0);\n  return '¨E' + charCodeToEscape + 'E';\n}\n\n/**\n * Callback used to escape characters when passing through String.replace\n * @static\n * @param {string} wholeMatch\n * @param {string} m1\n * @returns {string}\n */\nshowdown.helper.escapeCharactersCallback = escapeCharactersCallback;\n\n/**\n * Escape characters in a string\n * @static\n * @param {string} text\n * @param {string} charsToEscape\n * @param {boolean} afterBackslash\n * @returns {XML|string|void|*}\n */\nshowdown.helper.escapeCharacters = function (text, charsToEscape, afterBackslash) {\n  'use strict';\n  // First we have to escape the escape characters so that\n  // we can build a character class out of them\n  var regexString = '([' + charsToEscape.replace(/([\\[\\]\\\\])/g, '\\\\$1') + '])';\n\n  if (afterBackslash) {\n    regexString = '\\\\\\\\' + regexString;\n  }\n\n  var regex = new RegExp(regexString, 'g');\n  text = text.replace(regex, escapeCharactersCallback);\n\n  return text;\n};\n\nvar rgxFindMatchPos = function (str, left, right, flags) {\n  'use strict';\n  var f = flags || '',\n      g = f.indexOf('g') > -1,\n      x = new RegExp(left + '|' + right, 'g' + f.replace(/g/g, '')),\n      l = new RegExp(left, f.replace(/g/g, '')),\n      pos = [],\n      t, s, m, start, end;\n\n  do {\n    t = 0;\n    while ((m = x.exec(str))) {\n      if (l.test(m[0])) {\n        if (!(t++)) {\n          s = x.lastIndex;\n          start = s - m[0].length;\n        }\n      } else if (t) {\n        if (!--t) {\n          end = m.index + m[0].length;\n          var obj = {\n            left: {start: start, end: s},\n            match: {start: s, end: m.index},\n            right: {start: m.index, end: end},\n            wholeMatch: {start: start, end: end}\n          };\n          pos.push(obj);\n          if (!g) {\n            return pos;\n          }\n        }\n      }\n    }\n  } while (t && (x.lastIndex = s));\n\n  return pos;\n};\n\n/**\n * matchRecursiveRegExp\n *\n * (c) 2007 Steven Levithan <stevenlevithan.com>\n * MIT License\n *\n * Accepts a string to search, a left and right format delimiter\n * as regex patterns, and optional regex flags. Returns an array\n * of matches, allowing nested instances of left/right delimiters.\n * Use the \"g\" flag to return all matches, otherwise only the\n * first is returned. Be careful to ensure that the left and\n * right format delimiters produce mutually exclusive matches.\n * Backreferences are not supported within the right delimiter\n * due to how it is internally combined with the left delimiter.\n * When matching strings whose format delimiters are unbalanced\n * to the left or right, the output is intentionally as a\n * conventional regex library with recursion support would\n * produce, e.g. \"<<x>\" and \"<x>>\" both produce [\"x\"] when using\n * \"<\" and \">\" as the delimiters (both strings contain a single,\n * balanced instance of \"<x>\").\n *\n * examples:\n * matchRecursiveRegExp(\"test\", \"\\\\(\", \"\\\\)\")\n * returns: []\n * matchRecursiveRegExp(\"<t<<e>><s>>t<>\", \"<\", \">\", \"g\")\n * returns: [\"t<<e>><s>\", \"\"]\n * matchRecursiveRegExp(\"<div id=\\\"x\\\">test</div>\", \"<div\\\\b[^>]*>\", \"</div>\", \"gi\")\n * returns: [\"test\"]\n */\nshowdown.helper.matchRecursiveRegExp = function (str, left, right, flags) {\n  'use strict';\n\n  var matchPos = rgxFindMatchPos (str, left, right, flags),\n      results = [];\n\n  for (var i = 0; i < matchPos.length; ++i) {\n    results.push([\n      str.slice(matchPos[i].wholeMatch.start, matchPos[i].wholeMatch.end),\n      str.slice(matchPos[i].match.start, matchPos[i].match.end),\n      str.slice(matchPos[i].left.start, matchPos[i].left.end),\n      str.slice(matchPos[i].right.start, matchPos[i].right.end)\n    ]);\n  }\n  return results;\n};\n\n/**\n *\n * @param {string} str\n * @param {string|function} replacement\n * @param {string} left\n * @param {string} right\n * @param {string} flags\n * @returns {string}\n */\nshowdown.helper.replaceRecursiveRegExp = function (str, replacement, left, right, flags) {\n  'use strict';\n\n  if (!showdown.helper.isFunction(replacement)) {\n    var repStr = replacement;\n    replacement = function () {\n      return repStr;\n    };\n  }\n\n  var matchPos = rgxFindMatchPos(str, left, right, flags),\n      finalStr = str,\n      lng = matchPos.length;\n\n  if (lng > 0) {\n    var bits = [];\n    if (matchPos[0].wholeMatch.start !== 0) {\n      bits.push(str.slice(0, matchPos[0].wholeMatch.start));\n    }\n    for (var i = 0; i < lng; ++i) {\n      bits.push(\n        replacement(\n          str.slice(matchPos[i].wholeMatch.start, matchPos[i].wholeMatch.end),\n          str.slice(matchPos[i].match.start, matchPos[i].match.end),\n          str.slice(matchPos[i].left.start, matchPos[i].left.end),\n          str.slice(matchPos[i].right.start, matchPos[i].right.end)\n        )\n      );\n      if (i < lng - 1) {\n        bits.push(str.slice(matchPos[i].wholeMatch.end, matchPos[i + 1].wholeMatch.start));\n      }\n    }\n    if (matchPos[lng - 1].wholeMatch.end < str.length) {\n      bits.push(str.slice(matchPos[lng - 1].wholeMatch.end));\n    }\n    finalStr = bits.join('');\n  }\n  return finalStr;\n};\n\n/**\n * Obfuscate an e-mail address through the use of Character Entities,\n * transforming ASCII characters into their equivalent decimal or hex entities.\n *\n * Since it has a random component, subsequent calls to this function produce different results\n *\n * @param {string} mail\n * @returns {string}\n */\nshowdown.helper.encodeEmailAddress = function (mail) {\n  'use strict';\n  var encode = [\n    function (ch) {\n      return '&#' + ch.charCodeAt(0) + ';';\n    },\n    function (ch) {\n      return '&#x' + ch.charCodeAt(0).toString(16) + ';';\n    },\n    function (ch) {\n      return ch;\n    }\n  ];\n\n  mail = mail.replace(/./g, function (ch) {\n    if (ch === '@') {\n      // this *must* be encoded. I insist.\n      ch = encode[Math.floor(Math.random() * 2)](ch);\n    } else {\n      var r = Math.random();\n      // roughly 10% raw, 45% hex, 45% dec\n      ch = (\n        r > 0.9 ? encode[2](ch) : r > 0.45 ? encode[1](ch) : encode[0](ch)\n      );\n    }\n    return ch;\n  });\n\n  return mail;\n};\n\n/**\n * POLYFILLS\n */\n// use this instead of builtin is undefined for IE8 compatibility\nif (typeof(console) === 'undefined') {\n  console = {\n    warn: function (msg) {\n      'use strict';\n      alert(msg);\n    },\n    log: function (msg) {\n      'use strict';\n      alert(msg);\n    },\n    error: function (msg) {\n      'use strict';\n      throw msg;\n    }\n  };\n}\n\n/**\n * Common regexes.\n * We declare some common regexes to improve performance\n */\nshowdown.helper.regexes = {\n  asteriskAndDash: /([*_])/g\n};\n\r\n/**\n * Created by Estevao on 31-05-2015.\n */\n\n/**\n * Showdown Converter class\n * @class\n * @param {object} [converterOptions]\n * @returns {Converter}\n */\nshowdown.Converter = function (converterOptions) {\n  'use strict';\n\n  var\n      /**\n       * Options used by this converter\n       * @private\n       * @type {{}}\n       */\n      options = {},\n\n      /**\n       * Language extensions used by this converter\n       * @private\n       * @type {Array}\n       */\n      langExtensions = [],\n\n      /**\n       * Output modifiers extensions used by this converter\n       * @private\n       * @type {Array}\n       */\n      outputModifiers = [],\n\n      /**\n       * Event listeners\n       * @private\n       * @type {{}}\n       */\n      listeners = {},\n\n      /**\n       * The flavor set in this converter\n       */\n      setConvFlavor = setFlavor;\n\n  _constructor();\n\n  /**\n   * Converter constructor\n   * @private\n   */\n  function _constructor () {\n    converterOptions = converterOptions || {};\n\n    for (var gOpt in globalOptions) {\n      if (globalOptions.hasOwnProperty(gOpt)) {\n        options[gOpt] = globalOptions[gOpt];\n      }\n    }\n\n    // Merge options\n    if (typeof converterOptions === 'object') {\n      for (var opt in converterOptions) {\n        if (converterOptions.hasOwnProperty(opt)) {\n          options[opt] = converterOptions[opt];\n        }\n      }\n    } else {\n      throw Error('Converter expects the passed parameter to be an object, but ' + typeof converterOptions +\n      ' was passed instead.');\n    }\n\n    if (options.extensions) {\n      showdown.helper.forEach(options.extensions, _parseExtension);\n    }\n  }\n\n  /**\n   * Parse extension\n   * @param {*} ext\n   * @param {string} [name='']\n   * @private\n   */\n  function _parseExtension (ext, name) {\n\n    name = name || null;\n    // If it's a string, the extension was previously loaded\n    if (showdown.helper.isString(ext)) {\n      ext = showdown.helper.stdExtName(ext);\n      name = ext;\n\n      // LEGACY_SUPPORT CODE\n      if (showdown.extensions[ext]) {\n        console.warn('DEPRECATION WARNING: ' + ext + ' is an old extension that uses a deprecated loading method.' +\n          'Please inform the developer that the extension should be updated!');\n        legacyExtensionLoading(showdown.extensions[ext], ext);\n        return;\n      // END LEGACY SUPPORT CODE\n\n      } else if (!showdown.helper.isUndefined(extensions[ext])) {\n        ext = extensions[ext];\n\n      } else {\n        throw Error('Extension \"' + ext + '\" could not be loaded. It was either not found or is not a valid extension.');\n      }\n    }\n\n    if (typeof ext === 'function') {\n      ext = ext();\n    }\n\n    if (!showdown.helper.isArray(ext)) {\n      ext = [ext];\n    }\n\n    var validExt = validate(ext, name);\n    if (!validExt.valid) {\n      throw Error(validExt.error);\n    }\n\n    for (var i = 0; i < ext.length; ++i) {\n      switch (ext[i].type) {\n\n        case 'lang':\n          langExtensions.push(ext[i]);\n          break;\n\n        case 'output':\n          outputModifiers.push(ext[i]);\n          break;\n      }\n      if (ext[i].hasOwnProperty('listeners')) {\n        for (var ln in ext[i].listeners) {\n          if (ext[i].listeners.hasOwnProperty(ln)) {\n            listen(ln, ext[i].listeners[ln]);\n          }\n        }\n      }\n    }\n\n  }\n\n  /**\n   * LEGACY_SUPPORT\n   * @param {*} ext\n   * @param {string} name\n   */\n  function legacyExtensionLoading (ext, name) {\n    if (typeof ext === 'function') {\n      ext = ext(new showdown.Converter());\n    }\n    if (!showdown.helper.isArray(ext)) {\n      ext = [ext];\n    }\n    var valid = validate(ext, name);\n\n    if (!valid.valid) {\n      throw Error(valid.error);\n    }\n\n    for (var i = 0; i < ext.length; ++i) {\n      switch (ext[i].type) {\n        case 'lang':\n          langExtensions.push(ext[i]);\n          break;\n        case 'output':\n          outputModifiers.push(ext[i]);\n          break;\n        default:// should never reach here\n          throw Error('Extension loader error: Type unrecognized!!!');\n      }\n    }\n  }\n\n  /**\n   * Listen to an event\n   * @param {string} name\n   * @param {function} callback\n   */\n  function listen (name, callback) {\n    if (!showdown.helper.isString(name)) {\n      throw Error('Invalid argument in converter.listen() method: name must be a string, but ' + typeof name + ' given');\n    }\n\n    if (typeof callback !== 'function') {\n      throw Error('Invalid argument in converter.listen() method: callback must be a function, but ' + typeof callback + ' given');\n    }\n\n    if (!listeners.hasOwnProperty(name)) {\n      listeners[name] = [];\n    }\n    listeners[name].push(callback);\n  }\n\n  function rTrimInputText (text) {\n    var rsp = text.match(/^\\s*/)[0].length,\n        rgx = new RegExp('^\\\\s{0,' + rsp + '}', 'gm');\n    return text.replace(rgx, '');\n  }\n\n  /**\n   * Dispatch an event\n   * @private\n   * @param {string} evtName Event name\n   * @param {string} text Text\n   * @param {{}} options Converter Options\n   * @param {{}} globals\n   * @returns {string}\n   */\n  this._dispatch = function dispatch (evtName, text, options, globals) {\n    if (listeners.hasOwnProperty(evtName)) {\n      for (var ei = 0; ei < listeners[evtName].length; ++ei) {\n        var nText = listeners[evtName][ei](evtName, text, this, options, globals);\n        if (nText && typeof nText !== 'undefined') {\n          text = nText;\n        }\n      }\n    }\n    return text;\n  };\n\n  /**\n   * Listen to an event\n   * @param {string} name\n   * @param {function} callback\n   * @returns {showdown.Converter}\n   */\n  this.listen = function (name, callback) {\n    listen(name, callback);\n    return this;\n  };\n\n  /**\n   * Converts a markdown string into HTML\n   * @param {string} text\n   * @returns {*}\n   */\n  this.makeHtml = function (text) {\n    //check if text is not falsy\n    if (!text) {\n      return text;\n    }\n\n    var globals = {\n      gHtmlBlocks:     [],\n      gHtmlMdBlocks:   [],\n      gHtmlSpans:      [],\n      gUrls:           {},\n      gTitles:         {},\n      gDimensions:     {},\n      gListLevel:      0,\n      hashLinkCounts:  {},\n      langExtensions:  langExtensions,\n      outputModifiers: outputModifiers,\n      converter:       this,\n      ghCodeBlocks:    []\n    };\n\n    // This lets us use ¨ trema as an escape char to avoid md5 hashes\n    // The choice of character is arbitrary; anything that isn't\n    // magic in Markdown will work.\n    text = text.replace(/¨/g, '¨T');\n\n    // Replace $ with ¨D\n    // RegExp interprets $ as a special character\n    // when it's in a replacement string\n    text = text.replace(/\\$/g, '¨D');\n\n    // Standardize line endings\n    text = text.replace(/\\r\\n/g, '\\n'); // DOS to Unix\n    text = text.replace(/\\r/g, '\\n'); // Mac to Unix\n\n    // Stardardize line spaces (nbsp causes trouble in older browsers and some regex flavors)\n    text = text.replace(/\\u00A0/g, ' ');\n\n    if (options.smartIndentationFix) {\n      text = rTrimInputText(text);\n    }\n\n    // Make sure text begins and ends with a couple of newlines:\n    text = '\\n\\n' + text + '\\n\\n';\n\n    // detab\n    text = showdown.subParser('detab')(text, options, globals);\n\n    /**\n     * Strip any lines consisting only of spaces and tabs.\n     * This makes subsequent regexs easier to write, because we can\n     * match consecutive blank lines with /\\n+/ instead of something\n     * contorted like /[ \\t]*\\n+/\n     */\n    text = text.replace(/^[ \\t]+$/mg, '');\n\n    //run languageExtensions\n    showdown.helper.forEach(langExtensions, function (ext) {\n      text = showdown.subParser('runExtension')(ext, text, options, globals);\n    });\n\n    // run the sub parsers\n    text = showdown.subParser('hashPreCodeTags')(text, options, globals);\n    text = showdown.subParser('githubCodeBlocks')(text, options, globals);\n    text = showdown.subParser('hashHTMLBlocks')(text, options, globals);\n    text = showdown.subParser('hashCodeTags')(text, options, globals);\n    text = showdown.subParser('stripLinkDefinitions')(text, options, globals);\n    text = showdown.subParser('blockGamut')(text, options, globals);\n    text = showdown.subParser('unhashHTMLSpans')(text, options, globals);\n    text = showdown.subParser('unescapeSpecialChars')(text, options, globals);\n\n    // attacklab: Restore dollar signs\n    text = text.replace(/¨D/g, '$$');\n\n    // attacklab: Restore tremas\n    text = text.replace(/¨T/g, '¨');\n\n    // Run output modifiers\n    showdown.helper.forEach(outputModifiers, function (ext) {\n      text = showdown.subParser('runExtension')(ext, text, options, globals);\n    });\n\n    return text;\n  };\n\n  /**\n   * Set an option of this Converter instance\n   * @param {string} key\n   * @param {*} value\n   */\n  this.setOption = function (key, value) {\n    options[key] = value;\n  };\n\n  /**\n   * Get the option of this Converter instance\n   * @param {string} key\n   * @returns {*}\n   */\n  this.getOption = function (key) {\n    return options[key];\n  };\n\n  /**\n   * Get the options of this Converter instance\n   * @returns {{}}\n   */\n  this.getOptions = function () {\n    return options;\n  };\n\n  /**\n   * Add extension to THIS converter\n   * @param {{}} extension\n   * @param {string} [name=null]\n   */\n  this.addExtension = function (extension, name) {\n    name = name || null;\n    _parseExtension(extension, name);\n  };\n\n  /**\n   * Use a global registered extension with THIS converter\n   * @param {string} extensionName Name of the previously registered extension\n   */\n  this.useExtension = function (extensionName) {\n    _parseExtension(extensionName);\n  };\n\n  /**\n   * Set the flavor THIS converter should use\n   * @param {string} name\n   */\n  this.setFlavor = function (name) {\n    if (!flavor.hasOwnProperty(name)) {\n      throw Error(name + ' flavor was not found');\n    }\n    var preset = flavor[name];\n    setConvFlavor = name;\n    for (var option in preset) {\n      if (preset.hasOwnProperty(option)) {\n        options[option] = preset[option];\n      }\n    }\n  };\n\n  /**\n   * Get the currently set flavor of this converter\n   * @returns {string}\n   */\n  this.getFlavor = function () {\n    return setConvFlavor;\n  };\n\n  /**\n   * Remove an extension from THIS converter.\n   * Note: This is a costly operation. It's better to initialize a new converter\n   * and specify the extensions you wish to use\n   * @param {Array} extension\n   */\n  this.removeExtension = function (extension) {\n    if (!showdown.helper.isArray(extension)) {\n      extension = [extension];\n    }\n    for (var a = 0; a < extension.length; ++a) {\n      var ext = extension[a];\n      for (var i = 0; i < langExtensions.length; ++i) {\n        if (langExtensions[i] === ext) {\n          langExtensions[i].splice(i, 1);\n        }\n      }\n      for (var ii = 0; ii < outputModifiers.length; ++i) {\n        if (outputModifiers[ii] === ext) {\n          outputModifiers[ii].splice(i, 1);\n        }\n      }\n    }\n  };\n\n  /**\n   * Get all extension of THIS converter\n   * @returns {{language: Array, output: Array}}\n   */\n  this.getAllExtensions = function () {\n    return {\n      language: langExtensions,\n      output: outputModifiers\n    };\n  };\n};\n\r\n/**\n * Turn Markdown link shortcuts into XHTML <a> tags.\n */\nshowdown.subParser('anchors', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('anchors.before', text, options, globals);\n\n  var writeAnchorTag = function (wholeMatch, m1, m2, m3, m4, m5, m6, m7) {\n    if (showdown.helper.isUndefined(m7)) {\n      m7 = '';\n    }\n    wholeMatch = m1;\n    var linkText = m2,\n        linkId = m3.toLowerCase(),\n        url = m4,\n        title = m7;\n\n    if (!url) {\n      if (!linkId) {\n        // lower-case and turn embedded newlines into spaces\n        linkId = linkText.toLowerCase().replace(/ ?\\n/g, ' ');\n      }\n      url = '#' + linkId;\n\n      if (!showdown.helper.isUndefined(globals.gUrls[linkId])) {\n        url = globals.gUrls[linkId];\n        if (!showdown.helper.isUndefined(globals.gTitles[linkId])) {\n          title = globals.gTitles[linkId];\n        }\n      } else {\n        if (wholeMatch.search(/\\(\\s*\\)$/m) > -1) {\n          // Special case for explicit empty url\n          url = '';\n        } else {\n          return wholeMatch;\n        }\n      }\n    }\n\n    //url = showdown.helper.escapeCharacters(url, '*_', false); // replaced line to improve performance\n    url = url.replace(showdown.helper.regexes.asteriskAndDash, showdown.helper.escapeCharactersCallback);\n\n    var result = '<a href=\"' + url + '\"';\n\n    if (title !== '' && title !== null) {\n      title = title.replace(/\"/g, '&quot;');\n      //title = showdown.helper.escapeCharacters(title, '*_', false); // replaced line to improve performance\n      title = title.replace(showdown.helper.regexes.asteriskAndDash, showdown.helper.escapeCharactersCallback);\n      result += ' title=\"' + title + '\"';\n    }\n\n    result += '>' + linkText + '</a>';\n\n    return result;\n  };\n\n  // First, handle reference-style links: [link text] [id]\n  text = text.replace(/(\\[((?:\\[[^\\]]*]|[^\\[\\]])*)][ ]?(?:\\n[ ]*)?\\[(.*?)])()()()()/g, writeAnchorTag);\n\n  // Next, inline-style links: [link text](url \"optional title\")\n  text = text.replace(/(\\[((?:\\[[^\\]]*]|[^\\[\\]])*)]\\([ \\t]*()<?(.*?(?:\\(.*?\\).*?)?)>?[ \\t]*((['\"])(.*?)\\6[ \\t]*)?\\))/g,\n                      writeAnchorTag);\n\n  // handle reference-style shortcuts: [link text]\n  // These must come last in case you've also got [link test][1]\n  // or [link test](/foo)\n  text = text.replace(/(\\[([^\\[\\]]+)])()()()()()/g, writeAnchorTag);\n\n  // Lastly handle GithubMentions if option is enabled\n  if (options.ghMentions) {\n    text = text.replace(/(^|\\s)(\\\\)?(@([a-z\\d\\-]+))(?=[.!?;,[\\]()]|\\s|$)/gmi, function (wm, st, escape, mentions, username) {\n      if (escape === '\\\\') {\n        return st + mentions;\n      }\n\n      //check if options.ghMentionsLink is a string\n      if (!showdown.helper.isString(options.ghMentionsLink)) {\n        throw new Error('ghMentionsLink option must be a string');\n      }\n      var lnk = options.ghMentionsLink.replace(/\\{u}/g, username);\n      return st + '<a href=\"' + lnk + '\">' + mentions + '</a>';\n    });\n  }\n\n  text = globals.converter._dispatch('anchors.after', text, options, globals);\n  return text;\n});\n\r\nshowdown.subParser('autoLinks', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('autoLinks.before', text, options, globals);\n\n  var simpleURLRegex  = /\\b(((https?|ftp|dict):\\/\\/|www\\.)[^'\">\\s]+\\.[^'\">\\s]+)()(?=\\s|$)(?![\"<>])/gi,\n      simpleURLRegex2 = /\\b(((https?|ftp|dict):\\/\\/|www\\.)[^'\">\\s]+\\.[^'\">\\s]+?)([.!?()]?)(?=\\s|$)(?![\"<>])/gi,\n      delimUrlRegex   = /<(((https?|ftp|dict):\\/\\/|www\\.)[^'\">\\s]+)>/gi,\n      simpleMailRegex = /(^|\\s)(?:mailto:)?([A-Za-z0-9!#$%&'*+-/=?^_`{|}~.]+@[-a-z0-9]+(\\.[-a-z0-9]+)*\\.[a-z]+)(?=$|\\s)/gmi,\n      delimMailRegex  = /<()(?:mailto:)?([-.\\w]+@[-a-z0-9]+(\\.[-a-z0-9]+)*\\.[a-z]+)>/gi;\n\n  text = text.replace(delimUrlRegex, replaceLink);\n  text = text.replace(delimMailRegex, replaceMail);\n  // simpleURLRegex  = /\\b(((https?|ftp|dict):\\/\\/|www\\.)[-.+~:?#@!$&'()*,;=[\\]\\w]+)\\b/gi,\n  // Email addresses: <address@domain.foo>\n\n  if (options.simplifiedAutoLink) {\n    if (options.excludeTrailingPunctuationFromURLs) {\n      text = text.replace(simpleURLRegex2, replaceLink);\n    } else {\n      text = text.replace(simpleURLRegex, replaceLink);\n    }\n    text = text.replace(simpleMailRegex, replaceMail);\n  }\n\n  function replaceLink (wm, link, m2, m3, trailingPunctuation) {\n    var lnkTxt = link,\n        append = '';\n    if (/^www\\./i.test(link)) {\n      link = link.replace(/^www\\./i, 'http://www.');\n    }\n    if (options.excludeTrailingPunctuationFromURLs && trailingPunctuation) {\n      append = trailingPunctuation;\n    }\n    return '<a href=\"' + link + '\">' + lnkTxt + '</a>' + append;\n  }\n\n  function replaceMail (wholeMatch, b, mail) {\n    var href = 'mailto:';\n    b = b || '';\n    mail = showdown.subParser('unescapeSpecialChars')(mail, options, globals);\n    if (options.encodeEmails) {\n      href = showdown.helper.encodeEmailAddress(href + mail);\n      mail = showdown.helper.encodeEmailAddress(mail);\n    } else {\n      href = href + mail;\n    }\n    return b + '<a href=\"' + href + '\">' + mail + '</a>';\n  }\n\n  text = globals.converter._dispatch('autoLinks.after', text, options, globals);\n\n  return text;\n});\n\r\n/**\n * These are all the transformations that form block-level\n * tags like paragraphs, headers, and list items.\n */\nshowdown.subParser('blockGamut', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('blockGamut.before', text, options, globals);\n\n  // we parse blockquotes first so that we can have headings and hrs\n  // inside blockquotes\n  text = showdown.subParser('blockQuotes')(text, options, globals);\n  text = showdown.subParser('headers')(text, options, globals);\n\n  // Do Horizontal Rules:\n  text = showdown.subParser('horizontalRule')(text, options, globals);\n\n  text = showdown.subParser('lists')(text, options, globals);\n  text = showdown.subParser('codeBlocks')(text, options, globals);\n  text = showdown.subParser('tables')(text, options, globals);\n\n  // We already ran _HashHTMLBlocks() before, in Markdown(), but that\n  // was to escape raw HTML in the original Markdown source. This time,\n  // we're escaping the markup we've just created, so that we don't wrap\n  // <p> tags around block-level tags.\n  text = showdown.subParser('hashHTMLBlocks')(text, options, globals);\n  text = showdown.subParser('paragraphs')(text, options, globals);\n\n  text = globals.converter._dispatch('blockGamut.after', text, options, globals);\n\n  return text;\n});\n\r\nshowdown.subParser('blockQuotes', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('blockQuotes.before', text, options, globals);\n\n  text = text.replace(/((^ {0,3}>[ \\t]?.+\\n(.+\\n)*\\n*)+)/gm, function (wholeMatch, m1) {\n    var bq = m1;\n\n    // attacklab: hack around Konqueror 3.5.4 bug:\n    // \"----------bug\".replace(/^-/g,\"\") == \"bug\"\n    bq = bq.replace(/^[ \\t]*>[ \\t]?/gm, '¨0'); // trim one level of quoting\n\n    // attacklab: clean up hack\n    bq = bq.replace(/¨0/g, '');\n\n    bq = bq.replace(/^[ \\t]+$/gm, ''); // trim whitespace-only lines\n    bq = showdown.subParser('githubCodeBlocks')(bq, options, globals);\n    bq = showdown.subParser('blockGamut')(bq, options, globals); // recurse\n\n    bq = bq.replace(/(^|\\n)/g, '$1  ');\n    // These leading spaces screw with <pre> content, so we need to fix that:\n    bq = bq.replace(/(\\s*<pre>[^\\r]+?<\\/pre>)/gm, function (wholeMatch, m1) {\n      var pre = m1;\n      // attacklab: hack around Konqueror 3.5.4 bug:\n      pre = pre.replace(/^  /mg, '¨0');\n      pre = pre.replace(/¨0/g, '');\n      return pre;\n    });\n\n    return showdown.subParser('hashBlock')('<blockquote>\\n' + bq + '\\n</blockquote>', options, globals);\n  });\n\n  text = globals.converter._dispatch('blockQuotes.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Process Markdown `<pre><code>` blocks.\n */\nshowdown.subParser('codeBlocks', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('codeBlocks.before', text, options, globals);\n\n  // sentinel workarounds for lack of \\A and \\Z, safari\\khtml bug\n  text += '¨0';\n\n  var pattern = /(?:\\n\\n|^)((?:(?:[ ]{4}|\\t).*\\n+)+)(\\n*[ ]{0,3}[^ \\t\\n]|(?=¨0))/g;\n  text = text.replace(pattern, function (wholeMatch, m1, m2) {\n    var codeblock = m1,\n        nextChar = m2,\n        end = '\\n';\n\n    codeblock = showdown.subParser('outdent')(codeblock, options, globals);\n    codeblock = showdown.subParser('encodeCode')(codeblock, options, globals);\n    codeblock = showdown.subParser('detab')(codeblock, options, globals);\n    codeblock = codeblock.replace(/^\\n+/g, ''); // trim leading newlines\n    codeblock = codeblock.replace(/\\n+$/g, ''); // trim trailing newlines\n\n    if (options.omitExtraWLInCodeBlocks) {\n      end = '';\n    }\n\n    codeblock = '<pre><code>' + codeblock + end + '</code></pre>';\n\n    return showdown.subParser('hashBlock')(codeblock, options, globals) + nextChar;\n  });\n\n  // strip sentinel\n  text = text.replace(/¨0/, '');\n\n  text = globals.converter._dispatch('codeBlocks.after', text, options, globals);\n  return text;\n});\n\r\n/**\n *\n *   *  Backtick quotes are used for <code></code> spans.\n *\n *   *  You can use multiple backticks as the delimiters if you want to\n *     include literal backticks in the code span. So, this input:\n *\n *         Just type ``foo `bar` baz`` at the prompt.\n *\n *       Will translate to:\n *\n *         <p>Just type <code>foo `bar` baz</code> at the prompt.</p>\n *\n *    There's no arbitrary limit to the number of backticks you\n *    can use as delimters. If you need three consecutive backticks\n *    in your code, use four for delimiters, etc.\n *\n *  *  You can use spaces to get literal backticks at the edges:\n *\n *         ... type `` `bar` `` ...\n *\n *       Turns to:\n *\n *         ... type <code>`bar`</code> ...\n */\nshowdown.subParser('codeSpans', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('codeSpans.before', text, options, globals);\n\n  if (typeof(text) === 'undefined') {\n    text = '';\n  }\n  text = text.replace(/(^|[^\\\\])(`+)([^\\r]*?[^`])\\2(?!`)/gm,\n    function (wholeMatch, m1, m2, m3) {\n      var c = m3;\n      c = c.replace(/^([ \\t]*)/g, '');\t// leading whitespace\n      c = c.replace(/[ \\t]*$/g, '');\t// trailing whitespace\n      c = showdown.subParser('encodeCode')(c, options, globals);\n      return m1 + '<code>' + c + '</code>';\n    }\n  );\n\n  text = globals.converter._dispatch('codeSpans.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Convert all tabs to spaces\n */\nshowdown.subParser('detab', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('detab.before', text, options, globals);\n\n  // expand first n-1 tabs\n  text = text.replace(/\\t(?=\\t)/g, '    '); // g_tab_width\n\n  // replace the nth with two sentinels\n  text = text.replace(/\\t/g, '¨A¨B');\n\n  // use the sentinel to anchor our regex so it doesn't explode\n  text = text.replace(/¨B(.+?)¨A/g, function (wholeMatch, m1) {\n    var leadingText = m1,\n        numSpaces = 4 - leadingText.length % 4;  // g_tab_width\n\n    // there *must* be a better way to do this:\n    for (var i = 0; i < numSpaces; i++) {\n      leadingText += ' ';\n    }\n\n    return leadingText;\n  });\n\n  // clean up sentinels\n  text = text.replace(/¨A/g, '    ');  // g_tab_width\n  text = text.replace(/¨B/g, '');\n\n  text = globals.converter._dispatch('detab.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Smart processing for ampersands and angle brackets that need to be encoded.\n */\nshowdown.subParser('encodeAmpsAndAngles', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('encodeAmpsAndAngles.before', text, options, globals);\n\n  // Ampersand-encoding based entirely on Nat Irons's Amputator MT plugin:\n  // http://bumppo.net/projects/amputator/\n  text = text.replace(/&(?!#?[xX]?(?:[0-9a-fA-F]+|\\w+);)/g, '&amp;');\n\n  // Encode naked <'s\n  text = text.replace(/<(?![a-z\\/?$!])/gi, '&lt;');\n\n  // Encode <\n  text = text.replace(/</g, '&lt;');\n\n  // Encode >\n  text = text.replace(/>/g, '&gt;');\n\n  text = globals.converter._dispatch('encodeAmpsAndAngles.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Returns the string, with after processing the following backslash escape sequences.\n *\n * attacklab: The polite way to do this is with the new escapeCharacters() function:\n *\n *    text = escapeCharacters(text,\"\\\\\",true);\n *    text = escapeCharacters(text,\"`*_{}[]()>#+-.!\",true);\n *\n * ...but we're sidestepping its use of the (slow) RegExp constructor\n * as an optimization for Firefox.  This function gets called a LOT.\n */\nshowdown.subParser('encodeBackslashEscapes', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('encodeBackslashEscapes.before', text, options, globals);\n\n  text = text.replace(/\\\\(\\\\)/g, showdown.helper.escapeCharactersCallback);\n  text = text.replace(/\\\\([`*_{}\\[\\]()>#+.!~=-])/g, showdown.helper.escapeCharactersCallback);\n\n  text = globals.converter._dispatch('encodeBackslashEscapes.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Encode/escape certain characters inside Markdown code runs.\n * The point is that in code, these characters are literals,\n * and lose their special Markdown meanings.\n */\nshowdown.subParser('encodeCode', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('encodeCode.before', text, options, globals);\n\n  // Encode all ampersands; HTML entities are not\n  // entities within a Markdown code span.\n  text = text\n    .replace(/&/g, '&amp;')\n  // Do the angle bracket song and dance:\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n  // Now, escape characters that are magic in Markdown:\n    .replace(/([*_{}\\[\\]\\\\=~-])/g, showdown.helper.escapeCharactersCallback);\n\n  text = globals.converter._dispatch('encodeCode.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Within tags -- meaning between < and > -- encode [\\ ` * _ ~ =] so they\n * don't conflict with their use in Markdown for code, italics and strong.\n */\nshowdown.subParser('escapeSpecialCharsWithinTagAttributes', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('escapeSpecialCharsWithinTagAttributes.before', text, options, globals);\n\n  // Build a regex to find HTML tags and comments.  See Friedl's\n  // \"Mastering Regular Expressions\", 2nd Ed., pp. 200-201.\n  var regex = /(<[a-z\\/!$](\"[^\"]*\"|'[^']*'|[^'\">])*>|<!(--.*?--\\s*)+>)/gi;\n\n  text = text.replace(regex, function (wholeMatch) {\n    return wholeMatch\n      .replace(/(.)<\\/?code>(?=.)/g, '$1`')\n      .replace(/([\\\\`*_~=])/g, showdown.helper.escapeCharactersCallback);\n  });\n\n  text = globals.converter._dispatch('escapeSpecialCharsWithinTagAttributes.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Handle github codeblocks prior to running HashHTML so that\n * HTML contained within the codeblock gets escaped properly\n * Example:\n * ```ruby\n *     def hello_world(x)\n *       puts \"Hello, #{x}\"\n *     end\n * ```\n */\nshowdown.subParser('githubCodeBlocks', function (text, options, globals) {\n  'use strict';\n\n  // early exit if option is not enabled\n  if (!options.ghCodeBlocks) {\n    return text;\n  }\n\n  text = globals.converter._dispatch('githubCodeBlocks.before', text, options, globals);\n\n  text += '¨0';\n\n  text = text.replace(/(?:^|\\n)```(.*)\\n([\\s\\S]*?)\\n```/g, function (wholeMatch, language, codeblock) {\n    var end = (options.omitExtraWLInCodeBlocks) ? '' : '\\n';\n\n    // First parse the github code block\n    codeblock = showdown.subParser('encodeCode')(codeblock, options, globals);\n    codeblock = showdown.subParser('detab')(codeblock, options, globals);\n    codeblock = codeblock.replace(/^\\n+/g, ''); // trim leading newlines\n    codeblock = codeblock.replace(/\\n+$/g, ''); // trim trailing whitespace\n\n    codeblock = '<pre><code' + (language ? ' class=\"' + language + ' language-' + language + '\"' : '') + '>' + codeblock + end + '</code></pre>';\n\n    codeblock = showdown.subParser('hashBlock')(codeblock, options, globals);\n\n    // Since GHCodeblocks can be false positives, we need to\n    // store the primitive text and the parsed text in a global var,\n    // and then return a token\n    return '\\n\\n¨G' + (globals.ghCodeBlocks.push({text: wholeMatch, codeblock: codeblock}) - 1) + 'G\\n\\n';\n  });\n\n  // attacklab: strip sentinel\n  text = text.replace(/¨0/, '');\n\n  return globals.converter._dispatch('githubCodeBlocks.after', text, options, globals);\n});\n\r\nshowdown.subParser('hashBlock', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('hashBlock.before', text, options, globals);\n  text = text.replace(/(^\\n+|\\n+$)/g, '');\n  text = '\\n\\n¨K' + (globals.gHtmlBlocks.push(text) - 1) + 'K\\n\\n';\n  text = globals.converter._dispatch('hashBlock.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Hash and escape <code> elements that should not be parsed as markdown\n */\nshowdown.subParser('hashCodeTags', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('hashCodeTags.before', text, options, globals);\n\n  var repFunc = function (wholeMatch, match, left, right) {\n    var codeblock = left + showdown.subParser('encodeCode')(match, options, globals) + right;\n    return '¨C' + (globals.gHtmlSpans.push(codeblock) - 1) + 'C';\n  };\n\n  // Hash naked <code>\n  text = showdown.helper.replaceRecursiveRegExp(text, repFunc, '<code\\\\b[^>]*>', '</code>', 'gim');\n\n  text = globals.converter._dispatch('hashCodeTags.after', text, options, globals);\n  return text;\n});\n\r\nshowdown.subParser('hashElement', function (text, options, globals) {\n  'use strict';\n\n  return function (wholeMatch, m1) {\n    var blockText = m1;\n\n    // Undo double lines\n    blockText = blockText.replace(/\\n\\n/g, '\\n');\n    blockText = blockText.replace(/^\\n/, '');\n\n    // strip trailing blank lines\n    blockText = blockText.replace(/\\n+$/g, '');\n\n    // Replace the element text with a marker (\"¨KxK\" where x is its key)\n    blockText = '\\n\\n¨K' + (globals.gHtmlBlocks.push(blockText) - 1) + 'K\\n\\n';\n\n    return blockText;\n  };\n});\n\r\nshowdown.subParser('hashHTMLBlocks', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('hashHTMLBlocks.before', text, options, globals);\n\n  var blockTags = [\n        'pre',\n        'div',\n        'h1',\n        'h2',\n        'h3',\n        'h4',\n        'h5',\n        'h6',\n        'blockquote',\n        'table',\n        'dl',\n        'ol',\n        'ul',\n        'script',\n        'noscript',\n        'form',\n        'fieldset',\n        'iframe',\n        'math',\n        'style',\n        'section',\n        'header',\n        'footer',\n        'nav',\n        'article',\n        'aside',\n        'address',\n        'audio',\n        'canvas',\n        'figure',\n        'hgroup',\n        'output',\n        'video',\n        'p'\n      ],\n      repFunc = function (wholeMatch, match, left, right) {\n        var txt = wholeMatch;\n        // check if this html element is marked as markdown\n        // if so, it's contents should be parsed as markdown\n        if (left.search(/\\bmarkdown\\b/) !== -1) {\n          txt = left + globals.converter.makeHtml(match) + right;\n        }\n        return '\\n\\n¨K' + (globals.gHtmlBlocks.push(txt) - 1) + 'K\\n\\n';\n      };\n\n  for (var i = 0; i < blockTags.length; ++i) {\n    text = showdown.helper.replaceRecursiveRegExp(text, repFunc, '^ {0,3}<' + blockTags[i] + '\\\\b[^>]*>', '</' + blockTags[i] + '>', 'gim');\n  }\n\n  // HR SPECIAL CASE\n  text = text.replace(/(\\n {0,3}(<(hr)\\b([^<>])*?\\/?>)[ \\t]*(?=\\n{2,}))/g,\n    showdown.subParser('hashElement')(text, options, globals));\n\n  // Special case for standalone HTML comments\n  text = showdown.helper.replaceRecursiveRegExp(text, function (txt) {\n    return '\\n\\n¨K' + (globals.gHtmlBlocks.push(txt) - 1) + 'K\\n\\n';\n  }, '^ {0,3}<!--', '-->', 'gm');\n\n  // PHP and ASP-style processor instructions (<?...?> and <%...%>)\n  text = text.replace(/(?:\\n\\n)( {0,3}(?:<([?%])[^\\r]*?\\2>)[ \\t]*(?=\\n{2,}))/g,\n    showdown.subParser('hashElement')(text, options, globals));\n\n  text = globals.converter._dispatch('hashHTMLBlocks.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Hash span elements that should not be parsed as markdown\n */\nshowdown.subParser('hashHTMLSpans', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('hashHTMLSpans.before', text, options, globals);\n\n  function hashHTMLSpan (html) {\n    return '¨C' + (globals.gHtmlSpans.push(html) - 1) + 'C';\n  }\n\n  // Hash Self Closing tags\n  text = text.replace(/<[^>]+?\\/>/gi, function (wm) {\n    return hashHTMLSpan(wm);\n  });\n\n  // Hash tags without properties\n  text = text.replace(/<([^>]+?)>[\\s\\S]*?<\\/\\1>/g, function (wm) {\n    return hashHTMLSpan(wm);\n  });\n\n  // Hash tags with properties\n  text = text.replace(/<([^>]+?)\\s[^>]+?>[\\s\\S]*?<\\/\\1>/g, function (wm) {\n    return hashHTMLSpan(wm);\n  });\n\n  // Hash self closing tags without />\n  text = text.replace(/<[^>]+?>/gi, function (wm) {\n    return hashHTMLSpan(wm);\n  });\n\n  /*showdown.helper.matchRecursiveRegExp(text, '<code\\\\b[^>]*>', '</code>', 'gi');*/\n\n  text = globals.converter._dispatch('hashHTMLSpans.after', text, options, globals);\n  return text;\n});\n\n/**\n * Unhash HTML spans\n */\nshowdown.subParser('unhashHTMLSpans', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('unhashHTMLSpans.before', text, options, globals);\n\n  for (var i = 0; i < globals.gHtmlSpans.length; ++i) {\n    var repText = globals.gHtmlSpans[i],\n        // limiter to prevent infinite loop (assume 10 as limit for recurse)\n        limit = 0;\n\n    while (/¨C(\\d+)C/.test(repText)) {\n      var num = RegExp.$1;\n      repText = repText.replace('¨C' + num + 'C', globals.gHtmlSpans[num]);\n      if (limit === 10) {\n        break;\n      }\n      ++limit;\n    }\n    text = text.replace('¨C' + i + 'C', repText);\n  }\n\n  text = globals.converter._dispatch('unhashHTMLSpans.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Hash and escape <pre><code> elements that should not be parsed as markdown\n */\nshowdown.subParser('hashPreCodeTags', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('hashPreCodeTags.before', text, options, globals);\n\n  var repFunc = function (wholeMatch, match, left, right) {\n    // encode html entities\n    var codeblock = left + showdown.subParser('encodeCode')(match, options, globals) + right;\n    return '\\n\\n¨G' + (globals.ghCodeBlocks.push({text: wholeMatch, codeblock: codeblock}) - 1) + 'G\\n\\n';\n  };\n\n  // Hash <pre><code>\n  text = showdown.helper.replaceRecursiveRegExp(text, repFunc, '^ {0,3}<pre\\\\b[^>]*>\\\\s*<code\\\\b[^>]*>', '^ {0,3}</code>\\\\s*</pre>', 'gim');\n\n  text = globals.converter._dispatch('hashPreCodeTags.after', text, options, globals);\n  return text;\n});\n\r\nshowdown.subParser('headers', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('headers.before', text, options, globals);\n\n  var headerLevelStart = (isNaN(parseInt(options.headerLevelStart))) ? 1 : parseInt(options.headerLevelStart),\n      ghHeaderId = options.ghCompatibleHeaderId,\n\n  // Set text-style headers:\n  //\tHeader 1\n  //\t========\n  //\n  //\tHeader 2\n  //\t--------\n  //\n      setextRegexH1 = (options.smoothLivePreview) ? /^(.+)[ \\t]*\\n={2,}[ \\t]*\\n+/gm : /^(.+)[ \\t]*\\n=+[ \\t]*\\n+/gm,\n      setextRegexH2 = (options.smoothLivePreview) ? /^(.+)[ \\t]*\\n-{2,}[ \\t]*\\n+/gm : /^(.+)[ \\t]*\\n-+[ \\t]*\\n+/gm;\n\n  text = text.replace(setextRegexH1, function (wholeMatch, m1) {\n\n    var spanGamut = showdown.subParser('spanGamut')(m1, options, globals),\n        hID = (options.noHeaderId) ? '' : ' id=\"' + headerId(m1) + '\"',\n        hLevel = headerLevelStart,\n        hashBlock = '<h' + hLevel + hID + '>' + spanGamut + '</h' + hLevel + '>';\n    return showdown.subParser('hashBlock')(hashBlock, options, globals);\n  });\n\n  text = text.replace(setextRegexH2, function (matchFound, m1) {\n    var spanGamut = showdown.subParser('spanGamut')(m1, options, globals),\n        hID = (options.noHeaderId) ? '' : ' id=\"' + headerId(m1) + '\"',\n        hLevel = headerLevelStart + 1,\n        hashBlock = '<h' + hLevel + hID + '>' + spanGamut + '</h' + hLevel + '>';\n    return showdown.subParser('hashBlock')(hashBlock, options, globals);\n  });\n\n  // atx-style headers:\n  //  # Header 1\n  //  ## Header 2\n  //  ## Header 2 with closing hashes ##\n  //  ...\n  //  ###### Header 6\n  //\n  var atxStyle = (options.requireSpaceBeforeHeadingText) ? /^(#{1,6})[ \\t]+(.+?)[ \\t]*#*\\n+/gm : /^(#{1,6})[ \\t]*(.+?)[ \\t]*#*\\n+/gm;\n\n  text = text.replace(atxStyle, function (wholeMatch, m1, m2) {\n    var span = showdown.subParser('spanGamut')(m2, options, globals),\n        hID = (options.noHeaderId) ? '' : ' id=\"' + headerId(m2) + '\"',\n        hLevel = headerLevelStart - 1 + m1.length,\n        header = '<h' + hLevel + hID + '>' + span + '</h' + hLevel + '>';\n\n    return showdown.subParser('hashBlock')(header, options, globals);\n  });\n\n  function headerId (m) {\n    var title;\n    // Prefix id to prevent causing inadvertent pre-existing style matches.\n    if (showdown.helper.isString(options.prefixHeaderId)) {\n      title = options.prefixHeaderId + m;\n    } else if (options.prefixHeaderId === true) {\n      title = 'section ' + m;\n    } else {\n      title = m;\n    }\n\n    if (ghHeaderId) {\n      title = title\n        .replace(/ /g, '-')\n        // replace previously escaped chars (&, ¨ and $)\n        .replace(/&amp;/g, '')\n        .replace(/¨T/g, '')\n        .replace(/¨D/g, '')\n        // replace rest of the chars (&~$ are repeated as they might have been escaped)\n        // borrowed from github's redcarpet (some they should produce similar results)\n        .replace(/[&+$,\\/:;=?@\"#{}|^¨~\\[\\]`\\\\*)(%.!'<>]/g, '')\n        .toLowerCase();\n    } else {\n      title = title\n        .replace(/[^\\w]/g, '')\n        .toLowerCase();\n    }\n\n    if (globals.hashLinkCounts[title]) {\n      title = title + '-' + (globals.hashLinkCounts[title]++);\n    } else {\n      globals.hashLinkCounts[title] = 1;\n    }\n    return title;\n  }\n\n  text = globals.converter._dispatch('headers.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Turn Markdown link shortcuts into XHTML <a> tags.\n */\nshowdown.subParser('horizontalRule', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('horizontalRule.before', text, options, globals);\n\n  var key = showdown.subParser('hashBlock')('<hr />', options, globals);\n  text = text.replace(/^ {0,2}( ?-){3,}[ \\t]*$/gm, key);\n  text = text.replace(/^ {0,2}( ?\\*){3,}[ \\t]*$/gm, key);\n  text = text.replace(/^ {0,2}( ?_){3,}[ \\t]*$/gm, key);\n\n  text = globals.converter._dispatch('horizontalRule.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Turn Markdown image shortcuts into <img> tags.\n */\nshowdown.subParser('images', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('images.before', text, options, globals);\n\n  var inlineRegExp    = /!\\[(.*?)]\\s?\\([ \\t]*()<?(\\S+?)>?(?: =([*\\d]+[A-Za-z%]{0,4})x([*\\d]+[A-Za-z%]{0,4}))?[ \\t]*(?:(['\"])(.*?)\\6[ \\t]*)?\\)/g,\n      referenceRegExp = /!\\[([^\\]]*?)] ?(?:\\n *)?\\[(.*?)]()()()()()/g;\n\n  function writeImageTag (wholeMatch, altText, linkId, url, width, height, m5, title) {\n\n    var gUrls   = globals.gUrls,\n        gTitles = globals.gTitles,\n        gDims   = globals.gDimensions;\n\n    linkId = linkId.toLowerCase();\n\n    if (!title) {\n      title = '';\n    }\n\n    if (url === '' || url === null) {\n      if (linkId === '' || linkId === null) {\n        // lower-case and turn embedded newlines into spaces\n        linkId = altText.toLowerCase().replace(/ ?\\n/g, ' ');\n      }\n      url = '#' + linkId;\n\n      if (!showdown.helper.isUndefined(gUrls[linkId])) {\n        url = gUrls[linkId];\n        if (!showdown.helper.isUndefined(gTitles[linkId])) {\n          title = gTitles[linkId];\n        }\n        if (!showdown.helper.isUndefined(gDims[linkId])) {\n          width = gDims[linkId].width;\n          height = gDims[linkId].height;\n        }\n      } else {\n        return wholeMatch;\n      }\n    }\n\n    altText = altText\n      .replace(/\"/g, '&quot;')\n    //altText = showdown.helper.escapeCharacters(altText, '*_', false);\n      .replace(showdown.helper.regexes.asteriskAndDash, showdown.helper.escapeCharactersCallback);\n    //url = showdown.helper.escapeCharacters(url, '*_', false);\n    url = url.replace(showdown.helper.regexes.asteriskAndDash, showdown.helper.escapeCharactersCallback);\n    var result = '<img src=\"' + url + '\" alt=\"' + altText + '\"';\n\n    if (title) {\n      title = title\n        .replace(/\"/g, '&quot;')\n      //title = showdown.helper.escapeCharacters(title, '*_', false);\n        .replace(showdown.helper.regexes.asteriskAndDash, showdown.helper.escapeCharactersCallback);\n      result += ' title=\"' + title + '\"';\n    }\n\n    if (width && height) {\n      width  = (width === '*') ? 'auto' : width;\n      height = (height === '*') ? 'auto' : height;\n\n      result += ' width=\"' + width + '\"';\n      result += ' height=\"' + height + '\"';\n    }\n\n    result += ' />';\n\n    return result;\n  }\n\n  // First, handle reference-style labeled images: ![alt text][id]\n  text = text.replace(referenceRegExp, writeImageTag);\n\n  // Next, handle inline images:  ![alt text](url =<width>x<height> \"optional title\")\n  text = text.replace(inlineRegExp, writeImageTag);\n\n  text = globals.converter._dispatch('images.after', text, options, globals);\n  return text;\n});\n\r\nshowdown.subParser('italicsAndBold', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('italicsAndBold.before', text, options, globals);\n\n  // it's faster to have 3 separate regexes for each case than have just one\n  // because of backtracing, in some cases, it could lead to an exponential effect\n  // called \"catastrophic backtrace\". Ominous!\n\n  // Parse underscores\n  if (options.literalMidWordUnderscores) {\n    text = text.replace(/\\b___(\\S[\\s\\S]*)___\\b/g, '<strong><em>$1</em></strong>');\n    text = text.replace(/\\b__(\\S[\\s\\S]*)__\\b/g, '<strong>$1</strong>');\n    text = text.replace(/\\b_(\\S[\\s\\S]*?)_\\b/g, '<em>$1</em>');\n  } else {\n    text = text.replace(/___(\\S[\\s\\S]*?)___/g, function (wm, m) {\n      return (/\\S$/.test(m)) ? '<strong><em>' + m + '</em></strong>' : wm;\n    });\n    text = text.replace(/__(\\S[\\s\\S]*?)__/g, function (wm, m) {\n      return (/\\S$/.test(m)) ? '<strong>' + m + '</strong>' : wm;\n    });\n    text = text.replace(/_([^\\s_][\\s\\S]*?)_/g, function (wm, m) {\n      // !/^_[^_]/.test(m) - test if it doesn't start with __ (since it seems redundant, we removed it)\n      return (/\\S$/.test(m)) ? '<em>' + m + '</em>' : wm;\n    });\n  }\n\n  // Now parse asterisks\n  text = text.replace(/\\*\\*\\*(\\S[\\s\\S]*?)\\*\\*\\*/g, function (wm, m) {\n    return (/\\S$/.test(m)) ? '<strong><em>' + m + '</em></strong>' : wm;\n  });\n  text = text.replace(/\\*\\*(\\S[\\s\\S]*?)\\*\\*/g, function (wm, m) {\n    return (/\\S$/.test(m)) ? '<strong>' + m + '</strong>' : wm;\n  });\n  text = text.replace(/\\*([^\\s*][\\s\\S]*?)\\*/g, function (wm, m) {\n    // !/^\\*[^*]/.test(m) - test if it doesn't start with ** (since it seems redundant, we removed it)\n    return (/\\S$/.test(m)) ? '<em>' + m + '</em>' : wm;\n  });\n\n  text = globals.converter._dispatch('italicsAndBold.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Form HTML ordered (numbered) and unordered (bulleted) lists.\n */\nshowdown.subParser('lists', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('lists.before', text, options, globals);\n\n  /**\n   * Process the contents of a single ordered or unordered list, splitting it\n   * into individual list items.\n   * @param {string} listStr\n   * @param {boolean} trimTrailing\n   * @returns {string}\n   */\n  function processListItems (listStr, trimTrailing) {\n    // The $g_list_level global keeps track of when we're inside a list.\n    // Each time we enter a list, we increment it; when we leave a list,\n    // we decrement. If it's zero, we're not in a list anymore.\n    //\n    // We do this because when we're not inside a list, we want to treat\n    // something like this:\n    //\n    //    I recommend upgrading to version\n    //    8. Oops, now this line is treated\n    //    as a sub-list.\n    //\n    // As a single paragraph, despite the fact that the second line starts\n    // with a digit-period-space sequence.\n    //\n    // Whereas when we're inside a list (or sub-list), that line will be\n    // treated as the start of a sub-list. What a kludge, huh? This is\n    // an aspect of Markdown's syntax that's hard to parse perfectly\n    // without resorting to mind-reading. Perhaps the solution is to\n    // change the syntax rules such that sub-lists must start with a\n    // starting cardinal number; e.g. \"1.\" or \"a.\".\n    globals.gListLevel++;\n\n    // trim trailing blank lines:\n    listStr = listStr.replace(/\\n{2,}$/, '\\n');\n\n    // attacklab: add sentinel to emulate \\z\n    listStr += '¨0';\n\n    var rgx = /(\\n)?(^ {0,3})([*+-]|\\d+[.])[ \\t]+((\\[(x|X| )?])?[ \\t]*[^\\r]+?(\\n{1,2}))(?=\\n*(¨0| {0,3}([*+-]|\\d+[.])[ \\t]+))/gm,\n        isParagraphed = (/\\n[ \\t]*\\n(?!¨0)/.test(listStr));\n\n    // Since version 1.5, nesting sublists requires 4 spaces (or 1 tab) indentation,\n    // which is a syntax breaking change\n    // activating this option reverts to old behavior\n    if (options.disableForced4SpacesIndentedSublists) {\n      rgx = /(\\n)?(^ {0,3})([*+-]|\\d+[.])[ \\t]+((\\[(x|X| )?])?[ \\t]*[^\\r]+?(\\n{1,2}))(?=\\n*(¨0|\\2([*+-]|\\d+[.])[ \\t]+))/gm;\n    }\n\n    listStr = listStr.replace(rgx, function (wholeMatch, m1, m2, m3, m4, taskbtn, checked) {\n      checked = (checked && checked.trim() !== '');\n\n      var item = showdown.subParser('outdent')(m4, options, globals),\n          bulletStyle = '';\n\n      // Support for github tasklists\n      if (taskbtn && options.tasklists) {\n        bulletStyle = ' class=\"task-list-item\" style=\"list-style-type: none;\"';\n        item = item.replace(/^[ \\t]*\\[(x|X| )?]/m, function () {\n          var otp = '<input type=\"checkbox\" disabled style=\"margin: 0px 0.35em 0.25em -1.6em; vertical-align: middle;\"';\n          if (checked) {\n            otp += ' checked';\n          }\n          otp += '>';\n          return otp;\n        });\n      }\n\n      // ISSUE #312\n      // This input: - - - a\n      // causes trouble to the parser, since it interprets it as:\n      // <ul><li><li><li>a</li></li></li></ul>\n      // instead of:\n      // <ul><li>- - a</li></ul>\n      // So, to prevent it, we will put a marker (¨A)in the beginning of the line\n      // Kind of hackish/monkey patching, but seems more effective than overcomplicating the list parser\n      item = item.replace(/^([-*+]|\\d\\.)[ \\t]+[\\S\\n ]*/g, function (wm2) {\n        return '¨A' + wm2;\n      });\n\n      // m1 - Leading line or\n      // Has a double return (multi paragraph) or\n      // Has sublist\n      if (m1 || (item.search(/\\n{2,}/) > -1)) {\n        item = showdown.subParser('githubCodeBlocks')(item, options, globals);\n        item = showdown.subParser('blockGamut')(item, options, globals);\n      } else {\n        // Recursion for sub-lists:\n        item = showdown.subParser('lists')(item, options, globals);\n        item = item.replace(/\\n$/, ''); // chomp(item)\n        item = showdown.subParser('hashHTMLBlocks')(item, options, globals);\n        // Colapse double linebreaks\n        item = item.replace(/\\n\\n+/g, '\\n\\n');\n        // replace double linebreaks with a placeholder\n        item = item.replace(/\\n\\n/g, '¨B');\n        if (isParagraphed) {\n          item = showdown.subParser('paragraphs')(item, options, globals);\n        } else {\n          item = showdown.subParser('spanGamut')(item, options, globals);\n        }\n        item = item.replace(/¨B/g, '\\n\\n');\n      }\n\n      // now we need to remove the marker (¨A)\n      item = item.replace('¨A', '');\n      // we can finally wrap the line in list item tags\n      item =  '<li' + bulletStyle + '>' + item + '</li>\\n';\n\n      return item;\n    });\n\n    // attacklab: strip sentinel\n    listStr = listStr.replace(/¨0/g, '');\n\n    globals.gListLevel--;\n\n    if (trimTrailing) {\n      listStr = listStr.replace(/\\s+$/, '');\n    }\n\n    return listStr;\n  }\n\n  /**\n   * Check and parse consecutive lists (better fix for issue #142)\n   * @param {string} list\n   * @param {string} listType\n   * @param {boolean} trimTrailing\n   * @returns {string}\n   */\n  function parseConsecutiveLists (list, listType, trimTrailing) {\n    // check if we caught 2 or more consecutive lists by mistake\n    // we use the counterRgx, meaning if listType is UL we look for OL and vice versa\n    var olRgx = (options.disableForced4SpacesIndentedSublists) ? /^ ?\\d+\\.[ \\t]/gm : /^ {0,3}\\d+\\.[ \\t]/gm,\n        ulRgx = (options.disableForced4SpacesIndentedSublists) ? /^ ?[*+-][ \\t]/gm : /^ {0,3}[*+-][ \\t]/gm,\n        counterRxg = (listType === 'ul') ? olRgx : ulRgx,\n        result = '';\n\n    if (list.search(counterRxg) !== -1) {\n      (function parseCL (txt) {\n        var pos = txt.search(counterRxg);\n        if (pos !== -1) {\n          // slice\n          result += '\\n<' + listType + '>\\n' + processListItems(txt.slice(0, pos), !!trimTrailing) + '</' + listType + '>\\n';\n\n          // invert counterType and listType\n          listType = (listType === 'ul') ? 'ol' : 'ul';\n          counterRxg = (listType === 'ul') ? olRgx : ulRgx;\n\n          //recurse\n          parseCL(txt.slice(pos));\n        } else {\n          result += '\\n<' + listType + '>\\n' + processListItems(txt, !!trimTrailing) + '</' + listType + '>\\n';\n        }\n      })(list);\n    } else {\n      result = '\\n<' + listType + '>\\n' + processListItems(list, !!trimTrailing) + '</' + listType + '>\\n';\n    }\n\n    return result;\n  }\n\n  // add sentinel to hack around khtml/safari bug:\n  // http://bugs.webkit.org/show_bug.cgi?id=11231\n  text += '¨0';\n\n  if (globals.gListLevel) {\n    text = text.replace(/^(( {0,3}([*+-]|\\d+[.])[ \\t]+)[^\\r]+?(¨0|\\n{2,}(?=\\S)(?![ \\t]*(?:[*+-]|\\d+[.])[ \\t]+)))/gm,\n      function (wholeMatch, list, m2) {\n        var listType = (m2.search(/[*+-]/g) > -1) ? 'ul' : 'ol';\n        return parseConsecutiveLists(list, listType, true);\n      }\n    );\n  } else {\n    text = text.replace(/(\\n\\n|^\\n?)(( {0,3}([*+-]|\\d+[.])[ \\t]+)[^\\r]+?(¨0|\\n{2,}(?=\\S)(?![ \\t]*(?:[*+-]|\\d+[.])[ \\t]+)))/gm,\n      function (wholeMatch, m1, list, m3) {\n        var listType = (m3.search(/[*+-]/g) > -1) ? 'ul' : 'ol';\n        return parseConsecutiveLists(list, listType, false);\n      }\n    );\n  }\n\n  // strip sentinel\n  text = text.replace(/¨0/, '');\n  text = globals.converter._dispatch('lists.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Remove one level of line-leading tabs or spaces\n */\nshowdown.subParser('outdent', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('outdent.before', text, options, globals);\n\n  // attacklab: hack around Konqueror 3.5.4 bug:\n  // \"----------bug\".replace(/^-/g,\"\") == \"bug\"\n  text = text.replace(/^(\\t|[ ]{1,4})/gm, '¨0'); // attacklab: g_tab_width\n\n  // attacklab: clean up hack\n  text = text.replace(/¨0/g, '');\n\n  text = globals.converter._dispatch('outdent.after', text, options, globals);\n  return text;\n});\n\r\n/**\n *\n */\nshowdown.subParser('paragraphs', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('paragraphs.before', text, options, globals);\n  // Strip leading and trailing lines:\n  text = text.replace(/^\\n+/g, '');\n  text = text.replace(/\\n+$/g, '');\n\n  var grafs = text.split(/\\n{2,}/g),\n      grafsOut = [],\n      end = grafs.length; // Wrap <p> tags\n\n  for (var i = 0; i < end; i++) {\n    var str = grafs[i];\n    // if this is an HTML marker, copy it\n    if (str.search(/¨(K|G)(\\d+)\\1/g) >= 0) {\n      grafsOut.push(str);\n\n    // test for presence of characters to prevent empty lines being parsed\n    // as paragraphs (resulting in undesired extra empty paragraphs)\n    } else if (str.search(/\\S/) >= 0) {\n      str = showdown.subParser('spanGamut')(str, options, globals);\n      str = str.replace(/^([ \\t]*)/g, '<p>');\n      str += '</p>';\n      grafsOut.push(str);\n    }\n  }\n\n  /** Unhashify HTML blocks */\n  end = grafsOut.length;\n  for (i = 0; i < end; i++) {\n    var blockText = '',\n        grafsOutIt = grafsOut[i],\n        codeFlag = false;\n    // if this is a marker for an html block...\n    // use RegExp.test instead of string.search because of QML bug\n    while (/¨(K|G)(\\d+)\\1/.test(grafsOutIt)) {\n      var delim = RegExp.$1,\n          num   = RegExp.$2;\n\n      if (delim === 'K') {\n        blockText = globals.gHtmlBlocks[num];\n      } else {\n        // we need to check if ghBlock is a false positive\n        if (codeFlag) {\n          // use encoded version of all text\n          blockText = showdown.subParser('encodeCode')(globals.ghCodeBlocks[num].text, options, globals);\n        } else {\n          blockText = globals.ghCodeBlocks[num].codeblock;\n        }\n      }\n      blockText = blockText.replace(/\\$/g, '$$$$'); // Escape any dollar signs\n\n      grafsOutIt = grafsOutIt.replace(/(\\n\\n)?¨(K|G)\\d+\\2(\\n\\n)?/, blockText);\n      // Check if grafsOutIt is a pre->code\n      if (/^<pre\\b[^>]*>\\s*<code\\b[^>]*>/.test(grafsOutIt)) {\n        codeFlag = true;\n      }\n    }\n    grafsOut[i] = grafsOutIt;\n  }\n  text = grafsOut.join('\\n');\n  // Strip leading and trailing lines:\n  text = text.replace(/^\\n+/g, '');\n  text = text.replace(/\\n+$/g, '');\n  return globals.converter._dispatch('paragraphs.after', text, options, globals);\n});\n\r\n/**\n * Run extension\n */\nshowdown.subParser('runExtension', function (ext, text, options, globals) {\n  'use strict';\n\n  if (ext.filter) {\n    text = ext.filter(text, globals.converter, options);\n\n  } else if (ext.regex) {\n    // TODO remove this when old extension loading mechanism is deprecated\n    var re = ext.regex;\n    if (!(re instanceof RegExp)) {\n      re = new RegExp(re, 'g');\n    }\n    text = text.replace(re, ext.replace);\n  }\n\n  return text;\n});\n\r\n/**\n * These are all the transformations that occur *within* block-level\n * tags like paragraphs, headers, and list items.\n */\nshowdown.subParser('spanGamut', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('spanGamut.before', text, options, globals);\n  text = showdown.subParser('codeSpans')(text, options, globals);\n  text = showdown.subParser('escapeSpecialCharsWithinTagAttributes')(text, options, globals);\n  text = showdown.subParser('encodeBackslashEscapes')(text, options, globals);\n\n  // Process anchor and image tags. Images must come first,\n  // because ![foo][f] looks like an anchor.\n  text = showdown.subParser('images')(text, options, globals);\n  text = showdown.subParser('anchors')(text, options, globals);\n\n  // Make links out of things like `<http://example.com/>`\n  // Must come after _DoAnchors(), because you can use < and >\n  // delimiters in inline links like [this](<url>).\n  text = showdown.subParser('autoLinks')(text, options, globals);\n  text = showdown.subParser('italicsAndBold')(text, options, globals);\n  text = showdown.subParser('strikethrough')(text, options, globals);\n\n  // we need to hash HTML tags inside spans\n  text = showdown.subParser('hashHTMLSpans')(text, options, globals);\n\n  // now we encode amps and angles\n  text = showdown.subParser('encodeAmpsAndAngles')(text, options, globals);\n\n  // Do hard breaks\n  if (options.simpleLineBreaks) {\n    // GFM style hard breaks\n    text = text.replace(/\\n/g, '<br />\\n');\n  } else {\n    // Vanilla hard breaks\n    text = text.replace(/  +\\n/g, '<br />\\n');\n  }\n\n  text = globals.converter._dispatch('spanGamut.after', text, options, globals);\n  return text;\n});\n\r\nshowdown.subParser('strikethrough', function (text, options, globals) {\n  'use strict';\n\n  if (options.strikethrough) {\n    text = globals.converter._dispatch('strikethrough.before', text, options, globals);\n    text = text.replace(/(?:~){2}([\\s\\S]+?)(?:~){2}/g, '<del>$1</del>');\n    text = globals.converter._dispatch('strikethrough.after', text, options, globals);\n  }\n\n  return text;\n});\n\r\n/**\n * Strips link definitions from text, stores the URLs and titles in\n * hash references.\n * Link defs are in the form: ^[id]: url \"optional title\"\n */\nshowdown.subParser('stripLinkDefinitions', function (text, options, globals) {\n  'use strict';\n\n  var regex = /^ {0,3}\\[(.+)]:[ \\t]*\\n?[ \\t]*<?(\\S+?)>?(?: =([*\\d]+[A-Za-z%]{0,4})x([*\\d]+[A-Za-z%]{0,4}))?[ \\t]*\\n?[ \\t]*(?:(\\n*)[\"|'(](.+?)[\"|')][ \\t]*)?(?:\\n+|(?=¨0))/gm;\n\n  // attacklab: sentinel workarounds for lack of \\A and \\Z, safari\\khtml bug\n  text += '¨0';\n\n  text = text.replace(regex, function (wholeMatch, linkId, url, width, height, blankLines, title) {\n    linkId = linkId.toLowerCase();\n    globals.gUrls[linkId] = showdown.subParser('encodeAmpsAndAngles')(url, options, globals);  // Link IDs are case-insensitive\n\n    if (blankLines) {\n      // Oops, found blank lines, so it's not a title.\n      // Put back the parenthetical statement we stole.\n      return blankLines + title;\n\n    } else {\n      if (title) {\n        globals.gTitles[linkId] = title.replace(/\"|'/g, '&quot;');\n      }\n      if (options.parseImgDimensions && width && height) {\n        globals.gDimensions[linkId] = {\n          width:  width,\n          height: height\n        };\n      }\n    }\n    // Completely remove the definition from the text\n    return '';\n  });\n\n  // attacklab: strip sentinel\n  text = text.replace(/¨0/, '');\n\n  return text;\n});\n\r\nshowdown.subParser('tables', function (text, options, globals) {\n  'use strict';\n\n  if (!options.tables) {\n    return text;\n  }\n\n  var tableRgx = /^ {0,3}\\|?.+\\|.+\\n[ \\t]{0,3}\\|?[ \\t]*:?[ \\t]*(?:-|=){2,}[ \\t]*:?[ \\t]*\\|[ \\t]*:?[ \\t]*(?:-|=){2,}[\\s\\S]+?(?:\\n\\n|¨0)/gm;\n\n  function parseStyles (sLine) {\n    if (/^:[ \\t]*--*$/.test(sLine)) {\n      return ' style=\"text-align:left;\"';\n    } else if (/^--*[ \\t]*:[ \\t]*$/.test(sLine)) {\n      return ' style=\"text-align:right;\"';\n    } else if (/^:[ \\t]*--*[ \\t]*:$/.test(sLine)) {\n      return ' style=\"text-align:center;\"';\n    } else {\n      return '';\n    }\n  }\n\n  function parseHeaders (header, style) {\n    var id = '';\n    header = header.trim();\n    if (options.tableHeaderId) {\n      id = ' id=\"' + header.replace(/ /g, '_').toLowerCase() + '\"';\n    }\n    header = showdown.subParser('spanGamut')(header, options, globals);\n\n    return '<th' + id + style + '>' + header + '</th>\\n';\n  }\n\n  function parseCells (cell, style) {\n    var subText = showdown.subParser('spanGamut')(cell, options, globals);\n    return '<td' + style + '>' + subText + '</td>\\n';\n  }\n\n  function buildTable (headers, cells) {\n    var tb = '<table>\\n<thead>\\n<tr>\\n',\n        tblLgn = headers.length;\n\n    for (var i = 0; i < tblLgn; ++i) {\n      tb += headers[i];\n    }\n    tb += '</tr>\\n</thead>\\n<tbody>\\n';\n\n    for (i = 0; i < cells.length; ++i) {\n      tb += '<tr>\\n';\n      for (var ii = 0; ii < tblLgn; ++ii) {\n        tb += cells[i][ii];\n      }\n      tb += '</tr>\\n';\n    }\n    tb += '</tbody>\\n</table>\\n';\n    return tb;\n  }\n\n  text = globals.converter._dispatch('tables.before', text, options, globals);\n\n  text = text.replace(tableRgx, function (rawTable) {\n\n    var i, tableLines = rawTable.split('\\n');\n\n    // strip wrong first and last column if wrapped tables are used\n    for (i = 0; i < tableLines.length; ++i) {\n      if (/^ {0,3}\\|/.test(tableLines[i])) {\n        tableLines[i] = tableLines[i].replace(/^ {0,3}\\|/, '');\n      }\n      if (/\\|[ \\t]*$/.test(tableLines[i])) {\n        tableLines[i] = tableLines[i].replace(/\\|[ \\t]*$/, '');\n      }\n    }\n\n    var rawHeaders = tableLines[0].split('|').map(function (s) { return s.trim();}),\n        rawStyles = tableLines[1].split('|').map(function (s) { return s.trim();}),\n        rawCells = [],\n        headers = [],\n        styles = [],\n        cells = [];\n\n    tableLines.shift();\n    tableLines.shift();\n\n    for (i = 0; i < tableLines.length; ++i) {\n      if (tableLines[i].trim() === '') {\n        continue;\n      }\n      rawCells.push(\n        tableLines[i]\n          .split('|')\n          .map(function (s) {\n            return s.trim();\n          })\n      );\n    }\n\n    if (rawHeaders.length < rawStyles.length) {\n      return rawTable;\n    }\n\n    for (i = 0; i < rawStyles.length; ++i) {\n      styles.push(parseStyles(rawStyles[i]));\n    }\n\n    for (i = 0; i < rawHeaders.length; ++i) {\n      if (showdown.helper.isUndefined(styles[i])) {\n        styles[i] = '';\n      }\n      headers.push(parseHeaders(rawHeaders[i], styles[i]));\n    }\n\n    for (i = 0; i < rawCells.length; ++i) {\n      var row = [];\n      for (var ii = 0; ii < headers.length; ++ii) {\n        if (showdown.helper.isUndefined(rawCells[i][ii])) {\n\n        }\n        row.push(parseCells(rawCells[i][ii], styles[ii]));\n      }\n      cells.push(row);\n    }\n\n    return buildTable(headers, cells);\n  });\n\n  text = globals.converter._dispatch('tables.after', text, options, globals);\n\n  return text;\n});\n\r\n/**\n * Swap back in all the special characters we've hidden.\n */\nshowdown.subParser('unescapeSpecialChars', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('unescapeSpecialChars.before', text, options, globals);\n\n  text = text.replace(/¨E(\\d+)E/g, function (wholeMatch, m1) {\n    var charCodeToReplace = parseInt(m1);\n    return String.fromCharCode(charCodeToReplace);\n  });\n\n  text = globals.converter._dispatch('unescapeSpecialChars.after', text, options, globals);\n  return text;\n});\n\r\nvar root = this;\n\n// CommonJS/nodeJS Loader\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = showdown;\n\n// AMD Loader\n} else if (true) {\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\n    'use strict';\n    return showdown;\n  }.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n// Regular Browser loader\n} else {\n  root.showdown = showdown;\n}\n}).call(this);\r\n\n//# sourceMappingURL=showdown.js.map\r\n\n\n/***/ }),\n\n/***/ 588:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _getIterator2 = __webpack_require__(493);\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nvar _article_table = __webpack_require__(472);\n\nvar _utils = __webpack_require__(492);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar calendarTypeOptions = [{ key: 'FD', display_name: '经济数据' }, { key: 'FE', display_name: '财经大事' }, { key: 'BI', display_name: '国债发行' }, { key: 'VN', display_name: '假期报告' }];\n\nvar calendarTypeKeyValue = calendarTypeOptions.reduce(function (acc, cur) {\n  acc[cur.key] = cur.display_name;\n  return acc;\n}, {});\n\nexports.default = {\n  name: 'table_demo',\n  data: function data() {\n    return {\n      list: null,\n      total: null,\n      listLoading: true,\n      listQuery: {\n        page: 1,\n        limit: 20,\n        importance: undefined,\n        title: undefined,\n        type: undefined,\n        sort: '+id'\n      },\n      temp: {\n        id: undefined,\n        importance: 0,\n        remark: '',\n        timestamp: 0,\n        title: '',\n        type: '',\n        status: 'published'\n      },\n      importanceOptions: [1, 2, 3],\n      calendarTypeOptions: calendarTypeOptions,\n      sortOptions: [{ label: '按ID升序列', key: '+id' }, { label: '按ID降序', key: '-id' }],\n      statusOptions: ['published', 'draft', 'deleted'],\n      dialogFormVisible: false,\n      dialogStatus: '',\n      textMap: {\n        update: '编辑',\n        create: '创建'\n      },\n      dialogPvVisible: false,\n      pvData: [],\n      showAuditor: false,\n      tableKey: 0\n    };\n  },\n  created: function created() {\n    this.getList();\n  },\n\n  filters: {\n    statusFilter: function statusFilter(status) {\n      var statusMap = {\n        published: 'success',\n        draft: 'gray',\n        deleted: 'danger'\n      };\n      return statusMap[status];\n    },\n    typeFilter: function typeFilter(type) {\n      return calendarTypeKeyValue[type];\n    }\n  },\n  methods: {\n    getList: function getList() {\n      var _this = this;\n\n      this.listLoading = true;\n      (0, _article_table.fetchList)(this.listQuery).then(function (response) {\n        _this.list = response.items;\n        _this.total = response.total;\n        _this.listLoading = false;\n      });\n    },\n    handleFilter: function handleFilter() {\n      this.getList();\n    },\n    handleSizeChange: function handleSizeChange(val) {\n      this.listQuery.limit = val;\n      this.getList();\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.listQuery.page = val;\n      this.getList();\n    },\n    timeFilter: function timeFilter(time) {\n      if (!time[0]) {\n        this.listQuery.start = undefined;\n        this.listQuery.end = undefined;\n        return;\n      }\n      this.listQuery.start = parseInt(+time[0] / 1000);\n      this.listQuery.end = parseInt((+time[1] + 3600 * 1000 * 24) / 1000);\n    },\n    handleModifyStatus: function handleModifyStatus(row, status) {\n      this.$message({\n        message: '操作成功',\n        type: 'success'\n      });\n      row.status = status;\n    },\n    handleCreate: function handleCreate() {\n      this.resetTemp();\n      this.dialogStatus = 'create';\n      this.dialogFormVisible = true;\n    },\n    handleUpdate: function handleUpdate(row) {\n      (0, _utils.objectMerge)(this.temp, row);\n      this.dialogStatus = 'update';\n      this.dialogFormVisible = true;\n    },\n    handleDelete: function handleDelete(row) {\n      this.$notify({\n        title: '成功',\n        message: '删除成功',\n        type: 'success',\n        duration: 2000\n      });\n      var index = this.list.indexOf(row);\n      this.list.splice(index, 1);\n    },\n    create: function create() {\n      this.temp.id = parseInt(Math.random() * 100) + 1024;\n      this.temp.timestamp = +new Date();\n      this.temp.author = '原创作者';\n      this.list.unshift(this.temp);\n      this.dialogFormVisible = false;\n      this.$notify({\n        title: '成功',\n        message: '创建成功',\n        type: 'success',\n        duration: 2000\n      });\n    },\n    update: function update() {\n      this.temp.timestamp = +this.temp.timestamp;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = (0, _getIterator3.default)(this.list), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var v = _step.value;\n\n          if (v.id === this.temp.id) {\n            (0, _utils.objectMerge)(v, this.temp);\n            break;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      this.dialogFormVisible = false;\n      this.$notify({\n        title: '成功',\n        message: '更新成功',\n        type: 'success',\n        duration: 2000\n      });\n    },\n    resetTemp: function resetTemp() {\n      this.temp = {\n        id: undefined,\n        importance: 0,\n        remark: '',\n        timestamp: 0,\n        title: '',\n        status: 'published',\n        type: ''\n      };\n    },\n    handleFetchPv: function handleFetchPv(pv) {\n      var _this2 = this;\n\n      (0, _article_table.fetchPv)(pv).then(function (response) {\n        _this2.pvData = response.pvData;\n        _this2.dialogPvVisible = true;\n      });\n    },\n    handleDownload: function handleDownload() {\n      var _this3 = this;\n\n      __webpack_require__.e/* require.ensure */(31).then((function () {\n        var _require = __webpack_require__(540),\n            export_json_to_excel = _require.export_json_to_excel;\n\n        var tHeader = ['时间', '地区', '类型', '标题', '重要性'];\n        var filterVal = ['timestamp', 'province', 'type', 'title', 'importance'];\n        var data = _this3.formatJson(filterVal, _this3.list);\n        export_json_to_excel(tHeader, data, 'table数据');\n      }).bind(null, __webpack_require__)).catch(__webpack_require__.oe);\n    },\n    formatJson: function formatJson(filterVal, jsonData) {\n      return jsonData.map(function (v) {\n        return filterVal.map(function (j) {\n          if (j === 'timestamp') {\n            return (0, _utils.parseTime)(v[j]);\n          } else {\n            return v[j];\n          }\n        });\n      });\n    }\n  }\n};\n\n/***/ }),\n\n/***/ 747:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"app-container calendar-list-container\"\n  }, [_c('div', {\n    staticClass: \"filter-container\"\n  }, [_c('el-input', {\n    staticClass: \"filter-item\",\n    staticStyle: {\n      \"width\": \"200px\"\n    },\n    attrs: {\n      \"placeholder\": \"标题\"\n    },\n    nativeOn: {\n      \"keyup\": function($event) {\n        if (!('button' in $event) && _vm._k($event.keyCode, \"enter\", 13)) { return null; }\n        _vm.handleFilter($event)\n      }\n    },\n    model: {\n      value: (_vm.listQuery.title),\n      callback: function($$v) {\n        _vm.listQuery.title = $$v\n      },\n      expression: \"listQuery.title\"\n    }\n  }), _vm._v(\" \"), _c('el-select', {\n    staticClass: \"filter-item\",\n    staticStyle: {\n      \"width\": \"90px\"\n    },\n    attrs: {\n      \"clearable\": \"\",\n      \"placeholder\": \"重要性\"\n    },\n    model: {\n      value: (_vm.listQuery.importance),\n      callback: function($$v) {\n        _vm.listQuery.importance = $$v\n      },\n      expression: \"listQuery.importance\"\n    }\n  }, _vm._l((_vm.importanceOptions), function(item) {\n    return _c('el-option', {\n      key: item,\n      attrs: {\n        \"label\": item,\n        \"value\": item\n      }\n    })\n  })), _vm._v(\" \"), _c('el-select', {\n    staticClass: \"filter-item\",\n    staticStyle: {\n      \"width\": \"130px\"\n    },\n    attrs: {\n      \"clearable\": \"\",\n      \"placeholder\": \"类型\"\n    },\n    model: {\n      value: (_vm.listQuery.type),\n      callback: function($$v) {\n        _vm.listQuery.type = $$v\n      },\n      expression: \"listQuery.type\"\n    }\n  }, _vm._l((_vm.calendarTypeOptions), function(item) {\n    return _c('el-option', {\n      key: item.key,\n      attrs: {\n        \"label\": item.display_name + '(' + item.key + ')',\n        \"value\": item.key\n      }\n    })\n  })), _vm._v(\" \"), _c('el-select', {\n    staticClass: \"filter-item\",\n    staticStyle: {\n      \"width\": \"120px\"\n    },\n    attrs: {\n      \"placeholder\": \"排序\"\n    },\n    on: {\n      \"change\": _vm.handleFilter\n    },\n    model: {\n      value: (_vm.listQuery.sort),\n      callback: function($$v) {\n        _vm.listQuery.sort = $$v\n      },\n      expression: \"listQuery.sort\"\n    }\n  }, _vm._l((_vm.sortOptions), function(item) {\n    return _c('el-option', {\n      key: item.key,\n      attrs: {\n        \"label\": item.label,\n        \"value\": item.key\n      }\n    })\n  })), _vm._v(\" \"), _c('el-button', {\n    directives: [{\n      name: \"waves\",\n      rawName: \"v-waves\"\n    }],\n    staticClass: \"filter-item\",\n    attrs: {\n      \"type\": \"primary\",\n      \"icon\": \"search\"\n    },\n    on: {\n      \"click\": _vm.handleFilter\n    }\n  }, [_vm._v(\"搜索\")]), _vm._v(\" \"), _c('el-button', {\n    staticClass: \"filter-item\",\n    staticStyle: {\n      \"margin-left\": \"10px\"\n    },\n    attrs: {\n      \"type\": \"primary\",\n      \"icon\": \"edit\"\n    },\n    on: {\n      \"click\": _vm.handleCreate\n    }\n  }, [_vm._v(\"添加\")]), _vm._v(\" \"), _c('el-button', {\n    staticClass: \"filter-item\",\n    attrs: {\n      \"type\": \"primary\",\n      \"icon\": \"document\"\n    },\n    on: {\n      \"click\": _vm.handleDownload\n    }\n  }, [_vm._v(\"导出\")]), _vm._v(\" \"), _c('el-checkbox', {\n    staticClass: \"filter-item\",\n    on: {\n      \"change\": function($event) {\n        _vm.tableKey = _vm.tableKey + 1\n      }\n    },\n    model: {\n      value: (_vm.showAuditor),\n      callback: function($$v) {\n        _vm.showAuditor = $$v\n      },\n      expression: \"showAuditor\"\n    }\n  }, [_vm._v(\"显示审核人\")])], 1), _vm._v(\" \"), _c('el-table', {\n    directives: [{\n      name: \"loading\",\n      rawName: \"v-loading.body\",\n      value: (_vm.listLoading),\n      expression: \"listLoading\",\n      modifiers: {\n        \"body\": true\n      }\n    }],\n    key: _vm.tableKey,\n    staticStyle: {\n      \"width\": \"100%\"\n    },\n    attrs: {\n      \"data\": _vm.list,\n      \"border\": \"\",\n      \"fit\": \"\",\n      \"highlight-current-row\": \"\"\n    }\n  }, [_c('el-table-column', {\n    attrs: {\n      \"align\": \"center\",\n      \"label\": \"序号\",\n      \"width\": \"65\"\n    },\n    scopedSlots: _vm._u([\n      [\"default\", function(scope) {\n        return [_c('span', [_vm._v(_vm._s(scope.row.id))])]\n      }]\n    ])\n  }), _vm._v(\" \"), _c('el-table-column', {\n    attrs: {\n      \"width\": \"180px\",\n      \"align\": \"center\",\n      \"label\": \"时间\"\n    },\n    scopedSlots: _vm._u([\n      [\"default\", function(scope) {\n        return [_c('span', [_vm._v(_vm._s(_vm._f(\"parseTime\")(scope.row.timestamp, '{y}-{m}-{d} {h}:{i}')))])]\n      }]\n    ])\n  }), _vm._v(\" \"), _c('el-table-column', {\n    attrs: {\n      \"min-width\": \"300px\",\n      \"label\": \"标题\"\n    },\n    scopedSlots: _vm._u([\n      [\"default\", function(scope) {\n        return [_c('span', {\n          staticClass: \"link-type\",\n          on: {\n            \"click\": function($event) {\n              _vm.handleUpdate(scope.row)\n            }\n          }\n        }, [_vm._v(_vm._s(scope.row.title))]), _vm._v(\" \"), _c('el-tag', [_vm._v(_vm._s(_vm._f(\"typeFilter\")(scope.row.type)))])]\n      }]\n    ])\n  }), _vm._v(\" \"), _c('el-table-column', {\n    attrs: {\n      \"width\": \"110px\",\n      \"align\": \"center\",\n      \"label\": \"作者\"\n    },\n    scopedSlots: _vm._u([\n      [\"default\", function(scope) {\n        return [_c('span', [_vm._v(_vm._s(scope.row.author))])]\n      }]\n    ])\n  }), _vm._v(\" \"), (_vm.showAuditor) ? _c('el-table-column', {\n    attrs: {\n      \"width\": \"110px\",\n      \"align\": \"center\",\n      \"label\": \"审核人\"\n    },\n    scopedSlots: _vm._u([\n      [\"default\", function(scope) {\n        return [_c('span', {\n          staticStyle: {\n            \"color\": \"red\"\n          }\n        }, [_vm._v(_vm._s(scope.row.auditor))])]\n      }]\n    ])\n  }) : _vm._e(), _vm._v(\" \"), _c('el-table-column', {\n    attrs: {\n      \"width\": \"80px\",\n      \"label\": \"重要性\"\n    },\n    scopedSlots: _vm._u([\n      [\"default\", function(scope) {\n        return _vm._l((+scope.row.importance), function(n) {\n          return _c('wscn-icon-svg', {\n            key: n,\n            staticClass: \"meta-item__icon\",\n            attrs: {\n              \"icon-class\": \"wujiaoxing\"\n            }\n          })\n        })\n      }]\n    ])\n  }), _vm._v(\" \"), _c('el-table-column', {\n    attrs: {\n      \"align\": \"center\",\n      \"label\": \"阅读数\",\n      \"width\": \"95\"\n    },\n    scopedSlots: _vm._u([\n      [\"default\", function(scope) {\n        return [_c('span', {\n          staticClass: \"link-type\",\n          on: {\n            \"click\": function($event) {\n              _vm.handleFetchPv(scope.row.pageviews)\n            }\n          }\n        }, [_vm._v(_vm._s(scope.row.pageviews))])]\n      }]\n    ])\n  }), _vm._v(\" \"), _c('el-table-column', {\n    attrs: {\n      \"class-name\": \"status-col\",\n      \"label\": \"状态\",\n      \"width\": \"90\"\n    },\n    scopedSlots: _vm._u([\n      [\"default\", function(scope) {\n        return [_c('el-tag', {\n          attrs: {\n            \"type\": _vm._f(\"statusFilter\")(scope.row.status)\n          }\n        }, [_vm._v(_vm._s(scope.row.status))])]\n      }]\n    ])\n  }), _vm._v(\" \"), _c('el-table-column', {\n    attrs: {\n      \"align\": \"center\",\n      \"label\": \"操作\",\n      \"width\": \"150\"\n    },\n    scopedSlots: _vm._u([\n      [\"default\", function(scope) {\n        return [(scope.row.status != 'published') ? _c('el-button', {\n          attrs: {\n            \"size\": \"small\",\n            \"type\": \"success\"\n          },\n          on: {\n            \"click\": function($event) {\n              _vm.handleModifyStatus(scope.row, 'published')\n            }\n          }\n        }, [_vm._v(\"发布\\n        \")]) : _vm._e(), _vm._v(\" \"), (scope.row.status != 'draft') ? _c('el-button', {\n          attrs: {\n            \"size\": \"small\"\n          },\n          on: {\n            \"click\": function($event) {\n              _vm.handleModifyStatus(scope.row, 'draft')\n            }\n          }\n        }, [_vm._v(\"草稿\\n        \")]) : _vm._e(), _vm._v(\" \"), (scope.row.status != 'deleted') ? _c('el-button', {\n          attrs: {\n            \"size\": \"small\",\n            \"type\": \"danger\"\n          },\n          on: {\n            \"click\": function($event) {\n              _vm.handleModifyStatus(scope.row, 'deleted')\n            }\n          }\n        }, [_vm._v(\"删除\\n          \")]) : _vm._e()]\n      }]\n    ])\n  })], 1), _vm._v(\" \"), _c('div', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (!_vm.listLoading),\n      expression: \"!listLoading\"\n    }],\n    staticClass: \"pagination-container\"\n  }, [_c('el-pagination', {\n    attrs: {\n      \"current-page\": _vm.listQuery.page,\n      \"page-sizes\": [10, 20, 30, 50],\n      \"page-size\": _vm.listQuery.limit,\n      \"layout\": \"total, sizes, prev, pager, next, jumper\",\n      \"total\": _vm.total\n    },\n    on: {\n      \"size-change\": _vm.handleSizeChange,\n      \"current-change\": _vm.handleCurrentChange\n    }\n  })], 1), _vm._v(\" \"), _c('el-dialog', {\n    attrs: {\n      \"title\": _vm.textMap[_vm.dialogStatus]\n    },\n    model: {\n      value: (_vm.dialogFormVisible),\n      callback: function($$v) {\n        _vm.dialogFormVisible = $$v\n      },\n      expression: \"dialogFormVisible\"\n    }\n  }, [_c('el-form', {\n    staticClass: \"small-space\",\n    staticStyle: {\n      \"width\": \"400px\",\n      \"margin-left\": \"50px\"\n    },\n    attrs: {\n      \"model\": _vm.temp,\n      \"label-position\": \"left\",\n      \"label-width\": \"70px\"\n    }\n  }, [_c('el-form-item', {\n    attrs: {\n      \"label\": \"类型\"\n    }\n  }, [_c('el-select', {\n    staticClass: \"filter-item\",\n    attrs: {\n      \"placeholder\": \"请选择\"\n    },\n    model: {\n      value: (_vm.temp.type),\n      callback: function($$v) {\n        _vm.temp.type = $$v\n      },\n      expression: \"temp.type\"\n    }\n  }, _vm._l((_vm.calendarTypeOptions), function(item) {\n    return _c('el-option', {\n      key: item.key,\n      attrs: {\n        \"label\": item.display_name,\n        \"value\": item.key\n      }\n    })\n  }))], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"状态\"\n    }\n  }, [_c('el-select', {\n    staticClass: \"filter-item\",\n    attrs: {\n      \"placeholder\": \"请选择\"\n    },\n    model: {\n      value: (_vm.temp.status),\n      callback: function($$v) {\n        _vm.temp.status = $$v\n      },\n      expression: \"temp.status\"\n    }\n  }, _vm._l((_vm.statusOptions), function(item) {\n    return _c('el-option', {\n      key: item,\n      attrs: {\n        \"label\": item,\n        \"value\": item\n      }\n    })\n  }))], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"时间\"\n    }\n  }, [_c('el-date-picker', {\n    attrs: {\n      \"type\": \"datetime\",\n      \"placeholder\": \"选择日期时间\"\n    },\n    model: {\n      value: (_vm.temp.timestamp),\n      callback: function($$v) {\n        _vm.temp.timestamp = $$v\n      },\n      expression: \"temp.timestamp\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"标题\"\n    }\n  }, [_c('el-input', {\n    model: {\n      value: (_vm.temp.title),\n      callback: function($$v) {\n        _vm.temp.title = $$v\n      },\n      expression: \"temp.title\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"重要性\"\n    }\n  }, [_c('el-rate', {\n    staticStyle: {\n      \"margin-top\": \"8px\"\n    },\n    attrs: {\n      \"colors\": ['#99A9BF', '#F7BA2A', '#FF9900']\n    },\n    model: {\n      value: (_vm.temp.importance),\n      callback: function($$v) {\n        _vm.temp.importance = $$v\n      },\n      expression: \"temp.importance\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"点评\"\n    }\n  }, [_c('el-input', {\n    attrs: {\n      \"type\": \"textarea\",\n      \"autosize\": {\n        minRows: 2,\n        maxRows: 4\n      },\n      \"placeholder\": \"请输入内容\"\n    },\n    model: {\n      value: (_vm.temp.remark),\n      callback: function($$v) {\n        _vm.temp.remark = $$v\n      },\n      expression: \"temp.remark\"\n    }\n  })], 1)], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"dialog-footer\",\n    slot: \"footer\"\n  }, [_c('el-button', {\n    on: {\n      \"click\": function($event) {\n        _vm.dialogFormVisible = false\n      }\n    }\n  }, [_vm._v(\"取 消\")]), _vm._v(\" \"), (_vm.dialogStatus == 'create') ? _c('el-button', {\n    attrs: {\n      \"type\": \"primary\"\n    },\n    on: {\n      \"click\": _vm.create\n    }\n  }, [_vm._v(\"确 定\")]) : _c('el-button', {\n    attrs: {\n      \"type\": \"primary\"\n    },\n    on: {\n      \"click\": _vm.update\n    }\n  }, [_vm._v(\"确 定\")])], 1)], 1), _vm._v(\" \"), _c('el-dialog', {\n    attrs: {\n      \"title\": \"阅读数统计\",\n      \"size\": \"small\"\n    },\n    model: {\n      value: (_vm.dialogPvVisible),\n      callback: function($$v) {\n        _vm.dialogPvVisible = $$v\n      },\n      expression: \"dialogPvVisible\"\n    }\n  }, [_c('el-table', {\n    staticStyle: {\n      \"width\": \"100%\"\n    },\n    attrs: {\n      \"data\": _vm.pvData,\n      \"border\": \"\",\n      \"fit\": \"\",\n      \"highlight-current-row\": \"\"\n    }\n  }, [_c('el-table-column', {\n    attrs: {\n      \"prop\": \"key\",\n      \"label\": \"渠道\"\n    }\n  }), _vm._v(\" \"), _c('el-table-column', {\n    attrs: {\n      \"prop\": \"pv\",\n      \"label\": \"pv\"\n    }\n  })], 1), _vm._v(\" \"), _c('span', {\n    staticClass: \"dialog-footer\",\n    slot: \"footer\"\n  }, [_c('el-button', {\n    attrs: {\n      \"type\": \"primary\"\n    },\n    on: {\n      \"click\": function($event) {\n        _vm.dialogPvVisible = false\n      }\n    }\n  }, [_vm._v(\"确 定\")])], 1)], 1)], 1)\n},staticRenderFns: []}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// js/14.e92d733d7315fba011ce.js","var Component = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./table.vue\"),\n  /* template */\n  require(\"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-398a1b67\\\"}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./table.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/example/table.vue\n// module id = 315\n// module chunks = 14","import { fetch } from 'utils/fetch';\n\nexport function fetchList(query) {\n  return fetch({\n    url: '/article_table/list',\n    method: 'get',\n    params: query\n  });\n}\n\nexport function fetchPv(pv) {\n  return fetch({\n    url: '/article_table/pv',\n    method: 'get',\n    params: { pv }\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/article_table.js","/**\n * Created by jiachenpan on 16/11/18.\n */\n import showdown from 'showdown' // markdown转化\n const converter = new showdown.Converter();\n\n export function parseTime(time, cFormat) {\n   if (arguments.length === 0) {\n     return null;\n   }\n   const format = cFormat || '{y}-{m}-{d} {h}:{i}:{s}';\n   let date;\n   if (typeof time == 'object') {\n     date = time;\n   } else {\n     if (('' + time).length === 10) time = parseInt(time) * 1000;\n     date = new Date(time);\n   }\n   const formatObj = {\n     y: date.getFullYear(),\n     m: date.getMonth() + 1,\n     d: date.getDate(),\n     h: date.getHours(),\n     i: date.getMinutes(),\n     s: date.getSeconds(),\n     a: date.getDay()\n   };\n   const time_str = format.replace(/{(y|m|d|h|i|s|a)+}/g, (result, key) => {\n     let value = formatObj[key];\n     if (key === 'a') return ['一', '二', '三', '四', '五', '六', '日'][value - 1];\n     if (result.length > 0 && value < 10) {\n       value = '0' + value;\n     }\n     return value || 0;\n   });\n   return time_str;\n }\n\n export function formatTime(time, option) {\n   time = +time * 1000;\n   const d = new Date(time);\n   const now = Date.now();\n\n   const diff = (now - d) / 1000;\n\n   if (diff < 30) {\n     return '刚刚'\n   } else if (diff < 3600) { // less 1 hour\n     return Math.ceil(diff / 60) + '分钟前'\n   } else if (diff < 3600 * 24) {\n     return Math.ceil(diff / 3600) + '小时前'\n   } else if (diff < 3600 * 24 * 2) {\n     return '1天前'\n   }\n   if (option) {\n     return parseTime(time, option)\n   } else {\n     return d.getMonth() + 1 + '月' + d.getDate() + '日' + d.getHours() + '时' + d.getMinutes() + '分'\n   }\n }\n\n// 格式化时间\n export function getQueryObject(url) {\n   url = url == null ? window.location.href : url;\n   const search = url.substring(url.lastIndexOf('?') + 1);\n   const obj = {};\n   const reg = /([^?&=]+)=([^?&=]*)/g;\n   search.replace(reg, (rs, $1, $2) => {\n     const name = decodeURIComponent($1);\n     let val = decodeURIComponent($2);\n     val = String(val);\n     obj[name] = val;\n     return rs;\n   });\n   return obj;\n }\n\n\n/**\n *get getByteLen\n * @param {Sting} val input value\n * @returns {number} output value\n */\n export function getByteLen(val) {\n   let len = 0;\n   for (let i = 0; i < val.length; i++) {\n     if (val[i].match(/[^\\x00-\\xff]/ig) != null) {\n       len += 1;\n     } else { len += 0.5; }\n   }\n   return Math.floor(len);\n }\n\n export function cleanArray(actual) {\n   const newArray = [];\n   for (let i = 0; i < actual.length; i++) {\n     if (actual[i]) {\n       newArray.push(actual[i]);\n     }\n   }\n   return newArray;\n }\n\n export function param(json) {\n   if (!json) return '';\n   return cleanArray(Object.keys(json).map(key => {\n     if (json[key] === undefined) return '';\n     return encodeURIComponent(key) + '=' +\n            encodeURIComponent(json[key]);\n   })).join('&');\n }\n\n export function html2Text(val) {\n   const div = document.createElement('div');\n   div.innerHTML = val;\n   return div.textContent || div.innerText;\n }\n\n export function objectMerge(target, source) {\n    /* Merges two  objects,\n     giving the last one precedence */\n\n   if (typeof target !== 'object') {\n     target = {};\n   }\n   if (Array.isArray(source)) {\n     return source.slice();\n   }\n   for (const property in source) {\n     if (source.hasOwnProperty(property)) {\n       const sourceProperty = source[property];\n       if (typeof sourceProperty === 'object') {\n         target[property] = objectMerge(target[property], sourceProperty);\n         continue;\n       }\n       target[property] = sourceProperty;\n     }\n   }\n   return target;\n }\n\n\n export function scrollTo(element, to, duration) {\n   if (duration <= 0) return;\n   const difference = to - element.scrollTop;\n   const perTick = difference / duration * 10;\n   setTimeout(() => {\n     console.log(new Date())\n     element.scrollTop = element.scrollTop + perTick;\n     if (element.scrollTop === to) return;\n     scrollTo(element, to, duration - 10);\n   }, 10);\n }\n\n export function toggleClass(element, className) {\n   if (!element || !className) {\n     return;\n   }\n   let classString = element.className;\n   const nameIndex = classString.indexOf(className);\n   if (nameIndex === -1) {\n     classString += '' + className;\n   } else {\n     classString = classString.substr(0, nameIndex) + classString.substr(nameIndex + className.length);\n   }\n   element.className = classString;\n }\n\n export const pickerOptions = [\n   {\n     text: '今天',\n     onClick(picker) {\n       const end = new Date();\n       const start = new Date(new Date().toDateString());\n       end.setTime(start.getTime());\n       picker.$emit('pick', [start, end]);\n     }\n   }, {\n     text: '最近一周',\n     onClick(picker) {\n       const end = new Date(new Date().toDateString());\n       const start = new Date();\n       start.setTime(end.getTime() - 3600 * 1000 * 24 * 7);\n       picker.$emit('pick', [start, end]);\n     }\n   }, {\n     text: '最近一个月',\n     onClick(picker) {\n       const end = new Date(new Date().toDateString());\n       const start = new Date();\n       start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n       picker.$emit('pick', [start, end]);\n     }\n   }, {\n     text: '最近三个月',\n     onClick(picker) {\n       const end = new Date(new Date().toDateString());\n       const start = new Date();\n       start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n       picker.$emit('pick', [start, end]);\n     }\n   }]\n\n export function getTime(type) {\n   if (type === 'start') {\n     return new Date().getTime() - 3600 * 1000 * 24 * 90\n   } else {\n     return new Date(new Date().toDateString())\n   }\n }\n\n export function showdownMD(md) {\n   return converter.makeHtml(md)\n }\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/index.js","module.exports = { \"default\": require(\"core-js/library/fn/get-iterator\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/core-js/get-iterator.js\n// module id = 493\n// module chunks = 12 14","require('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.get-iterator');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/fn/get-iterator.js\n// module id = 494\n// module chunks = 12 14","var anObject = require('./_an-object')\n  , get      = require('./core.get-iterator-method');\nmodule.exports = require('./_core').getIterator = function(it){\n  var iterFn = get(it);\n  if(typeof iterFn != 'function')throw TypeError(it + ' is not iterable!');\n  return anObject(iterFn.call(it));\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/core.get-iterator.js\n// module id = 495\n// module chunks = 12 14",";/*! showdown 06-02-2017 */\r\n(function(){\r\n/**\n * Created by Tivie on 13-07-2015.\n */\n\nfunction getDefaultOpts (simple) {\n  'use strict';\n\n  var defaultOptions = {\n    omitExtraWLInCodeBlocks: {\n      defaultValue: false,\n      describe: 'Omit the default extra whiteline added to code blocks',\n      type: 'boolean'\n    },\n    noHeaderId: {\n      defaultValue: false,\n      describe: 'Turn on/off generated header id',\n      type: 'boolean'\n    },\n    prefixHeaderId: {\n      defaultValue: false,\n      describe: 'Specify a prefix to generated header ids',\n      type: 'string'\n    },\n    ghCompatibleHeaderId: {\n      defaultValue: false,\n      describe: 'Generate header ids compatible with github style (spaces are replaced with dashes, a bunch of non alphanumeric chars are removed)',\n      type: 'boolean'\n    },\n    headerLevelStart: {\n      defaultValue: false,\n      describe: 'The header blocks level start',\n      type: 'integer'\n    },\n    parseImgDimensions: {\n      defaultValue: false,\n      describe: 'Turn on/off image dimension parsing',\n      type: 'boolean'\n    },\n    simplifiedAutoLink: {\n      defaultValue: false,\n      describe: 'Turn on/off GFM autolink style',\n      type: 'boolean'\n    },\n    excludeTrailingPunctuationFromURLs: {\n      defaultValue: false,\n      describe: 'Excludes trailing punctuation from links generated with autoLinking',\n      type: 'boolean'\n    },\n    literalMidWordUnderscores: {\n      defaultValue: false,\n      describe: 'Parse midword underscores as literal underscores',\n      type: 'boolean'\n    },\n    strikethrough: {\n      defaultValue: false,\n      describe: 'Turn on/off strikethrough support',\n      type: 'boolean'\n    },\n    tables: {\n      defaultValue: false,\n      describe: 'Turn on/off tables support',\n      type: 'boolean'\n    },\n    tablesHeaderId: {\n      defaultValue: false,\n      describe: 'Add an id to table headers',\n      type: 'boolean'\n    },\n    ghCodeBlocks: {\n      defaultValue: true,\n      describe: 'Turn on/off GFM fenced code blocks support',\n      type: 'boolean'\n    },\n    tasklists: {\n      defaultValue: false,\n      describe: 'Turn on/off GFM tasklist support',\n      type: 'boolean'\n    },\n    smoothLivePreview: {\n      defaultValue: false,\n      describe: 'Prevents weird effects in live previews due to incomplete input',\n      type: 'boolean'\n    },\n    smartIndentationFix: {\n      defaultValue: false,\n      description: 'Tries to smartly fix indentation in es6 strings',\n      type: 'boolean'\n    },\n    disableForced4SpacesIndentedSublists: {\n      defaultValue: false,\n      description: 'Disables the requirement of indenting nested sublists by 4 spaces',\n      type: 'boolean'\n    },\n    simpleLineBreaks: {\n      defaultValue: false,\n      description: 'Parses simple line breaks as <br> (GFM Style)',\n      type: 'boolean'\n    },\n    requireSpaceBeforeHeadingText: {\n      defaultValue: false,\n      description: 'Makes adding a space between `#` and the header text mandatory (GFM Style)',\n      type: 'boolean'\n    },\n    ghMentions: {\n      defaultValue: false,\n      description: 'Enables github @mentions',\n      type: 'boolean'\n    },\n    ghMentionsLink: {\n      defaultValue: 'https://github.com/{u}',\n      description: 'Changes the link generated by @mentions. Only applies if ghMentions option is enabled.',\n      type: 'string'\n    },\n    encodeEmails: {\n      defaultValue: true,\n      description: 'Encode e-mail addresses through the use of Character Entities, transforming ASCII e-mail addresses into its equivalent decimal entities',\n      type: 'boolean'\n    }\n  };\n  if (simple === false) {\n    return JSON.parse(JSON.stringify(defaultOptions));\n  }\n  var ret = {};\n  for (var opt in defaultOptions) {\n    if (defaultOptions.hasOwnProperty(opt)) {\n      ret[opt] = defaultOptions[opt].defaultValue;\n    }\n  }\n  return ret;\n}\n\nfunction allOptionsOn () {\n  'use strict';\n  var options = getDefaultOpts(true),\n      ret = {};\n  for (var opt in options) {\n    if (options.hasOwnProperty(opt)) {\n      ret[opt] = true;\n    }\n  }\n  return ret;\n}\n\r\n/**\n * Created by Tivie on 06-01-2015.\n */\n\n// Private properties\nvar showdown = {},\n    parsers = {},\n    extensions = {},\n    globalOptions = getDefaultOpts(true),\n    setFlavor = 'vanilla',\n    flavor = {\n      github: {\n        omitExtraWLInCodeBlocks:              true,\n        simplifiedAutoLink:                   true,\n        excludeTrailingPunctuationFromURLs:   true,\n        literalMidWordUnderscores:            true,\n        strikethrough:                        true,\n        tables:                               true,\n        tablesHeaderId:                       true,\n        ghCodeBlocks:                         true,\n        tasklists:                            true,\n        disableForced4SpacesIndentedSublists: true,\n        simpleLineBreaks:                     true,\n        requireSpaceBeforeHeadingText:        true,\n        ghCompatibleHeaderId:                 true,\n        ghMentions:                           true\n      },\n      original: {\n        noHeaderId:                           true,\n        ghCodeBlocks:                         false\n      },\n      ghost: {\n        omitExtraWLInCodeBlocks:              true,\n        parseImgDimensions:                   true,\n        simplifiedAutoLink:                   true,\n        excludeTrailingPunctuationFromURLs:   true,\n        literalMidWordUnderscores:            true,\n        strikethrough:                        true,\n        tables:                               true,\n        tablesHeaderId:                       true,\n        ghCodeBlocks:                         true,\n        tasklists:                            true,\n        smoothLivePreview:                    true,\n        simpleLineBreaks:                     true,\n        requireSpaceBeforeHeadingText:        true,\n        ghMentions:                           false,\n        encodeEmails:                         true\n      },\n      vanilla: getDefaultOpts(true),\n      allOn: allOptionsOn()\n    };\n\n/**\n * helper namespace\n * @type {{}}\n */\nshowdown.helper = {};\n\n/**\n * TODO LEGACY SUPPORT CODE\n * @type {{}}\n */\nshowdown.extensions = {};\n\n/**\n * Set a global option\n * @static\n * @param {string} key\n * @param {*} value\n * @returns {showdown}\n */\nshowdown.setOption = function (key, value) {\n  'use strict';\n  globalOptions[key] = value;\n  return this;\n};\n\n/**\n * Get a global option\n * @static\n * @param {string} key\n * @returns {*}\n */\nshowdown.getOption = function (key) {\n  'use strict';\n  return globalOptions[key];\n};\n\n/**\n * Get the global options\n * @static\n * @returns {{}}\n */\nshowdown.getOptions = function () {\n  'use strict';\n  return globalOptions;\n};\n\n/**\n * Reset global options to the default values\n * @static\n */\nshowdown.resetOptions = function () {\n  'use strict';\n  globalOptions = getDefaultOpts(true);\n};\n\n/**\n * Set the flavor showdown should use as default\n * @param {string} name\n */\nshowdown.setFlavor = function (name) {\n  'use strict';\n  if (!flavor.hasOwnProperty(name)) {\n    throw Error(name + ' flavor was not found');\n  }\n  var preset = flavor[name];\n  setFlavor = name;\n  for (var option in preset) {\n    if (preset.hasOwnProperty(option)) {\n      globalOptions[option] = preset[option];\n    }\n  }\n};\n\n/**\n * Get the currently set flavor\n * @returns {string}\n */\nshowdown.getFlavor = function () {\n  'use strict';\n  return setFlavor;\n};\n\n/**\n * Get the options of a specified flavor. Returns undefined if the flavor was not found\n * @param {string} name Name of the flavor\n * @returns {{}|undefined}\n */\nshowdown.getFlavorOptions = function (name) {\n  'use strict';\n  if (flavor.hasOwnProperty(name)) {\n    return flavor[name];\n  }\n};\n\n/**\n * Get the default options\n * @static\n * @param {boolean} [simple=true]\n * @returns {{}}\n */\nshowdown.getDefaultOptions = function (simple) {\n  'use strict';\n  return getDefaultOpts(simple);\n};\n\n/**\n * Get or set a subParser\n *\n * subParser(name)       - Get a registered subParser\n * subParser(name, func) - Register a subParser\n * @static\n * @param {string} name\n * @param {function} [func]\n * @returns {*}\n */\nshowdown.subParser = function (name, func) {\n  'use strict';\n  if (showdown.helper.isString(name)) {\n    if (typeof func !== 'undefined') {\n      parsers[name] = func;\n    } else {\n      if (parsers.hasOwnProperty(name)) {\n        return parsers[name];\n      } else {\n        throw Error('SubParser named ' + name + ' not registered!');\n      }\n    }\n  }\n};\n\n/**\n * Gets or registers an extension\n * @static\n * @param {string} name\n * @param {object|function=} ext\n * @returns {*}\n */\nshowdown.extension = function (name, ext) {\n  'use strict';\n\n  if (!showdown.helper.isString(name)) {\n    throw Error('Extension \\'name\\' must be a string');\n  }\n\n  name = showdown.helper.stdExtName(name);\n\n  // Getter\n  if (showdown.helper.isUndefined(ext)) {\n    if (!extensions.hasOwnProperty(name)) {\n      throw Error('Extension named ' + name + ' is not registered!');\n    }\n    return extensions[name];\n\n    // Setter\n  } else {\n    // Expand extension if it's wrapped in a function\n    if (typeof ext === 'function') {\n      ext = ext();\n    }\n\n    // Ensure extension is an array\n    if (!showdown.helper.isArray(ext)) {\n      ext = [ext];\n    }\n\n    var validExtension = validate(ext, name);\n\n    if (validExtension.valid) {\n      extensions[name] = ext;\n    } else {\n      throw Error(validExtension.error);\n    }\n  }\n};\n\n/**\n * Gets all extensions registered\n * @returns {{}}\n */\nshowdown.getAllExtensions = function () {\n  'use strict';\n  return extensions;\n};\n\n/**\n * Remove an extension\n * @param {string} name\n */\nshowdown.removeExtension = function (name) {\n  'use strict';\n  delete extensions[name];\n};\n\n/**\n * Removes all extensions\n */\nshowdown.resetExtensions = function () {\n  'use strict';\n  extensions = {};\n};\n\n/**\n * Validate extension\n * @param {array} extension\n * @param {string} name\n * @returns {{valid: boolean, error: string}}\n */\nfunction validate (extension, name) {\n  'use strict';\n\n  var errMsg = (name) ? 'Error in ' + name + ' extension->' : 'Error in unnamed extension',\n      ret = {\n        valid: true,\n        error: ''\n      };\n\n  if (!showdown.helper.isArray(extension)) {\n    extension = [extension];\n  }\n\n  for (var i = 0; i < extension.length; ++i) {\n    var baseMsg = errMsg + ' sub-extension ' + i + ': ',\n        ext = extension[i];\n    if (typeof ext !== 'object') {\n      ret.valid = false;\n      ret.error = baseMsg + 'must be an object, but ' + typeof ext + ' given';\n      return ret;\n    }\n\n    if (!showdown.helper.isString(ext.type)) {\n      ret.valid = false;\n      ret.error = baseMsg + 'property \"type\" must be a string, but ' + typeof ext.type + ' given';\n      return ret;\n    }\n\n    var type = ext.type = ext.type.toLowerCase();\n\n    // normalize extension type\n    if (type === 'language') {\n      type = ext.type = 'lang';\n    }\n\n    if (type === 'html') {\n      type = ext.type = 'output';\n    }\n\n    if (type !== 'lang' && type !== 'output' && type !== 'listener') {\n      ret.valid = false;\n      ret.error = baseMsg + 'type ' + type + ' is not recognized. Valid values: \"lang/language\", \"output/html\" or \"listener\"';\n      return ret;\n    }\n\n    if (type === 'listener') {\n      if (showdown.helper.isUndefined(ext.listeners)) {\n        ret.valid = false;\n        ret.error = baseMsg + '. Extensions of type \"listener\" must have a property called \"listeners\"';\n        return ret;\n      }\n    } else {\n      if (showdown.helper.isUndefined(ext.filter) && showdown.helper.isUndefined(ext.regex)) {\n        ret.valid = false;\n        ret.error = baseMsg + type + ' extensions must define either a \"regex\" property or a \"filter\" method';\n        return ret;\n      }\n    }\n\n    if (ext.listeners) {\n      if (typeof ext.listeners !== 'object') {\n        ret.valid = false;\n        ret.error = baseMsg + '\"listeners\" property must be an object but ' + typeof ext.listeners + ' given';\n        return ret;\n      }\n      for (var ln in ext.listeners) {\n        if (ext.listeners.hasOwnProperty(ln)) {\n          if (typeof ext.listeners[ln] !== 'function') {\n            ret.valid = false;\n            ret.error = baseMsg + '\"listeners\" property must be an hash of [event name]: [callback]. listeners.' + ln +\n              ' must be a function but ' + typeof ext.listeners[ln] + ' given';\n            return ret;\n          }\n        }\n      }\n    }\n\n    if (ext.filter) {\n      if (typeof ext.filter !== 'function') {\n        ret.valid = false;\n        ret.error = baseMsg + '\"filter\" must be a function, but ' + typeof ext.filter + ' given';\n        return ret;\n      }\n    } else if (ext.regex) {\n      if (showdown.helper.isString(ext.regex)) {\n        ext.regex = new RegExp(ext.regex, 'g');\n      }\n      if (!(ext.regex instanceof RegExp)) {\n        ret.valid = false;\n        ret.error = baseMsg + '\"regex\" property must either be a string or a RegExp object, but ' + typeof ext.regex + ' given';\n        return ret;\n      }\n      if (showdown.helper.isUndefined(ext.replace)) {\n        ret.valid = false;\n        ret.error = baseMsg + '\"regex\" extensions must implement a replace string or function';\n        return ret;\n      }\n    }\n  }\n  return ret;\n}\n\n/**\n * Validate extension\n * @param {object} ext\n * @returns {boolean}\n */\nshowdown.validateExtension = function (ext) {\n  'use strict';\n\n  var validateExtension = validate(ext, null);\n  if (!validateExtension.valid) {\n    console.warn(validateExtension.error);\n    return false;\n  }\n  return true;\n};\n\r\n/**\n * showdownjs helper functions\n */\n\nif (!showdown.hasOwnProperty('helper')) {\n  showdown.helper = {};\n}\n\n/**\n * Check if var is string\n * @static\n * @param {string} a\n * @returns {boolean}\n */\nshowdown.helper.isString = function (a) {\n  'use strict';\n  return (typeof a === 'string' || a instanceof String);\n};\n\n/**\n * Check if var is a function\n * @static\n * @param {*} a\n * @returns {boolean}\n */\nshowdown.helper.isFunction = function (a) {\n  'use strict';\n  var getType = {};\n  return a && getType.toString.call(a) === '[object Function]';\n};\n\n/**\n * isArray helper function\n * @static\n * @param {*} a\n * @returns {boolean}\n */\nshowdown.helper.isArray = function (a) {\n  'use strict';\n  return a.constructor === Array;\n};\n\n/**\n * Check if value is undefined\n * @static\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n */\nshowdown.helper.isUndefined = function (value) {\n  'use strict';\n  return typeof value === 'undefined';\n};\n\n/**\n * ForEach helper function\n * Iterates over Arrays and Objects (own properties only)\n * @static\n * @param {*} obj\n * @param {function} callback Accepts 3 params: 1. value, 2. key, 3. the original array/object\n */\nshowdown.helper.forEach = function (obj, callback) {\n  'use strict';\n  // check if obj is defined\n  if (showdown.helper.isUndefined(obj)) {\n    throw new Error('obj param is required');\n  }\n\n  if (showdown.helper.isUndefined(callback)) {\n    throw new Error('callback param is required');\n  }\n\n  if (!showdown.helper.isFunction(callback)) {\n    throw new Error('callback param must be a function/closure');\n  }\n\n  if (typeof obj.forEach === 'function') {\n    obj.forEach(callback);\n  } else if (showdown.helper.isArray(obj)) {\n    for (var i = 0; i < obj.length; i++) {\n      callback(obj[i], i, obj);\n    }\n  } else if (typeof (obj) === 'object') {\n    for (var prop in obj) {\n      if (obj.hasOwnProperty(prop)) {\n        callback(obj[prop], prop, obj);\n      }\n    }\n  } else {\n    throw new Error('obj does not seem to be an array or an iterable object');\n  }\n};\n\n/**\n * Standardidize extension name\n * @static\n * @param {string} s extension name\n * @returns {string}\n */\nshowdown.helper.stdExtName = function (s) {\n  'use strict';\n  return s.replace(/[_?*+\\/\\\\.^-]/g, '').replace(/\\s/g, '').toLowerCase();\n};\n\nfunction escapeCharactersCallback (wholeMatch, m1) {\n  'use strict';\n  var charCodeToEscape = m1.charCodeAt(0);\n  return '¨E' + charCodeToEscape + 'E';\n}\n\n/**\n * Callback used to escape characters when passing through String.replace\n * @static\n * @param {string} wholeMatch\n * @param {string} m1\n * @returns {string}\n */\nshowdown.helper.escapeCharactersCallback = escapeCharactersCallback;\n\n/**\n * Escape characters in a string\n * @static\n * @param {string} text\n * @param {string} charsToEscape\n * @param {boolean} afterBackslash\n * @returns {XML|string|void|*}\n */\nshowdown.helper.escapeCharacters = function (text, charsToEscape, afterBackslash) {\n  'use strict';\n  // First we have to escape the escape characters so that\n  // we can build a character class out of them\n  var regexString = '([' + charsToEscape.replace(/([\\[\\]\\\\])/g, '\\\\$1') + '])';\n\n  if (afterBackslash) {\n    regexString = '\\\\\\\\' + regexString;\n  }\n\n  var regex = new RegExp(regexString, 'g');\n  text = text.replace(regex, escapeCharactersCallback);\n\n  return text;\n};\n\nvar rgxFindMatchPos = function (str, left, right, flags) {\n  'use strict';\n  var f = flags || '',\n      g = f.indexOf('g') > -1,\n      x = new RegExp(left + '|' + right, 'g' + f.replace(/g/g, '')),\n      l = new RegExp(left, f.replace(/g/g, '')),\n      pos = [],\n      t, s, m, start, end;\n\n  do {\n    t = 0;\n    while ((m = x.exec(str))) {\n      if (l.test(m[0])) {\n        if (!(t++)) {\n          s = x.lastIndex;\n          start = s - m[0].length;\n        }\n      } else if (t) {\n        if (!--t) {\n          end = m.index + m[0].length;\n          var obj = {\n            left: {start: start, end: s},\n            match: {start: s, end: m.index},\n            right: {start: m.index, end: end},\n            wholeMatch: {start: start, end: end}\n          };\n          pos.push(obj);\n          if (!g) {\n            return pos;\n          }\n        }\n      }\n    }\n  } while (t && (x.lastIndex = s));\n\n  return pos;\n};\n\n/**\n * matchRecursiveRegExp\n *\n * (c) 2007 Steven Levithan <stevenlevithan.com>\n * MIT License\n *\n * Accepts a string to search, a left and right format delimiter\n * as regex patterns, and optional regex flags. Returns an array\n * of matches, allowing nested instances of left/right delimiters.\n * Use the \"g\" flag to return all matches, otherwise only the\n * first is returned. Be careful to ensure that the left and\n * right format delimiters produce mutually exclusive matches.\n * Backreferences are not supported within the right delimiter\n * due to how it is internally combined with the left delimiter.\n * When matching strings whose format delimiters are unbalanced\n * to the left or right, the output is intentionally as a\n * conventional regex library with recursion support would\n * produce, e.g. \"<<x>\" and \"<x>>\" both produce [\"x\"] when using\n * \"<\" and \">\" as the delimiters (both strings contain a single,\n * balanced instance of \"<x>\").\n *\n * examples:\n * matchRecursiveRegExp(\"test\", \"\\\\(\", \"\\\\)\")\n * returns: []\n * matchRecursiveRegExp(\"<t<<e>><s>>t<>\", \"<\", \">\", \"g\")\n * returns: [\"t<<e>><s>\", \"\"]\n * matchRecursiveRegExp(\"<div id=\\\"x\\\">test</div>\", \"<div\\\\b[^>]*>\", \"</div>\", \"gi\")\n * returns: [\"test\"]\n */\nshowdown.helper.matchRecursiveRegExp = function (str, left, right, flags) {\n  'use strict';\n\n  var matchPos = rgxFindMatchPos (str, left, right, flags),\n      results = [];\n\n  for (var i = 0; i < matchPos.length; ++i) {\n    results.push([\n      str.slice(matchPos[i].wholeMatch.start, matchPos[i].wholeMatch.end),\n      str.slice(matchPos[i].match.start, matchPos[i].match.end),\n      str.slice(matchPos[i].left.start, matchPos[i].left.end),\n      str.slice(matchPos[i].right.start, matchPos[i].right.end)\n    ]);\n  }\n  return results;\n};\n\n/**\n *\n * @param {string} str\n * @param {string|function} replacement\n * @param {string} left\n * @param {string} right\n * @param {string} flags\n * @returns {string}\n */\nshowdown.helper.replaceRecursiveRegExp = function (str, replacement, left, right, flags) {\n  'use strict';\n\n  if (!showdown.helper.isFunction(replacement)) {\n    var repStr = replacement;\n    replacement = function () {\n      return repStr;\n    };\n  }\n\n  var matchPos = rgxFindMatchPos(str, left, right, flags),\n      finalStr = str,\n      lng = matchPos.length;\n\n  if (lng > 0) {\n    var bits = [];\n    if (matchPos[0].wholeMatch.start !== 0) {\n      bits.push(str.slice(0, matchPos[0].wholeMatch.start));\n    }\n    for (var i = 0; i < lng; ++i) {\n      bits.push(\n        replacement(\n          str.slice(matchPos[i].wholeMatch.start, matchPos[i].wholeMatch.end),\n          str.slice(matchPos[i].match.start, matchPos[i].match.end),\n          str.slice(matchPos[i].left.start, matchPos[i].left.end),\n          str.slice(matchPos[i].right.start, matchPos[i].right.end)\n        )\n      );\n      if (i < lng - 1) {\n        bits.push(str.slice(matchPos[i].wholeMatch.end, matchPos[i + 1].wholeMatch.start));\n      }\n    }\n    if (matchPos[lng - 1].wholeMatch.end < str.length) {\n      bits.push(str.slice(matchPos[lng - 1].wholeMatch.end));\n    }\n    finalStr = bits.join('');\n  }\n  return finalStr;\n};\n\n/**\n * Obfuscate an e-mail address through the use of Character Entities,\n * transforming ASCII characters into their equivalent decimal or hex entities.\n *\n * Since it has a random component, subsequent calls to this function produce different results\n *\n * @param {string} mail\n * @returns {string}\n */\nshowdown.helper.encodeEmailAddress = function (mail) {\n  'use strict';\n  var encode = [\n    function (ch) {\n      return '&#' + ch.charCodeAt(0) + ';';\n    },\n    function (ch) {\n      return '&#x' + ch.charCodeAt(0).toString(16) + ';';\n    },\n    function (ch) {\n      return ch;\n    }\n  ];\n\n  mail = mail.replace(/./g, function (ch) {\n    if (ch === '@') {\n      // this *must* be encoded. I insist.\n      ch = encode[Math.floor(Math.random() * 2)](ch);\n    } else {\n      var r = Math.random();\n      // roughly 10% raw, 45% hex, 45% dec\n      ch = (\n        r > 0.9 ? encode[2](ch) : r > 0.45 ? encode[1](ch) : encode[0](ch)\n      );\n    }\n    return ch;\n  });\n\n  return mail;\n};\n\n/**\n * POLYFILLS\n */\n// use this instead of builtin is undefined for IE8 compatibility\nif (typeof(console) === 'undefined') {\n  console = {\n    warn: function (msg) {\n      'use strict';\n      alert(msg);\n    },\n    log: function (msg) {\n      'use strict';\n      alert(msg);\n    },\n    error: function (msg) {\n      'use strict';\n      throw msg;\n    }\n  };\n}\n\n/**\n * Common regexes.\n * We declare some common regexes to improve performance\n */\nshowdown.helper.regexes = {\n  asteriskAndDash: /([*_])/g\n};\n\r\n/**\n * Created by Estevao on 31-05-2015.\n */\n\n/**\n * Showdown Converter class\n * @class\n * @param {object} [converterOptions]\n * @returns {Converter}\n */\nshowdown.Converter = function (converterOptions) {\n  'use strict';\n\n  var\n      /**\n       * Options used by this converter\n       * @private\n       * @type {{}}\n       */\n      options = {},\n\n      /**\n       * Language extensions used by this converter\n       * @private\n       * @type {Array}\n       */\n      langExtensions = [],\n\n      /**\n       * Output modifiers extensions used by this converter\n       * @private\n       * @type {Array}\n       */\n      outputModifiers = [],\n\n      /**\n       * Event listeners\n       * @private\n       * @type {{}}\n       */\n      listeners = {},\n\n      /**\n       * The flavor set in this converter\n       */\n      setConvFlavor = setFlavor;\n\n  _constructor();\n\n  /**\n   * Converter constructor\n   * @private\n   */\n  function _constructor () {\n    converterOptions = converterOptions || {};\n\n    for (var gOpt in globalOptions) {\n      if (globalOptions.hasOwnProperty(gOpt)) {\n        options[gOpt] = globalOptions[gOpt];\n      }\n    }\n\n    // Merge options\n    if (typeof converterOptions === 'object') {\n      for (var opt in converterOptions) {\n        if (converterOptions.hasOwnProperty(opt)) {\n          options[opt] = converterOptions[opt];\n        }\n      }\n    } else {\n      throw Error('Converter expects the passed parameter to be an object, but ' + typeof converterOptions +\n      ' was passed instead.');\n    }\n\n    if (options.extensions) {\n      showdown.helper.forEach(options.extensions, _parseExtension);\n    }\n  }\n\n  /**\n   * Parse extension\n   * @param {*} ext\n   * @param {string} [name='']\n   * @private\n   */\n  function _parseExtension (ext, name) {\n\n    name = name || null;\n    // If it's a string, the extension was previously loaded\n    if (showdown.helper.isString(ext)) {\n      ext = showdown.helper.stdExtName(ext);\n      name = ext;\n\n      // LEGACY_SUPPORT CODE\n      if (showdown.extensions[ext]) {\n        console.warn('DEPRECATION WARNING: ' + ext + ' is an old extension that uses a deprecated loading method.' +\n          'Please inform the developer that the extension should be updated!');\n        legacyExtensionLoading(showdown.extensions[ext], ext);\n        return;\n      // END LEGACY SUPPORT CODE\n\n      } else if (!showdown.helper.isUndefined(extensions[ext])) {\n        ext = extensions[ext];\n\n      } else {\n        throw Error('Extension \"' + ext + '\" could not be loaded. It was either not found or is not a valid extension.');\n      }\n    }\n\n    if (typeof ext === 'function') {\n      ext = ext();\n    }\n\n    if (!showdown.helper.isArray(ext)) {\n      ext = [ext];\n    }\n\n    var validExt = validate(ext, name);\n    if (!validExt.valid) {\n      throw Error(validExt.error);\n    }\n\n    for (var i = 0; i < ext.length; ++i) {\n      switch (ext[i].type) {\n\n        case 'lang':\n          langExtensions.push(ext[i]);\n          break;\n\n        case 'output':\n          outputModifiers.push(ext[i]);\n          break;\n      }\n      if (ext[i].hasOwnProperty('listeners')) {\n        for (var ln in ext[i].listeners) {\n          if (ext[i].listeners.hasOwnProperty(ln)) {\n            listen(ln, ext[i].listeners[ln]);\n          }\n        }\n      }\n    }\n\n  }\n\n  /**\n   * LEGACY_SUPPORT\n   * @param {*} ext\n   * @param {string} name\n   */\n  function legacyExtensionLoading (ext, name) {\n    if (typeof ext === 'function') {\n      ext = ext(new showdown.Converter());\n    }\n    if (!showdown.helper.isArray(ext)) {\n      ext = [ext];\n    }\n    var valid = validate(ext, name);\n\n    if (!valid.valid) {\n      throw Error(valid.error);\n    }\n\n    for (var i = 0; i < ext.length; ++i) {\n      switch (ext[i].type) {\n        case 'lang':\n          langExtensions.push(ext[i]);\n          break;\n        case 'output':\n          outputModifiers.push(ext[i]);\n          break;\n        default:// should never reach here\n          throw Error('Extension loader error: Type unrecognized!!!');\n      }\n    }\n  }\n\n  /**\n   * Listen to an event\n   * @param {string} name\n   * @param {function} callback\n   */\n  function listen (name, callback) {\n    if (!showdown.helper.isString(name)) {\n      throw Error('Invalid argument in converter.listen() method: name must be a string, but ' + typeof name + ' given');\n    }\n\n    if (typeof callback !== 'function') {\n      throw Error('Invalid argument in converter.listen() method: callback must be a function, but ' + typeof callback + ' given');\n    }\n\n    if (!listeners.hasOwnProperty(name)) {\n      listeners[name] = [];\n    }\n    listeners[name].push(callback);\n  }\n\n  function rTrimInputText (text) {\n    var rsp = text.match(/^\\s*/)[0].length,\n        rgx = new RegExp('^\\\\s{0,' + rsp + '}', 'gm');\n    return text.replace(rgx, '');\n  }\n\n  /**\n   * Dispatch an event\n   * @private\n   * @param {string} evtName Event name\n   * @param {string} text Text\n   * @param {{}} options Converter Options\n   * @param {{}} globals\n   * @returns {string}\n   */\n  this._dispatch = function dispatch (evtName, text, options, globals) {\n    if (listeners.hasOwnProperty(evtName)) {\n      for (var ei = 0; ei < listeners[evtName].length; ++ei) {\n        var nText = listeners[evtName][ei](evtName, text, this, options, globals);\n        if (nText && typeof nText !== 'undefined') {\n          text = nText;\n        }\n      }\n    }\n    return text;\n  };\n\n  /**\n   * Listen to an event\n   * @param {string} name\n   * @param {function} callback\n   * @returns {showdown.Converter}\n   */\n  this.listen = function (name, callback) {\n    listen(name, callback);\n    return this;\n  };\n\n  /**\n   * Converts a markdown string into HTML\n   * @param {string} text\n   * @returns {*}\n   */\n  this.makeHtml = function (text) {\n    //check if text is not falsy\n    if (!text) {\n      return text;\n    }\n\n    var globals = {\n      gHtmlBlocks:     [],\n      gHtmlMdBlocks:   [],\n      gHtmlSpans:      [],\n      gUrls:           {},\n      gTitles:         {},\n      gDimensions:     {},\n      gListLevel:      0,\n      hashLinkCounts:  {},\n      langExtensions:  langExtensions,\n      outputModifiers: outputModifiers,\n      converter:       this,\n      ghCodeBlocks:    []\n    };\n\n    // This lets us use ¨ trema as an escape char to avoid md5 hashes\n    // The choice of character is arbitrary; anything that isn't\n    // magic in Markdown will work.\n    text = text.replace(/¨/g, '¨T');\n\n    // Replace $ with ¨D\n    // RegExp interprets $ as a special character\n    // when it's in a replacement string\n    text = text.replace(/\\$/g, '¨D');\n\n    // Standardize line endings\n    text = text.replace(/\\r\\n/g, '\\n'); // DOS to Unix\n    text = text.replace(/\\r/g, '\\n'); // Mac to Unix\n\n    // Stardardize line spaces (nbsp causes trouble in older browsers and some regex flavors)\n    text = text.replace(/\\u00A0/g, ' ');\n\n    if (options.smartIndentationFix) {\n      text = rTrimInputText(text);\n    }\n\n    // Make sure text begins and ends with a couple of newlines:\n    text = '\\n\\n' + text + '\\n\\n';\n\n    // detab\n    text = showdown.subParser('detab')(text, options, globals);\n\n    /**\n     * Strip any lines consisting only of spaces and tabs.\n     * This makes subsequent regexs easier to write, because we can\n     * match consecutive blank lines with /\\n+/ instead of something\n     * contorted like /[ \\t]*\\n+/\n     */\n    text = text.replace(/^[ \\t]+$/mg, '');\n\n    //run languageExtensions\n    showdown.helper.forEach(langExtensions, function (ext) {\n      text = showdown.subParser('runExtension')(ext, text, options, globals);\n    });\n\n    // run the sub parsers\n    text = showdown.subParser('hashPreCodeTags')(text, options, globals);\n    text = showdown.subParser('githubCodeBlocks')(text, options, globals);\n    text = showdown.subParser('hashHTMLBlocks')(text, options, globals);\n    text = showdown.subParser('hashCodeTags')(text, options, globals);\n    text = showdown.subParser('stripLinkDefinitions')(text, options, globals);\n    text = showdown.subParser('blockGamut')(text, options, globals);\n    text = showdown.subParser('unhashHTMLSpans')(text, options, globals);\n    text = showdown.subParser('unescapeSpecialChars')(text, options, globals);\n\n    // attacklab: Restore dollar signs\n    text = text.replace(/¨D/g, '$$');\n\n    // attacklab: Restore tremas\n    text = text.replace(/¨T/g, '¨');\n\n    // Run output modifiers\n    showdown.helper.forEach(outputModifiers, function (ext) {\n      text = showdown.subParser('runExtension')(ext, text, options, globals);\n    });\n\n    return text;\n  };\n\n  /**\n   * Set an option of this Converter instance\n   * @param {string} key\n   * @param {*} value\n   */\n  this.setOption = function (key, value) {\n    options[key] = value;\n  };\n\n  /**\n   * Get the option of this Converter instance\n   * @param {string} key\n   * @returns {*}\n   */\n  this.getOption = function (key) {\n    return options[key];\n  };\n\n  /**\n   * Get the options of this Converter instance\n   * @returns {{}}\n   */\n  this.getOptions = function () {\n    return options;\n  };\n\n  /**\n   * Add extension to THIS converter\n   * @param {{}} extension\n   * @param {string} [name=null]\n   */\n  this.addExtension = function (extension, name) {\n    name = name || null;\n    _parseExtension(extension, name);\n  };\n\n  /**\n   * Use a global registered extension with THIS converter\n   * @param {string} extensionName Name of the previously registered extension\n   */\n  this.useExtension = function (extensionName) {\n    _parseExtension(extensionName);\n  };\n\n  /**\n   * Set the flavor THIS converter should use\n   * @param {string} name\n   */\n  this.setFlavor = function (name) {\n    if (!flavor.hasOwnProperty(name)) {\n      throw Error(name + ' flavor was not found');\n    }\n    var preset = flavor[name];\n    setConvFlavor = name;\n    for (var option in preset) {\n      if (preset.hasOwnProperty(option)) {\n        options[option] = preset[option];\n      }\n    }\n  };\n\n  /**\n   * Get the currently set flavor of this converter\n   * @returns {string}\n   */\n  this.getFlavor = function () {\n    return setConvFlavor;\n  };\n\n  /**\n   * Remove an extension from THIS converter.\n   * Note: This is a costly operation. It's better to initialize a new converter\n   * and specify the extensions you wish to use\n   * @param {Array} extension\n   */\n  this.removeExtension = function (extension) {\n    if (!showdown.helper.isArray(extension)) {\n      extension = [extension];\n    }\n    for (var a = 0; a < extension.length; ++a) {\n      var ext = extension[a];\n      for (var i = 0; i < langExtensions.length; ++i) {\n        if (langExtensions[i] === ext) {\n          langExtensions[i].splice(i, 1);\n        }\n      }\n      for (var ii = 0; ii < outputModifiers.length; ++i) {\n        if (outputModifiers[ii] === ext) {\n          outputModifiers[ii].splice(i, 1);\n        }\n      }\n    }\n  };\n\n  /**\n   * Get all extension of THIS converter\n   * @returns {{language: Array, output: Array}}\n   */\n  this.getAllExtensions = function () {\n    return {\n      language: langExtensions,\n      output: outputModifiers\n    };\n  };\n};\n\r\n/**\n * Turn Markdown link shortcuts into XHTML <a> tags.\n */\nshowdown.subParser('anchors', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('anchors.before', text, options, globals);\n\n  var writeAnchorTag = function (wholeMatch, m1, m2, m3, m4, m5, m6, m7) {\n    if (showdown.helper.isUndefined(m7)) {\n      m7 = '';\n    }\n    wholeMatch = m1;\n    var linkText = m2,\n        linkId = m3.toLowerCase(),\n        url = m4,\n        title = m7;\n\n    if (!url) {\n      if (!linkId) {\n        // lower-case and turn embedded newlines into spaces\n        linkId = linkText.toLowerCase().replace(/ ?\\n/g, ' ');\n      }\n      url = '#' + linkId;\n\n      if (!showdown.helper.isUndefined(globals.gUrls[linkId])) {\n        url = globals.gUrls[linkId];\n        if (!showdown.helper.isUndefined(globals.gTitles[linkId])) {\n          title = globals.gTitles[linkId];\n        }\n      } else {\n        if (wholeMatch.search(/\\(\\s*\\)$/m) > -1) {\n          // Special case for explicit empty url\n          url = '';\n        } else {\n          return wholeMatch;\n        }\n      }\n    }\n\n    //url = showdown.helper.escapeCharacters(url, '*_', false); // replaced line to improve performance\n    url = url.replace(showdown.helper.regexes.asteriskAndDash, showdown.helper.escapeCharactersCallback);\n\n    var result = '<a href=\"' + url + '\"';\n\n    if (title !== '' && title !== null) {\n      title = title.replace(/\"/g, '&quot;');\n      //title = showdown.helper.escapeCharacters(title, '*_', false); // replaced line to improve performance\n      title = title.replace(showdown.helper.regexes.asteriskAndDash, showdown.helper.escapeCharactersCallback);\n      result += ' title=\"' + title + '\"';\n    }\n\n    result += '>' + linkText + '</a>';\n\n    return result;\n  };\n\n  // First, handle reference-style links: [link text] [id]\n  text = text.replace(/(\\[((?:\\[[^\\]]*]|[^\\[\\]])*)][ ]?(?:\\n[ ]*)?\\[(.*?)])()()()()/g, writeAnchorTag);\n\n  // Next, inline-style links: [link text](url \"optional title\")\n  text = text.replace(/(\\[((?:\\[[^\\]]*]|[^\\[\\]])*)]\\([ \\t]*()<?(.*?(?:\\(.*?\\).*?)?)>?[ \\t]*((['\"])(.*?)\\6[ \\t]*)?\\))/g,\n                      writeAnchorTag);\n\n  // handle reference-style shortcuts: [link text]\n  // These must come last in case you've also got [link test][1]\n  // or [link test](/foo)\n  text = text.replace(/(\\[([^\\[\\]]+)])()()()()()/g, writeAnchorTag);\n\n  // Lastly handle GithubMentions if option is enabled\n  if (options.ghMentions) {\n    text = text.replace(/(^|\\s)(\\\\)?(@([a-z\\d\\-]+))(?=[.!?;,[\\]()]|\\s|$)/gmi, function (wm, st, escape, mentions, username) {\n      if (escape === '\\\\') {\n        return st + mentions;\n      }\n\n      //check if options.ghMentionsLink is a string\n      if (!showdown.helper.isString(options.ghMentionsLink)) {\n        throw new Error('ghMentionsLink option must be a string');\n      }\n      var lnk = options.ghMentionsLink.replace(/\\{u}/g, username);\n      return st + '<a href=\"' + lnk + '\">' + mentions + '</a>';\n    });\n  }\n\n  text = globals.converter._dispatch('anchors.after', text, options, globals);\n  return text;\n});\n\r\nshowdown.subParser('autoLinks', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('autoLinks.before', text, options, globals);\n\n  var simpleURLRegex  = /\\b(((https?|ftp|dict):\\/\\/|www\\.)[^'\">\\s]+\\.[^'\">\\s]+)()(?=\\s|$)(?![\"<>])/gi,\n      simpleURLRegex2 = /\\b(((https?|ftp|dict):\\/\\/|www\\.)[^'\">\\s]+\\.[^'\">\\s]+?)([.!?()]?)(?=\\s|$)(?![\"<>])/gi,\n      delimUrlRegex   = /<(((https?|ftp|dict):\\/\\/|www\\.)[^'\">\\s]+)>/gi,\n      simpleMailRegex = /(^|\\s)(?:mailto:)?([A-Za-z0-9!#$%&'*+-/=?^_`{|}~.]+@[-a-z0-9]+(\\.[-a-z0-9]+)*\\.[a-z]+)(?=$|\\s)/gmi,\n      delimMailRegex  = /<()(?:mailto:)?([-.\\w]+@[-a-z0-9]+(\\.[-a-z0-9]+)*\\.[a-z]+)>/gi;\n\n  text = text.replace(delimUrlRegex, replaceLink);\n  text = text.replace(delimMailRegex, replaceMail);\n  // simpleURLRegex  = /\\b(((https?|ftp|dict):\\/\\/|www\\.)[-.+~:?#@!$&'()*,;=[\\]\\w]+)\\b/gi,\n  // Email addresses: <address@domain.foo>\n\n  if (options.simplifiedAutoLink) {\n    if (options.excludeTrailingPunctuationFromURLs) {\n      text = text.replace(simpleURLRegex2, replaceLink);\n    } else {\n      text = text.replace(simpleURLRegex, replaceLink);\n    }\n    text = text.replace(simpleMailRegex, replaceMail);\n  }\n\n  function replaceLink (wm, link, m2, m3, trailingPunctuation) {\n    var lnkTxt = link,\n        append = '';\n    if (/^www\\./i.test(link)) {\n      link = link.replace(/^www\\./i, 'http://www.');\n    }\n    if (options.excludeTrailingPunctuationFromURLs && trailingPunctuation) {\n      append = trailingPunctuation;\n    }\n    return '<a href=\"' + link + '\">' + lnkTxt + '</a>' + append;\n  }\n\n  function replaceMail (wholeMatch, b, mail) {\n    var href = 'mailto:';\n    b = b || '';\n    mail = showdown.subParser('unescapeSpecialChars')(mail, options, globals);\n    if (options.encodeEmails) {\n      href = showdown.helper.encodeEmailAddress(href + mail);\n      mail = showdown.helper.encodeEmailAddress(mail);\n    } else {\n      href = href + mail;\n    }\n    return b + '<a href=\"' + href + '\">' + mail + '</a>';\n  }\n\n  text = globals.converter._dispatch('autoLinks.after', text, options, globals);\n\n  return text;\n});\n\r\n/**\n * These are all the transformations that form block-level\n * tags like paragraphs, headers, and list items.\n */\nshowdown.subParser('blockGamut', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('blockGamut.before', text, options, globals);\n\n  // we parse blockquotes first so that we can have headings and hrs\n  // inside blockquotes\n  text = showdown.subParser('blockQuotes')(text, options, globals);\n  text = showdown.subParser('headers')(text, options, globals);\n\n  // Do Horizontal Rules:\n  text = showdown.subParser('horizontalRule')(text, options, globals);\n\n  text = showdown.subParser('lists')(text, options, globals);\n  text = showdown.subParser('codeBlocks')(text, options, globals);\n  text = showdown.subParser('tables')(text, options, globals);\n\n  // We already ran _HashHTMLBlocks() before, in Markdown(), but that\n  // was to escape raw HTML in the original Markdown source. This time,\n  // we're escaping the markup we've just created, so that we don't wrap\n  // <p> tags around block-level tags.\n  text = showdown.subParser('hashHTMLBlocks')(text, options, globals);\n  text = showdown.subParser('paragraphs')(text, options, globals);\n\n  text = globals.converter._dispatch('blockGamut.after', text, options, globals);\n\n  return text;\n});\n\r\nshowdown.subParser('blockQuotes', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('blockQuotes.before', text, options, globals);\n\n  text = text.replace(/((^ {0,3}>[ \\t]?.+\\n(.+\\n)*\\n*)+)/gm, function (wholeMatch, m1) {\n    var bq = m1;\n\n    // attacklab: hack around Konqueror 3.5.4 bug:\n    // \"----------bug\".replace(/^-/g,\"\") == \"bug\"\n    bq = bq.replace(/^[ \\t]*>[ \\t]?/gm, '¨0'); // trim one level of quoting\n\n    // attacklab: clean up hack\n    bq = bq.replace(/¨0/g, '');\n\n    bq = bq.replace(/^[ \\t]+$/gm, ''); // trim whitespace-only lines\n    bq = showdown.subParser('githubCodeBlocks')(bq, options, globals);\n    bq = showdown.subParser('blockGamut')(bq, options, globals); // recurse\n\n    bq = bq.replace(/(^|\\n)/g, '$1  ');\n    // These leading spaces screw with <pre> content, so we need to fix that:\n    bq = bq.replace(/(\\s*<pre>[^\\r]+?<\\/pre>)/gm, function (wholeMatch, m1) {\n      var pre = m1;\n      // attacklab: hack around Konqueror 3.5.4 bug:\n      pre = pre.replace(/^  /mg, '¨0');\n      pre = pre.replace(/¨0/g, '');\n      return pre;\n    });\n\n    return showdown.subParser('hashBlock')('<blockquote>\\n' + bq + '\\n</blockquote>', options, globals);\n  });\n\n  text = globals.converter._dispatch('blockQuotes.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Process Markdown `<pre><code>` blocks.\n */\nshowdown.subParser('codeBlocks', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('codeBlocks.before', text, options, globals);\n\n  // sentinel workarounds for lack of \\A and \\Z, safari\\khtml bug\n  text += '¨0';\n\n  var pattern = /(?:\\n\\n|^)((?:(?:[ ]{4}|\\t).*\\n+)+)(\\n*[ ]{0,3}[^ \\t\\n]|(?=¨0))/g;\n  text = text.replace(pattern, function (wholeMatch, m1, m2) {\n    var codeblock = m1,\n        nextChar = m2,\n        end = '\\n';\n\n    codeblock = showdown.subParser('outdent')(codeblock, options, globals);\n    codeblock = showdown.subParser('encodeCode')(codeblock, options, globals);\n    codeblock = showdown.subParser('detab')(codeblock, options, globals);\n    codeblock = codeblock.replace(/^\\n+/g, ''); // trim leading newlines\n    codeblock = codeblock.replace(/\\n+$/g, ''); // trim trailing newlines\n\n    if (options.omitExtraWLInCodeBlocks) {\n      end = '';\n    }\n\n    codeblock = '<pre><code>' + codeblock + end + '</code></pre>';\n\n    return showdown.subParser('hashBlock')(codeblock, options, globals) + nextChar;\n  });\n\n  // strip sentinel\n  text = text.replace(/¨0/, '');\n\n  text = globals.converter._dispatch('codeBlocks.after', text, options, globals);\n  return text;\n});\n\r\n/**\n *\n *   *  Backtick quotes are used for <code></code> spans.\n *\n *   *  You can use multiple backticks as the delimiters if you want to\n *     include literal backticks in the code span. So, this input:\n *\n *         Just type ``foo `bar` baz`` at the prompt.\n *\n *       Will translate to:\n *\n *         <p>Just type <code>foo `bar` baz</code> at the prompt.</p>\n *\n *    There's no arbitrary limit to the number of backticks you\n *    can use as delimters. If you need three consecutive backticks\n *    in your code, use four for delimiters, etc.\n *\n *  *  You can use spaces to get literal backticks at the edges:\n *\n *         ... type `` `bar` `` ...\n *\n *       Turns to:\n *\n *         ... type <code>`bar`</code> ...\n */\nshowdown.subParser('codeSpans', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('codeSpans.before', text, options, globals);\n\n  if (typeof(text) === 'undefined') {\n    text = '';\n  }\n  text = text.replace(/(^|[^\\\\])(`+)([^\\r]*?[^`])\\2(?!`)/gm,\n    function (wholeMatch, m1, m2, m3) {\n      var c = m3;\n      c = c.replace(/^([ \\t]*)/g, '');\t// leading whitespace\n      c = c.replace(/[ \\t]*$/g, '');\t// trailing whitespace\n      c = showdown.subParser('encodeCode')(c, options, globals);\n      return m1 + '<code>' + c + '</code>';\n    }\n  );\n\n  text = globals.converter._dispatch('codeSpans.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Convert all tabs to spaces\n */\nshowdown.subParser('detab', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('detab.before', text, options, globals);\n\n  // expand first n-1 tabs\n  text = text.replace(/\\t(?=\\t)/g, '    '); // g_tab_width\n\n  // replace the nth with two sentinels\n  text = text.replace(/\\t/g, '¨A¨B');\n\n  // use the sentinel to anchor our regex so it doesn't explode\n  text = text.replace(/¨B(.+?)¨A/g, function (wholeMatch, m1) {\n    var leadingText = m1,\n        numSpaces = 4 - leadingText.length % 4;  // g_tab_width\n\n    // there *must* be a better way to do this:\n    for (var i = 0; i < numSpaces; i++) {\n      leadingText += ' ';\n    }\n\n    return leadingText;\n  });\n\n  // clean up sentinels\n  text = text.replace(/¨A/g, '    ');  // g_tab_width\n  text = text.replace(/¨B/g, '');\n\n  text = globals.converter._dispatch('detab.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Smart processing for ampersands and angle brackets that need to be encoded.\n */\nshowdown.subParser('encodeAmpsAndAngles', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('encodeAmpsAndAngles.before', text, options, globals);\n\n  // Ampersand-encoding based entirely on Nat Irons's Amputator MT plugin:\n  // http://bumppo.net/projects/amputator/\n  text = text.replace(/&(?!#?[xX]?(?:[0-9a-fA-F]+|\\w+);)/g, '&amp;');\n\n  // Encode naked <'s\n  text = text.replace(/<(?![a-z\\/?$!])/gi, '&lt;');\n\n  // Encode <\n  text = text.replace(/</g, '&lt;');\n\n  // Encode >\n  text = text.replace(/>/g, '&gt;');\n\n  text = globals.converter._dispatch('encodeAmpsAndAngles.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Returns the string, with after processing the following backslash escape sequences.\n *\n * attacklab: The polite way to do this is with the new escapeCharacters() function:\n *\n *    text = escapeCharacters(text,\"\\\\\",true);\n *    text = escapeCharacters(text,\"`*_{}[]()>#+-.!\",true);\n *\n * ...but we're sidestepping its use of the (slow) RegExp constructor\n * as an optimization for Firefox.  This function gets called a LOT.\n */\nshowdown.subParser('encodeBackslashEscapes', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('encodeBackslashEscapes.before', text, options, globals);\n\n  text = text.replace(/\\\\(\\\\)/g, showdown.helper.escapeCharactersCallback);\n  text = text.replace(/\\\\([`*_{}\\[\\]()>#+.!~=-])/g, showdown.helper.escapeCharactersCallback);\n\n  text = globals.converter._dispatch('encodeBackslashEscapes.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Encode/escape certain characters inside Markdown code runs.\n * The point is that in code, these characters are literals,\n * and lose their special Markdown meanings.\n */\nshowdown.subParser('encodeCode', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('encodeCode.before', text, options, globals);\n\n  // Encode all ampersands; HTML entities are not\n  // entities within a Markdown code span.\n  text = text\n    .replace(/&/g, '&amp;')\n  // Do the angle bracket song and dance:\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n  // Now, escape characters that are magic in Markdown:\n    .replace(/([*_{}\\[\\]\\\\=~-])/g, showdown.helper.escapeCharactersCallback);\n\n  text = globals.converter._dispatch('encodeCode.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Within tags -- meaning between < and > -- encode [\\ ` * _ ~ =] so they\n * don't conflict with their use in Markdown for code, italics and strong.\n */\nshowdown.subParser('escapeSpecialCharsWithinTagAttributes', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('escapeSpecialCharsWithinTagAttributes.before', text, options, globals);\n\n  // Build a regex to find HTML tags and comments.  See Friedl's\n  // \"Mastering Regular Expressions\", 2nd Ed., pp. 200-201.\n  var regex = /(<[a-z\\/!$](\"[^\"]*\"|'[^']*'|[^'\">])*>|<!(--.*?--\\s*)+>)/gi;\n\n  text = text.replace(regex, function (wholeMatch) {\n    return wholeMatch\n      .replace(/(.)<\\/?code>(?=.)/g, '$1`')\n      .replace(/([\\\\`*_~=])/g, showdown.helper.escapeCharactersCallback);\n  });\n\n  text = globals.converter._dispatch('escapeSpecialCharsWithinTagAttributes.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Handle github codeblocks prior to running HashHTML so that\n * HTML contained within the codeblock gets escaped properly\n * Example:\n * ```ruby\n *     def hello_world(x)\n *       puts \"Hello, #{x}\"\n *     end\n * ```\n */\nshowdown.subParser('githubCodeBlocks', function (text, options, globals) {\n  'use strict';\n\n  // early exit if option is not enabled\n  if (!options.ghCodeBlocks) {\n    return text;\n  }\n\n  text = globals.converter._dispatch('githubCodeBlocks.before', text, options, globals);\n\n  text += '¨0';\n\n  text = text.replace(/(?:^|\\n)```(.*)\\n([\\s\\S]*?)\\n```/g, function (wholeMatch, language, codeblock) {\n    var end = (options.omitExtraWLInCodeBlocks) ? '' : '\\n';\n\n    // First parse the github code block\n    codeblock = showdown.subParser('encodeCode')(codeblock, options, globals);\n    codeblock = showdown.subParser('detab')(codeblock, options, globals);\n    codeblock = codeblock.replace(/^\\n+/g, ''); // trim leading newlines\n    codeblock = codeblock.replace(/\\n+$/g, ''); // trim trailing whitespace\n\n    codeblock = '<pre><code' + (language ? ' class=\"' + language + ' language-' + language + '\"' : '') + '>' + codeblock + end + '</code></pre>';\n\n    codeblock = showdown.subParser('hashBlock')(codeblock, options, globals);\n\n    // Since GHCodeblocks can be false positives, we need to\n    // store the primitive text and the parsed text in a global var,\n    // and then return a token\n    return '\\n\\n¨G' + (globals.ghCodeBlocks.push({text: wholeMatch, codeblock: codeblock}) - 1) + 'G\\n\\n';\n  });\n\n  // attacklab: strip sentinel\n  text = text.replace(/¨0/, '');\n\n  return globals.converter._dispatch('githubCodeBlocks.after', text, options, globals);\n});\n\r\nshowdown.subParser('hashBlock', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('hashBlock.before', text, options, globals);\n  text = text.replace(/(^\\n+|\\n+$)/g, '');\n  text = '\\n\\n¨K' + (globals.gHtmlBlocks.push(text) - 1) + 'K\\n\\n';\n  text = globals.converter._dispatch('hashBlock.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Hash and escape <code> elements that should not be parsed as markdown\n */\nshowdown.subParser('hashCodeTags', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('hashCodeTags.before', text, options, globals);\n\n  var repFunc = function (wholeMatch, match, left, right) {\n    var codeblock = left + showdown.subParser('encodeCode')(match, options, globals) + right;\n    return '¨C' + (globals.gHtmlSpans.push(codeblock) - 1) + 'C';\n  };\n\n  // Hash naked <code>\n  text = showdown.helper.replaceRecursiveRegExp(text, repFunc, '<code\\\\b[^>]*>', '</code>', 'gim');\n\n  text = globals.converter._dispatch('hashCodeTags.after', text, options, globals);\n  return text;\n});\n\r\nshowdown.subParser('hashElement', function (text, options, globals) {\n  'use strict';\n\n  return function (wholeMatch, m1) {\n    var blockText = m1;\n\n    // Undo double lines\n    blockText = blockText.replace(/\\n\\n/g, '\\n');\n    blockText = blockText.replace(/^\\n/, '');\n\n    // strip trailing blank lines\n    blockText = blockText.replace(/\\n+$/g, '');\n\n    // Replace the element text with a marker (\"¨KxK\" where x is its key)\n    blockText = '\\n\\n¨K' + (globals.gHtmlBlocks.push(blockText) - 1) + 'K\\n\\n';\n\n    return blockText;\n  };\n});\n\r\nshowdown.subParser('hashHTMLBlocks', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('hashHTMLBlocks.before', text, options, globals);\n\n  var blockTags = [\n        'pre',\n        'div',\n        'h1',\n        'h2',\n        'h3',\n        'h4',\n        'h5',\n        'h6',\n        'blockquote',\n        'table',\n        'dl',\n        'ol',\n        'ul',\n        'script',\n        'noscript',\n        'form',\n        'fieldset',\n        'iframe',\n        'math',\n        'style',\n        'section',\n        'header',\n        'footer',\n        'nav',\n        'article',\n        'aside',\n        'address',\n        'audio',\n        'canvas',\n        'figure',\n        'hgroup',\n        'output',\n        'video',\n        'p'\n      ],\n      repFunc = function (wholeMatch, match, left, right) {\n        var txt = wholeMatch;\n        // check if this html element is marked as markdown\n        // if so, it's contents should be parsed as markdown\n        if (left.search(/\\bmarkdown\\b/) !== -1) {\n          txt = left + globals.converter.makeHtml(match) + right;\n        }\n        return '\\n\\n¨K' + (globals.gHtmlBlocks.push(txt) - 1) + 'K\\n\\n';\n      };\n\n  for (var i = 0; i < blockTags.length; ++i) {\n    text = showdown.helper.replaceRecursiveRegExp(text, repFunc, '^ {0,3}<' + blockTags[i] + '\\\\b[^>]*>', '</' + blockTags[i] + '>', 'gim');\n  }\n\n  // HR SPECIAL CASE\n  text = text.replace(/(\\n {0,3}(<(hr)\\b([^<>])*?\\/?>)[ \\t]*(?=\\n{2,}))/g,\n    showdown.subParser('hashElement')(text, options, globals));\n\n  // Special case for standalone HTML comments\n  text = showdown.helper.replaceRecursiveRegExp(text, function (txt) {\n    return '\\n\\n¨K' + (globals.gHtmlBlocks.push(txt) - 1) + 'K\\n\\n';\n  }, '^ {0,3}<!--', '-->', 'gm');\n\n  // PHP and ASP-style processor instructions (<?...?> and <%...%>)\n  text = text.replace(/(?:\\n\\n)( {0,3}(?:<([?%])[^\\r]*?\\2>)[ \\t]*(?=\\n{2,}))/g,\n    showdown.subParser('hashElement')(text, options, globals));\n\n  text = globals.converter._dispatch('hashHTMLBlocks.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Hash span elements that should not be parsed as markdown\n */\nshowdown.subParser('hashHTMLSpans', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('hashHTMLSpans.before', text, options, globals);\n\n  function hashHTMLSpan (html) {\n    return '¨C' + (globals.gHtmlSpans.push(html) - 1) + 'C';\n  }\n\n  // Hash Self Closing tags\n  text = text.replace(/<[^>]+?\\/>/gi, function (wm) {\n    return hashHTMLSpan(wm);\n  });\n\n  // Hash tags without properties\n  text = text.replace(/<([^>]+?)>[\\s\\S]*?<\\/\\1>/g, function (wm) {\n    return hashHTMLSpan(wm);\n  });\n\n  // Hash tags with properties\n  text = text.replace(/<([^>]+?)\\s[^>]+?>[\\s\\S]*?<\\/\\1>/g, function (wm) {\n    return hashHTMLSpan(wm);\n  });\n\n  // Hash self closing tags without />\n  text = text.replace(/<[^>]+?>/gi, function (wm) {\n    return hashHTMLSpan(wm);\n  });\n\n  /*showdown.helper.matchRecursiveRegExp(text, '<code\\\\b[^>]*>', '</code>', 'gi');*/\n\n  text = globals.converter._dispatch('hashHTMLSpans.after', text, options, globals);\n  return text;\n});\n\n/**\n * Unhash HTML spans\n */\nshowdown.subParser('unhashHTMLSpans', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('unhashHTMLSpans.before', text, options, globals);\n\n  for (var i = 0; i < globals.gHtmlSpans.length; ++i) {\n    var repText = globals.gHtmlSpans[i],\n        // limiter to prevent infinite loop (assume 10 as limit for recurse)\n        limit = 0;\n\n    while (/¨C(\\d+)C/.test(repText)) {\n      var num = RegExp.$1;\n      repText = repText.replace('¨C' + num + 'C', globals.gHtmlSpans[num]);\n      if (limit === 10) {\n        break;\n      }\n      ++limit;\n    }\n    text = text.replace('¨C' + i + 'C', repText);\n  }\n\n  text = globals.converter._dispatch('unhashHTMLSpans.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Hash and escape <pre><code> elements that should not be parsed as markdown\n */\nshowdown.subParser('hashPreCodeTags', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('hashPreCodeTags.before', text, options, globals);\n\n  var repFunc = function (wholeMatch, match, left, right) {\n    // encode html entities\n    var codeblock = left + showdown.subParser('encodeCode')(match, options, globals) + right;\n    return '\\n\\n¨G' + (globals.ghCodeBlocks.push({text: wholeMatch, codeblock: codeblock}) - 1) + 'G\\n\\n';\n  };\n\n  // Hash <pre><code>\n  text = showdown.helper.replaceRecursiveRegExp(text, repFunc, '^ {0,3}<pre\\\\b[^>]*>\\\\s*<code\\\\b[^>]*>', '^ {0,3}</code>\\\\s*</pre>', 'gim');\n\n  text = globals.converter._dispatch('hashPreCodeTags.after', text, options, globals);\n  return text;\n});\n\r\nshowdown.subParser('headers', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('headers.before', text, options, globals);\n\n  var headerLevelStart = (isNaN(parseInt(options.headerLevelStart))) ? 1 : parseInt(options.headerLevelStart),\n      ghHeaderId = options.ghCompatibleHeaderId,\n\n  // Set text-style headers:\n  //\tHeader 1\n  //\t========\n  //\n  //\tHeader 2\n  //\t--------\n  //\n      setextRegexH1 = (options.smoothLivePreview) ? /^(.+)[ \\t]*\\n={2,}[ \\t]*\\n+/gm : /^(.+)[ \\t]*\\n=+[ \\t]*\\n+/gm,\n      setextRegexH2 = (options.smoothLivePreview) ? /^(.+)[ \\t]*\\n-{2,}[ \\t]*\\n+/gm : /^(.+)[ \\t]*\\n-+[ \\t]*\\n+/gm;\n\n  text = text.replace(setextRegexH1, function (wholeMatch, m1) {\n\n    var spanGamut = showdown.subParser('spanGamut')(m1, options, globals),\n        hID = (options.noHeaderId) ? '' : ' id=\"' + headerId(m1) + '\"',\n        hLevel = headerLevelStart,\n        hashBlock = '<h' + hLevel + hID + '>' + spanGamut + '</h' + hLevel + '>';\n    return showdown.subParser('hashBlock')(hashBlock, options, globals);\n  });\n\n  text = text.replace(setextRegexH2, function (matchFound, m1) {\n    var spanGamut = showdown.subParser('spanGamut')(m1, options, globals),\n        hID = (options.noHeaderId) ? '' : ' id=\"' + headerId(m1) + '\"',\n        hLevel = headerLevelStart + 1,\n        hashBlock = '<h' + hLevel + hID + '>' + spanGamut + '</h' + hLevel + '>';\n    return showdown.subParser('hashBlock')(hashBlock, options, globals);\n  });\n\n  // atx-style headers:\n  //  # Header 1\n  //  ## Header 2\n  //  ## Header 2 with closing hashes ##\n  //  ...\n  //  ###### Header 6\n  //\n  var atxStyle = (options.requireSpaceBeforeHeadingText) ? /^(#{1,6})[ \\t]+(.+?)[ \\t]*#*\\n+/gm : /^(#{1,6})[ \\t]*(.+?)[ \\t]*#*\\n+/gm;\n\n  text = text.replace(atxStyle, function (wholeMatch, m1, m2) {\n    var span = showdown.subParser('spanGamut')(m2, options, globals),\n        hID = (options.noHeaderId) ? '' : ' id=\"' + headerId(m2) + '\"',\n        hLevel = headerLevelStart - 1 + m1.length,\n        header = '<h' + hLevel + hID + '>' + span + '</h' + hLevel + '>';\n\n    return showdown.subParser('hashBlock')(header, options, globals);\n  });\n\n  function headerId (m) {\n    var title;\n    // Prefix id to prevent causing inadvertent pre-existing style matches.\n    if (showdown.helper.isString(options.prefixHeaderId)) {\n      title = options.prefixHeaderId + m;\n    } else if (options.prefixHeaderId === true) {\n      title = 'section ' + m;\n    } else {\n      title = m;\n    }\n\n    if (ghHeaderId) {\n      title = title\n        .replace(/ /g, '-')\n        // replace previously escaped chars (&, ¨ and $)\n        .replace(/&amp;/g, '')\n        .replace(/¨T/g, '')\n        .replace(/¨D/g, '')\n        // replace rest of the chars (&~$ are repeated as they might have been escaped)\n        // borrowed from github's redcarpet (some they should produce similar results)\n        .replace(/[&+$,\\/:;=?@\"#{}|^¨~\\[\\]`\\\\*)(%.!'<>]/g, '')\n        .toLowerCase();\n    } else {\n      title = title\n        .replace(/[^\\w]/g, '')\n        .toLowerCase();\n    }\n\n    if (globals.hashLinkCounts[title]) {\n      title = title + '-' + (globals.hashLinkCounts[title]++);\n    } else {\n      globals.hashLinkCounts[title] = 1;\n    }\n    return title;\n  }\n\n  text = globals.converter._dispatch('headers.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Turn Markdown link shortcuts into XHTML <a> tags.\n */\nshowdown.subParser('horizontalRule', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('horizontalRule.before', text, options, globals);\n\n  var key = showdown.subParser('hashBlock')('<hr />', options, globals);\n  text = text.replace(/^ {0,2}( ?-){3,}[ \\t]*$/gm, key);\n  text = text.replace(/^ {0,2}( ?\\*){3,}[ \\t]*$/gm, key);\n  text = text.replace(/^ {0,2}( ?_){3,}[ \\t]*$/gm, key);\n\n  text = globals.converter._dispatch('horizontalRule.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Turn Markdown image shortcuts into <img> tags.\n */\nshowdown.subParser('images', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('images.before', text, options, globals);\n\n  var inlineRegExp    = /!\\[(.*?)]\\s?\\([ \\t]*()<?(\\S+?)>?(?: =([*\\d]+[A-Za-z%]{0,4})x([*\\d]+[A-Za-z%]{0,4}))?[ \\t]*(?:(['\"])(.*?)\\6[ \\t]*)?\\)/g,\n      referenceRegExp = /!\\[([^\\]]*?)] ?(?:\\n *)?\\[(.*?)]()()()()()/g;\n\n  function writeImageTag (wholeMatch, altText, linkId, url, width, height, m5, title) {\n\n    var gUrls   = globals.gUrls,\n        gTitles = globals.gTitles,\n        gDims   = globals.gDimensions;\n\n    linkId = linkId.toLowerCase();\n\n    if (!title) {\n      title = '';\n    }\n\n    if (url === '' || url === null) {\n      if (linkId === '' || linkId === null) {\n        // lower-case and turn embedded newlines into spaces\n        linkId = altText.toLowerCase().replace(/ ?\\n/g, ' ');\n      }\n      url = '#' + linkId;\n\n      if (!showdown.helper.isUndefined(gUrls[linkId])) {\n        url = gUrls[linkId];\n        if (!showdown.helper.isUndefined(gTitles[linkId])) {\n          title = gTitles[linkId];\n        }\n        if (!showdown.helper.isUndefined(gDims[linkId])) {\n          width = gDims[linkId].width;\n          height = gDims[linkId].height;\n        }\n      } else {\n        return wholeMatch;\n      }\n    }\n\n    altText = altText\n      .replace(/\"/g, '&quot;')\n    //altText = showdown.helper.escapeCharacters(altText, '*_', false);\n      .replace(showdown.helper.regexes.asteriskAndDash, showdown.helper.escapeCharactersCallback);\n    //url = showdown.helper.escapeCharacters(url, '*_', false);\n    url = url.replace(showdown.helper.regexes.asteriskAndDash, showdown.helper.escapeCharactersCallback);\n    var result = '<img src=\"' + url + '\" alt=\"' + altText + '\"';\n\n    if (title) {\n      title = title\n        .replace(/\"/g, '&quot;')\n      //title = showdown.helper.escapeCharacters(title, '*_', false);\n        .replace(showdown.helper.regexes.asteriskAndDash, showdown.helper.escapeCharactersCallback);\n      result += ' title=\"' + title + '\"';\n    }\n\n    if (width && height) {\n      width  = (width === '*') ? 'auto' : width;\n      height = (height === '*') ? 'auto' : height;\n\n      result += ' width=\"' + width + '\"';\n      result += ' height=\"' + height + '\"';\n    }\n\n    result += ' />';\n\n    return result;\n  }\n\n  // First, handle reference-style labeled images: ![alt text][id]\n  text = text.replace(referenceRegExp, writeImageTag);\n\n  // Next, handle inline images:  ![alt text](url =<width>x<height> \"optional title\")\n  text = text.replace(inlineRegExp, writeImageTag);\n\n  text = globals.converter._dispatch('images.after', text, options, globals);\n  return text;\n});\n\r\nshowdown.subParser('italicsAndBold', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('italicsAndBold.before', text, options, globals);\n\n  // it's faster to have 3 separate regexes for each case than have just one\n  // because of backtracing, in some cases, it could lead to an exponential effect\n  // called \"catastrophic backtrace\". Ominous!\n\n  // Parse underscores\n  if (options.literalMidWordUnderscores) {\n    text = text.replace(/\\b___(\\S[\\s\\S]*)___\\b/g, '<strong><em>$1</em></strong>');\n    text = text.replace(/\\b__(\\S[\\s\\S]*)__\\b/g, '<strong>$1</strong>');\n    text = text.replace(/\\b_(\\S[\\s\\S]*?)_\\b/g, '<em>$1</em>');\n  } else {\n    text = text.replace(/___(\\S[\\s\\S]*?)___/g, function (wm, m) {\n      return (/\\S$/.test(m)) ? '<strong><em>' + m + '</em></strong>' : wm;\n    });\n    text = text.replace(/__(\\S[\\s\\S]*?)__/g, function (wm, m) {\n      return (/\\S$/.test(m)) ? '<strong>' + m + '</strong>' : wm;\n    });\n    text = text.replace(/_([^\\s_][\\s\\S]*?)_/g, function (wm, m) {\n      // !/^_[^_]/.test(m) - test if it doesn't start with __ (since it seems redundant, we removed it)\n      return (/\\S$/.test(m)) ? '<em>' + m + '</em>' : wm;\n    });\n  }\n\n  // Now parse asterisks\n  text = text.replace(/\\*\\*\\*(\\S[\\s\\S]*?)\\*\\*\\*/g, function (wm, m) {\n    return (/\\S$/.test(m)) ? '<strong><em>' + m + '</em></strong>' : wm;\n  });\n  text = text.replace(/\\*\\*(\\S[\\s\\S]*?)\\*\\*/g, function (wm, m) {\n    return (/\\S$/.test(m)) ? '<strong>' + m + '</strong>' : wm;\n  });\n  text = text.replace(/\\*([^\\s*][\\s\\S]*?)\\*/g, function (wm, m) {\n    // !/^\\*[^*]/.test(m) - test if it doesn't start with ** (since it seems redundant, we removed it)\n    return (/\\S$/.test(m)) ? '<em>' + m + '</em>' : wm;\n  });\n\n  text = globals.converter._dispatch('italicsAndBold.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Form HTML ordered (numbered) and unordered (bulleted) lists.\n */\nshowdown.subParser('lists', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('lists.before', text, options, globals);\n\n  /**\n   * Process the contents of a single ordered or unordered list, splitting it\n   * into individual list items.\n   * @param {string} listStr\n   * @param {boolean} trimTrailing\n   * @returns {string}\n   */\n  function processListItems (listStr, trimTrailing) {\n    // The $g_list_level global keeps track of when we're inside a list.\n    // Each time we enter a list, we increment it; when we leave a list,\n    // we decrement. If it's zero, we're not in a list anymore.\n    //\n    // We do this because when we're not inside a list, we want to treat\n    // something like this:\n    //\n    //    I recommend upgrading to version\n    //    8. Oops, now this line is treated\n    //    as a sub-list.\n    //\n    // As a single paragraph, despite the fact that the second line starts\n    // with a digit-period-space sequence.\n    //\n    // Whereas when we're inside a list (or sub-list), that line will be\n    // treated as the start of a sub-list. What a kludge, huh? This is\n    // an aspect of Markdown's syntax that's hard to parse perfectly\n    // without resorting to mind-reading. Perhaps the solution is to\n    // change the syntax rules such that sub-lists must start with a\n    // starting cardinal number; e.g. \"1.\" or \"a.\".\n    globals.gListLevel++;\n\n    // trim trailing blank lines:\n    listStr = listStr.replace(/\\n{2,}$/, '\\n');\n\n    // attacklab: add sentinel to emulate \\z\n    listStr += '¨0';\n\n    var rgx = /(\\n)?(^ {0,3})([*+-]|\\d+[.])[ \\t]+((\\[(x|X| )?])?[ \\t]*[^\\r]+?(\\n{1,2}))(?=\\n*(¨0| {0,3}([*+-]|\\d+[.])[ \\t]+))/gm,\n        isParagraphed = (/\\n[ \\t]*\\n(?!¨0)/.test(listStr));\n\n    // Since version 1.5, nesting sublists requires 4 spaces (or 1 tab) indentation,\n    // which is a syntax breaking change\n    // activating this option reverts to old behavior\n    if (options.disableForced4SpacesIndentedSublists) {\n      rgx = /(\\n)?(^ {0,3})([*+-]|\\d+[.])[ \\t]+((\\[(x|X| )?])?[ \\t]*[^\\r]+?(\\n{1,2}))(?=\\n*(¨0|\\2([*+-]|\\d+[.])[ \\t]+))/gm;\n    }\n\n    listStr = listStr.replace(rgx, function (wholeMatch, m1, m2, m3, m4, taskbtn, checked) {\n      checked = (checked && checked.trim() !== '');\n\n      var item = showdown.subParser('outdent')(m4, options, globals),\n          bulletStyle = '';\n\n      // Support for github tasklists\n      if (taskbtn && options.tasklists) {\n        bulletStyle = ' class=\"task-list-item\" style=\"list-style-type: none;\"';\n        item = item.replace(/^[ \\t]*\\[(x|X| )?]/m, function () {\n          var otp = '<input type=\"checkbox\" disabled style=\"margin: 0px 0.35em 0.25em -1.6em; vertical-align: middle;\"';\n          if (checked) {\n            otp += ' checked';\n          }\n          otp += '>';\n          return otp;\n        });\n      }\n\n      // ISSUE #312\n      // This input: - - - a\n      // causes trouble to the parser, since it interprets it as:\n      // <ul><li><li><li>a</li></li></li></ul>\n      // instead of:\n      // <ul><li>- - a</li></ul>\n      // So, to prevent it, we will put a marker (¨A)in the beginning of the line\n      // Kind of hackish/monkey patching, but seems more effective than overcomplicating the list parser\n      item = item.replace(/^([-*+]|\\d\\.)[ \\t]+[\\S\\n ]*/g, function (wm2) {\n        return '¨A' + wm2;\n      });\n\n      // m1 - Leading line or\n      // Has a double return (multi paragraph) or\n      // Has sublist\n      if (m1 || (item.search(/\\n{2,}/) > -1)) {\n        item = showdown.subParser('githubCodeBlocks')(item, options, globals);\n        item = showdown.subParser('blockGamut')(item, options, globals);\n      } else {\n        // Recursion for sub-lists:\n        item = showdown.subParser('lists')(item, options, globals);\n        item = item.replace(/\\n$/, ''); // chomp(item)\n        item = showdown.subParser('hashHTMLBlocks')(item, options, globals);\n        // Colapse double linebreaks\n        item = item.replace(/\\n\\n+/g, '\\n\\n');\n        // replace double linebreaks with a placeholder\n        item = item.replace(/\\n\\n/g, '¨B');\n        if (isParagraphed) {\n          item = showdown.subParser('paragraphs')(item, options, globals);\n        } else {\n          item = showdown.subParser('spanGamut')(item, options, globals);\n        }\n        item = item.replace(/¨B/g, '\\n\\n');\n      }\n\n      // now we need to remove the marker (¨A)\n      item = item.replace('¨A', '');\n      // we can finally wrap the line in list item tags\n      item =  '<li' + bulletStyle + '>' + item + '</li>\\n';\n\n      return item;\n    });\n\n    // attacklab: strip sentinel\n    listStr = listStr.replace(/¨0/g, '');\n\n    globals.gListLevel--;\n\n    if (trimTrailing) {\n      listStr = listStr.replace(/\\s+$/, '');\n    }\n\n    return listStr;\n  }\n\n  /**\n   * Check and parse consecutive lists (better fix for issue #142)\n   * @param {string} list\n   * @param {string} listType\n   * @param {boolean} trimTrailing\n   * @returns {string}\n   */\n  function parseConsecutiveLists (list, listType, trimTrailing) {\n    // check if we caught 2 or more consecutive lists by mistake\n    // we use the counterRgx, meaning if listType is UL we look for OL and vice versa\n    var olRgx = (options.disableForced4SpacesIndentedSublists) ? /^ ?\\d+\\.[ \\t]/gm : /^ {0,3}\\d+\\.[ \\t]/gm,\n        ulRgx = (options.disableForced4SpacesIndentedSublists) ? /^ ?[*+-][ \\t]/gm : /^ {0,3}[*+-][ \\t]/gm,\n        counterRxg = (listType === 'ul') ? olRgx : ulRgx,\n        result = '';\n\n    if (list.search(counterRxg) !== -1) {\n      (function parseCL (txt) {\n        var pos = txt.search(counterRxg);\n        if (pos !== -1) {\n          // slice\n          result += '\\n<' + listType + '>\\n' + processListItems(txt.slice(0, pos), !!trimTrailing) + '</' + listType + '>\\n';\n\n          // invert counterType and listType\n          listType = (listType === 'ul') ? 'ol' : 'ul';\n          counterRxg = (listType === 'ul') ? olRgx : ulRgx;\n\n          //recurse\n          parseCL(txt.slice(pos));\n        } else {\n          result += '\\n<' + listType + '>\\n' + processListItems(txt, !!trimTrailing) + '</' + listType + '>\\n';\n        }\n      })(list);\n    } else {\n      result = '\\n<' + listType + '>\\n' + processListItems(list, !!trimTrailing) + '</' + listType + '>\\n';\n    }\n\n    return result;\n  }\n\n  // add sentinel to hack around khtml/safari bug:\n  // http://bugs.webkit.org/show_bug.cgi?id=11231\n  text += '¨0';\n\n  if (globals.gListLevel) {\n    text = text.replace(/^(( {0,3}([*+-]|\\d+[.])[ \\t]+)[^\\r]+?(¨0|\\n{2,}(?=\\S)(?![ \\t]*(?:[*+-]|\\d+[.])[ \\t]+)))/gm,\n      function (wholeMatch, list, m2) {\n        var listType = (m2.search(/[*+-]/g) > -1) ? 'ul' : 'ol';\n        return parseConsecutiveLists(list, listType, true);\n      }\n    );\n  } else {\n    text = text.replace(/(\\n\\n|^\\n?)(( {0,3}([*+-]|\\d+[.])[ \\t]+)[^\\r]+?(¨0|\\n{2,}(?=\\S)(?![ \\t]*(?:[*+-]|\\d+[.])[ \\t]+)))/gm,\n      function (wholeMatch, m1, list, m3) {\n        var listType = (m3.search(/[*+-]/g) > -1) ? 'ul' : 'ol';\n        return parseConsecutiveLists(list, listType, false);\n      }\n    );\n  }\n\n  // strip sentinel\n  text = text.replace(/¨0/, '');\n  text = globals.converter._dispatch('lists.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Remove one level of line-leading tabs or spaces\n */\nshowdown.subParser('outdent', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('outdent.before', text, options, globals);\n\n  // attacklab: hack around Konqueror 3.5.4 bug:\n  // \"----------bug\".replace(/^-/g,\"\") == \"bug\"\n  text = text.replace(/^(\\t|[ ]{1,4})/gm, '¨0'); // attacklab: g_tab_width\n\n  // attacklab: clean up hack\n  text = text.replace(/¨0/g, '');\n\n  text = globals.converter._dispatch('outdent.after', text, options, globals);\n  return text;\n});\n\r\n/**\n *\n */\nshowdown.subParser('paragraphs', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('paragraphs.before', text, options, globals);\n  // Strip leading and trailing lines:\n  text = text.replace(/^\\n+/g, '');\n  text = text.replace(/\\n+$/g, '');\n\n  var grafs = text.split(/\\n{2,}/g),\n      grafsOut = [],\n      end = grafs.length; // Wrap <p> tags\n\n  for (var i = 0; i < end; i++) {\n    var str = grafs[i];\n    // if this is an HTML marker, copy it\n    if (str.search(/¨(K|G)(\\d+)\\1/g) >= 0) {\n      grafsOut.push(str);\n\n    // test for presence of characters to prevent empty lines being parsed\n    // as paragraphs (resulting in undesired extra empty paragraphs)\n    } else if (str.search(/\\S/) >= 0) {\n      str = showdown.subParser('spanGamut')(str, options, globals);\n      str = str.replace(/^([ \\t]*)/g, '<p>');\n      str += '</p>';\n      grafsOut.push(str);\n    }\n  }\n\n  /** Unhashify HTML blocks */\n  end = grafsOut.length;\n  for (i = 0; i < end; i++) {\n    var blockText = '',\n        grafsOutIt = grafsOut[i],\n        codeFlag = false;\n    // if this is a marker for an html block...\n    // use RegExp.test instead of string.search because of QML bug\n    while (/¨(K|G)(\\d+)\\1/.test(grafsOutIt)) {\n      var delim = RegExp.$1,\n          num   = RegExp.$2;\n\n      if (delim === 'K') {\n        blockText = globals.gHtmlBlocks[num];\n      } else {\n        // we need to check if ghBlock is a false positive\n        if (codeFlag) {\n          // use encoded version of all text\n          blockText = showdown.subParser('encodeCode')(globals.ghCodeBlocks[num].text, options, globals);\n        } else {\n          blockText = globals.ghCodeBlocks[num].codeblock;\n        }\n      }\n      blockText = blockText.replace(/\\$/g, '$$$$'); // Escape any dollar signs\n\n      grafsOutIt = grafsOutIt.replace(/(\\n\\n)?¨(K|G)\\d+\\2(\\n\\n)?/, blockText);\n      // Check if grafsOutIt is a pre->code\n      if (/^<pre\\b[^>]*>\\s*<code\\b[^>]*>/.test(grafsOutIt)) {\n        codeFlag = true;\n      }\n    }\n    grafsOut[i] = grafsOutIt;\n  }\n  text = grafsOut.join('\\n');\n  // Strip leading and trailing lines:\n  text = text.replace(/^\\n+/g, '');\n  text = text.replace(/\\n+$/g, '');\n  return globals.converter._dispatch('paragraphs.after', text, options, globals);\n});\n\r\n/**\n * Run extension\n */\nshowdown.subParser('runExtension', function (ext, text, options, globals) {\n  'use strict';\n\n  if (ext.filter) {\n    text = ext.filter(text, globals.converter, options);\n\n  } else if (ext.regex) {\n    // TODO remove this when old extension loading mechanism is deprecated\n    var re = ext.regex;\n    if (!(re instanceof RegExp)) {\n      re = new RegExp(re, 'g');\n    }\n    text = text.replace(re, ext.replace);\n  }\n\n  return text;\n});\n\r\n/**\n * These are all the transformations that occur *within* block-level\n * tags like paragraphs, headers, and list items.\n */\nshowdown.subParser('spanGamut', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('spanGamut.before', text, options, globals);\n  text = showdown.subParser('codeSpans')(text, options, globals);\n  text = showdown.subParser('escapeSpecialCharsWithinTagAttributes')(text, options, globals);\n  text = showdown.subParser('encodeBackslashEscapes')(text, options, globals);\n\n  // Process anchor and image tags. Images must come first,\n  // because ![foo][f] looks like an anchor.\n  text = showdown.subParser('images')(text, options, globals);\n  text = showdown.subParser('anchors')(text, options, globals);\n\n  // Make links out of things like `<http://example.com/>`\n  // Must come after _DoAnchors(), because you can use < and >\n  // delimiters in inline links like [this](<url>).\n  text = showdown.subParser('autoLinks')(text, options, globals);\n  text = showdown.subParser('italicsAndBold')(text, options, globals);\n  text = showdown.subParser('strikethrough')(text, options, globals);\n\n  // we need to hash HTML tags inside spans\n  text = showdown.subParser('hashHTMLSpans')(text, options, globals);\n\n  // now we encode amps and angles\n  text = showdown.subParser('encodeAmpsAndAngles')(text, options, globals);\n\n  // Do hard breaks\n  if (options.simpleLineBreaks) {\n    // GFM style hard breaks\n    text = text.replace(/\\n/g, '<br />\\n');\n  } else {\n    // Vanilla hard breaks\n    text = text.replace(/  +\\n/g, '<br />\\n');\n  }\n\n  text = globals.converter._dispatch('spanGamut.after', text, options, globals);\n  return text;\n});\n\r\nshowdown.subParser('strikethrough', function (text, options, globals) {\n  'use strict';\n\n  if (options.strikethrough) {\n    text = globals.converter._dispatch('strikethrough.before', text, options, globals);\n    text = text.replace(/(?:~){2}([\\s\\S]+?)(?:~){2}/g, '<del>$1</del>');\n    text = globals.converter._dispatch('strikethrough.after', text, options, globals);\n  }\n\n  return text;\n});\n\r\n/**\n * Strips link definitions from text, stores the URLs and titles in\n * hash references.\n * Link defs are in the form: ^[id]: url \"optional title\"\n */\nshowdown.subParser('stripLinkDefinitions', function (text, options, globals) {\n  'use strict';\n\n  var regex = /^ {0,3}\\[(.+)]:[ \\t]*\\n?[ \\t]*<?(\\S+?)>?(?: =([*\\d]+[A-Za-z%]{0,4})x([*\\d]+[A-Za-z%]{0,4}))?[ \\t]*\\n?[ \\t]*(?:(\\n*)[\"|'(](.+?)[\"|')][ \\t]*)?(?:\\n+|(?=¨0))/gm;\n\n  // attacklab: sentinel workarounds for lack of \\A and \\Z, safari\\khtml bug\n  text += '¨0';\n\n  text = text.replace(regex, function (wholeMatch, linkId, url, width, height, blankLines, title) {\n    linkId = linkId.toLowerCase();\n    globals.gUrls[linkId] = showdown.subParser('encodeAmpsAndAngles')(url, options, globals);  // Link IDs are case-insensitive\n\n    if (blankLines) {\n      // Oops, found blank lines, so it's not a title.\n      // Put back the parenthetical statement we stole.\n      return blankLines + title;\n\n    } else {\n      if (title) {\n        globals.gTitles[linkId] = title.replace(/\"|'/g, '&quot;');\n      }\n      if (options.parseImgDimensions && width && height) {\n        globals.gDimensions[linkId] = {\n          width:  width,\n          height: height\n        };\n      }\n    }\n    // Completely remove the definition from the text\n    return '';\n  });\n\n  // attacklab: strip sentinel\n  text = text.replace(/¨0/, '');\n\n  return text;\n});\n\r\nshowdown.subParser('tables', function (text, options, globals) {\n  'use strict';\n\n  if (!options.tables) {\n    return text;\n  }\n\n  var tableRgx = /^ {0,3}\\|?.+\\|.+\\n[ \\t]{0,3}\\|?[ \\t]*:?[ \\t]*(?:-|=){2,}[ \\t]*:?[ \\t]*\\|[ \\t]*:?[ \\t]*(?:-|=){2,}[\\s\\S]+?(?:\\n\\n|¨0)/gm;\n\n  function parseStyles (sLine) {\n    if (/^:[ \\t]*--*$/.test(sLine)) {\n      return ' style=\"text-align:left;\"';\n    } else if (/^--*[ \\t]*:[ \\t]*$/.test(sLine)) {\n      return ' style=\"text-align:right;\"';\n    } else if (/^:[ \\t]*--*[ \\t]*:$/.test(sLine)) {\n      return ' style=\"text-align:center;\"';\n    } else {\n      return '';\n    }\n  }\n\n  function parseHeaders (header, style) {\n    var id = '';\n    header = header.trim();\n    if (options.tableHeaderId) {\n      id = ' id=\"' + header.replace(/ /g, '_').toLowerCase() + '\"';\n    }\n    header = showdown.subParser('spanGamut')(header, options, globals);\n\n    return '<th' + id + style + '>' + header + '</th>\\n';\n  }\n\n  function parseCells (cell, style) {\n    var subText = showdown.subParser('spanGamut')(cell, options, globals);\n    return '<td' + style + '>' + subText + '</td>\\n';\n  }\n\n  function buildTable (headers, cells) {\n    var tb = '<table>\\n<thead>\\n<tr>\\n',\n        tblLgn = headers.length;\n\n    for (var i = 0; i < tblLgn; ++i) {\n      tb += headers[i];\n    }\n    tb += '</tr>\\n</thead>\\n<tbody>\\n';\n\n    for (i = 0; i < cells.length; ++i) {\n      tb += '<tr>\\n';\n      for (var ii = 0; ii < tblLgn; ++ii) {\n        tb += cells[i][ii];\n      }\n      tb += '</tr>\\n';\n    }\n    tb += '</tbody>\\n</table>\\n';\n    return tb;\n  }\n\n  text = globals.converter._dispatch('tables.before', text, options, globals);\n\n  text = text.replace(tableRgx, function (rawTable) {\n\n    var i, tableLines = rawTable.split('\\n');\n\n    // strip wrong first and last column if wrapped tables are used\n    for (i = 0; i < tableLines.length; ++i) {\n      if (/^ {0,3}\\|/.test(tableLines[i])) {\n        tableLines[i] = tableLines[i].replace(/^ {0,3}\\|/, '');\n      }\n      if (/\\|[ \\t]*$/.test(tableLines[i])) {\n        tableLines[i] = tableLines[i].replace(/\\|[ \\t]*$/, '');\n      }\n    }\n\n    var rawHeaders = tableLines[0].split('|').map(function (s) { return s.trim();}),\n        rawStyles = tableLines[1].split('|').map(function (s) { return s.trim();}),\n        rawCells = [],\n        headers = [],\n        styles = [],\n        cells = [];\n\n    tableLines.shift();\n    tableLines.shift();\n\n    for (i = 0; i < tableLines.length; ++i) {\n      if (tableLines[i].trim() === '') {\n        continue;\n      }\n      rawCells.push(\n        tableLines[i]\n          .split('|')\n          .map(function (s) {\n            return s.trim();\n          })\n      );\n    }\n\n    if (rawHeaders.length < rawStyles.length) {\n      return rawTable;\n    }\n\n    for (i = 0; i < rawStyles.length; ++i) {\n      styles.push(parseStyles(rawStyles[i]));\n    }\n\n    for (i = 0; i < rawHeaders.length; ++i) {\n      if (showdown.helper.isUndefined(styles[i])) {\n        styles[i] = '';\n      }\n      headers.push(parseHeaders(rawHeaders[i], styles[i]));\n    }\n\n    for (i = 0; i < rawCells.length; ++i) {\n      var row = [];\n      for (var ii = 0; ii < headers.length; ++ii) {\n        if (showdown.helper.isUndefined(rawCells[i][ii])) {\n\n        }\n        row.push(parseCells(rawCells[i][ii], styles[ii]));\n      }\n      cells.push(row);\n    }\n\n    return buildTable(headers, cells);\n  });\n\n  text = globals.converter._dispatch('tables.after', text, options, globals);\n\n  return text;\n});\n\r\n/**\n * Swap back in all the special characters we've hidden.\n */\nshowdown.subParser('unescapeSpecialChars', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('unescapeSpecialChars.before', text, options, globals);\n\n  text = text.replace(/¨E(\\d+)E/g, function (wholeMatch, m1) {\n    var charCodeToReplace = parseInt(m1);\n    return String.fromCharCode(charCodeToReplace);\n  });\n\n  text = globals.converter._dispatch('unescapeSpecialChars.after', text, options, globals);\n  return text;\n});\n\r\nvar root = this;\n\n// CommonJS/nodeJS Loader\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = showdown;\n\n// AMD Loader\n} else if (typeof define === 'function' && define.amd) {\n  define(function () {\n    'use strict';\n    return showdown;\n  });\n\n// Regular Browser loader\n} else {\n  root.showdown = showdown;\n}\n}).call(this);\r\n\n//# sourceMappingURL=showdown.js.map\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/showdown/dist/showdown.js\n// module id = 524\n// module chunks = 14 15","<template>\n  <div class=\"app-container calendar-list-container\">\n    <div class=\"filter-container\">\n      <el-input @keyup.enter.native=\"handleFilter\" style=\"width: 200px;\" class=\"filter-item\" placeholder=\"标题\" v-model=\"listQuery.title\">\n      </el-input>\n\n      <el-select clearable style=\"width: 90px\" class=\"filter-item\" v-model=\"listQuery.importance\" placeholder=\"重要性\">\n        <el-option v-for=\"item in importanceOptions\" :key=\"item\" :label=\"item\" :value=\"item\">\n        </el-option>\n      </el-select>\n\n      <el-select clearable class=\"filter-item\" style=\"width: 130px\" v-model=\"listQuery.type\" placeholder=\"类型\">\n        <el-option v-for=\"item in  calendarTypeOptions\" :key=\"item.key\" :label=\"item.display_name+'('+item.key+')'\" :value=\"item.key\">\n        </el-option>\n      </el-select>\n\n      <el-select @change='handleFilter' style=\"width: 120px\" class=\"filter-item\" v-model=\"listQuery.sort\" placeholder=\"排序\">\n        <el-option v-for=\"item in sortOptions\" :key=\"item.key\" :label=\"item.label\" :value=\"item.key\">\n        </el-option>\n      </el-select>\n\n      <el-button class=\"filter-item\" type=\"primary\" v-waves icon=\"search\" @click=\"handleFilter\">搜索</el-button>\n      <el-button class=\"filter-item\" style=\"margin-left: 10px;\" @click=\"handleCreate\" type=\"primary\" icon=\"edit\">添加</el-button>\n      <el-button class=\"filter-item\" type=\"primary\" icon=\"document\" @click=\"handleDownload\">导出</el-button>\n      <el-checkbox class=\"filter-item\" @change='tableKey=tableKey+1'  v-model=\"showAuditor\">显示审核人</el-checkbox>\n    </div>\n\n    <el-table  :key='tableKey' :data=\"list\" v-loading.body=\"listLoading\" border fit highlight-current-row style=\"width: 100%\">\n\n      <el-table-column align=\"center\" label=\"序号\" width=\"65\">\n        <template scope=\"scope\">\n          <span>{{scope.row.id}}</span>\n        </template>\n      </el-table-column>\n\n      <el-table-column width=\"180px\" align=\"center\" label=\"时间\">\n        <template scope=\"scope\">\n          <span>{{scope.row.timestamp | parseTime('{y}-{m}-{d} {h}:{i}')}}</span>\n        </template>\n      </el-table-column>\n\n      <el-table-column min-width=\"300px\" label=\"标题\">\n        <template scope=\"scope\">\n          <span class=\"link-type\" @click=\"handleUpdate(scope.row)\">{{scope.row.title}}</span>\n          <el-tag>{{scope.row.type | typeFilter}}</el-tag>\n        </template>\n      </el-table-column>\n\n      <el-table-column width=\"110px\" align=\"center\" label=\"作者\">\n        <template scope=\"scope\">\n          <span>{{scope.row.author}}</span>\n        </template>\n      </el-table-column>\n\n      <el-table-column width=\"110px\" v-if='showAuditor' align=\"center\" label=\"审核人\">\n        <template scope=\"scope\">\n          <span style='color:red;'>{{scope.row.auditor}}</span>\n        </template>\n      </el-table-column>\n\n\n      <el-table-column width=\"80px\" label=\"重要性\">\n        <template scope=\"scope\">\n           <wscn-icon-svg v-for=\"n in +scope.row.importance\" icon-class=\"wujiaoxing\" class=\"meta-item__icon\" :key=\"n\" />\n        </template>\n      </el-table-column>\n\n      <el-table-column align=\"center\" label=\"阅读数\" width=\"95\">\n        <template scope=\"scope\">\n          <span class=\"link-type\" @click='handleFetchPv(scope.row.pageviews)'>{{scope.row.pageviews}}</span>\n        </template>\n      </el-table-column>\n\n       <el-table-column class-name=\"status-col\" label=\"状态\" width=\"90\">\n        <template scope=\"scope\">\n          <el-tag :type=\"scope.row.status | statusFilter\">{{scope.row.status}}</el-tag>\n        </template>\n      </el-table-column>\n\n      <el-table-column  align=\"center\" label=\"操作\" width=\"150\">\n        <template scope=\"scope\">\n          <el-button v-if=\"scope.row.status!='published'\" size=\"small\" type=\"success\" @click=\"handleModifyStatus(scope.row,'published')\">发布\n          </el-button>\n          <el-button v-if=\"scope.row.status!='draft'\" size=\"small\" @click=\"handleModifyStatus(scope.row,'draft')\">草稿\n          </el-button>\n          <el-button v-if=\"scope.row.status!='deleted'\" size=\"small\" type=\"danger\" @click=\"handleModifyStatus(scope.row,'deleted')\">删除\n            </el-button>\n        </template>\n      </el-table-column>\n\n    </el-table>\n\n    <div v-show=\"!listLoading\" class=\"pagination-container\">\n      <el-pagination @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\" :current-page=\"listQuery.page\" :page-sizes=\"[10,20,30, 50]\"\n        :page-size=\"listQuery.limit\" layout=\"total, sizes, prev, pager, next, jumper\" :total=\"total\">\n      </el-pagination>\n    </div>\n\n    <el-dialog :title=\"textMap[dialogStatus]\" v-model=\"dialogFormVisible\">\n      <el-form class=\"small-space\" :model=\"temp\" label-position=\"left\" label-width=\"70px\" style='width: 400px; margin-left:50px;'>\n        <el-form-item label=\"类型\">\n          <el-select class=\"filter-item\" v-model=\"temp.type\" placeholder=\"请选择\">\n            <el-option v-for=\"item in  calendarTypeOptions\" :key=\"item.key\" :label=\"item.display_name\" :value=\"item.key\">\n            </el-option>\n          </el-select>\n        </el-form-item>\n\n        <el-form-item label=\"状态\">\n          <el-select class=\"filter-item\" v-model=\"temp.status\" placeholder=\"请选择\">\n            <el-option v-for=\"item in  statusOptions\" :key=\"item\" :label=\"item\" :value=\"item\">\n            </el-option>\n          </el-select>\n        </el-form-item>\n\n        <el-form-item label=\"时间\">\n          <el-date-picker v-model=\"temp.timestamp\" type=\"datetime\" placeholder=\"选择日期时间\">\n          </el-date-picker>\n        </el-form-item>\n\n        <el-form-item label=\"标题\">\n          <el-input v-model=\"temp.title\"></el-input>\n        </el-form-item>\n\n        <el-form-item label=\"重要性\">\n          <el-rate style=\"margin-top:8px;\" v-model=\"temp.importance\" :colors=\"['#99A9BF', '#F7BA2A', '#FF9900']\"></el-rate>\n        </el-form-item>\n\n        <el-form-item label=\"点评\">\n          <el-input type=\"textarea\" :autosize=\"{ minRows: 2, maxRows: 4}\" placeholder=\"请输入内容\" v-model=\"temp.remark\">\n          </el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogFormVisible = false\">取 消</el-button>\n        <el-button v-if=\"dialogStatus=='create'\" type=\"primary\" @click=\"create\">确 定</el-button>\n        <el-button v-else type=\"primary\" @click=\"update\">确 定</el-button>\n      </div>\n    </el-dialog>\n\n    <el-dialog title=\"阅读数统计\" v-model=\"dialogPvVisible\" size=\"small\">\n       <el-table :data=\"pvData\" border fit highlight-current-row style=\"width: 100%\">\n          <el-table-column prop=\"key\" label=\"渠道\"> </el-table-column>\n          <el-table-column  prop=\"pv\" label=\"pv\"> </el-table-column>\n      </el-table>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"dialogPvVisible = false\">确 定</el-button>\n      </span>\n    </el-dialog >\n\n  </div>\n</template>\n\n<script>\n    import { fetchList, fetchPv } from 'api/article_table';\n    import { parseTime, objectMerge } from 'utils';\n\n    const calendarTypeOptions = [\n      { key: 'FD', display_name: '经济数据' },\n      { key: 'FE', display_name: '财经大事' },\n      { key: 'BI', display_name: '国债发行' },\n      { key: 'VN', display_name: '假期报告' }\n    ];\n\n    // arr to obj\n    const calendarTypeKeyValue = calendarTypeOptions.reduce((acc, cur) => {\n      acc[cur.key] = cur.display_name;\n      return acc\n    }, {});\n\n    export default {\n      name: 'table_demo',\n      data() {\n        return {\n          list: null,\n          total: null,\n          listLoading: true,\n          listQuery: {\n            page: 1,\n            limit: 20,\n            importance: undefined,\n            title: undefined,\n            type: undefined,\n            sort: '+id'\n          },\n          temp: {\n            id: undefined,\n            importance: 0,\n            remark: '',\n            timestamp: 0,\n            title: '',\n            type: '',\n            status: 'published'\n          },\n          importanceOptions: [1, 2, 3],\n          calendarTypeOptions,\n          sortOptions: [{ label: '按ID升序列', key: '+id' }, { label: '按ID降序', key: '-id' }],\n          statusOptions: ['published', 'draft', 'deleted'],\n          dialogFormVisible: false,\n          dialogStatus: '',\n          textMap: {\n            update: '编辑',\n            create: '创建'\n          },\n          dialogPvVisible: false,\n          pvData: [],\n          showAuditor: false,\n          tableKey: 0\n        }\n      },\n      created() {\n        this.getList();\n      },\n      filters: {\n        statusFilter(status) {\n          const statusMap = {\n            published: 'success',\n            draft: 'gray',\n            deleted: 'danger'\n          };\n          return statusMap[status]\n        },\n        typeFilter(type) {\n          return calendarTypeKeyValue[type]\n        }\n      },\n      methods: {\n        getList() {\n          this.listLoading = true;\n          fetchList(this.listQuery).then(response => {\n            this.list = response.items;\n            this.total = response.total;\n            this.listLoading = false;\n          })\n        },\n        handleFilter() {\n          this.getList();\n        },\n        handleSizeChange(val) {\n          this.listQuery.limit = val;\n          this.getList();\n        },\n        handleCurrentChange(val) {\n          this.listQuery.page = val;\n          this.getList();\n        },\n        timeFilter(time) {\n          if (!time[0]) {\n            this.listQuery.start = undefined;\n            this.listQuery.end = undefined;\n            return;\n          }\n          this.listQuery.start = parseInt(+time[0] / 1000);\n          this.listQuery.end = parseInt((+time[1] + 3600 * 1000 * 24) / 1000);\n        },\n        handleModifyStatus(row, status) {\n          this.$message({\n            message: '操作成功',\n            type: 'success'\n          });\n          row.status = status;\n        },\n        handleCreate() {\n          this.resetTemp();\n          this.dialogStatus = 'create';\n          this.dialogFormVisible = true;\n        },\n        handleUpdate(row) {\n          objectMerge(this.temp, row)\n          this.dialogStatus = 'update';\n          this.dialogFormVisible = true;\n        },\n        handleDelete(row) {\n          this.$notify({\n            title: '成功',\n            message: '删除成功',\n            type: 'success',\n            duration: 2000\n          });\n          const index = this.list.indexOf(row);\n          this.list.splice(index, 1);\n        },\n        create() {\n          this.temp.id = parseInt(Math.random() * 100) + 1024;\n          this.temp.timestamp = +new Date();\n          this.temp.author = '原创作者';\n          this.list.unshift(this.temp);\n          this.dialogFormVisible = false;\n          this.$notify({\n            title: '成功',\n            message: '创建成功',\n            type: 'success',\n            duration: 2000\n          });\n        },\n        update() {\n          this.temp.timestamp = +this.temp.timestamp;\n          for (const v of this.list) {\n            if (v.id === this.temp.id) {\n              objectMerge(v, this.temp);\n              break;\n            }\n          }\n          this.dialogFormVisible = false;\n          this.$notify({\n            title: '成功',\n            message: '更新成功',\n            type: 'success',\n            duration: 2000\n          });\n        },\n        resetTemp() {\n          this.temp = {\n            id: undefined,\n            importance: 0,\n            remark: '',\n            timestamp: 0,\n            title: '',\n            status: 'published',\n            type: ''\n          };\n        },\n        handleFetchPv(pv) {\n          fetchPv(pv).then(response => {\n            this.pvData = response.pvData\n            this.dialogPvVisible = true\n          })\n        },\n        handleDownload() {\n          require.ensure([], () => {\n            const { export_json_to_excel } = require('vendor/Export2Excel');\n            const tHeader = ['时间', '地区', '类型', '标题', '重要性'];\n            const filterVal = ['timestamp', 'province', 'type', 'title', 'importance'];\n            const data = this.formatJson(filterVal, this.list);\n            export_json_to_excel(tHeader, data, 'table数据');\n          })\n        },\n        formatJson(filterVal, jsonData) {\n          return jsonData.map(v => filterVal.map(j => {\n            if (j === 'timestamp') {\n              return parseTime(v[j])\n            } else {\n              return v[j]\n            }\n          }))\n        }\n      }\n    }\n</script>\n\n\n\n// WEBPACK FOOTER //\n// table.vue?d69a5d54","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"app-container calendar-list-container\"\n  }, [_c('div', {\n    staticClass: \"filter-container\"\n  }, [_c('el-input', {\n    staticClass: \"filter-item\",\n    staticStyle: {\n      \"width\": \"200px\"\n    },\n    attrs: {\n      \"placeholder\": \"标题\"\n    },\n    nativeOn: {\n      \"keyup\": function($event) {\n        if (!('button' in $event) && _vm._k($event.keyCode, \"enter\", 13)) { return null; }\n        _vm.handleFilter($event)\n      }\n    },\n    model: {\n      value: (_vm.listQuery.title),\n      callback: function($$v) {\n        _vm.listQuery.title = $$v\n      },\n      expression: \"listQuery.title\"\n    }\n  }), _vm._v(\" \"), _c('el-select', {\n    staticClass: \"filter-item\",\n    staticStyle: {\n      \"width\": \"90px\"\n    },\n    attrs: {\n      \"clearable\": \"\",\n      \"placeholder\": \"重要性\"\n    },\n    model: {\n      value: (_vm.listQuery.importance),\n      callback: function($$v) {\n        _vm.listQuery.importance = $$v\n      },\n      expression: \"listQuery.importance\"\n    }\n  }, _vm._l((_vm.importanceOptions), function(item) {\n    return _c('el-option', {\n      key: item,\n      attrs: {\n        \"label\": item,\n        \"value\": item\n      }\n    })\n  })), _vm._v(\" \"), _c('el-select', {\n    staticClass: \"filter-item\",\n    staticStyle: {\n      \"width\": \"130px\"\n    },\n    attrs: {\n      \"clearable\": \"\",\n      \"placeholder\": \"类型\"\n    },\n    model: {\n      value: (_vm.listQuery.type),\n      callback: function($$v) {\n        _vm.listQuery.type = $$v\n      },\n      expression: \"listQuery.type\"\n    }\n  }, _vm._l((_vm.calendarTypeOptions), function(item) {\n    return _c('el-option', {\n      key: item.key,\n      attrs: {\n        \"label\": item.display_name + '(' + item.key + ')',\n        \"value\": item.key\n      }\n    })\n  })), _vm._v(\" \"), _c('el-select', {\n    staticClass: \"filter-item\",\n    staticStyle: {\n      \"width\": \"120px\"\n    },\n    attrs: {\n      \"placeholder\": \"排序\"\n    },\n    on: {\n      \"change\": _vm.handleFilter\n    },\n    model: {\n      value: (_vm.listQuery.sort),\n      callback: function($$v) {\n        _vm.listQuery.sort = $$v\n      },\n      expression: \"listQuery.sort\"\n    }\n  }, _vm._l((_vm.sortOptions), function(item) {\n    return _c('el-option', {\n      key: item.key,\n      attrs: {\n        \"label\": item.label,\n        \"value\": item.key\n      }\n    })\n  })), _vm._v(\" \"), _c('el-button', {\n    directives: [{\n      name: \"waves\",\n      rawName: \"v-waves\"\n    }],\n    staticClass: \"filter-item\",\n    attrs: {\n      \"type\": \"primary\",\n      \"icon\": \"search\"\n    },\n    on: {\n      \"click\": _vm.handleFilter\n    }\n  }, [_vm._v(\"搜索\")]), _vm._v(\" \"), _c('el-button', {\n    staticClass: \"filter-item\",\n    staticStyle: {\n      \"margin-left\": \"10px\"\n    },\n    attrs: {\n      \"type\": \"primary\",\n      \"icon\": \"edit\"\n    },\n    on: {\n      \"click\": _vm.handleCreate\n    }\n  }, [_vm._v(\"添加\")]), _vm._v(\" \"), _c('el-button', {\n    staticClass: \"filter-item\",\n    attrs: {\n      \"type\": \"primary\",\n      \"icon\": \"document\"\n    },\n    on: {\n      \"click\": _vm.handleDownload\n    }\n  }, [_vm._v(\"导出\")]), _vm._v(\" \"), _c('el-checkbox', {\n    staticClass: \"filter-item\",\n    on: {\n      \"change\": function($event) {\n        _vm.tableKey = _vm.tableKey + 1\n      }\n    },\n    model: {\n      value: (_vm.showAuditor),\n      callback: function($$v) {\n        _vm.showAuditor = $$v\n      },\n      expression: \"showAuditor\"\n    }\n  }, [_vm._v(\"显示审核人\")])], 1), _vm._v(\" \"), _c('el-table', {\n    directives: [{\n      name: \"loading\",\n      rawName: \"v-loading.body\",\n      value: (_vm.listLoading),\n      expression: \"listLoading\",\n      modifiers: {\n        \"body\": true\n      }\n    }],\n    key: _vm.tableKey,\n    staticStyle: {\n      \"width\": \"100%\"\n    },\n    attrs: {\n      \"data\": _vm.list,\n      \"border\": \"\",\n      \"fit\": \"\",\n      \"highlight-current-row\": \"\"\n    }\n  }, [_c('el-table-column', {\n    attrs: {\n      \"align\": \"center\",\n      \"label\": \"序号\",\n      \"width\": \"65\"\n    },\n    scopedSlots: _vm._u([\n      [\"default\", function(scope) {\n        return [_c('span', [_vm._v(_vm._s(scope.row.id))])]\n      }]\n    ])\n  }), _vm._v(\" \"), _c('el-table-column', {\n    attrs: {\n      \"width\": \"180px\",\n      \"align\": \"center\",\n      \"label\": \"时间\"\n    },\n    scopedSlots: _vm._u([\n      [\"default\", function(scope) {\n        return [_c('span', [_vm._v(_vm._s(_vm._f(\"parseTime\")(scope.row.timestamp, '{y}-{m}-{d} {h}:{i}')))])]\n      }]\n    ])\n  }), _vm._v(\" \"), _c('el-table-column', {\n    attrs: {\n      \"min-width\": \"300px\",\n      \"label\": \"标题\"\n    },\n    scopedSlots: _vm._u([\n      [\"default\", function(scope) {\n        return [_c('span', {\n          staticClass: \"link-type\",\n          on: {\n            \"click\": function($event) {\n              _vm.handleUpdate(scope.row)\n            }\n          }\n        }, [_vm._v(_vm._s(scope.row.title))]), _vm._v(\" \"), _c('el-tag', [_vm._v(_vm._s(_vm._f(\"typeFilter\")(scope.row.type)))])]\n      }]\n    ])\n  }), _vm._v(\" \"), _c('el-table-column', {\n    attrs: {\n      \"width\": \"110px\",\n      \"align\": \"center\",\n      \"label\": \"作者\"\n    },\n    scopedSlots: _vm._u([\n      [\"default\", function(scope) {\n        return [_c('span', [_vm._v(_vm._s(scope.row.author))])]\n      }]\n    ])\n  }), _vm._v(\" \"), (_vm.showAuditor) ? _c('el-table-column', {\n    attrs: {\n      \"width\": \"110px\",\n      \"align\": \"center\",\n      \"label\": \"审核人\"\n    },\n    scopedSlots: _vm._u([\n      [\"default\", function(scope) {\n        return [_c('span', {\n          staticStyle: {\n            \"color\": \"red\"\n          }\n        }, [_vm._v(_vm._s(scope.row.auditor))])]\n      }]\n    ])\n  }) : _vm._e(), _vm._v(\" \"), _c('el-table-column', {\n    attrs: {\n      \"width\": \"80px\",\n      \"label\": \"重要性\"\n    },\n    scopedSlots: _vm._u([\n      [\"default\", function(scope) {\n        return _vm._l((+scope.row.importance), function(n) {\n          return _c('wscn-icon-svg', {\n            key: n,\n            staticClass: \"meta-item__icon\",\n            attrs: {\n              \"icon-class\": \"wujiaoxing\"\n            }\n          })\n        })\n      }]\n    ])\n  }), _vm._v(\" \"), _c('el-table-column', {\n    attrs: {\n      \"align\": \"center\",\n      \"label\": \"阅读数\",\n      \"width\": \"95\"\n    },\n    scopedSlots: _vm._u([\n      [\"default\", function(scope) {\n        return [_c('span', {\n          staticClass: \"link-type\",\n          on: {\n            \"click\": function($event) {\n              _vm.handleFetchPv(scope.row.pageviews)\n            }\n          }\n        }, [_vm._v(_vm._s(scope.row.pageviews))])]\n      }]\n    ])\n  }), _vm._v(\" \"), _c('el-table-column', {\n    attrs: {\n      \"class-name\": \"status-col\",\n      \"label\": \"状态\",\n      \"width\": \"90\"\n    },\n    scopedSlots: _vm._u([\n      [\"default\", function(scope) {\n        return [_c('el-tag', {\n          attrs: {\n            \"type\": _vm._f(\"statusFilter\")(scope.row.status)\n          }\n        }, [_vm._v(_vm._s(scope.row.status))])]\n      }]\n    ])\n  }), _vm._v(\" \"), _c('el-table-column', {\n    attrs: {\n      \"align\": \"center\",\n      \"label\": \"操作\",\n      \"width\": \"150\"\n    },\n    scopedSlots: _vm._u([\n      [\"default\", function(scope) {\n        return [(scope.row.status != 'published') ? _c('el-button', {\n          attrs: {\n            \"size\": \"small\",\n            \"type\": \"success\"\n          },\n          on: {\n            \"click\": function($event) {\n              _vm.handleModifyStatus(scope.row, 'published')\n            }\n          }\n        }, [_vm._v(\"发布\\n        \")]) : _vm._e(), _vm._v(\" \"), (scope.row.status != 'draft') ? _c('el-button', {\n          attrs: {\n            \"size\": \"small\"\n          },\n          on: {\n            \"click\": function($event) {\n              _vm.handleModifyStatus(scope.row, 'draft')\n            }\n          }\n        }, [_vm._v(\"草稿\\n        \")]) : _vm._e(), _vm._v(\" \"), (scope.row.status != 'deleted') ? _c('el-button', {\n          attrs: {\n            \"size\": \"small\",\n            \"type\": \"danger\"\n          },\n          on: {\n            \"click\": function($event) {\n              _vm.handleModifyStatus(scope.row, 'deleted')\n            }\n          }\n        }, [_vm._v(\"删除\\n          \")]) : _vm._e()]\n      }]\n    ])\n  })], 1), _vm._v(\" \"), _c('div', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (!_vm.listLoading),\n      expression: \"!listLoading\"\n    }],\n    staticClass: \"pagination-container\"\n  }, [_c('el-pagination', {\n    attrs: {\n      \"current-page\": _vm.listQuery.page,\n      \"page-sizes\": [10, 20, 30, 50],\n      \"page-size\": _vm.listQuery.limit,\n      \"layout\": \"total, sizes, prev, pager, next, jumper\",\n      \"total\": _vm.total\n    },\n    on: {\n      \"size-change\": _vm.handleSizeChange,\n      \"current-change\": _vm.handleCurrentChange\n    }\n  })], 1), _vm._v(\" \"), _c('el-dialog', {\n    attrs: {\n      \"title\": _vm.textMap[_vm.dialogStatus]\n    },\n    model: {\n      value: (_vm.dialogFormVisible),\n      callback: function($$v) {\n        _vm.dialogFormVisible = $$v\n      },\n      expression: \"dialogFormVisible\"\n    }\n  }, [_c('el-form', {\n    staticClass: \"small-space\",\n    staticStyle: {\n      \"width\": \"400px\",\n      \"margin-left\": \"50px\"\n    },\n    attrs: {\n      \"model\": _vm.temp,\n      \"label-position\": \"left\",\n      \"label-width\": \"70px\"\n    }\n  }, [_c('el-form-item', {\n    attrs: {\n      \"label\": \"类型\"\n    }\n  }, [_c('el-select', {\n    staticClass: \"filter-item\",\n    attrs: {\n      \"placeholder\": \"请选择\"\n    },\n    model: {\n      value: (_vm.temp.type),\n      callback: function($$v) {\n        _vm.temp.type = $$v\n      },\n      expression: \"temp.type\"\n    }\n  }, _vm._l((_vm.calendarTypeOptions), function(item) {\n    return _c('el-option', {\n      key: item.key,\n      attrs: {\n        \"label\": item.display_name,\n        \"value\": item.key\n      }\n    })\n  }))], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"状态\"\n    }\n  }, [_c('el-select', {\n    staticClass: \"filter-item\",\n    attrs: {\n      \"placeholder\": \"请选择\"\n    },\n    model: {\n      value: (_vm.temp.status),\n      callback: function($$v) {\n        _vm.temp.status = $$v\n      },\n      expression: \"temp.status\"\n    }\n  }, _vm._l((_vm.statusOptions), function(item) {\n    return _c('el-option', {\n      key: item,\n      attrs: {\n        \"label\": item,\n        \"value\": item\n      }\n    })\n  }))], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"时间\"\n    }\n  }, [_c('el-date-picker', {\n    attrs: {\n      \"type\": \"datetime\",\n      \"placeholder\": \"选择日期时间\"\n    },\n    model: {\n      value: (_vm.temp.timestamp),\n      callback: function($$v) {\n        _vm.temp.timestamp = $$v\n      },\n      expression: \"temp.timestamp\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"标题\"\n    }\n  }, [_c('el-input', {\n    model: {\n      value: (_vm.temp.title),\n      callback: function($$v) {\n        _vm.temp.title = $$v\n      },\n      expression: \"temp.title\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"重要性\"\n    }\n  }, [_c('el-rate', {\n    staticStyle: {\n      \"margin-top\": \"8px\"\n    },\n    attrs: {\n      \"colors\": ['#99A9BF', '#F7BA2A', '#FF9900']\n    },\n    model: {\n      value: (_vm.temp.importance),\n      callback: function($$v) {\n        _vm.temp.importance = $$v\n      },\n      expression: \"temp.importance\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"点评\"\n    }\n  }, [_c('el-input', {\n    attrs: {\n      \"type\": \"textarea\",\n      \"autosize\": {\n        minRows: 2,\n        maxRows: 4\n      },\n      \"placeholder\": \"请输入内容\"\n    },\n    model: {\n      value: (_vm.temp.remark),\n      callback: function($$v) {\n        _vm.temp.remark = $$v\n      },\n      expression: \"temp.remark\"\n    }\n  })], 1)], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"dialog-footer\",\n    slot: \"footer\"\n  }, [_c('el-button', {\n    on: {\n      \"click\": function($event) {\n        _vm.dialogFormVisible = false\n      }\n    }\n  }, [_vm._v(\"取 消\")]), _vm._v(\" \"), (_vm.dialogStatus == 'create') ? _c('el-button', {\n    attrs: {\n      \"type\": \"primary\"\n    },\n    on: {\n      \"click\": _vm.create\n    }\n  }, [_vm._v(\"确 定\")]) : _c('el-button', {\n    attrs: {\n      \"type\": \"primary\"\n    },\n    on: {\n      \"click\": _vm.update\n    }\n  }, [_vm._v(\"确 定\")])], 1)], 1), _vm._v(\" \"), _c('el-dialog', {\n    attrs: {\n      \"title\": \"阅读数统计\",\n      \"size\": \"small\"\n    },\n    model: {\n      value: (_vm.dialogPvVisible),\n      callback: function($$v) {\n        _vm.dialogPvVisible = $$v\n      },\n      expression: \"dialogPvVisible\"\n    }\n  }, [_c('el-table', {\n    staticStyle: {\n      \"width\": \"100%\"\n    },\n    attrs: {\n      \"data\": _vm.pvData,\n      \"border\": \"\",\n      \"fit\": \"\",\n      \"highlight-current-row\": \"\"\n    }\n  }, [_c('el-table-column', {\n    attrs: {\n      \"prop\": \"key\",\n      \"label\": \"渠道\"\n    }\n  }), _vm._v(\" \"), _c('el-table-column', {\n    attrs: {\n      \"prop\": \"pv\",\n      \"label\": \"pv\"\n    }\n  })], 1), _vm._v(\" \"), _c('span', {\n    staticClass: \"dialog-footer\",\n    slot: \"footer\"\n  }, [_c('el-button', {\n    attrs: {\n      \"type\": \"primary\"\n    },\n    on: {\n      \"click\": function($event) {\n        _vm.dialogPvVisible = false\n      }\n    }\n  }, [_vm._v(\"确 定\")])], 1)], 1)], 1)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-398a1b67\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/views/example/table.vue\n// module id = 747\n// module chunks = 14"],"sourceRoot":""}